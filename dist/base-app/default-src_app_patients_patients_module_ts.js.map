{"version":3,"file":"default-src_app_patients_patients_module_ts.js","mappings":"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","sources":["./src/app/patients/date-hijri-gregorian/date-hijri-gregorian.component.ts","./src/app/patients/date-hijri-gregorian/date-hijri-gregorian.component.html","./src/app/patients/patient-account/patient-account.component.ts","./src/app/patients/patient-account/patient-account.component.html","./src/app/patients/patient-address/patient-address.component.ts","./src/app/patients/patient-address/patient-address.component.html","./src/app/patients/patient-allergies/patient-allergies.component.ts","./src/app/patients/patient-allergies/patient-allergies.component.html","./src/app/patients/patient-allergy-details/patient-allergy-details.component.ts","./src/app/patients/patient-allergy-details/patient-allergy-details.component.html","./src/app/patients/patient-attachment-details/patient-attachment-details.component.ts","./src/app/patients/patient-attachments/patient-attachments.component.ts","./src/app/patients/patient-basic/patient-basic.component.ts","./src/app/patients/patient-basic/patient-basic.component.html","./src/app/patients/patient-clinical-note/patient-clinical-note.component.ts","./src/app/patients/patient-clinical-note/patient-clinical-note.component.html","./src/app/patients/patient-diagnose-details/patient-diagnose-details.component.ts","./src/app/patients/patient-diagnose-details/patient-diagnose-details.component.html","./src/app/patients/patient-diagnosisGrid/patient-diagnosisGrid.component.ts","./src/app/patients/patient-diagnosisGrid/patient-diagnosisGrid.component.html","./src/app/patients/patient-diagnosis/patient-diagnosis.component.ts","./src/app/patients/patient-diagnosis/patient-diagnosis.component.html","./src/app/patients/patient-file/patient-file.component.ts","./src/app/patients/patient-file/patient-file.component.html","./src/app/patients/patient-insurance-details/patient-insurance-details.component.ts","./src/app/patients/patient-insurance-details/patient-insurance-details.component.html","./src/app/patients/patient-insurance/patient-insurance.component.ts","./src/app/patients/patient-insurance/patient-insurance.component.html","./src/app/patients/patient-lab-details/patient-lab-details.component.ts","./src/app/patients/patient-lab-details/patient-lab-details.component.html","./src/app/patients/patient-laboratoryGrid/patient-laboratoryGrid.component.ts","./src/app/patients/patient-laboratoryGrid/patient-laboratoryGrid.component.html","./src/app/patients/patient-laboratory/patient-laboratory.component.ts","./src/app/patients/patient-laboratory/patient-laboratory.component.html","./src/app/patients/patient-medication-details/patient-medication-details.component.ts","./src/app/patients/patient-medication-details/patient-medication-details.component.html","./src/app/patients/patient-medication/patient-medication.component.ts","./src/app/patients/patient-medication/patient-medication.component.html","./src/app/patients/patient-medicationsGrid/patient-medicationsGrid.component.ts","./src/app/patients/patient-medicationsGrid/patient-medicationsGrid.component.html","./src/app/patients/patient-mrf/patient-mrf.component.ts","./src/app/patients/patient-mrf/patient-mrf.component.html","./src/app/patients/patient-note-diagnosis/patient-note-diagnosis.component.ts","./src/app/patients/patient-note-diagnosis/patient-note-diagnosis.component.html","./src/app/patients/patient-note-laboratory/patient-note-laboratory.component.ts","./src/app/patients/patient-note-laboratory/patient-note-laboratory.component.html","./src/app/patients/patient-note-medications/patient-note-medications.component.ts","./src/app/patients/patient-note-medications/patient-note-medications.component.html","./src/app/patients/patient-note-radiology/patient-note-radiology.component.ts","./src/app/patients/patient-note-radiology/patient-note-radiology.component.html","./src/app/patients/patient-note-services/patient-note-services.component.ts","./src/app/patients/patient-note-services/patient-note-services.component.html","./src/app/patients/patient-note-view/patient-note-view.component.ts","./src/app/patients/patient-note-view/patient-note-view.component.html","./src/app/patients/patient-notes/patient-notes.component.ts","./src/app/patients/patient-notes/patient-notes.component.html","./src/app/patients/patient-personal/patient-personal.component.ts","./src/app/patients/patient-personal/patient-personal.component.html","./src/app/patients/patient-radiology-details/patient-radiology-details.component.ts","./src/app/patients/patient-radiology-details/patient-radiology-details.component.html","./src/app/patients/patient-radiologyGrid/patient-radiologyGrid.component.ts","./src/app/patients/patient-radiologyGrid/patient-radiologyGrid.component.html","./src/app/patients/patient-radiology/patient-radiology.component.ts","./src/app/patients/patient-radiology/patient-radiology.component.html","./src/app/patients/patient-receptionist-attachments-details/patient-receptionist-attachments-details.component.ts","./src/app/patients/patient-receptionist-attachments-details/patient-receptionist-attachments-details.component.html","./src/app/patients/patient-receptionist-attachments/patient-receptionist-attachments.component.ts","./src/app/patients/patient-receptionist-attachments/patient-receptionist-attachments.component.html","./src/app/patients/patient-receptionist-tabs/patient-receptionist-tabs.component.ts","./src/app/patients/patient-receptionist-tabs/patient-receptionist-tabs.component.html","./src/app/patients/patient-remarks/patient-remarks.component.ts","./src/app/patients/patient-remarks/patient-remarks.component.html","./src/app/patients/patient-search/patient-search.component.ts","./src/app/patients/patient-search/patient-search.component.html","./src/app/patients/patient-servicePackages-grid/patient-servicePackages-grid.component.ts","./src/app/patients/patient-servicePackages-grid/patient-servicePackages-grid.component.html","./src/app/patients/patient-servicesGrid/patient-servicesGrid.component.ts","./src/app/patients/patient-servicesGrid/patient-servicesGrid.component.html","./src/app/patients/patient-snapshot/patient-snapshot.component.ts","./src/app/patients/patient-snapshot/patient-snapshot.component.html","./src/app/patients/patient-surgeries/patient-surgeries.component.ts","./src/app/patients/patient-surgeries/patient-surgeries.component.html","./src/app/patients/patient-surgery-details/patient-surgery-details.component.ts","./src/app/patients/patient-surgery-details/patient-surgery-details.component.html","./src/app/patients/patient-tabs/patient-tabs.component.ts","./src/app/patients/patient-tabs/patient-tabs.component.html","./src/app/patients/patient-template-details/patient-template-details.component.ts","./src/app/patients/patient-template-details/patient-template-details.component.html","./src/app/patients/patient-templates/patient-templates.component.ts","./src/app/patients/patient-templates/patient-templates.component.html","./src/app/patients/patient-vital-signs/patient-vital-signs.component.ts","./src/app/patients/patient-vital-signs/patient-vital-signs.component.html","./src/app/patients/patients.module.ts","./src/app/patients/patients.routing.ts","./src/app/patients/shared/MonthsListType.enum.ts","./src/app/receptionists/shared/receptionist-appointment.manager.ts","./src/app/shared/shared/time-slot.model.ts"],"sourcesContent":["import { Component, OnInit, SimpleChanges, OnChanges, ViewChild, Input, Output, EventEmitter } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { PatientService } from '../shared/patient.service'\r\nimport { SharedService } from '../../shared/shared/shared.service';\r\nimport { HijriMonthList, GregorianMonthList } from '../shared/MonthsListType.enum';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\nimport { UtilityClass } from '../../shared/shared/utility.class';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n\r\n    selector: 'date-hijri-gregorian',\r\n    templateUrl: 'date-hijri-gregorian.component.html',\r\n})\r\n\r\nexport class DateHijriGregorian implements OnInit, OnChanges {\r\n    patientId!: string;\r\n    @Input() birthDateInfo: any = { birthDateType: \"\" };\r\n    @Output() onModelUpdated = new EventEmitter<any>();\r\n    @Input() title: string = '';\r\n    hagriDays: any = [];\r\n    private subscription!: Subscription;\r\n    gregorianDays: any = [];\r\n    selctedDaysType: any = [];\r\n    GregorianMonths: any = [];\r\n    HijriMonths: any = [];\r\n    differ: any;\r\n    hagriYears: any = [];\r\n    gregorianYears: any = [];\r\n    selctedYearsType: any = [];\r\n    selctedMonthsType: any = [];\r\n    isDatePartsChanged: boolean = false;\r\n    HagriDateValues: Date = new Date();\r\n    GregorianDateValues: Date = new Date();\r\n    showProgress = false;\r\n    @Output() onNewDateSaved = new EventEmitter<any>();\r\n    @ViewChild(\"fileInput\") fileInput!: any;\r\n    @ViewChild(\"patientAccountForm\") patientAccountForm!: any;\r\n    utilityClass: UtilityClass = new UtilityClass();\r\n    constructor(private patientService: PatientService\r\n        , private sharedService: SharedService\r\n        , public toastr: ToastrService\r\n        , private _route: ActivatedRoute\r\n        , private router: Router\r\n        , public storage: LocalStorageService\r\n        , public translate: TranslateService\r\n    ) {\r\n\r\n    }\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (this.birthDateInfo && this.birthDateInfo.birthDateType) {\r\n            this.selectDiseredDate(this.birthDateInfo.birthDateType);\r\n        }\r\n    }\r\n\r\n    ngOnInit(): void {\r\n\r\n        this.subscription = this.patientService.notifyObservable$.subscribe((res: any) => {\r\n            if (res.hasOwnProperty('option') && res.option === 'call_child') {\r\n                this.birthDateInfo = res.value;\r\n                this.isHagri();\r\n                this.isGregorian();\r\n            }\r\n        });\r\n        this.hagriDays = [];\r\n        let HagriDay: number = 0; while (this.hagriDays.push(++HagriDay) < 30);\r\n        this.gregorianDays = []; let gregorianDay = 0; while (this.gregorianDays.push(++gregorianDay) < 31);\r\n        this.hagriYears = []; let HagriYear = 1318; while (this.hagriYears.push(++HagriYear) < 154);\r\n        this.gregorianYears = []; let gregorianYear = 1900; while (this.gregorianYears.push(++gregorianYear) < 150);\r\n\r\n        this.convertHijriMonthListToArray();\r\n        this.convertGregorianMonthListToArray();\r\n    }\r\n\r\n    convertHijriMonthListToArray() {\r\n        this.HijriMonths = [];\r\n        for (var key in HijriMonthList) {\r\n            this.HijriMonths.push(HijriMonthList[key]);\r\n            if (this.HijriMonths.length == 12) break;\r\n        }\r\n    }\r\n\r\n    convertGregorianMonthListToArray() {\r\n        this.GregorianMonths = [];\r\n\r\n        for (var key in GregorianMonthList) {\r\n            this.GregorianMonths.push(GregorianMonthList[key]);\r\n            if (this.GregorianMonths.length == 12) break;\r\n        }\r\n    }\r\n\r\n    selectDiseredDate(selctedDateType: string) {\r\n        if (selctedDateType.toLowerCase() == \"hagri\") {\r\n            if (this.isDatePartsChanged == true)\r\n                this.CheckIfCurrentBirthDateChanged(this.birthDateInfo);\r\n            this.setHijriValues();\r\n\r\n        }\r\n        else {\r\n            if (this.isDatePartsChanged == true)\r\n                this.CheckIfCurrentBirthDateChanged(this.birthDateInfo);\r\n            this.setGregorianValues();\r\n        }\r\n    }\r\n\r\n    CheckIfCurrentBirthDateChanged(birthDateInfoChaned: any) {\r\n        let thisComponent = this;\r\n        thisComponent.isDatePartsChanged = false;\r\n        this.patientService.checkIfCurrentBirthDateChanged(birthDateInfoChaned)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    thisComponent.birthDateInfo = response;\r\n                    if (thisComponent.birthDateInfo.birthDateType == \"Hagri\")\r\n                        thisComponent.setGregorianValues();\r\n                    else\r\n                        thisComponent.setHijriValues();\r\n                },\r\n                function (error: any) {\r\n                    thisComponent.toastr.error(error);\r\n                    thisComponent.showProgress = false;\r\n                },\r\n                function () {\r\n                    thisComponent.showProgress = false;\r\n                });\r\n\r\n    }\r\n\r\n    isHagri(): boolean {\r\n\r\n        return this.birthDateInfo && this.birthDateInfo.birthDateType && (this.birthDateInfo.birthDateType == 1 || this.birthDateInfo.birthDateType == \"Hagri\");\r\n    }\r\n\r\n    isGregorian(): boolean {\r\n\r\n        return this.birthDateInfo && this.birthDateInfo.birthDateType && (this.birthDateInfo.birthDateType == 2 || this.birthDateInfo.birthDateType == \"Gourgian\");\r\n    }\r\n\r\n    isDateChanged(dateValue: any, dateId: any) {\r\n        if (dateId == \"ddlDays\") {\r\n            this.birthDateInfo.dayValue = dateValue;\r\n            this.isDatePartsChanged = true;\r\n        }\r\n        else if (dateId == \"ddlMonths\") {\r\n            let tempValue = this.birthDateInfo.birthDateType == 1 ? HijriMonthList[dateValue] : GregorianMonthList[dateValue];\r\n            this.birthDateInfo.monthValue = tempValue;\r\n            this.isDatePartsChanged = true;\r\n\r\n        }\r\n        else if (dateId == \"ddlYears\") {\r\n            this.birthDateInfo.yearValue = dateValue;\r\n            this.isDatePartsChanged = true;\r\n\r\n        }\r\n        this.onNewDateSaved.emit(this.birthDateInfo);\r\n    }\r\n\r\n    setHijriValues() {\r\n\r\n        this.selctedDaysType = this.hagriDays;\r\n        this.selctedMonthsType = this.HijriMonths;\r\n        this.selctedYearsType = this.hagriYears;\r\n        this.birthDateInfo.birthDateType = 1;\r\n        this.isHagri();\r\n        if (this.birthDateInfo.hijriBirthDate != undefined) {\r\n            this.HagriDateValues = new Date(this.birthDateInfo.hijriBirthDate);\r\n            this.birthDateInfo.dayValue = this.HagriDateValues.getDate();\r\n            let month = this.HagriDateValues.getMonth();\r\n            this.birthDateInfo.monthValue = HijriMonthList[month + 1];\r\n            this.birthDateInfo.yearValue = this.HagriDateValues.getFullYear();\r\n        }\r\n    }\r\n\r\n    setGregorianValues() {\r\n        this.selctedDaysType = this.gregorianDays;\r\n        this.selctedMonthsType = this.GregorianMonths;\r\n        this.selctedYearsType = this.gregorianYears;\r\n        this.birthDateInfo.birthDateType = 2;\r\n        this.isGregorian();\r\n        if (this.birthDateInfo.birthDate != undefined) {\r\n            this.GregorianDateValues = new Date(this.birthDateInfo.birthDate);\r\n            this.birthDateInfo.dayValue = this.GregorianDateValues.getDate();\r\n            let month = this.GregorianDateValues.getMonth();\r\n            this.birthDateInfo.monthValue = GregorianMonthList[month + 1];\r\n            this.birthDateInfo.yearValue = this.GregorianDateValues.getFullYear();\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","    \r\n\r\n            <div class=\"form-group\">\r\n                <label for=\"birthDate\" class=\"control-label col-md-2\">{{ 'BirthDate' | translate}} </label>\r\n                <div class=\"col-md-4\">\r\n                    <table>\r\n                        <tr>\r\n                            <td>\r\n                                <input type=\"radio\" id=\"rbBirthDate\" #hagri [checked]=\"isHagri()\" (click)=\"selectDiseredDate(hagri.value)\" value=\"hagri\" name=\"rbBirthDate\" required  />{{ 'Hijri' | translate}}\r\n                            </td>\r\n                            <td>\r\n                                <input type=\"radio\" #gregorian [checked]=\"isGregorian()\"  (click)=\"selectDiseredDate(gregorian.value)\"  id=\"rbBirthDate\" value=\"gregorian\" name=\"rbBirthDate\" />{{ 'Gregorian' | translate}}\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n           <div class=\"form-group\">\r\n                <label  class=\"control-label col-md-2\"></label>\r\n\r\n                <div class=\"col-md-2\">\r\n                    <table>\r\n                        <tr>\r\n\r\n                           \r\n                            <td>\r\n                                <label for=\"ddlDays\" class=\"control-label col-md-2\"> </label>\r\n                            </td>\r\n                            <td>\r\n                                <select id=\"ddlDays\" name=\"ddlDays\" #ddlDays (change)=\"isDateChanged(ddlDays.value,ddlDays.id)\" [(ngModel)]='birthDateInfo.dayValue'>\r\n                                    <option   *ngFor=\"let item of selctedDaysType\"  [value]=\"item\" selected>{{item}}</option>\r\n                                </select>\r\n                            </td>\r\n                            <td>\r\n                                <label for=\"ddlMonths\" class=\"control-label col-md-2\"> </label>\r\n                            </td>\r\n                            <td>\r\n                                <select id=\"ddlMonths\"  #ddlMonths name=\"ddlMonths\" (change)=\"isDateChanged(ddlMonths.value,ddlMonths.id)\"  [(ngModel)]='birthDateInfo.monthValue'  >\r\n                                    <option *ngFor=\"let item of selctedMonthsType \"  [value]=\"item\" selected>{{item| translate}}</option>\r\n                                </select> \r\n                            </td>\r\n                            <td>\r\n                                <label for=\"ddlYears\" class=\"control-label col-md-2\"> </label>\r\n                            </td>\r\n                            <td>\r\n                                <select id=\"ddlYears\" #ddlYears name=\"ddlYears\" (change)=\"isDateChanged(ddlYears.value,ddlYears.id)\"  [(ngModel)]='birthDateInfo.yearValue'    >\r\n                                    <option *ngFor=\"let item of selctedYearsType \" [value]=\"item\" selected>{{item }}</option>\r\n                                </select> \r\n                            </td>\r\n                        </tr>\r\n\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            \r\n  \r\n\r\n","import { Component, SimpleChanges, OnChanges, OnInit, ViewChild, Input, Output, EventEmitter } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { PatientService } from '../shared/patient.service'\r\nimport { SharedService } from '../../shared/shared/shared.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { HijriMonthList, GregorianMonthList } from '../shared/MonthsListType.enum';\r\n\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\nimport { UtilityClass } from '../../shared/shared/utility.class';\r\n\r\n\r\n@Component({\r\n\r\n    selector: 'patient-account',\r\n    templateUrl: 'patient-account.component.html',\r\n})\r\n\r\nexport class PatientAccountComponent implements OnInit {\r\n    selectBasicTab: boolean = true;\r\n    numbers!: Number;\r\n    serviceId = 'new';\r\n    patientId!: string;\r\n    @Input() patientAccountToSave: any = { reachInfo: { mobile: \"\" } };\r\n    @Output() onModelUpdated = new EventEmitter<any>();\r\n    @Input() title: string = '';\r\n    active = true;\r\n    // patientAccountToSave: any = {};\r\n    selectedClinicId: string = \"0\";\r\n    //patientAccountToSave: any = {};\r\n    patientType: string = \"\";\r\n    monthValueString!: string;\r\n\r\n    classifications = [];\r\n    showProgress = false;\r\n    @ViewChild(\"fileInput\") fileInput!: any;\r\n    @ViewChild(\"patientAccountForm\") patientAccountForm!: any;\r\n    utilityClass: UtilityClass = new UtilityClass();\r\n    isAttachmentsSelected: boolean = true;\r\n    constructor(private patientService: PatientService\r\n        , private sharedService: SharedService\r\n        , public toastr: ToastrService\r\n        , private _route: ActivatedRoute\r\n        , private router: Router\r\n        , public storage: LocalStorageService\r\n        , public translate: TranslateService\r\n\r\n    ) {\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n\r\n        this.selectedClinicId = this.storage.retrieve(\"ClinicID\");\r\n        if (this.patientAccountToSave.reachInfo == null || this.patientAccountToSave.reachInfo == undefined) {\r\n            let reachInfo: any = {};\r\n            this.patientAccountToSave.reachInfo = reachInfo;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    intializePatientBirthDate(patientAccountToSaveData: any) {\r\n        this.patientAccountToSave.dayValue = patientAccountToSaveData.dayValue;\r\n        this.patientAccountToSave.monthValue = patientAccountToSaveData.monthValue;\r\n        this.patientAccountToSave.yearValue = patientAccountToSaveData.yearValue;\r\n        this.patientAccountToSave.birthDateType = patientAccountToSaveData.birthDateType;\r\n\r\n    }\r\n    savePatientAccount(): void {\r\n        let thisComponent = this;\r\n        if (!this.patientAccountToSave.hasOwnProperty('id')\r\n            || this.patientAccountToSave.id.toString().toLowerCase() == 'new'\r\n            || this.patientAccountToSave.id.toString().toLowerCase() == '0') {\r\n            //Update\r\n\r\n            this.patientService.createPatientAccount(this.patientAccountToSave)\r\n                .subscribe(\r\n                    function (response: any) {\r\n\r\n                        thisComponent.patientAccountToSave = response;\r\n                        thisComponent.raiseModelUpdated(thisComponent.patientAccountToSave);\r\n\r\n                        let msg = thisComponent.translate.instant(\"SavedSuccessfully\");\r\n                        thisComponent.toastr.success(msg, '');\r\n                        thisComponent.clearWithParent();\r\n\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error);\r\n                        // thisComponent.clearWithParent();\r\n\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () {\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n        }\r\n        else {\r\n\r\n            this.patientService.updatePatientAccount(this.patientAccountToSave)\r\n\r\n                .subscribe(\r\n                    function (response: any) {\r\n\r\n                        thisComponent.patientAccountToSave = response;\r\n                        thisComponent.patientAccountToSave.birthDate = thisComponent.utilityClass.getUtcDateFromString(thisComponent.patientAccountToSave.birthDate);\r\n                        thisComponent.raiseModelUpdated(thisComponent.patientAccountToSave);\r\n                        let msg = thisComponent.translate.instant(\"SavedSuccessfully\");\r\n                        thisComponent.toastr.success(msg, '');                  //  thisComponent.clearWithParent();//we don't need clear\r\n\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error);\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () {\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n        }\r\n\r\n        thisComponent.patientService.notifyOther({ option: 'call_child', value: thisComponent.patientAccountToSave });\r\n\r\n    }\r\n\r\n    clearWithParent() {\r\n        this.patientAccountToSave = {};\r\n        this.patientAccountForm.valid = true;\r\n        this.active = false;\r\n        setTimeout(() => this.active = true, 0);\r\n    }\r\n\r\n    raiseModelUpdated(model: any) {\r\n        this.onModelUpdated.emit(model);\r\n    }\r\n\r\n    isPatientMale(): boolean {\r\n        return this.patientAccountToSave && this.patientAccountToSave.gender && this.patientAccountToSave.gender.toLowerCase() == 'male';\r\n    }\r\n\r\n    isPatientFemale(): boolean {\r\n        return this.patientAccountToSave && this.patientAccountToSave.gender && this.patientAccountToSave.gender.toLowerCase() == 'female';\r\n    }\r\n\r\n\r\n    public onSubmit() {\r\n\r\n    }\r\n\r\n    public navigateToPackages() {\r\n        //routerLink=\"/receptionistPatients/1\"\r\n        this.router.navigate(['/receptionist/patients', this.selectedClinicId]);\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","<div *ngIf=\"showProgress\">\r\n    <loading></loading>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <div class=\"row nopadding\">\r\n        <form *ngIf=\"active\" class=\"form-horizontal\" name=\"patientAccountForm\" #patientAccountForm=\"ngForm\">\r\n            <div class=\"form-group\" (ngSubmit)=\"onSubmit()\">\r\n                <label for=\"firstNameTxt\" class=\"control-label col-md-2\">{{ 'FirstName' | translate}}</label>\r\n                <div class=\"col-md-4\">\r\n                    <input id=\"firstNameTxt\" name=\"firstNameTxt\" class=\"form-control\" [(ngModel)]='patientAccountToSave.firstName' #firstNameTxt=\"ngModel\" required />\r\n                    <div [hidden]=\"firstNameTxt.valid || firstNameTxt.pristine\" class=\"alert alert-danger\">\r\n                        {{ 'RequiredField' | translate}}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"middleTxt\" class=\"control-label col-md-2\">{{ 'MiddleName' | translate}}</label>\r\n                <div class=\"col-md-4\">\r\n                    <input id=\"middleTxt\" name=\"middleTxt\" class=\"form-control\" [(ngModel)]='patientAccountToSave.middleName' #middleTxt=\"ngModel\" required />\r\n                    <div [hidden]=\"middleTxt.valid || middleTxt.pristine\" class=\"alert alert-danger\">\r\n                        {{ 'RequiredField' | translate}}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"lastNameTxt\" class=\"control-label col-md-2\">{{ 'LastName' | translate}}</label>\r\n                <div class=\"col-md-4\">\r\n                    <input id=\"lastNameTxt\" name=\"lastNameTxt\" class=\"form-control\" [(ngModel)]='patientAccountToSave.lastName' #lastNameTxt=\"ngModel\" required />\r\n                    <div [hidden]=\"lastNameTxt.valid || lastNameTxt.pristine\" class=\"alert alert-danger\">\r\n                        {{ 'RequiredField' | translate}}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"mobileNumberTxt\" class=\"control-label col-md-2\">{{ 'MobileNumber' | translate}}</label>\r\n                <div class=\"col-md-4\">\r\n                    <input id=\"mobileNumberTxt\" type=\"text\" name=\"mobileNumberTxt\" class=\"form-control\" [(ngModel)]='patientAccountToSave.reachInfo.mobile' #mobileNumberTxt=\"ngModel\" required pattern=\"^(\\+?[0-9]{1,5})?([1-9][0-9]{9})$\" />\r\n                    <div [hidden]=\"mobileNumberTxt.valid || mobileNumberTxt.pristine\" class=\"alert alert-danger\">\r\n                        {{ 'RequiredField' | translate}}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <date-hijri-gregorian [birthDateInfo]=\"patientAccountToSave\"  (onNewDateSaved)=\"intializePatientBirthDate($event)\" ></date-hijri-gregorian>\r\n\r\n            <div class=\"form-group\">\r\n                <label for=\"rbGender\" class=\"control-label col-md-2\">{{ 'Gender' | translate}}</label>\r\n                <div class=\"col-md-4\">\r\n                    <table>\r\n                        <tr>\r\n                            <td>\r\n                                <input type=\"radio\" id=\"rbGender\" (change)=\"patientAccountToSave.gender ='1'\" value=\"1\" name=\"rbGender\" [checked]=\"isPatientMale()\" required />{{ 'Male' | translate}}\r\n                            </td>\r\n                            <td>\r\n                                <input type=\"radio\" (change)=\"patientAccountToSave.gender ='2'\" [checked]=\"isPatientFemale()\" id=\"rbGender\" value=\"2\" name=\"rbGender\" />{{ 'Female' | translate}}\r\n                            </td>\r\n                        </tr>\r\n\r\n                    </table>\r\n                    <!--<div [hidden]=\"rbGender.valid || rbGender.pristine\" class=\"alert alert-danger\">\r\n                        Gender is required\r\n                    </div>-->\r\n                </div>\r\n            </div>\r\n            <br />\r\n            <div class=\"form-group\">\r\n                <div class=\"col-md-4 col-md-offset-2\">\r\n                    <button type=\"submit\" class=\"btn btn-primary\" (click)=\"savePatientAccount()\" [disabled]=\"!patientAccountForm.valid\">{{ 'Save' | translate}}</button>\r\n                    <button class=\"btn btn-primary\" (click)=\"navigateToPackages()\">{{ 'Back' | translate}}</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n\r\n","import { Component, OnInit, Input, OnChanges, EventEmitter, Output } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { PatientService } from '../shared/patient.service'\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { UtilityClass } from '../../shared/shared/utility.class';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\n\r\n@Component({\r\n\r\n    selector: 'patient-address',\r\n    templateUrl: 'patient-address.component.html'\r\n})\r\n\r\nexport class PatientAddressComponent implements OnInit, OnChanges {\r\n    selectAddressTab: boolean = true;\r\n    @Input() patientId: string = '';\r\n    @Output() onModelUpdated = new EventEmitter<any>();\r\n    @Input() model: any = {};\r\n    @Input() title: string = '';\r\n    utilityClass: UtilityClass = new UtilityClass();\r\n    active = true;\r\n    //model: any = {};\r\n    showProgress = false;\r\n    selectedClinicId: any;\r\n\r\n    constructor(private patientService: PatientService,\r\n        private localStorage: LocalStorageService,\r\n        public toastr: ToastrService,\r\n        private _route: ActivatedRoute\r\n        , private router: Router, public translate: TranslateService\r\n\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        let vm = this;\r\n        //  let id = this._route.snapshot.params['id'];\r\n        this.selectedClinicId = this.localStorage.retrieve(\"ClinicID\");\r\n    }\r\n    ngOnChanges(): void {\r\n        if (this.model.reachInfo == undefined || this.model.reachInfo == null) {\r\n            this.model.reachInfo = {};\r\n        }\r\n    }\r\n\r\n    clear(): void {\r\n        //this.getOrganizationAddress(this);\r\n        //this.model = {};\r\n        //this.active = false;\r\n        //this.model.id = 'new';\r\n        //this.model.contact = {};\r\n        //this.model.address = {};\r\n        //setTimeout(() => this.active = true, 0);\r\n    }\r\n\r\n    onSubmit(): void {\r\n        let vm = this;\r\n        vm.showProgress = true;\r\n        //  this.model.clinicId = this.clinicId;\r\n        this.patientService.saveorUpdateReachInformation(this.model)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    vm.model = response;\r\n                    if (vm.model.birthDate)\r\n                        vm.model.birthDate = vm.utilityClass.getUtcDateFromString(vm.model.birthDate);\r\n\r\n                    vm.raiseModelUpdated(vm.model);\r\n                    let msg = vm.translate.instant(\"SavedSuccessfully\");\r\n                    vm.toastr.success(msg, '');\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                    vm.showProgress = false;\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n    }\r\n\r\n    raiseModelUpdated(model: any) {\r\n        this.onModelUpdated.emit(model);\r\n    }\r\n    public navigateToPackages() {\r\n        //routerLink=\"/receptionistPatients/1\"\r\n        this.router.navigate(['/receptionist/patients', this.selectedClinicId]);\r\n    }\r\n}","<div *ngIf=\"showProgress\">\r\n    <loading></loading>\r\n</div>\r\n\r\n\r\n<div class=\"row\">\r\n    <!-- <div class=\"col-md-2 nopadding\">\r\n         <patient-receptionist-tabs [activeTabIndex]=\"2\"></patient-receptionist-tabs>\r\n     </div>-->\r\n    <div class=\"row nopadding\">\r\n        <form novalidate *ngIf=\"active\" class=\"form-horizontal\" name=\"addressForm\" (ngSubmit)=\"onSubmit()\" #addressForm=\"ngForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"txtRemarks\" class=\"control-label col-md-2\">{{ 'PatientName' | translate}} </label>\r\n                <label for=\"txtRemarks\" class=\"control-label col-md-2\">{{model.name}} </label>\r\n                <label for=\"txtRemarks\" class=\"control-label col-md-2\">{{ 'ClinicMRN' | translate}} </label>\r\n                <label for=\"txtRemarks\" class=\"control-label col-md-2\">{{model.clinicMRN}} </label>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <address [reachInfo]=\"model.reachInfo\"></address>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <div class=\"col-md-offset-2 col-md-4\">\r\n                    <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!addressForm.form.valid\">{{ 'Save' | translate}}</button>\r\n                    <button type=\"button\" class=\"btn btn-primary\" (click)=\"navigateToPackages()\">{{ 'Back' | translate}}</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n\r\n    </div>\r\n</div>\r\n\r\n","import { Component, OnInit, ViewChild, Input, ChangeDetectionStrategy } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\r\n\r\nimport { DoctorService } from '../../doctors/shared/doctor.service';\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\nimport { Table } from 'primeng/table/table';\r\n\r\n@Component({\r\n\r\n    selector: 'patient-allergies',\r\n    templateUrl: 'patient-allergies.component.html',\r\n\r\n\r\n})\r\n\r\nexport class PatientAllergiesComponent implements OnInit {\r\n    selectBasicTab: boolean = true;\r\n\r\n    isDetailsVisible: boolean = false;\r\n    @Input() patientId!: number;\r\n    @Input() enable: boolean = true;\r\n\r\n    active = true;\r\n    lstToTranslated: string[] = [];\r\n    drugAllergiesList!: any;// = [];\r\n    toSaveDrugAllergy: any;\r\n    showProgress = false;\r\n    loading: boolean = true;\r\n    @ViewChild('dt') table!: Table;\r\n    \r\n    constructor(private doctorService: DoctorService\r\n        , public toastr: ToastrService\r\n        , private _route: ActivatedRoute\r\n        , public storage: LocalStorageService,\r\n        public translate: TranslateService\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        let thisComponent = this;\r\n        this.lstToTranslated = ['drugName', 'drugNameTranslation', 'recorderName', 'recorderNameTranslation'];\r\n\r\n        thisComponent.showProgress = true;\r\n        this.doctorService.getPatientSnapshotDrugAllergies(thisComponent.patientId)\r\n            .subscribe(\r\n                function (clinicNoteDiagnosis: any) {\r\n                    thisComponent.drugAllergiesList = clinicNoteDiagnosis;\r\n                },\r\n                function (error: any) {\r\n                    thisComponent.toastr.error('' + thisComponent.patientId + ' - ' + error, '');\r\n                    thisComponent.showProgress = false;\r\n                    thisComponent.loading = false;\r\n\r\n                },\r\n                function () { // finally\r\n                    thisComponent.showProgress = false;\r\n                    thisComponent.loading = false;\r\n\r\n                });\r\n    }\r\n    addNewDrugAllergy() {\r\n        this.toSaveDrugAllergy = {};\r\n        this.isDetailsVisible = true;\r\n    }\r\n\r\n    showDetails(rowData: any) {\r\n        if (rowData && rowData.id) {\r\n            let thisComponent = this;\r\n            thisComponent.showProgress = true;\r\n            this.doctorService.getDrugAllergyById(rowData.id)\r\n                .subscribe(\r\n                    function (matchedDrugAllergy: any) {\r\n                        thisComponent.toSaveDrugAllergy = matchedDrugAllergy;\r\n                    },\r\n                    function (error: any) {\r\n                        let msg = thisComponent.translate.instant(\"LoadDrugAllergy\");\r\n                        thisComponent.toastr.error(msg + rowData.id + ' - ' + error, '');\r\n\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () { // finally\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n            this.isDetailsVisible = true;\r\n        }\r\n    }\r\n\r\n    hideDetails(updatedDrugAllergy: any) {\r\n        if (updatedDrugAllergy) {\r\n\r\n            let thisComponent = this;\r\n            thisComponent.drugAllergiesList.forEach((allergy: any) => {\r\n                if (allergy.id == updatedDrugAllergy.id)\r\n                    thisComponent.drugAllergiesList.splice(thisComponent.drugAllergiesList.indexOf(allergy), 1);\r\n            });\r\n\r\n            this.drugAllergiesList.push(updatedDrugAllergy);\r\n        }\r\n\r\n        this.isDetailsVisible = false;\r\n    }\r\n\r\n    deleteDrugAllergy(rowData: any) {\r\n\r\n        if (rowData && rowData.id) {\r\n            let thisComponent = this;\r\n            thisComponent.showProgress = true;\r\n            this.doctorService.deleteDrugAllergy(rowData.id)\r\n                .subscribe(\r\n                    function (matchedDrugAllergy: any) {\r\n                        thisComponent.drugAllergiesList.forEach((allergy: any) => {\r\n                            if (allergy.id == rowData.id)\r\n                                thisComponent.drugAllergiesList.splice(thisComponent.drugAllergiesList.indexOf(allergy), 1);\r\n                        });\r\n                        let msg = thisComponent.translate.instant(\"DeletedSuccessfully\");\r\n                        thisComponent.toastr.success(msg, '');\r\n                    },\r\n                    function (error: any) {\r\n                        let msg = thisComponent.translate.instant(\"LoadDrugAllergy\");\r\n                        thisComponent.toastr.error(msg + rowData.id + ' - ' + error, '');\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () { // finally\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n        }\r\n    }\r\n\r\n}","<div *ngIf=\"showProgress\">\r\n    <loading></loading>\r\n</div>\r\n\r\n<div id=\"divTable\" class=\"padding5\" *ngIf=\"!isDetailsVisible\">\r\n\r\n    <div class=\"row text-right\">\r\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"addNewDrugAllergy()\" [disabled]=\"!enable\">{{ 'NewAllergy'\r\n            | translate}}</button>\r\n    </div>\r\n    <div class=\"row padding5\">&nbsp;</div>\r\n\r\n    <div class=\"inner-addon left-addon\">\r\n        <i class=\"glyphicon glyphicon-search\"></i>\r\n        <!-- <input #gb type=\"text\" pInputText size=\"50\" class=\"inputSearch\" [placeholder]=\"'Search' | translate\"> -->\r\n        <input pInputText type=\"text\" (input)=\"dt.filterGlobal($event.target.value, 'contains')\"\r\n            [placeholder]=\"'Search' | translate\" />\r\n\r\n    </div>\r\n    <!---New Table-->\r\n    <p-table #dt [value]=\"drugAllergiesList | translateObjects  : null : null : lstToTranslated\" dataKey=\"id\"\r\n        [rowHover]=\"true\" [rows]=\"10\" [showCurrentPageReport]=\"true\" [rowsPerPageOptions]=\"[10,20,30,40,50,100]\"\r\n        [loading]=\"loading\" [paginator]=\"true\"\r\n        currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" [filterDelay]=\"0\"\r\n        [globalFilterFields]=\"['drugCode','description']\">\r\n\r\n        <ng-template pTemplate=\"header\">\r\n            <tr>\r\n                <th pSortableColumn=\"drugCode\">{{'DrugCode' | translate}} <p-sortIcon field=\"drugCode\"></p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"drugName\">{{'DrugName' | translate}} <p-sortIcon field=\"drugName\"></p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"description\">{{'Description' | translate}} <p-sortIcon field=\"description\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"recorderName\">{{'RecorderName' | translate}} <p-sortIcon field=\"recorderName\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"recordingDateString\">{{'RecordingDate' | translate}} <p-sortIcon\r\n                        field=\"recordingDateString\"></p-sortIcon>\r\n                </th>\r\n\r\n                <th><span styleClass=\"text-center width70\">{{'Edit' | translate}} </span>\r\n                </th>\r\n                <th><span styleClass=\"width: 8rem\">{{'Delete'| translate}} </span>\r\n                </th>\r\n            </tr>\r\n\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-object>\r\n            <tr class=\"p-selectable-row\">\r\n                <td>\r\n                    {{object.drugCode}}\r\n                </td>\r\n                <td>\r\n                    {{object.drugName}}\r\n                </td>\r\n                <td>\r\n                    {{object.description}}\r\n                </td>\r\n                <td>\r\n                    {{object.recorderName}}\r\n                </td>\r\n                <td>\r\n                    {{object.recordingDateString}}\r\n                </td>\r\n                <td>\r\n                    <a class=\"pointer\" (click)=\"showDetails(object)\" [class.disabled]=\"!enable ? true : null\">\r\n                        <i class=\"fa fa-pencil fa-2x\" style=\"color: #32bea6;\"></i>\r\n                    </a>\r\n                </td>\r\n                <td style=\"text-align: center\">\r\n                    <a class=\"pointer\" (click)=\"deleteDrugAllergy(object)\" [class.disabled]=\"!enable ? true : null\">\r\n                        <i class=\"glyphicon glyphicon-remove iconClose\"></i>\r\n                    </a>\r\n                </td>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"emptymessage\">\r\n            <tr>\r\n                <td colspan=\"8\">No data found.</td>\r\n            </tr>\r\n        </ng-template>\r\n    </p-table>\r\n    <!--End Table-->\r\n</div>\r\n\r\n<div id=\"divTable\" class=\"padding5\" *ngIf=\"isDetailsVisible\">\r\n    <patient-allergy-details [toSaveDrugAllergy]=\"toSaveDrugAllergy\" [patientId]=\"patientId\"\r\n        (onBack)=\"hideDetails($event)\"></patient-allergy-details>\r\n</div>","import { Component, OnInit, OnChanges, ViewChild, Input, Output, EventEmitter } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { TreeNode } from 'primeng/api';\r\nimport { DoctorService } from '../../doctors/shared/doctor.service';\r\nimport { ClinicService } from '../../clinics/shared/clinic.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\n\r\n@Component({\r\n    selector: 'patient-allergy-details',\r\n    templateUrl: 'patient-allergy-details.component.html',\r\n})\r\n\r\nexport class PatientAllergyDetailsComponent implements OnInit {\r\n    selectBasicTab: boolean = true;\r\n    filterString!: string;\r\n    leafType: string = 'Drug';\r\n    divisionId!: any;\r\n    @Input() toSaveDrugAllergy: any;\r\n    @Input() patientId!: number;\r\n    @Output() onBack = new EventEmitter<any>();\r\n    active = true;\r\n    selectedDrugNode: any;\r\n    recorderId!: any;\r\n    clinicId!: any;\r\n    drugsTreeDataSourceItems: any[] = [];\r\n    getAllDrugs = true;\r\n    showProgress = false;\r\n    allDrugs = [];\r\n    nodeToAdded!: TreeNode;\r\n    ttt = \"aaa\";\r\n    constructor(private doctorService: DoctorService\r\n        , private clinicService: ClinicService\r\n        , public toastr: ToastrService\r\n        , private _route: ActivatedRoute\r\n        , public localStorage: LocalStorageService, public translate: TranslateService\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        this.divisionId = this._route.snapshot.params['divisionId'];\r\n        this.toSaveDrugAllergy = {};\r\n        this.selectedDrugNode = null;\r\n        this.recorderId = this.localStorage.retrieve(\"UserID\");\r\n        this.clinicId = this.localStorage.retrieve(\"ClinicID\");\r\n        this.getAllDrugGroupsForTreeView(false, false);\r\n        this.getClinicDepartmentDrugGroupsForTreeView();\r\n\r\n    }\r\n\r\n    getClinicDepartmentDrugGroupsForTreeView() {\r\n        let vm = this;\r\n        vm.getAllDrugs = true;\r\n        //get department drug groups\r\n        this.doctorService.getClinicDivisionDrugGroupsForTreeView(vm.divisionId)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    vm.drugsTreeDataSourceItems = response;\r\n                    if (vm.toSaveDrugAllergy) {\r\n                        vm.addModelToServicesList(vm.toSaveDrugAllergy);\r\n                        //   vm.displaySelectedNode(vm.toSaveDrugAllergy.drugId, \"Drug\");\r\n                        vm.expandAll();\r\n                    }\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n    }\r\n    getAllDrugGroupsForTreeView(needAll: boolean, displayNode: boolean) {\r\n        let vm = this;\r\n\r\n        /////////////////////////get all drug groups\r\n        this.clinicService.getDrugsGroupsForTree(vm.clinicId)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    vm.allDrugs = response;\r\n                    if (needAll) {\r\n                        vm.getAllDrugs = false;\r\n                        vm.drugsTreeDataSourceItems = response;\r\n\r\n                        if (displayNode || vm.selectedDrugNode != undefined)\r\n                            vm.displaySelectedNode(vm.toSaveDrugAllergy.drugId, vm.drugsTreeDataSourceItems);\r\n\r\n                        vm.expandAll();\r\n                    }\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n    }\r\n    addModelToServicesList(returnedModel: any) {\r\n        if (this.drugsTreeDataSourceItems != null && this.drugsTreeDataSourceItems != undefined && this.drugsTreeDataSourceItems.length > 0) {\r\n            this.displaySelectedNode(returnedModel.drugId, this.drugsTreeDataSourceItems);\r\n            if (this.selectedDrugNode == undefined) {\r\n                this.displaySelectedNode(returnedModel.drugId, this.allDrugs)\r\n                if (this.selectedDrugNode != undefined)\r\n                    this.addServiceToDepartmentList(this.selectedDrugNode);\r\n            }\r\n        } else {\r\n            this.getAllDrugGroupsForTreeView(true, true);\r\n        }\r\n\r\n    }\r\n    addServiceToDepartmentList(node: TreeNode) {\r\n        // var parentNode = this.services[0];\r\n        this.drugsTreeDataSourceItems[0].children.push(node);\r\n        this.selectedDrugNode = node;\r\n    }\r\n    displaySelectedNode(nodeId: string, services: any[]) {\r\n        let vm = this\r\n        services.forEach(node => {\r\n            if (node.data == nodeId && node.type == \"Drug\")\r\n                vm.selectedDrugNode = node;\r\n\r\n            vm.displayNodeRecursive(node, nodeId);\r\n\r\n        });\r\n    }\r\n\r\n    private displayNodeRecursive(node: TreeNode, nodeId: string) {\r\n        if (node.children) {\r\n            node.children.forEach(childNode => {\r\n                this.displayNodeRecursive(childNode, nodeId);\r\n\r\n                if (childNode.data == nodeId && childNode.type == \"Drug\") {\r\n                    this.selectedDrugNode = childNode;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    //displaySelectedNode(nodeId: string, nodeType:string) {\r\n    //    let vm = this\r\n    //    vm.drugsTreeDataSourceItems.forEach(node => {\r\n    //        if (node.data == nodeId && node.type == nodeType)\r\n    //            vm.selectedDrugNode = node;\r\n\r\n    //        vm.displaySelectedNodeRecursive(node, nodeId, nodeType);\r\n\r\n    //    });\r\n    //}\r\n\r\n    //private displaySelectedNodeRecursive(node: TreeNode, nodeId: string, nodeType: string) {\r\n    //    if (node.children) {\r\n    //        node.children.forEach(childNode => {\r\n    //            this.displaySelectedNodeRecursive(childNode, nodeId, nodeType);\r\n\r\n    //            if (childNode.data == nodeId && childNode.type == nodeType) {\r\n    //                this.selectedDrugNode = childNode;\r\n    //            }\r\n    //        });\r\n    //    }\r\n    //}\r\n\r\n    expandAll() {\r\n        this.drugsTreeDataSourceItems.forEach(node => {\r\n            this.expandRecursive(node, true);\r\n        });\r\n    }\r\n\r\n    collapseAll() {\r\n        this.drugsTreeDataSourceItems.forEach(node => {\r\n            this.expandRecursive(node, false);\r\n        });\r\n    }\r\n\r\n    private expandRecursive(node: TreeNode, isExpand: boolean) {\r\n        node.expanded = isExpand;\r\n        if (node.children) {\r\n            node.children.forEach(childNode => {\r\n                this.expandRecursive(childNode, isExpand);\r\n            });\r\n        }\r\n    }\r\n\r\n    onSubmit(): void {\r\n        let vm = this;\r\n        if (!this.toSaveDrugAllergy.drugCode || this.toSaveDrugAllergy.drugCode == '')\r\n            return;\r\n\r\n        vm.showProgress = true;\r\n        vm.toSaveDrugAllergy.patientId = vm.patientId;\r\n        if (vm.selectedDrugNode)\r\n            vm.toSaveDrugAllergy.drugId = vm.selectedDrugNode.data;\r\n        if (!this.toSaveDrugAllergy.hasOwnProperty('id') || this.toSaveDrugAllergy.id.toString().toLowerCase() == 'new') {\r\n            //Add new\r\n            vm.toSaveDrugAllergy.recorderID = vm.recorderId;\r\n            this.doctorService.createDrugAllergy(this.toSaveDrugAllergy)\r\n                .subscribe(\r\n                    function (response: any) {\r\n                        let msg = vm.translate.instant(\"SavedSuccessfully\");\r\n                        vm.toastr.success(msg, '');\r\n                        vm.toSaveDrugAllergy = response;\r\n                        vm.clear();\r\n                        vm.onBack.emit(response);\r\n                    },\r\n                    function (error: any) {\r\n                        vm.toastr.error(error, '');\r\n                        vm.showProgress = false;\r\n                    },\r\n                    function () {\r\n                        vm.showProgress = false;\r\n                    });\r\n        }\r\n        else {\r\n            //update\r\n            this.doctorService.updateDrugAllergy(this.toSaveDrugAllergy)\r\n                .subscribe(\r\n                    function (response: any) {\r\n                        let msg = vm.translate.instant(\"SavedSuccessfully\");\r\n                        vm.toastr.success(msg, '');\r\n                        vm.toSaveDrugAllergy = response;\r\n                        vm.clear();\r\n                        vm.onBack.emit(response);\r\n                    },\r\n                    function (error: any) {\r\n                        vm.toastr.error(error, '');\r\n                        vm.showProgress = false;\r\n                    },\r\n                    function () {\r\n                        vm.showProgress = false;\r\n                    });\r\n        }\r\n    }\r\n\r\n    clear(): void {\r\n        this.selectedDrugNode = {}\r\n        this.toSaveDrugAllergy = {};\r\n        this.active = false;\r\n        setTimeout(() => this.active = true, 0);\r\n    }\r\n\r\n\r\n    treeNodeSelected(event: any) {\r\n        if (event && event.node && event.node.code && event.node.code != '') {\r\n            this.toSaveDrugAllergy.drugCode = event.node.code;\r\n        }\r\n        else {\r\n            this.toSaveDrugAllergy.drugCode = '';\r\n        }\r\n    }\r\n\r\n    goBack() {\r\n        this.onBack.emit();\r\n    }\r\n\r\n}","<div *ngIf=\"showProgress\">\r\n    <loading></loading>\r\n</div>\r\n<form novalidate *ngIf=\"active\" class=\"form-horizontal\" name=\"organizationForm\" (ngSubmit)=\"onSubmit()\" #organizationForm=\"ngForm\">\r\n    <div class=\"form-group\">\r\n        <label for=\"txtName\" class=\"control-label col-md-2\">{{ 'DrugName' | translate}}</label>\r\n        <div class=\"col-md-6\">\r\n            <a class=\"pointer\" (click)=\"getAllDrugGroupsForTreeView(true,false)\" *ngIf=\"getAllDrugs\">{{ 'GetAll' | translate}}</a>\r\n            <a class=\"pointer\" (click)=\"getClinicDepartmentDrugGroupsForTreeView()\" *ngIf=\"!getAllDrugs\">{{ 'GetSpecific' | translate}}</a>\r\n            <div class=\"nopadding treeBorder\">\r\n                <div class=\"row nopadding\">\r\n                    <input [placeholder]=\"'SearchNameOrCode' | translate\" class=\"form-control\" [(ngModel)]=\"filterString\" name=\"txtFilterString\" #txtFilterString=\"ngModel\" />\r\n                </div>\r\n                <p-tree [value]=\"drugsTreeDataSourceItems | filterbynameorcode:filterString : leafType | translateObjects  : 'label' : 'labelTranslation' \" selectionMode=\"single\"\r\n                        [(selection)]=\"selectedDrugNode\" (onNodeSelect)=\"treeNodeSelected($event)\">\r\n                    <ng-template let-node pTemplate=\"ClinicDepartmentDrugsGroup\">\r\n                        <span class=\"nav-icon\"><i class=\"fa fa-cubes\"></i></span>\r\n                        &nbsp;\r\n                        {{node.label}}\r\n                    </ng-template>\r\n                    <ng-template let-node pTemplate=\"DrugsGroup\">\r\n                        <span class=\"nav-icon\"><i class=\"fa fa-cubes\"></i></span>\r\n                        &nbsp;\r\n                        {{node.label}}\r\n                    </ng-template>\r\n                    <ng-template let-node pTemplate=\"Drug\">\r\n                        <span class=\"nav-icon\"><i class=\"fa fa-cube\"></i></span>\r\n                        &nbsp;\r\n                        {{node.label}}\r\n                    </ng-template>\r\n                </p-tree>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"txtDrugCode\" class=\"control-label col-md-2\">{{ 'DrugCode' | translate}}</label>\r\n        <div class=\"col-md-2\">\r\n            <input id=\"txtDrugCode\" name=\"txtDrugCode\" class=\"form-control\" disabled required\r\n                   [(ngModel)]='toSaveDrugAllergy.drugCode' #txtDrugCode=\"ngModel\" />\r\n        </div>\r\n        <div class=\"col-md-4\">\r\n            <div *ngIf=\"!toSaveDrugAllergy.drugCode || toSaveDrugAllergy.drugCode ==''\" class=\"alert alert-danger\">\r\n                {{ 'RequiredField' | translate}}\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"txtRemarks\" class=\"control-label col-md-2\">{{ 'Description' | translate}}</label>\r\n        <div class=\"col-md-6\">\r\n            <textarea class=\"form-control\" id=\"txtRemarks\" name=\"txtRemarks\"\r\n                      [(ngModel)]='toSaveDrugAllergy.description' #txtRemarks=\"ngModel\"></textarea>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <div class=\"col-md-4 col-md-offset-2\">\r\n            <button class=\"btn btn-primary\">{{ 'Save' | translate}}</button>\r\n            <button class=\"btn btn-primary\" type=\"button\" (click)=\"goBack()\">{{ 'Back' | translate}}</button>\r\n        </div>\r\n    </div>\r\n</form>","import {Component, OnInit, ViewChild, Output, EventEmitter} from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { PatientService } from '../shared/patient.service'\r\nimport { SharedService } from '../../shared/shared/shared.service';\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport {LocalStorageService} from 'ng2-webstorage';\r\n\r\n@Component({\r\n    selector: 'patient-attachment-details',\r\n    templateUrl: 'patient-attachment-details.component.html',\r\n})\r\n\r\nexport class PatientAttachmentDetailsComponent implements OnInit {\r\n    selectBasicTab: boolean = true;\r\n    @Output() onBack = new EventEmitter();\r\n    patientFiles: any[] = [];\r\n    attachment: any;\r\n    keyName!:string;\r\n    fileType!:string;\r\n    active = true;\r\n    patientAttachmentFile: any = {};\r\n    type = 'PatientFileType';\r\n\r\n    classifications = [];\r\n    showProgress = false;\r\n    @ViewChild(\"fileInput\") fileInput!:any;\r\n\r\n    isReceptionist: boolean = false;\r\n\r\n    constructor(private patientAttachementService: PatientService\r\n        , private sharedService: SharedService\r\n        , public toastr: ToastrService\r\n        , private _route: ActivatedRoute\r\n        , public storage: LocalStorageService\r\n    )\r\n    { }\r\n\r\n    ngOnInit(): void {\r\n\r\n       \r\n    }\r\n\r\n\r\n    clear(): void {\r\n        this.patientAttachmentFile = {};\r\n      \r\n    }\r\n\r\n\r\n    //attachmentChanged(response:any) {\r\n    //    let attchmentInfo: any = {};\r\n\r\n    //    if (response != null) {\r\n\r\n    //        if (response.originalName == undefined) {\r\n    //            //  this.model.attachmentInfo = null;\r\n    //            this.attachment = null;\r\n    //            return;\r\n    //        }\r\n\r\n    //        //  this.model.attachmentInfo = attchmentInfo;\r\n    //        //   this.model.attachmentInfo.originalName = response.originalName;\r\n    //        //   this.model.attachmentInfo.keyName = response.keyName;\r\n    //        this.keyName = response.keyName;\r\n    //        this.fileType = response.fileType;\r\n    //        //  this.model.attachmentInfo.fileType = response.fileType;\r\n    //    }\r\n    //    else {\r\n    //        //  this.model.attachmentInfo = null;\r\n    //        this.attachment = null;\r\n    //    }\r\n    //}\r\n\r\n    //loadPatientWrapper() {\r\n    //    let thisComponent = this;\r\n    //    this.patientAttachementService.getPatientType()\r\n    //        .subscribe(\r\n    //        function (wrapper) {\r\n            \r\n    //            thisComponent.patientFiles = wrapper.attachmentType;\r\n\r\n\r\n\r\n    //        },\r\n    //        function (error:any) { \r\n    //            thisComponent.toastr.error('Failed to Load Data - ' + error, '');\r\n    //            thisComponent.showProgress = false;\r\n    //        },\r\n    //        function () { // finally\r\n    //            thisComponent.showProgress = false;\r\n    //        });\r\n\r\n    //}\r\n    //savePatientAttachement(): void {\r\n    //    let thisComponent = this;\r\n    //    if (this.patientAttachmentFile.id > 0) {\r\n    //        //Update\r\n\r\n    //        this.patientAttachementService.updatePatientAttachments(this.patientAttachmentFile)\r\n    //            .subscribe(\r\n    //            function (response:any) {\r\n\r\n    //                thisComponent.patientAttachmentFile = response;\r\n    //                thisComponent.toastr.success('Saved successfully', '');\r\n    //                // thisComponent.onServiceChanged.emit();\r\n    //                // thisComponent.serviceIdValue.emit(thisComponent.serviceId);\r\n    //                thisComponent.clear();\r\n              \r\n    //            },\r\n    //            function (error:any) { \r\n    //                thisComponent.toastr.error('Error occured during saving ' + error);\r\n    //                thisComponent.clear();\r\n\r\n    //                thisComponent.showProgress = false;\r\n    //            },\r\n    //            function () {\r\n    //                thisComponent.showProgress = false;\r\n    //            });\r\n\r\n    //    }\r\n    //    else {\r\n\r\n\r\n    //        this.patientAttachementService.createPatientAttachments(this.keyName, this.fileType,this.patientAttachmentFile)\r\n\r\n    //            .subscribe(\r\n    //            function (response:any) {\r\n\r\n    //                thisComponent.patientAttachmentFile = response;\r\n    //                thisComponent.toastr.success('Saved successfully', '');\r\n    //                // thisComponent.onServiceChanged.emit();\r\n    //                //thisComponent.serviceIdValue.emit(thisComponent.serviceId);\r\n    //                thisComponent.clear();\r\n    //            },\r\n    //            function (error:any) { \r\n    //                thisComponent.toastr.error('Error occured during saving ' + error);\r\n    //                thisComponent.showProgress = false;\r\n    //            },\r\n    //            function () {\r\n    //                thisComponent.showProgress = false;\r\n    //            });\r\n    //    }\r\n    //}\r\n\r\n\r\n    //deleteOrganization(id): void {\r\n    //    let vm = this;\r\n    //    if (id == undefined || isNaN(id)) {\r\n    //        vm.toastr.warning('لايوجد جمعية مختارة لمسحها', '');\r\n    //        return;\r\n    //    }\r\n\r\n    //    vm.showProgress = true;\r\n    //    this.organizationService.deleteOrganization(id)\r\n    //        .subscribe(\r\n    //        function (response:any) {\r\n    //            vm.toastr.success('Deleted successfully', '');\r\n    //            vm.clear();\r\n\r\n    //            // store selected organization ID\r\n    //            vm.storage.store(\"OrganizationID\", 'new');\r\n    //        },\r\n    //        function (error:any) { \r\n    //            //console.log(\"Error happened\" + error)\r\n    //            vm.toastr.error('Failed to Delete - ' + error, '');\r\n    //        },\r\n    //        function () {\r\n    //            vm.showProgress = false;\r\n    //        });\r\n    //}\r\n\r\n   \r\n\r\n    goBack() {\r\n        this.onBack.emit();\r\n    }\r\n\r\n}","import {Component, OnInit, ViewChild, Input} from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { PatientService } from '../shared/patient.service'\r\nimport { SharedService } from '../../shared/shared/shared.service';\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport {LocalStorageService} from 'ng2-webstorage';\r\n\r\n@Component({\r\n    selector: 'patient-attachments',\r\n    templateUrl: 'patient-attachments.component.html',\r\n})\r\n\r\nexport class PatientAttachmentsComponent implements OnInit {\r\n    selectBasicTab: boolean = true;\r\n    selectAttachmentsTab: boolean = true;\r\n    //documentDetailsUrl: string = \"patientAttachments\";\r\n    isDetailsVisible: boolean = false;\r\n    @Input() allowEditing: boolean = true;\r\n    type = 'PatientFileType';\r\n    docsDetailsUrl: string = \"patientAttachmentDetails\";\r\n    docsListUrl: string = \"patientAttachments\";\r\n    organizationId = '';\r\n    active = true;\r\n    model: any = {};\r\n    classifications = [];\r\n    showProgress = false;\r\n    @ViewChild(\"fileInput\") fileInput!:any;\r\n    isDoctor: boolean = false;\r\n    isReceptionist: boolean = false;\r\n    previousTab: string = '';\r\n    nextTab: string = '';\r\n\r\n    constructor(private organizationService: PatientService\r\n        , private sharedService: SharedService\r\n        , public toastr: ToastrService\r\n        , private _route: ActivatedRoute\r\n        , public storage: LocalStorageService\r\n    )\r\n    { }\r\n\r\n    ngOnInit(): void {\r\n\r\n        //this.isDoctor = this.storage.retrieve(\"IsDoctor\");\r\n        //this.isReceptionist = this.storage.retrieve(\"IsReceptionist\");\r\n\r\n        //if (this.isDoctor) {\r\n        //    this.previousTab = '/patientRadiology/1';\r\n        //    this.nextTab = '/doctorAppointments/1';\r\n        //}\r\n        //else {\r\n        //    this.previousTab = '/patientServices/1';\r\n        //    this.nextTab = '/nurseAppointments/1';\r\n        //}\r\n        //let id = this._route.snapshot.params['id'];\r\n        //this.organizationId = `${id}`;\r\n    \r\n        \r\n    }\r\n\r\n    //onSubmit(): void {\r\n    //    let vm = this;\r\n    //    vm.showProgress = true;\r\n\r\n    //    if (!this.model.hasOwnProperty('id') || this.model.id.toString().toLowerCase() == 'new') {\r\n    //        // Add new\r\n    //        this.organizationService.saveOrganization(this.model)\r\n    //            //.subscribe(\r\n    //            //organization => this.model = organization,\r\n    //            //error => this.errorMessage = <any>error);\r\n    //            .subscribe(\r\n    //            function (response:any) {\r\n    //                vm.toastr.success('Saved Successfully', '');\r\n    //                vm.model = response;\r\n\r\n    //                // store selected organization ID\r\n    //                vm.storage.store(\"OrganizationID\", vm.model.id);\r\n    //                if (response.imageData != null) {\r\n    //                    vm.model.imageData = response.imageData;\r\n    //                    vm.model.imageId = response.imageId;\r\n    //                }\r\n    //            },\r\n    //            function (error:any) { \r\n    //                //console.log(\"Error happened\" + error)\r\n    //                vm.toastr.error('حدث خطأ أثناء الحفظ - ' + error, '');\r\n    //                vm.showProgress = false;\r\n    //            },\r\n    //            function () {\r\n    //                vm.showProgress = false;\r\n    //            }\r\n    //            );\r\n    //    }\r\n    //    else {\r\n    //        // update \r\n    //        this.organizationService.updateOrganization(this.model)\r\n    //            .subscribe(\r\n    //            function (response:any) {\r\n    //                vm.toastr.success('Saved Successfully', '');\r\n    //                vm.model = response;\r\n\r\n    //                if (response.imageData != null) {\r\n    //                    vm.model.imageData = response.imageData;\r\n    //                    vm.model.imageId = response.imageId;\r\n    //                }\r\n    //            },\r\n    //            function (error:any) { \r\n    //                //console.log(\"Error happened\" + error)\r\n    //                vm.toastr.error('حدث خطأ أثناء الحفظ - ' + error, '');\r\n    //                vm.showProgress = false;\r\n    //            },\r\n    //            function () {\r\n    //                vm.showProgress = false;\r\n    //            });\r\n    //    }\r\n    //}\r\n\r\n    clear(): void {\r\n        this.model = {};\r\n        this.active = false;\r\n        // store selected Organization ID\r\n        this.storage.store(\"OrganizationID\", 'new');\r\n        setTimeout(() => this.active = true, 0);\r\n    }\r\n\r\n    //deleteOrganization(id): void {\r\n    //    let vm = this;\r\n    //    if (id == undefined || isNaN(id)) {\r\n    //        vm.toastr.warning('لايوجد جمعية مختارة لمسحها', '');\r\n    //        return;\r\n    //    }\r\n\r\n    //    vm.showProgress = true;\r\n    //    this.organizationService.deleteOrganization(id)\r\n    //        .subscribe(\r\n    //        function (response:any) {\r\n    //            vm.toastr.success('Deleted successfully', '');\r\n    //            vm.clear();\r\n\r\n    //            // store selected organization ID\r\n    //            vm.storage.store(\"OrganizationID\", 'new');\r\n    //        },\r\n    //        function (error:any) { \r\n    //            //console.log(\"Error happened\" + error)\r\n    //            vm.toastr.error('Failed to Delete - ' + error, '');\r\n    //        },\r\n    //        function () {\r\n    //            vm.showProgress = false;\r\n    //        });\r\n    //}\r\n\r\n    //imageChanged(response:any)\r\n    //{\r\n    //    let attchmentInfo: any = {};\r\n\r\n    //    if (response != null) {\r\n\r\n    //        if (response.originalName == undefined)\r\n    //        {\r\n    //            this.model.attachmentInfo = null;\r\n    //            return;\r\n    //        }\r\n\r\n    //        this.model.attachmentInfo = attchmentInfo;\r\n    //        this.model.attachmentInfo.originalName = response.originalName;\r\n    //        this.model.attachmentInfo.keyName = response.keyName;\r\n    //        this.model.attachmentInfo.fullPath = response.fullPath;\r\n    //        this.model.attachmentInfo.fileType = response.fileType;\r\n    //    }\r\n    //    else {\r\n    //        this.model.attachmentInfo = null;\r\n    //    }\r\n\r\n    //}\r\n\r\n    //showDetails() {\r\n    //    this.isDetailsVisible = true;\r\n    //}\r\n\r\n    //hideDetails() {\r\n    //    this.isDetailsVisible = false;\r\n    //}\r\n\r\n\r\n}","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { PatientService } from '../shared/patient.service'\r\nimport { SharedService } from '../../shared/shared/shared.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport {LocalStorageService} from 'ng2-webstorage';\r\n\r\n@Component({\r\n   \r\n    selector: 'patient-basic',\r\n    templateUrl: 'patient-basic.component.html',\r\n})\r\n\r\nexport class PatientBasicComponent implements OnInit {\r\n    selectBasicTab: boolean = true;\r\n\r\n    active = true;\r\n    model: any = {};\r\n  \r\n    classifications = [];\r\n    showProgress = false;\r\n    @ViewChild(\"fileInput\") fileInput!:any;\r\n\r\n    constructor(private organizationService: PatientService\r\n        , private sharedService: SharedService\r\n        , public toastr: ToastrService\r\n        , private _route: ActivatedRoute\r\n        , public storage: LocalStorageService\r\n    )\r\n    { }\r\n\r\n    ngOnInit(): void {\r\n        /*let vm = this;\r\n       \r\n        let id = this._route.snapshot.params['id'];\r\n        this.model.id = `${id}`;\r\n        vm.showProgress = true;\r\n\r\n        //get all calssifications from DB\r\n        this.organizationService.getOrganizationBasicWrapper()\r\n            .subscribe(\r\n            function (response:any) {\r\n                vm.classifications = response.classifications;\r\n            },\r\n            function (error:any) { \r\n                vm.toastr.error('Failed to Load Data - ' + error, '');\r\n            },\r\n            function () {\r\n                vm.showProgress = false;\r\n            });\r\n\r\n        // get organization in case of update\r\n        if (this.model.id.toString().toLowerCase() != 'new') {\r\n            vm.showProgress = true;\r\n            this.organizationService.getOrganizationsById(this.model.id)\r\n                .subscribe(\r\n                function (response:any) {\r\n                    vm.model = response;\r\n                },\r\n                function (error:any) { \r\n                    vm.toastr.error('Failed to get organization with ID:' + this.model.id + \" - \" + error, '');\r\n                    vm.showProgress = false;\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n        }\r\n        */\r\n    }\r\n\r\n    onSubmit(): void {\r\n        let vm = this;\r\n        vm.showProgress = true;\r\n\r\n        if (!this.model.hasOwnProperty('id') || this.model.id.toString().toLowerCase() == 'new') {\r\n       //     // Add new\r\n       ////     this.organizationService.saveOrganization(this.model)\r\n       //         //.subscribe(\r\n       //         //organization => this.model = organization,\r\n       //         //error => this.errorMessage = <any>error);\r\n       //         .subscribe(\r\n       //         function (response:any) {\r\n       //             vm.toastr.success('Saved Successfully', '');\r\n       //             vm.model = response;\r\n\r\n       //             // store selected organization ID\r\n       //             vm.storage.store(\"OrganizationID\", vm.model.id);\r\n       //             if (response.imageData != null) {\r\n       //                 vm.model.imageData = response.imageData;\r\n       //                 vm.model.imageId = response.imageId;\r\n       //             }\r\n       //         },\r\n       //         function (error:any) { \r\n       //             //console.log(\"Error happened\" + error)\r\n       //             vm.toastr.error('حدث خطأ أثناء الحفظ - ' + error, '');\r\n       //             vm.showProgress = false;\r\n       //         },\r\n       //         function () {\r\n       //             vm.showProgress = false;\r\n       //         }\r\n       //         );\r\n       // }\r\n       // else {\r\n       //     // update \r\n       //     this.organizationService.updateOrganization(this.model)\r\n       //         .subscribe(\r\n       //         function (response:any) {\r\n       //             vm.toastr.success('Saved Successfully', '');\r\n       //             vm.model = response;\r\n\r\n       //             if (response.imageData != null) {\r\n       //                 vm.model.imageData = response.imageData;\r\n       //                 vm.model.imageId = response.imageId;\r\n       //             }\r\n       //         },\r\n       //         function (error:any) { \r\n       //             //console.log(\"Error happened\" + error)\r\n       //             vm.toastr.error('حدث خطأ أثناء الحفظ - ' + error, '');\r\n       //             vm.showProgress = false;\r\n       //         },\r\n       //         function () {\r\n       //             vm.showProgress = false;\r\n       //         });\r\n       }\r\n    }\r\n\r\n    clear(): void {\r\n        this.model = {};\r\n        this.active = false;\r\n        // store selected Organization ID\r\n        this.storage.store(\"OrganizationID\", 'new');\r\n        setTimeout(() => this.active = true, 0);\r\n    }\r\n\r\n    //deleteOrganization(id): void {\r\n    //    let vm = this;\r\n    //    if (id == undefined || isNaN(id)) {\r\n    //        vm.toastr.warning('لايوجد جمعية مختارة لمسحها', '');\r\n    //        return;\r\n    //    }\r\n\r\n    //    vm.showProgress = true;\r\n    //    this.organizationService.deleteOrganization(id)\r\n    //        .subscribe(\r\n    //        function (response:any) {\r\n    //            vm.toastr.success('Deleted successfully', '');\r\n    //            vm.clear();\r\n\r\n    //            // store selected organization ID\r\n    //            vm.storage.store(\"OrganizationID\", 'new');\r\n    //        },\r\n    //        function (error:any) { \r\n    //            //console.log(\"Error happened\" + error)\r\n    //            vm.toastr.error('Failed to Delete - ' + error, '');\r\n    //        },\r\n    //        function () {\r\n    //            vm.showProgress = false;\r\n    //        });\r\n    //}\r\n\r\n    imageChanged(response:any)\r\n    {\r\n        let attchmentInfo: any = {};\r\n\r\n        if (response != null) {\r\n\r\n            if (response.originalName == undefined)\r\n            {\r\n                this.model.attachmentInfo = null;\r\n                return;\r\n            }\r\n\r\n            this.model.attachmentInfo = attchmentInfo;\r\n            this.model.attachmentInfo.originalName = response.originalName;\r\n            this.model.attachmentInfo.keyName = response.keyName;\r\n            this.model.attachmentInfo.fullPath = response.fullPath;\r\n            this.model.attachmentInfo.fileType = response.fileType;\r\n        }\r\n        else {\r\n            this.model.attachmentInfo = null;\r\n        }\r\n\r\n    }\r\n\r\n}","\r\n<form novalidate *ngIf=\"active\" class=\"form-horizontal\" name=\"organizationForm\" (ngSubmit)=\"onSubmit()\" #organizationForm=\"ngForm\">\r\n    <!--<div class=\"form-group\">\r\n        <label for=\"txtName\" class=\"control-label col-md-2\"> Alert Message </label>\r\n        <div class=\"col-md-6\">\r\n            <textarea class=\"form-control\" id=\"txtRemarks\" name=\"txtRemarks\"></textarea>\r\n        </div>\r\n    </div>-->\r\n    <div class=\"form-group\">\r\n        <label for=\"txtName\" class=\"control-label col-md-2\">{{ 'Description' | translate}} </label>\r\n        <div class=\"col-md-6\">\r\n            <textarea class=\"form-control\" id=\"txtRemarks\" name=\"txtRemarks\"></textarea>\r\n        </div>\r\n    </div>\r\n    <!--<h4>\r\n        Insurance Details\r\n    </h4>\r\n    <hr />\r\n    <div class=\"form-group\">\r\n        <label for=\"txtName\" class=\"control-label col-md-2\">Company Name</label>\r\n        <div class=\"col-md-2\">\r\n            <input id=\"txtName\" name=\"txtName\" class=\"form-control\" disabled />\r\n        </div>\r\n        <label for=\"txtName\" class=\"control-label col-md-2\">Policy Name </label>\r\n        <div class=\"col-md-2\">\r\n            <input id=\"txtName\" name=\"txtName\" class=\"form-control\" disabled />\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"txtName\" class=\"control-label col-md-2\"> Start Date </label>\r\n        <div class=\"col-md-2\">\r\n            <input type=\"date\" id=\"txtName\" name=\"txtName\" class=\"form-control\" disabled />\r\n        </div>\r\n        <label for=\"txtName\" class=\"control-label col-md-2\"> End Date</label>\r\n        <div class=\"col-md-2\">\r\n            <input type=\"date\" id=\"txtName\" name=\"txtName\" class=\"form-control\" disabled />\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"txtName\" class=\"control-label col-md-2\">Remarks </label>\r\n        <div class=\"col-md-6\">\r\n            <textarea class=\"form-control\" id=\"txtRemarks\" name=\"txtRemarks\" disabled></textarea>\r\n        </div>\r\n    </div>-->\r\n</form>\r\n","import { Component, Input, OnInit, OnChanges, SimpleChanges, EventEmitter, Output, ViewChild, ElementRef } from '@angular/core';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AdministrationService } from '../../administration/shared/administration.service';\r\nenum EMRWizard {\r\n    ChiefComplaint = 1,\r\n    Diagnosis,\r\n    Medication,\r\n    Services,\r\n    LabTests,\r\n    RadiologyTests,\r\n    Templates,\r\n    Remarks\r\n}\r\n@Component({\r\n\r\n    selector: 'patient-clinical-note',\r\n    templateUrl: 'patient-clinical-note.component.html',\r\n\r\n})\r\n\r\nexport class PatientClinicalNoteComponent implements OnChanges, OnInit {\r\n\r\n\r\n    @ViewChild('patientVitalSignsComp') patientVitalSignsComp: any;\r\n    @Input() activeTabIndex: number = 0;\r\n    @Input() patientId = '1';\r\n    @Input() noteId!: any;\r\n    @Input() departmentId!: string;\r\n    @Input() selectedAppointmentId!: number;\r\n    @Input() hasEditednote: boolean = false;\r\n    appointmentId: number = 0;\r\n    hasID: boolean = false;\r\n    isDoctor: boolean = false;\r\n    //@Output() onCheifComplaintSavedGetNoteId = new EventEmitter<any>();\r\n\r\n    selectedClinicId!: number;\r\n    selectEMRWizardTab: boolean = true;\r\n    selectAccountTab: boolean = true;\r\n    clinicModel: any = { id: 0, isActive: true };\r\n    clinicId: string = '';\r\n    emrValue: string = '';\r\n    concatEmrValue: string = '';\r\n    selectClinicsTab: boolean = true;\r\n    active: boolean = true;\r\n    wizardItems: any;\r\n\r\n    @Input() allowEditing: boolean = true;\r\n    @Output() onNewNoteSaved = new EventEmitter<any>();\r\n\r\n    isBasicInfoSelected: boolean = false;\r\n    isSurgeriesSelected: boolean = false;\r\n    isAllergiesSelected: boolean = false;\r\n    isAttachmentsSelected: boolean = false;\r\n    firstTab!: string;\r\n    secondTab!: string;\r\n    thirdTab!: string;\r\n    fourthTab!: string;\r\n    fifthTab!: string;\r\n    sixthTab!: string;\r\n    seventhTab!: string;\r\n    eightTab!: string;\r\n\r\n    firstTabValue!: number;\r\n    secondTabValue!: number;\r\n    thirdTabvalue!: number;\r\n    fourthTabValue!: number;\r\n    fifthTabValue!: number;\r\n    sixthTabValue!: number;\r\n    seventhTabvalue!: number;\r\n\r\n    isDiagnosisSelected: boolean = false;\r\n    isMedicationSelected: boolean = false;\r\n    isServicesSelected: boolean = false;\r\n    isLaboratorySelected: boolean = false;\r\n    isRadiologySelected: boolean = false;\r\n    isTemplatesSelected: boolean = false;\r\n    isRemarksSelected: boolean = false;\r\n\r\n    isVitalSignsSelected: boolean = true;\r\n    isFirstSelected: boolean = false;\r\n    isSecondSelected: boolean = false;\r\n    isThirdSelected: boolean = false;\r\n    isFourthSelected: boolean = false;\r\n    isFifthSelected: boolean = false;\r\n    isSixthSelected: boolean = false;\r\n    isSeventhSelected: boolean = false;\r\n    usedForClinicNote: boolean = true;\r\n    showProgress = false;\r\n\r\n    headerText: string = \"ChiefComplaintVitalSigns\";\r\n\r\n    firstTabIcon: string = '';\r\n    secondTabIcon: string = '';\r\n    thirdTabIcon: string = '';\r\n    fourthTabIcon: string = '';\r\n    fifthTabIcon: string = '';\r\n    sixthTabIcon: string = '';\r\n    seventhTabIcon: string = '';\r\n\r\n\r\n\r\n    constructor(private administrationService: AdministrationService,\r\n        private localStorage: LocalStorageService,\r\n        public toastr: ToastrService,\r\n        private _route: ActivatedRoute, public translate: TranslateService) { }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        this.isDoctor = this.localStorage.retrieve(\"IsDoctor\");\r\n\r\n        if (this.noteId == null || this.noteId == undefined || this.noteId == 'new' || this.noteId == '')\r\n            this.hasID = false;\r\n        else\r\n            this.hasID = true;\r\n\r\n        if (this.hasEditednote && this.hasEditednote == true)\r\n            this.hasID = true;\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.selectedClinicId = this.localStorage.retrieve(\"ClinicID\");\r\n        this.initializeModel();\r\n\r\n    }\r\n    initializeModel(): void {\r\n        //Initialize the mode\r\n        //In case of Edit mode, load it from the DB\r\n        let thisComp = this;\r\n        if (this.selectedClinicId && this.selectedClinicId > 0) {\r\n            this.showProgress = true;\r\n            this.administrationService.getClinicById(thisComp.selectedClinicId)\r\n                .subscribe(\r\n                    function (response: any) {\r\n\r\n                        thisComp.clinicModel = response;\r\n                        thisComp.wizardItems = thisComp.clinicModel.emrWizardList;\r\n                        thisComp.firstTab = thisComp.wizardItems[0];\r\n                        thisComp.secondTab = thisComp.wizardItems[1];\r\n                        thisComp.thirdTab = thisComp.wizardItems[2];\r\n                        thisComp.fourthTab = thisComp.wizardItems[3];\r\n                        thisComp.fifthTab = thisComp.wizardItems[4];\r\n                        thisComp.sixthTab = thisComp.wizardItems[5];\r\n                        thisComp.seventhTab = thisComp.wizardItems[6];\r\n                        thisComp.setTab();\r\n                        thisComp.initializeTabIcons();\r\n                        thisComp.showProgress = false;\r\n                    },\r\n                    function (error: any) {\r\n                        thisComp.toastr.error(error, '');\r\n                        thisComp.showProgress = false;\r\n                    },\r\n                    function () {\r\n                        thisComp.showProgress = false;\r\n                    });\r\n        }\r\n    }\r\n    //var tempValue: EMRWizard = <EMRWizard>EMRWizard[this.emrValue];// used to vonvert string into enum integer value\r\n\r\n    initializeTabIcons() {\r\n        this.firstTabIcon = this.getTabIcon(this.firstTab);//(this.wizardItems[0]);\r\n        this.secondTabIcon = this.getTabIcon(this.secondTab);//(this.wizardItems[1]);\r\n        this.thirdTabIcon = this.getTabIcon(this.thirdTab);//(this.wizardItems[2]);\r\n        this.fourthTabIcon = this.getTabIcon(this.fourthTab);//(this.wizardItems[3]);\r\n        this.fifthTabIcon = this.getTabIcon(this.fifthTab);//(this.wizardItems[4]);\r\n        this.sixthTabIcon = this.getTabIcon(this.sixthTab);//(this.wizardItems[5]);\r\n        this.seventhTabIcon = this.getTabIcon(this.seventhTab);//(this.wizardItems[6]);\r\n\r\n\r\n        //for (let entry of this.wizardItems) {\r\n\r\n        //    this\r\n        //}\r\n\r\n        //for (var i in this.wizardItems)\r\n        //{\r\n\r\n        //}\r\n    }\r\n\r\n    getTabIcon(nodeName: string) {\r\n        if (nodeName == 'Diagnosis')\r\n            return 'fa fa-stethoscope';\r\n        else if (nodeName == 'Medication')\r\n            return 'fa fa-glass';\r\n        else if (nodeName == 'Services')\r\n            return 'fa fa-heartbeat';\r\n        else if (nodeName == 'LabTests')\r\n            return 'fa fa-flask';\r\n        else if (nodeName == 'RadiologyTests')\r\n            return 'fa fa-bed';\r\n        else if (nodeName == 'Templates')\r\n            return 'fa fa-file-word-o';\r\n        else if (nodeName == 'Remarks')\r\n            return 'fa fa-edit';\r\n\r\n        return '';\r\n    }\r\n\r\n    setTab() {\r\n        this.firstTabValue = this.wizardItems.indexOf(this.firstTab) + 1;\r\n        this.secondTabValue = this.wizardItems.indexOf(this.secondTab) + 1;\r\n        this.thirdTabvalue = this.wizardItems.indexOf(this.thirdTab) + 1;\r\n        this.fourthTabValue = this.wizardItems.indexOf(this.fourthTab) + 1;\r\n        this.fifthTabValue = this.wizardItems.indexOf(this.fifthTab) + 1;\r\n        this.sixthTabValue = this.wizardItems.indexOf(this.sixthTab) + 1;\r\n        this.seventhTabvalue = this.wizardItems.indexOf(this.seventhTab) + 1;\r\n    }\r\n\r\n    setSelectedTab(tabNameId: any) {\r\n        //tabNameId = +tabNameId;\r\n\r\n        this.isVitalSignsSelected = false;\r\n\r\n        this.isDiagnosisSelected = this.wizardItems[tabNameId - 1] == \"Diagnosis\";\r\n        this.isMedicationSelected = this.wizardItems[tabNameId - 1] == \"Medication\";\r\n        this.isServicesSelected = this.wizardItems[tabNameId - 1] == \"Services\";\r\n        this.isLaboratorySelected = this.wizardItems[tabNameId - 1] == \"LabTests\";\r\n        this.isRadiologySelected = this.wizardItems[tabNameId - 1] == \"RadiologyTests\";\r\n        this.isTemplatesSelected = this.wizardItems[tabNameId - 1] == \"Templates\";\r\n        this.isRemarksSelected = this.wizardItems[tabNameId - 1] == \"Remarks\";\r\n\r\n        this.isFirstSelected = tabNameId == 1;\r\n        this.isSecondSelected = tabNameId == 2;\r\n        this.isThirdSelected = tabNameId == 3;\r\n        this.isFourthSelected = tabNameId == 4;\r\n        this.isFifthSelected = tabNameId == 5;\r\n        this.isSixthSelected = tabNameId == 6;\r\n        this.isSeventhSelected = tabNameId == 7;\r\n\r\n        if (tabNameId == 0) {\r\n            this.isVitalSignsSelected = true;\r\n            if (this.isDoctor)\r\n                this.headerText = this.translate.instant(\"ChiefComplaintVitalSigns\");\r\n            else\r\n                this.headerText = this.translate.instant(\"VitalSigns\");\r\n        }\r\n        else if (this.isDiagnosisSelected) {\r\n            this.headerText = \"Diagnosis\";\r\n            this.firstTabIcon = 'fa fa-stethoscope';\r\n        }\r\n        else if (this.isMedicationSelected) {\r\n            this.headerText = \"Medication\";\r\n        }\r\n        else if (this.isServicesSelected) {\r\n            this.headerText = \"Services\";\r\n        }\r\n        else if (this.isLaboratorySelected) {\r\n            this.headerText = \"LabTests\";\r\n        }\r\n        else if (this.isRadiologySelected) {\r\n            this.headerText = \"RadiologyTests\";\r\n        }\r\n        else if (this.isTemplatesSelected) {\r\n            this.headerText = \"Templates\";\r\n        }\r\n        else if (this.isRemarksSelected) {\r\n            this.headerText = \"Remarks\";\r\n        }\r\n\r\n    }\r\n\r\n    nextTab() {\r\n        if (this.isVitalSignsSelected) {\r\n            this.setSelectedTab(1)\r\n        }\r\n        else if (this.isDiagnosisSelected) {\r\n            let selectedTabIndex: number = this.wizardItems.indexOf(\"Diagnosis\");\r\n            if (selectedTabIndex + 2 < 8)\r\n                this.setSelectedTab(selectedTabIndex + 2);\r\n        }\r\n        else if (this.isMedicationSelected) {\r\n            let selectedTabIndex: number = this.wizardItems.indexOf(\"Medication\");\r\n            if (selectedTabIndex + 2 < 8)\r\n                this.setSelectedTab(selectedTabIndex + 2);\r\n        }\r\n        else if (this.isServicesSelected) {\r\n            let selectedTabIndex: number = this.wizardItems.indexOf(\"Services\");\r\n            if (selectedTabIndex + 2 < 8)\r\n                this.setSelectedTab(selectedTabIndex + 2);\r\n        }\r\n        else if (this.isLaboratorySelected) {\r\n            let selectedTabIndex: number = this.wizardItems.indexOf(\"LabTests\");\r\n            if (selectedTabIndex + 2 < 8)\r\n                this.setSelectedTab(selectedTabIndex + 2);\r\n        }\r\n        else if (this.isRadiologySelected) {\r\n            let selectedTabIndex: number = this.wizardItems.indexOf(\"RadiologyTests\");\r\n            if (selectedTabIndex + 2 < 8)\r\n                this.setSelectedTab(selectedTabIndex + 2);\r\n        }\r\n        else if (this.isTemplatesSelected) {\r\n            let selectedTabIndex: number = this.wizardItems.indexOf(\"Templates\");\r\n            if (selectedTabIndex + 2 < 8)\r\n                this.setSelectedTab(selectedTabIndex + 2);\r\n        }\r\n        else if (this.isRemarksSelected) {\r\n            let selectedTabIndex: number = this.wizardItems.indexOf(\"Remarks\");\r\n            if (selectedTabIndex + 2 < 8)\r\n                this.setSelectedTab(selectedTabIndex + 2);\r\n        }\r\n    }\r\n\r\n    /* No longer needed\r\n    previousTab() {\r\n\r\n        if (this.isFirstSelected) {\r\n\r\n            this.isVitalSignsSelected = true;\r\n            if (this.isDoctor)\r\n                this.headerText = this.translate.instant(\"ChiefComplaintVitalSigns\");\r\n            else\r\n                this.headerText = this.translate.instant(\"VitalSigns\");\r\n            this.setSelectedTab(0);\r\n\r\n        }\r\n        else if (this.isRemarksSelected) {\r\n            let selectedTabIndex: number = this.wizardItems.indexOf(\"Remarks\");\r\n            this.setSelectedTab(selectedTabIndex);\r\n        }\r\n        else if (this.isTemplatesSelected) {\r\n            let selectedTabIndex: number = this.wizardItems.indexOf(\"Templates\");\r\n            this.setSelectedTab(selectedTabIndex);\r\n        }\r\n        else if (this.isRadiologySelected) {\r\n            let selectedTabIndex: number = this.wizardItems.indexOf(\"RadiologyTests\");\r\n            this.setSelectedTab(selectedTabIndex);\r\n        }\r\n        else if (this.isLaboratorySelected) {\r\n            let selectedTabIndex: number = this.wizardItems.indexOf(\"LabTests\");\r\n            this.setSelectedTab(selectedTabIndex);\r\n        }\r\n        else if (this.isServicesSelected) {\r\n            let selectedTabIndex: number = this.wizardItems.indexOf(\"Services\");\r\n            this.setSelectedTab(selectedTabIndex);\r\n        }\r\n        else if (this.isMedicationSelected) {\r\n            let selectedTabIndex: number = this.wizardItems.indexOf(\"Medication\");\r\n            this.setSelectedTab(selectedTabIndex);\r\n        }\r\n        else if (this.isDiagnosisSelected) {\r\n            let selectedTabIndex: number = this.wizardItems.indexOf(\"Diagnosis\");\r\n            this.setSelectedTab(selectedTabIndex);\r\n        }\r\n    }\r\n    */\r\n\r\n    handleCheifComplaintSaved(eventArgs: any) {\r\n        if (eventArgs != undefined) {\r\n\r\n            this.setClinicNoteId(eventArgs.clinicNoteId)\r\n            if (eventArgs.moveNext)\r\n                this.nextTab();\r\n        }\r\n    }\r\n\r\n    setClinicNoteId(noteID: any) {\r\n        let vm = this;\r\n        vm.noteId = noteID;\r\n        if (this.noteId == null || this.noteId == undefined || this.noteId == 'new' || this.noteId == '')\r\n            this.hasID = false;\r\n        else\r\n            this.hasID = true;\r\n\r\n        vm.onNewNoteSaved.emit(true);\r\n    }\r\n\r\n\r\n}","<div class=\"row\">\r\n    <div class=\"col-md-2 nopadding\">\r\n        <ul class=\"nav nav-pills nav-stacked alert alert-info padding5\">\r\n            <li class=\"{{ isVitalSignsSelected ? 'selectednavbaritem active' : '' }} pointer\">\r\n                <a (click)=\"setSelectedTab(start.id)\" #start id=\"0\" >\r\n                    <span class=\"nav-icon\"><i class=\"fa fa-user-md\"></i></span>\r\n                    <span class=\"nav-label\">\r\n                        <span *ngIf=\"isDoctor\">\r\n                            {{ 'ChiefComplaint' | translate}}\r\n                            & {{ 'VitalSigns' | translate}}\r\n                        </span>\r\n                        <span *ngIf=\"!isDoctor\">\r\n                            {{ 'VitalSigns' | translate}}\r\n                        </span>\r\n                    </span>\r\n\r\n                </a>\r\n            </li>\r\n            <li *ngIf=\"isDoctor\" class=\"{{ isFirstSelected ? 'selectednavbaritem active' : '' }} pointer\">\r\n                <a [ngClass]=\"{notactive : !hasID}\" #first [id]=\"firstTabValue\" tabindex=1 (click)=\"setSelectedTab(first.id)\" >\r\n                    <span class=\"nav-icon\"><i [class]=\"firstTabIcon\"></i></span><span class=\"nav-label\">&nbsp;{{firstTab| translate}}</span>\r\n                </a>\r\n            </li>\r\n            <li class=\"{{ isSecondSelected ? 'selectednavbaritem active' : '' }} pointer\">\r\n                <a [ngClass]=\"{notactive : !hasID}\" #second [id]=\"secondTabValue\" tabindex=2 (click)=\"setSelectedTab(second.id)\" >\r\n                    <span class=\"nav-icon\"><i [class]=\"secondTabIcon\"></i></span><span class=\"nav-label\">&nbsp;{{secondTab| translate}}</span>\r\n                </a>\r\n            </li>\r\n            <li class=\"{{ isThirdSelected ? 'selectednavbaritem active' : '' }} pointer\">\r\n                <a [ngClass]=\"{notactive : !hasID}\" #third [id]=\"thirdTabvalue\" tabindex=3 (click)=\"setSelectedTab(third.id)\" >\r\n                    <span class=\"nav-icon\"><i [class]=\"thirdTabIcon\"></i></span><span class=\"nav-label\">&nbsp;{{thirdTab| translate}}</span>\r\n                </a>\r\n            </li>\r\n            <li *ngIf=\"isDoctor\" class=\"{{ isFourthSelected ? 'selectednavbaritem active' : '' }} pointer\">\r\n                <a [ngClass]=\"{notactive : !hasID}\" [id]=\"fourthTabValue\" #fourth tabindex=4 (click)=\"setSelectedTab(fourth.id)\" >\r\n                    <span class=\"nav-icon\"><i [class]=\"fourthTabIcon\"></i></span><span class=\"nav-label\">&nbsp;{{fourthTab| translate}}</span>\r\n                </a>\r\n            </li>\r\n            <li *ngIf=\"isDoctor\" class=\"{{ isFifthSelected ? 'selectednavbaritem active' : '' }} pointer\">\r\n                <a [ngClass]=\"{notactive : !hasID}\" #fifth [id]=\"fifthTabValue\" (click)=\"setSelectedTab(fifth.id)\" tabindex=5 >\r\n                    <span class=\"nav-icon\"><i [class]=\"fifthTabIcon\"></i></span><span class=\"nav-label\">&nbsp;{{fifthTab| translate}}</span>\r\n                </a>\r\n            </li>\r\n            <li *ngIf=\"isDoctor\" class=\"{{ isSixthSelected ? 'selectednavbaritem active' : '' }} pointer\">\r\n                <a [ngClass]=\"{notactive : !hasID}\" #sixth [id]=\"sixthTabValue\" tabindex=6 (click)=\"setSelectedTab(sixth.id)\" >\r\n                    <span class=\"nav-icon\"><i [class]=\"sixthTabIcon\"></i></span><span class=\"nav-label\">&nbsp;{{sixthTab| translate}}</span>\r\n                </a>\r\n            </li>\r\n            <li *ngIf=\"isDoctor\" class=\"{{ isSeventhSelected ? 'selectednavbaritem active' : '' }} pointer\">\r\n                <a [ngClass]=\"{notactive : !hasID}\" #seventh [id]=\"seventhTabvalue\" tabindex=7 (click)=\"setSelectedTab(seventh.id)\" >\r\n                    <span class=\"nav-icon\"><i [class]=\"seventhTabIcon\"></i></span><span class=\"nav-label\">&nbsp;{{seventhTab| translate}}</span>\r\n                </a>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n    <div class=\"col-md-10 nopadding\">\r\n        <div class=\"row\">\r\n            <div class=\"breadcrumbs col-md-12\" id=\"breadcrumbs\">\r\n                <span class=\"heaersitemap\">\r\n                    {{ 'Note' | translate}} > {{headerText| translate}}\r\n                </span>\r\n                <!--<script type=\"text/javascript\">\r\n                    try { ace.settings.check('breadcrumbs', 'fixed') } catch (e) { }\r\n                </script>-->\r\n            </div>\r\n            <!--<div class=\"col-md-8 breadcrumbs\">\r\n                <div *ngIf=\"isDoctor\">\r\n                    <button class=\"btn btn-primary\" type=\"button\" (click)=\"nextTab()\" *ngIf=\"allowEditing\" [ngClass]=\"{notactive : !hasID}\"><< {{ 'Next' | translate}}</button>\r\n                    <button class=\"btn btn-primary\" type=\"button\" (click)=\"previousTab()\" *ngIf=\"allowEditing\" [ngClass]=\"{notactive : !hasID}\">{{ 'Previous' | translate}} >></button>\r\n                </div>\r\n            </div>-->\r\n        </div>\r\n        <br />\r\n        <div id=\"basicInfo\" *ngIf=\"isBasicInfoSelected\">\r\n            <patient-basic></patient-basic>\r\n        </div>\r\n        <div id=\"vitalSigns\" *ngIf=\"isVitalSignsSelected\">\r\n            <patient-vital-signs #patientVitalSignsComp [noteId]=\"noteId\" [passedAppointmentId]=\"selectedAppointmentId\" (onCheifComplaintSaved)=\"handleCheifComplaintSaved($event)\"></patient-vital-signs>\r\n        </div>\r\n        <div id=\"diagnosis\" *ngIf=\"isDiagnosisSelected\">\r\n            <!--<patient-diagnosis [allowEditing]=\"allowEditing\" [usedInClinicNoteDiagnosis]=\"usedForClinicNote\" [clinicNoteId]=\"noteId\"></patient-diagnosis>-->\r\n            <patient-note-diagnosis [noteId]=\"noteId\" (onDiagnosisSaved)=\"nextTab()\"></patient-note-diagnosis>\r\n        </div>\r\n        <div id=\"medication\" *ngIf=\"isMedicationSelected\">\r\n            <patient-note-medications [noteId]=\"noteId\" (onMedicationSaved)=\"nextTab()\"></patient-note-medications>\r\n        </div>\r\n        <div id=\"services\" *ngIf=\"isServicesSelected\">\r\n            <!--<patient-services [divisionId]=\"divisionId\" [noteId]=\"noteId\" [allowEditing]=\"allowEditing\"></patient-services>-->\r\n            <patient-note-services [noteId]=\"noteId\" (onServicesSaved)=\"nextTab()\"></patient-note-services>\r\n        </div>\r\n        <div id=\"laboratory\" *ngIf=\"isLaboratorySelected\">\r\n            <!--<patient-laboratory [allowEditing]=\"allowEditing\" [noteId]=\"noteId\"></patient-laboratory>-->\r\n            <patient-note-laboratory [noteId]=\"noteId\" (onLaboratoriesSaved)=\"nextTab()\"></patient-note-laboratory>\r\n        </div>\r\n        <div id=\"radiology\" *ngIf=\"isRadiologySelected\">\r\n            <!--<patient-radiology [allowEditing]=\"allowEditing\" [noteId]=\"noteId\"></patient-radiology>-->\r\n            <patient-note-radiology [noteId]=\"noteId\" (onRadiologiesSaved)=\"nextTab()\"></patient-note-radiology>\r\n\r\n        </div>\r\n        <div id=\"attchments\" *ngIf=\"isAttachmentsSelected\">\r\n            <patient-attachments [allowEditing]=\"allowEditing\"></patient-attachments>\r\n        </div>\r\n        <div id=\"templates\" *ngIf=\"isTemplatesSelected\">\r\n            <patient-templates [allowEditing]=\"allowEditing\" [noteId]=\"noteId\"></patient-templates>\r\n        </div>\r\n        <div id=\"remarks\" *ngIf=\"isRemarksSelected\">\r\n            <patient-remarks [noteId]=\"noteId\"  (onRemarksSaved)=\"nextTab()\"></patient-remarks>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild, EventEmitter, Input, Output } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { TreeNode } from 'primeng/api';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { DoctorService } from '../../doctors/shared/doctor.service';\r\nimport { ClinicService } from '../../clinics/shared/clinic.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\n\r\n@Component({\r\n\r\n    selector: 'patient-diagnose-details',\r\n    templateUrl: 'patient-diagnose-details.component.html',\r\n})\r\n\r\nexport class PatientDiagnoseDetailsComponent implements OnInit {\r\n    selectBasicTab: boolean = true;\r\n\r\n    filterString!: string;\r\n    leafType: string = 'Diagnose';\r\n    divisionId!: any;\r\n\r\n    @Input() patientId!: number;\r\n    @Input() clinicNoteId!: number;\r\n    @Input() toSaveClinicNoteDiagnose: any;\r\n    active = true;\r\n    selectedDiagnoseNode: any;\r\n    clinicId!: any;\r\n    diagnosisTreeDataSourceItems!: any[];\r\n    getAllDiagnosis = true;\r\n    showProgress = false;\r\n    allDiagnosis = [];\r\n    @Output() onBack = new EventEmitter<any>();\r\n    ttt = \"ss\";\r\n    constructor(private doctorService: DoctorService\r\n        , private clinicService: ClinicService\r\n        , public toastr: ToastrService\r\n        , private _route: ActivatedRoute\r\n        , public localStorage: LocalStorageService\r\n        , public translate: TranslateService\r\n\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        this.divisionId = this._route.snapshot.params['divisionId'];\r\n        // this.toSaveClinicNoteDiagnose = {};\r\n        this.clinicId = this.localStorage.retrieve(\"ClinicID\");\r\n        // this.selectedDiagnoseNode = undefined;\r\n        this.getAllDiagnoseGroupsForTreeView(false);\r\n        this.getClinicDepartmentDiagnoseGroupsForTreeView();\r\n\r\n    }\r\n\r\n    getClinicDepartmentDiagnoseGroupsForTreeView() {\r\n        let vm = this;\r\n        vm.getAllDiagnosis = true;\r\n        //get department diagnose groups\r\n        this.doctorService.getClinicDivisionDiagnoseGroupsForTreeView(vm.divisionId)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    vm.diagnosisTreeDataSourceItems = response;\r\n                    if (vm.toSaveClinicNoteDiagnose) {\r\n                        vm.getModelToDisplay(vm.toSaveClinicNoteDiagnose);\r\n                        // vm.displaySelectedNode(vm.toSaveClinicNoteDiagnose.diagnoseId, \"Diagnose\");\r\n                        vm.expandAll();\r\n                    }\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n    }\r\n    getAllDiagnoseGroupsForTreeView(needAll: boolean) {\r\n        let vm = this;\r\n\r\n        /////////////////////////get all diagnose groups\r\n        this.clinicService.getDiagnosisGroupsForTree(vm.clinicId)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    vm.allDiagnosis = response;\r\n                    if (needAll) {\r\n                        vm.diagnosisTreeDataSourceItems = response;\r\n                        vm.getAllDiagnosis = false;\r\n                        vm.expandAll();\r\n                    }\r\n\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n    }\r\n    getModelToDisplay(returnedModel: any) {\r\n\r\n        this.displaySelectedNode(returnedModel.diagnoseId, \"Diagnose\", this.diagnosisTreeDataSourceItems);\r\n        if (this.selectedDiagnoseNode == undefined) {\r\n            this.displaySelectedNode(returnedModel.diagnoseId, \"Diagnose\", this.allDiagnosis)\r\n            if (this.selectedDiagnoseNode != undefined)\r\n                this.addDiagnoseToDepartmentTree(this.selectedDiagnoseNode);\r\n        }\r\n\r\n    }\r\n    addDiagnoseToDepartmentTree(node: TreeNode) {\r\n        // var parentNode = this.services[0];\r\n        this.diagnosisTreeDataSourceItems[0].children.push(node);\r\n        this.selectedDiagnoseNode = node;\r\n        this.ttt = \"bbbb\";\r\n    }\r\n\r\n    displaySelectedNode(nodeId: string, nodeType: string, dataSource: any[]) {\r\n        let vm = this\r\n        vm.diagnosisTreeDataSourceItems.forEach(node => {\r\n            if (node.data == nodeId && node.type == nodeType)\r\n                vm.selectedDiagnoseNode = node;\r\n\r\n            vm.displaySelectedNodeRecursive(node, nodeId, nodeType);\r\n\r\n        });\r\n    }\r\n\r\n    private displaySelectedNodeRecursive(node: TreeNode, nodeId: string, nodeType: string) {\r\n        if (node.children) {\r\n            node.children.forEach(childNode => {\r\n                this.displaySelectedNodeRecursive(childNode, nodeId, nodeType);\r\n\r\n                if (childNode.data == nodeId && childNode.type == nodeType) {\r\n                    this.selectedDiagnoseNode = childNode;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    expandAll() {\r\n        this.diagnosisTreeDataSourceItems.forEach(node => {\r\n            this.expandRecursive(node, true);\r\n        });\r\n    }\r\n\r\n    collapseAll() {\r\n        this.diagnosisTreeDataSourceItems.forEach(node => {\r\n            this.expandRecursive(node, false);\r\n        });\r\n    }\r\n\r\n    private expandRecursive(node: TreeNode, isExpand: boolean) {\r\n        node.expanded = isExpand;\r\n        if (node.children) {\r\n            node.children.forEach(childNode => {\r\n                this.expandRecursive(childNode, isExpand);\r\n            });\r\n        }\r\n    }\r\n\r\n    onSubmit(): void {\r\n        let vm = this;\r\n        if (!this.toSaveClinicNoteDiagnose.diagnoseCode || this.toSaveClinicNoteDiagnose.diagnoseCode == '')\r\n            return;\r\n\r\n        vm.showProgress = true;\r\n        vm.toSaveClinicNoteDiagnose.patientId = vm.patientId;\r\n        vm.toSaveClinicNoteDiagnose.clinicNoteId = vm.clinicNoteId;\r\n        vm.toSaveClinicNoteDiagnose.isCurrent = true;\r\n        if (vm.selectedDiagnoseNode)\r\n            vm.toSaveClinicNoteDiagnose.diagnoseId = vm.selectedDiagnoseNode.data;\r\n        if (!this.toSaveClinicNoteDiagnose.hasOwnProperty('id') || this.toSaveClinicNoteDiagnose.id.toString().toLowerCase() == 'new') {\r\n            //Add new\r\n            this.doctorService.createClinicNoteDiagnose(this.toSaveClinicNoteDiagnose)\r\n                .subscribe(\r\n                    function (response: any) {\r\n                        let msg = vm.translate.instant(\"SavedSuccessfully\");\r\n                        vm.toastr.success(msg, '');\r\n                        vm.toSaveClinicNoteDiagnose = response;\r\n                        vm.clear();\r\n                        vm.onBack.emit(response);\r\n                    },\r\n                    function (error: any) {\r\n                        vm.toastr.error(error, '');\r\n                        vm.showProgress = false;\r\n                    },\r\n                    function () {\r\n                        vm.showProgress = false;\r\n                    });\r\n        }\r\n        else {\r\n            //update\r\n            this.doctorService.updateClinicNoteDiagnose(this.toSaveClinicNoteDiagnose)\r\n                .subscribe(\r\n                    function (response: any) {\r\n                        let msg = vm.translate.instant(\"SavedSuccessfully\");\r\n                        vm.toastr.success(msg, '');\r\n                        vm.toSaveClinicNoteDiagnose = response;\r\n                        vm.clear();\r\n                        vm.onBack.emit(response);\r\n                    },\r\n                    function (error: any) {\r\n\r\n                        vm.toastr.error(error, '');\r\n                        vm.showProgress = false;\r\n                    },\r\n                    function () {\r\n                        vm.showProgress = false;\r\n                    });\r\n        }\r\n    }\r\n\r\n    isClinicNoteDiagnoseConfirmed(): boolean {\r\n        return this.toSaveClinicNoteDiagnose && this.toSaveClinicNoteDiagnose.status && (this.toSaveClinicNoteDiagnose.status == '1' || this.toSaveClinicNoteDiagnose.status.toLowerCase() == 'confirmed');\r\n    }\r\n    isClinicNoteDiagnoseSuspected(): boolean {\r\n        return this.toSaveClinicNoteDiagnose && this.toSaveClinicNoteDiagnose.status && (this.toSaveClinicNoteDiagnose.status == '2' || this.toSaveClinicNoteDiagnose.status.toLowerCase() == 'suspicious');\r\n    }\r\n\r\n    clear(): void {\r\n        this.toSaveClinicNoteDiagnose = {};\r\n        this.active = false;\r\n        setTimeout(() => this.active = true, 0);\r\n    }\r\n\r\n\r\n    treeNodeSelected(event: any) {\r\n        if (event && event.node && event.node.code && event.node.code != '') {\r\n            this.toSaveClinicNoteDiagnose.diagnoseCode = event.node.code;\r\n        }\r\n        else {\r\n            this.toSaveClinicNoteDiagnose.diagnoseCode = '';\r\n        }\r\n    }\r\n\r\n    goBack() {\r\n        this.onBack.emit();\r\n    }\r\n\r\n}","<div *ngIf=\"showProgress\">\r\n    <loading></loading>\r\n</div>\r\n<form novalidate *ngIf=\"active\" class=\"form-horizontal\" name=\"organizationForm\" (ngSubmit)=\"onSubmit()\" #organizationForm=\"ngForm\">\r\n    <div class=\"form-group\">\r\n        <label for=\"txtName\" class=\"control-label col-md-2\">{{ 'DiagnoseName' | translate}}</label>\r\n        <div class=\"col-md-6\">\r\n <a class=\"pointer\" (click)=\"getAllDiagnoseGroupsForTreeView(true)\" *ngIf=\"getAllDiagnosis\">{{ 'GetAll' | translate}}</a>\r\n            <a class=\"pointer\" (click)=\"getClinicDepartmentDiagnoseGroupsForTreeView()\" *ngIf=\"!getAllDiagnosis\">{{ 'GetSpecific' | translate}}</a>\r\n            <div class=\"nopadding treeBorder\" >\r\n                <div class=\"row nopadding\">\r\n                    <input [placeholder]=\"'SearchNameOrCode' | translate\" class=\"form-control\" [(ngModel)]=\"filterString\" name=\"txtFilterString\" #txtFilterString=\"ngModel\" />\r\n                </div>\r\n                <p-tree [value]=\"diagnosisTreeDataSourceItems | filterbynameorcode:filterString : leafType | translateObjects  : 'label' : 'labelTranslation'\"\r\n                         [(selection)]=\"selectedDiagnoseNode\"  selectionMode=\"single\" (onNodeSelect)=\"treeNodeSelected($event)\">\r\n                    \r\n                    <ng-template let-node pTemplate=\"ClinicDepartmentDiagnosisGroup\">\r\n                        <span class=\"nav-icon\"><i class=\"fa fa-cubes\"></i></span>\r\n                        &nbsp;\r\n                        {{node.label}}\r\n                    </ng-template>\r\n                     <ng-template let-node pTemplate=\"DiagnosisGroup\">\r\n                         <span class=\"nav-icon\"><i class=\"fa fa-cubes\"></i></span>\r\n                         &nbsp; \r\n                         {{node.label}}\r\n                    </ng-template>\r\n                    <ng-template let-node pTemplate=\"Diagnose\">\r\n                        <span class=\"nav-icon\"><i class=\"fa fa-cube\"></i></span>\r\n                        &nbsp;\r\n                        {{node.label}}\r\n                    </ng-template>\r\n\r\n                </p-tree>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n        <label for=\"txtName\" class=\"control-label col-md-2\">{{ 'DiagnoseCode' | translate}}</label>\r\n        <div class=\"col-md-2\">\r\n            <input name=\"txtDiagnoseCode\" class=\"form-control\" disabled\r\n                   [(ngModel)]='toSaveClinicNoteDiagnose.diagnoseCode' #txtDiagnoseCode=\"ngModel\"  />\r\n        </div>\r\n        <div class=\"col-md-4\">\r\n            <div *ngIf=\"!toSaveClinicNoteDiagnose.diagnoseCode || toSaveClinicNoteDiagnose.diagnoseCode ==''\" class=\"alert alert-danger\">\r\n                {{ 'RequiredField' | translate}}\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"rbClinicNoteDiagnoseStatus\" class=\"control-label col-md-2\">{{ 'Status' | translate}}</label>\r\n        <div class=\"col-md-4\">\r\n            <table>\r\n                <tr>\r\n                    <td>\r\n                        <input type=\"radio\" name=\"clinicNoteDiagnoseStatus\"\r\n                               (change)=\"toSaveClinicNoteDiagnose.status ='1'\"\r\n                               [checked]=\"isClinicNoteDiagnoseConfirmed()\" required />{{ 'Confirmed' | translate}}\r\n                    </td>\r\n                    <td>\r\n                        <input type=\"radio\" name=\"clinicNoteDiagnoseStatus\"\r\n                               (change)=\"toSaveClinicNoteDiagnose.status ='2'\"\r\n                               [checked]=\"isClinicNoteDiagnoseSuspected()\"/>{{ 'Suspicious' | translate}}\r\n                    </td>\r\n                </tr>\r\n            </table>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"txtName\" class=\"control-label col-md-2\">{{ 'Description' | translate}} </label>\r\n        <div class=\"col-md-6\">\r\n            <textarea class=\"form-control\" name=\"txtRemarks\"\r\n                      [(ngModel)]='toSaveClinicNoteDiagnose.description' #txtRemarks=\"ngModel\"></textarea>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <div class=\"col-md-4 col-md-offset-2\">\r\n            <button class=\"btn btn-primary\">{{ 'Save' | translate}}</button>\r\n            <button type=\"button\" class=\"btn btn-primary\" (click)=\"goBack()\">{{ 'Back' | translate}}</button>\r\n        </div>\r\n    </div>\r\n</form>","import { Component, OnInit, OnChanges, ViewChild, Input } from '@angular/core';\r\nimport { Table } from 'primeng/table';\r\n\r\n@Component({\r\n\r\n    selector: 'patient-diagnosisGrid',\r\n    templateUrl: 'patient-diagnosisGrid.component.html',\r\n})\r\n\r\nexport class PatientDiagnosisGridComponent implements OnInit, OnChanges {\r\n\r\n    @Input() diagnosis!: any[];\r\n    @Input() noteDiagnosis!: any[];\r\n    @Input() masterList!: any[];\r\n    @Input() noteId!: number;\r\n    @Input() diagnosisStatuses!: any[];\r\n    allDiagnosis: any[] = [];\r\n    lstToTranslated: string[] = ['diagnoseName', 'diagnoseNameTranslation'];\r\n    @ViewChild('dt') table!: Table;\r\n\r\n    ngOnInit(): void {\r\n\r\n    }\r\n\r\n    ngOnChanges(): void {\r\n        if (this.diagnosis && this.noteDiagnosis && this.masterList) {\r\n            this.allDiagnosis = [];\r\n            // loop for all services \r\n            for (let diagnose of this.diagnosis) {\r\n                let bindedDiagnose: any = this.createClinicNoteDiagnose(diagnose);\r\n\r\n                this.allDiagnosis.push(bindedDiagnose);\r\n\r\n                if (bindedDiagnose.id == 0) // new object\r\n                {\r\n                    // check if Diagnose exsists in note Diagnosis\r\n                    let existedDiagnose = this.noteDiagnosis.find(s => s.diagnoseId == diagnose.data);\r\n\r\n                    if (existedDiagnose) {\r\n                        bindedDiagnose.id = existedDiagnose.id;\r\n                        bindedDiagnose.isSelected = true;\r\n                        bindedDiagnose.clinicNoteId = this.noteId;\r\n                        bindedDiagnose.diagnoseId = diagnose.data;\r\n                        bindedDiagnose.diagnoseCode = diagnose.code;\r\n                        bindedDiagnose.diagnoseName = diagnose.label;\r\n                        bindedDiagnose.status = existedDiagnose.status;\r\n                        bindedDiagnose.description = existedDiagnose.description;\r\n                        bindedDiagnose.diagnoseNameTranslation = existedDiagnose.diagnoseNameTranslation;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    createClinicNoteDiagnose(diagnose: any): any {\r\n        let bindedDiagnose: any;\r\n\r\n        bindedDiagnose = this.masterList.find(s => s.diagnoseId == diagnose.data);\r\n\r\n        if (bindedDiagnose == undefined) {\r\n            bindedDiagnose = { id: 0, isSelected: false, clinicNoteId: this.noteId, diagnoseId: diagnose.data, diagnoseCode: diagnose.code, diagnoseName: diagnose.label, status: 1, diagnoseNameTranslation: diagnose.labelTranslation };\r\n\r\n            this.masterList.push(bindedDiagnose);\r\n        }\r\n\r\n        return bindedDiagnose;\r\n    }\r\n\r\n    updateSelectedDiagnose(diagnoseId: any, event: any) {\r\n        if (!event.target.checked) {\r\n            // if the item removed clear data\r\n            let noteDiagnose = this.allDiagnosis.find(s => s.diagnoseId == diagnoseId);\r\n            noteDiagnose.status = '1';\r\n            noteDiagnose.isSelected = false;\r\n            //noteDiagnose.diagnoseId = 0;\r\n            noteDiagnose.description = '';\r\n\r\n            let masterNoteDiagnose = this.masterList.find(s => s.diagnoseId == diagnoseId);\r\n            masterNoteDiagnose.status = '1';\r\n            masterNoteDiagnose.isSelected = false;\r\n            //masterNoteDiagnose.diagnoseId = 0;\r\n            masterNoteDiagnose.description = '';\r\n        }\r\n        else {\r\n            let noteDiagnose = this.allDiagnosis.find(s => s.diagnoseId == diagnoseId);\r\n            let masterNoteDiagnose = this.masterList.find(s => s.diagnoseId == diagnoseId);\r\n            noteDiagnose.isSelected = true;\r\n            masterNoteDiagnose.isSelected = true;\r\n        }\r\n    }\r\n\r\n    isClinicNoteDiagnoseConfirmed(noteDiagnose: any): boolean {\r\n        return noteDiagnose && noteDiagnose.status && (noteDiagnose.status == '1' || noteDiagnose.status == 'Confirmed');\r\n    }\r\n    isClinicNoteDiagnoseSuspected(noteDiagnose: any): boolean {\r\n        return noteDiagnose && noteDiagnose.status && (noteDiagnose.status == '2' || noteDiagnose.status == 'Suspicious');\r\n    }\r\n\r\n}\r\n","<div class=\"inner-addon left-addon\">\r\n    <i class=\"glyphicon glyphicon-search\"></i>\r\n    <input pInputText type=\"text\" #gb (input)=\"dt.filterGlobal($event.target.value, 'contains')\"\r\n        [placeholder]=\"'Search' | translate\" />\r\n</div>\r\n\r\n\r\n<!---New Table-->\r\n<p-table #dt [value]=\"allDiagnosis\" dataKey=\"id\" [rowHover]=\"true\" [rows]=\"10\" [showCurrentPageReport]=\"true\"\r\n    [rowsPerPageOptions]=\"[10,20,30,40,50,100]\" [paginator]=\"true\"\r\n    currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" [filterDelay]=\"0\"\r\n    [globalFilterFields]=\"['diagnoseCode','diagnoseName']\">\r\n\r\n    <ng-template pTemplate=\"header\">\r\n        <tr>\r\n            <th></th>\r\n            <th pSortableColumn=\"diagnoseCode\">{{'DiagnoseCode' | translate}} <p-sortIcon field=\"diagnoseCode\">\r\n                </p-sortIcon>\r\n            </th>\r\n            <th pSortableColumn=\"diagnoseName\">{{'DiagnoseName' | translate}} <p-sortIcon field=\"diagnoseName\">\r\n                </p-sortIcon>\r\n            </th>\r\n            <th><span styleClass=\"text-center width70\">{{'Status' | translate}} </span>\r\n            </th>\r\n            <th><span styleClass=\"text-center width70\">{{'Remarks' | translate}} </span>\r\n            </th>\r\n            <th style=\"width: 8rem\">\r\n            </th>\r\n        </tr>\r\n\r\n    </ng-template>\r\n    <ng-template pTemplate=\"body\" let-item>\r\n        <tr class=\"p-selectable-row\">\r\n            <td>\r\n                <input type=\"checkbox\" [checked]=\"item.isSelected\"\r\n                    (change)=\"updateSelectedDiagnose(item.diagnoseId, $event)\" />\r\n            </td>\r\n            <td>\r\n                {{item.diagnoseCode}}\r\n            </td>\r\n            <td>\r\n                <span>{{item.diagnoseName}}</span>\r\n            </td>\r\n\r\n            <td>\r\n                <select class=\"form-control\" name=\"ddlDiagnosisStatuses\" [(ngModel)]='item.status'>\r\n                    <option *ngFor=\"let obj of diagnosisStatuses\" [value]=\"obj.value\">{{obj.text | translate}}</option>\r\n                </select>\r\n            </td>\r\n            <td>\r\n                <textarea class=\"form-control\" id=\"txtRemarks\" name=\"txtRemarks\"\r\n                    [(ngModel)]='item.description'></textarea>\r\n            </td>\r\n        </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"emptymessage\">\r\n        <tr>\r\n            <td colspan=\"8\">No data found.</td>\r\n        </tr>\r\n    </ng-template>\r\n</p-table>\r\n<!--End Table-->","import { Component, OnInit, ViewChild, Input, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { DoctorService } from '../../doctors/shared/doctor.service';\r\nimport { SharedService } from '../../shared/shared/shared.service';\r\nimport { UtilityClass } from '../../shared/shared/utility.class';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\nimport { Table } from 'primeng/table';\r\n\r\n@Component({\r\n\r\n    selector: 'patient-diagnosis',\r\n    templateUrl: 'patient-diagnosis.component.html',\r\n})\r\n\r\nexport class PatientDiagnosisComponent implements OnInit, OnChanges {\r\n    selectBasicTab: boolean = true;\r\n    utilityClass: UtilityClass = new UtilityClass();\r\n    @Input() allowEditing: boolean = true;\r\n    @Input() patientId!: number;\r\n    @Input() clinicNoteId!: number;\r\n    @Input() usedInClinicNoteDiagnosis: boolean = false;\r\n    isDetailsVisible: boolean = false;\r\n    diagnosisList: any[] = [];\r\n    toSaveClinicNodeDiagnose: any;\r\n    lstToTranslated: string[] = [];\r\n    active = true;\r\n    toSaveClinicNoteDiagnose: any = {};\r\n    showProgress = false;\r\n    @ViewChild('dt') table!: Table;\r\n\r\n    constructor(private doctorService: DoctorService\r\n        , private sharedService: SharedService\r\n        , public toastr: ToastrService\r\n        , private _route: ActivatedRoute\r\n        , public localStorage: LocalStorageService\r\n        , public translate: TranslateService\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        let thisComponent = this;\r\n        this.lstToTranslated = ['diagnoseName', 'diagnoseNameTranslation', 'doctorName', 'doctorNameTranslation'];\r\n\r\n        this.getClinicNoteDiagnosis();\r\n\r\n        if (this.patientId != null && this.patientId > 0) {\r\n            thisComponent.showProgress = true;\r\n            this.doctorService.getPatientSnapshotDiagnosis(thisComponent.patientId)\r\n                .subscribe(\r\n                    function (clinicNoteDiagnosis: any) {\r\n                        thisComponent.diagnosisList = clinicNoteDiagnosis;\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () { // finally\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n        }\r\n    }\r\n\r\n    getClinicNoteDiagnosis() {\r\n        let thisComponent = this;\r\n        if (this.usedInClinicNoteDiagnosis && this.clinicNoteId && this.clinicNoteId > 0) {\r\n            thisComponent.showProgress = true;\r\n            this.doctorService.getClinicNoteDiagnosis(thisComponent.clinicNoteId)\r\n                .subscribe(\r\n                    function (clinicNoteDiagnosis: any) {\r\n                        thisComponent.diagnosisList = clinicNoteDiagnosis;\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () { // finally\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n        }\r\n\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        // this.getClinicNoteDiagnosis();\r\n    }\r\n\r\n    addNewClinicNoteDiagnose() {\r\n        this.toSaveClinicNoteDiagnose = {};\r\n        this.isDetailsVisible = true;\r\n    }\r\n\r\n    showDetails(rowData: any) {\r\n        if (rowData && rowData.id) {\r\n            let thisComponent = this;\r\n            thisComponent.showProgress = true;\r\n            this.doctorService.getClinicNoteDiagnoseById(rowData.id)\r\n                .subscribe(\r\n                    function (matchedClinicNoteDiagnose: any) {\r\n                        thisComponent.toSaveClinicNoteDiagnose = matchedClinicNoteDiagnose;\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () { // finally\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n            this.isDetailsVisible = true;\r\n        }\r\n    }\r\n\r\n    hideDetails(updatedClinicNoteDiagnose: any) {\r\n        if (updatedClinicNoteDiagnose) {\r\n\r\n            let thisComponent = this;\r\n            thisComponent.diagnosisList.forEach(clinicNoteDiagnose => {\r\n                if (clinicNoteDiagnose.id == updatedClinicNoteDiagnose.id)\r\n                    thisComponent.diagnosisList.splice(thisComponent.diagnosisList.indexOf(clinicNoteDiagnose), 1);\r\n            });\r\n\r\n            this.diagnosisList.push(updatedClinicNoteDiagnose);\r\n        }\r\n\r\n        this.isDetailsVisible = false;\r\n    }\r\n\r\n    deleteClinicNoteDiagnose(rowData: any) {\r\n        if (rowData && rowData.id) {\r\n            let thisComponent = this;\r\n            thisComponent.showProgress = true;\r\n            this.doctorService.deleteClinicNoteDiagnose(rowData.id)\r\n                .subscribe(\r\n                    function (matchedClinicNoteDiagnose: any) {\r\n                        thisComponent.diagnosisList.forEach(clinicNoteDiagnose => {\r\n                            if (clinicNoteDiagnose.id == rowData.id)\r\n                                thisComponent.diagnosisList.splice(thisComponent.diagnosisList.indexOf(clinicNoteDiagnose), 1);\r\n                        });\r\n                        let msg = thisComponent.translate.instant(\"DeletedSuccessfully\");\r\n                        thisComponent.toastr.success(msg, '');\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () { // finally\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n        }\r\n    }\r\n\r\n    changeCurrentStatus(clinicNoteDiagnoseId: any, event: any) {\r\n        let thisComponent = this;\r\n        thisComponent.showProgress = true;\r\n        this.doctorService.changeClinicNoteDiagnoseCurrentStatus({ \"id\": clinicNoteDiagnoseId, \"isCurrent\": event.target.checked })\r\n            .subscribe(\r\n                function (matchedClinicNoteDiagnose: any) {\r\n                    let msg = thisComponent.translate.instant(\"StatusChanged\");\r\n                    thisComponent.toastr.success(msg, '');\r\n                },\r\n                function (error: any) {\r\n                    thisComponent.toastr.error(error, '');\r\n                    thisComponent.showProgress = false;\r\n                },\r\n                function () { // finally\r\n                    thisComponent.showProgress = false;\r\n                });\r\n\r\n    }\r\n}","<div *ngIf=\"showProgress\">\r\n    <loading></loading>\r\n</div>\r\n<div id=\"divTable\" class=\"padding5\" *ngIf=\"!isDetailsVisible\">\r\n    <div class=\"row\" *ngIf=\"allowEditing\">\r\n        <div class=\"col-md-4 nopadding\">\r\n        </div>\r\n        <div class=\"col-md-8 align-reverse nopadding\">\r\n            <button type=\"button\" class=\"btn btn-primary\" (click)=\"addNewClinicNoteDiagnose()\">{{ 'NewDiagnosis' |\r\n                translate}}</button>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"inner-addon left-addon\">\r\n        <i class=\"glyphicon glyphicon-search\"></i>\r\n        <input pInputText type=\"text\" #gb (input)=\"dt.filterGlobal($event.target.value, 'contains')\"\r\n            [placeholder]=\"'Search' | translate\" />\r\n    </div>\r\n\r\n    <!---New Table-->\r\n    <p-table #dt [value]=\"diagnosisList\" dataKey=\"id\" [rowHover]=\"true\" [rows]=\"10\" [showCurrentPageReport]=\"true\"\r\n        [rowsPerPageOptions]=\"[10,20,30,40,50,100]\" [paginator]=\"true\"\r\n        currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" [filterDelay]=\"0\"\r\n        [globalFilterFields]=\"['diagnoseCode','diagnoseName','dateTimeString','diagnoseName','description','status']\">\r\n\r\n        <ng-template pTemplate=\"header\">\r\n            <tr>\r\n                <th pSortableColumn=\"diagnoseCode\">{{'ArabicName' | translate}} <p-sortIcon field=\"diagnoseCode\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"diagnoseName\">{{'EnglishName' | translate}} <p-sortIcon field=\"diagnoseName\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"dateTimeString\">{{'EnglishName' | translate}} <p-sortIcon field=\"dateTimeString\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"diagnoseName\">{{'EnglishName' | translate}} <p-sortIcon field=\"diagnoseName\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"description\">{{'EnglishName' | translate}} <p-sortIcon field=\"description\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"status\">{{'EnglishName' | translate}} <p-sortIcon field=\"status\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th><span styleClass=\"text-center width70\">{{'IsCurrent' | translate}} </span>\r\n                </th>\r\n                <th><span styleClass=\"text-center width70\">{{'Edit' | translate}} </span>\r\n                </th>\r\n                <th><span styleClass=\"text-center width70\">{{'Delete' | translate}} </span>\r\n                </th>\r\n\r\n            </tr>\r\n\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-item>\r\n            <tr class=\"p-selectable-row\">\r\n                <td>\r\n                    {{item.diagnoseCode}}\r\n                </td>\r\n                <td>\r\n                    <span>{{item.diagnoseName}}</span>\r\n                </td>\r\n                <td>\r\n                    <span>{{item.dateTimeString}}</span>\r\n                </td>\r\n                <td>\r\n                    <span>{{item.description}}</span>\r\n                </td>\r\n                <td>\r\n                    <span>{{item.doctorName}}</span>\r\n                </td>\r\n                <td>\r\n                    <span>{{item.status}}</span>\r\n                </td>\r\n                <td>\r\n                    <input id=\"ChkIsCurrentInGrid\" name=\"ChkIsCurrent\" class=\"ace ace-switch ace-switch-6\"\r\n                        type=\"checkbox\" [checked]=\"item.isCurrent\" (click)=\"changeCurrentStatus(item.id,$event)\" />\r\n                    <span class=\"lbl\"></span>\r\n                </td>\r\n                <td style=\"text-align: center\">\r\n                    <a class=\"pointer\" (click)=\"showDetails(item)\">\r\n                        <img src=\"assets/images/edit-24.png\" />\r\n                    </a>\r\n                </td>\r\n                <td>\r\n                    <a class=\"pointer\" (click)=\"deleteClinicNoteDiagnose(item)\">\r\n                        <img src=\"assets/images/delete-24.png\" />\r\n                    </a>\r\n                </td>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"emptymessage\">\r\n            <tr>\r\n                <td colspan=\"8\">No data found.</td>\r\n            </tr>\r\n        </ng-template>\r\n    </p-table>\r\n    <!--End Table-->\r\n</div>\r\n<div id=\"divDetails\" class=\"padding5\" *ngIf=\"isDetailsVisible\">\r\n    <patient-diagnose-details [toSaveClinicNoteDiagnose]=\"toSaveClinicNoteDiagnose\" [clinicNoteId]=\"clinicNoteId\"\r\n        [patientId]=\"patientId\" (onBack)=\"hideDetails($event)\"></patient-diagnose-details>\r\n</div>","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\nimport { PatientService } from '../shared/patient.service'\r\nimport { SharedService } from '../../shared/shared/shared.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\nimport { UtilityClass } from '../../shared/shared/utility.class';\r\nimport { AccountService } from '../../security/shared/account.service';\r\nimport { UserPermissions } from '../../classes/user-permissions.class';\r\nimport { PermissionKeyEnum } from '../../shared/shared/permission-key.enum';\r\n@Component({\r\n\r\n    selector: 'patient-file',\r\n    templateUrl: 'patient-file.component.html'\r\n\r\n})\r\n\r\nexport class PatientFileComponent implements OnInit {\r\n    model: any = { id: 0, isActive: true };\r\n    patientAttachementId = '';\r\n    showProgress = false;\r\n    @Output() onModelUpdated = new EventEmitter<any>();\r\n\r\n    userGroupsWrapper: any = {};\r\n    clinicId = '';\r\n    patientId = '';\r\n    account = \"Account\";\r\n    basicData = \"Basic Data\";\r\n    address = \"Address\";\r\n    insurance = \"Insurance Data\";\r\n    utilityClass: UtilityClass = new UtilityClass();\r\n    parentType = 'PatientFileType';\r\n    detailsUrl = \"PatientReceptionistAttachmentsDetails\";\r\n\r\n    documentDetailsUrl: string = \"patientAttachments\";\r\n    fileNameUploadTxt: string = this.translate.instant(\"File\");\r\n\r\n    fileNameTxt: string = this.translate.instant(\"FileName\");\r\n    btnUploadText = this.translate.instant(\"UploadFile\");\r\n    fileType: boolean = true;\r\n    showDocumentDetails: boolean = true;\r\n    userPermisions: UserPermissions = new UserPermissions();\r\n    key: PermissionKeyEnum = new PermissionKeyEnum();\r\n    hasEditPermission: boolean = false;\r\n    hasPatientAttachmentFile: boolean = false;\r\n    hasDefinePatientPolicy: boolean = false;\r\n    selectedPatientId!: string;\r\n    Attachement: any;\r\n    constructor(private patientService: PatientService,\r\n        private toastr: ToastrService,\r\n        private localStorage: LocalStorageService,\r\n        private _route: ActivatedRoute, public translate: TranslateService\r\n        , public accountService: AccountService\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        //  this.clinicId = this.localStorage.retrieve(\"ClinicID\");\r\n        let thisComponent = this;\r\n\r\n        let id = this._route.snapshot.params['id'];\r\n        this.patientId = `${id}`;\r\n        this.selectedPatientId = this.patientId;\r\n        // this.patientId = '2';\r\n        this.model.reachInfo = { id: 0 };\r\n        // in case of update\r\n        if (this.patientId.toString().toLowerCase() != 'new') {\r\n            thisComponent.showProgress = true;\r\n            this.patientService.getPatientById(this.patientId)\r\n                .subscribe(\r\n                    function (response: any) {\r\n                        thisComponent.model = response;\r\n                        if (thisComponent.model.birthDate)\r\n                            thisComponent.model.birthDate = thisComponent.utilityClass.getUtcDateFromString(thisComponent.model.birthDate);\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () {\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n        }\r\n\r\n        if (this.accountService.userPermision._isScalar != undefined)\r\n            this.accountService.userPermision.subscribe((item: any) => this.handleUserInterfaceViews(item));\r\n        else\r\n            this.handleUserInterfaceViews(this.accountService.userPermision);\r\n    }\r\n\r\n\r\n\r\n    updateModel(updatedModel: any) {\r\n        this.model = updatedModel;\r\n        this.patientId = this.model.id;\r\n        this.selectedPatientId = this.model.id;\r\n        //this.patientId = this.model.id;\r\n    }\r\n    isUpdateMode(): boolean {\r\n\r\n        if (this.model.id > 0)\r\n            return true;\r\n\r\n        return false;\r\n    }\r\n\r\n    handleUserInterfaceViews(user: any) {\r\n        if (user.permissions != undefined) {\r\n            for (let item of user.permissions) {\r\n                if (item.permission.key == this.key.PatientRegistration && (item.fullControl == true || item.edit == true))\r\n                    this.hasEditPermission = true;\r\n\r\n                if (item.permission.key == this.key.AddPatientAttachment && (item.allow == true))\r\n                    this.hasPatientAttachmentFile = true;\r\n\r\n                if (item.permission.key == this.key.DefinePatientPolicy && (item.fullControl == true || item.edit == true || item.add == true || item.view == true || item.activate == true))\r\n                    this.hasDefinePatientPolicy = true;\r\n            }\r\n        }\r\n\r\n    }\r\n    //raiseModelUpdated(model: any) {\r\n    //    this.onModelUpdated.emit(model);\r\n    //}\r\n}","<div *ngIf=\"showProgress\">\r\n    <loading></loading>\r\n</div>\r\n\r\n<!--<receptionist-tabs [activeTabIndex]=\"4\"></receptionist-tabs>-->\r\n<div class=\"row\">\r\n    <shared-tabs [activeTabIndex]=\"10\"></shared-tabs>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"row nopadding\">\r\n        <div class=\"row \">\r\n            <div class=\"NBbreadcrumb\">\r\n                <a>{{ 'SystemAdmin' | translate}}</a> &nbsp;/\r\n                {{'PatientFile' | translate }}\r\n            </div>\r\n        </div>\r\n        <div class=\"row well\">\r\n            <div class=\"tabbable-panel\">\r\n                <div class=\"tabbable-line\">\r\n                    <ul class=\"nav nav-tabs\">\r\n                        <li class=\"active\"><a href=\"#account\" data-toggle=\"tab\" aria-expanded=\"true\">{{ 'Account' | translate}}</a></li>\r\n                        <li *ngIf=\"isUpdateMode() && hasEditPermission\"><a href=\"#basicInfo\" data-toggle=\"tab\" aria-expanded=\"true\">{{ 'BasicData' | translate}}</a></li>\r\n                        <li *ngIf=\"!isUpdateMode() || !hasEditPermission\"><a class=\"dimmedLink\">{{ 'BasicData' | translate}}</a></li>\r\n                        <li *ngIf=\"isUpdateMode()&& hasEditPermission\"><a href=\"#patientAddress\" data-toggle=\"tab\" aria-expanded=\"true\">{{ 'PatientAddress' | translate}}</a></li>\r\n                        <li *ngIf=\"!isUpdateMode() || !hasEditPermission\"><a class=\"dimmedLink\">{{ 'PatientAddress' | translate}}</a></li>\r\n                        <li *ngIf=\"isUpdateMode() && hasDefinePatientPolicy\"><a href=\"#patientInsurance\" data-toggle=\"tab\" aria-expanded=\"true\">{{ 'PatientInsurance' | translate}}</a></li>\r\n                        <li *ngIf=\"!isUpdateMode()  || !hasDefinePatientPolicy\"><a class=\"dimmedLink\">{{ 'PatientInsurance' | translate}}</a></li>\r\n\r\n                        <li *ngIf=\"isUpdateMode() && hasPatientAttachmentFile\"><a href=\"#attachment\" data-toggle=\"tab\" aria-expanded=\"true\">{{ 'Attachment' | translate}}</a></li>\r\n                        <li *ngIf=\"!isUpdateMode() || !hasPatientAttachmentFile\"><a class=\"dimmedLink\">{{ 'Attachment' | translate}}</a></li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <div id=\"patientFileTabContent\" class=\"tab-content\">\r\n                <div class=\"tab-pane fade active in\" id=\"account\">\r\n                    <patient-account [patientAccountToSave]=\"model\" [title]=\"account\" (onModelUpdated)=\"updateModel($event)\"></patient-account>\r\n                </div>\r\n                <div class=\"tab-pane fade\" id=\"basicInfo\">\r\n                    <patient-personal [patientId]=\"patientId\" [title]=\"basicData\" [model]=\"model\" (onModelUpdated)=\"updateModel($event)\"></patient-personal>\r\n                </div>\r\n                <div class=\"tab-pane fade\" id=\"patientAddress\">\r\n                    <patient-address [model]=\"model\" [patientId]=\"patientId\" [title]=\"address\" (onModelUpdated)=\"updateModel($event)\"></patient-address>\r\n                </div>\r\n                <div class=\"tab-pane fade\" id=\"patientInsurance\">\r\n                    <patient-insurance [patientId]=\"patientId\" [title]=\"insurance\" [patientModel]=\"model\" (onModelUpdated)=\"updateModel($event)\"></patient-insurance>\r\n                </div>\r\n                <div class=\"tab-pane fade\" id=\"attachment\">\r\n                    <!-- <documents (onModelUpdated)=\"updateModel($event)\" [showDocumentDetails]=\"showDocumentDetails\" [btnUploadText]=\"btnUploadText\" [parentId]=\"patientAttachementId\"  [patientId]=\"patientAttachementId\" [title]=\"Attachement\" [fileType]=\"fileType\" [fileNameTxt]='fileNameTxt' [fileNameUploadTxt]='fileNameUploadTxt' [parentType]='type' ></documents>-->\r\n                    <documents (onModelUpdated)=\"updateModel($event)\" [parentId]=\"selectedPatientId\" [title]=\"Attachement\" [parentType]='parentType' [showDocumentDetails]=\"showDocumentDetails\" [btnUploadText]=\"btnUploadText\" [fileType]=\"fileType\" [fileNameTxt]='fileNameTxt' [fileNameUploadTxt]='fileNameUploadTxt'></documents>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</div>\r\n","import { Component, OnInit, ViewChild, Input, Output, EventEmitter, AfterContentChecked } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { PatientService } from '../shared/patient.service'\r\nimport { SharedService } from '../../shared/shared/shared.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\nimport { UtilityClass } from '../../shared/shared/utility.class';\r\n\r\n@Component({\r\n\r\n    selector: 'patient-insurance-details',\r\n    templateUrl: 'patient-insurance-details.component.html',\r\n})\r\n\r\nexport class PatientInsuranceDetailsComponent implements OnInit, AfterContentChecked {\r\n    selectBasicTab: boolean = true;\r\n    @Input() patientId: string = '';\r\n    @Input() insuranceId: string = '';\r\n    @Input() title: string = '';\r\n    @Output() isTableViewValue: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n    active = true;\r\n    model: any = {};\r\n    isTableView: boolean = true;\r\n    companies = [];\r\n    policies = [];\r\n    insuranceIdvalue!: any;\r\n    utilityClass: UtilityClass = new UtilityClass();\r\n\r\n    showProgress = false;\r\n    @ViewChild(\"fileInput\") fileInput!: any;\r\n\r\n    constructor(private patientService: PatientService\r\n        , private sharedService: SharedService\r\n        , public toastr: ToastrService\r\n        , private _route: ActivatedRoute\r\n        , public storage: LocalStorageService,\r\n        public translate: TranslateService\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        let vm = this;\r\n\r\n        vm.showProgress = true;\r\n        vm.insuranceIdvalue = vm.insuranceId;\r\n        //get all calssifications from DB\r\n        this.patientService.getpatientInsuranceWrapper()\r\n            .subscribe(\r\n                function (response: any) {\r\n                    vm.companies = response.companies;\r\n                    // vm.policies = response.policies;\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n\r\n        // get organization in case of update\r\n        if (this.insuranceIdvalue.toString().toLowerCase() != 'new') {\r\n            vm.showProgress = true;\r\n            this.patientService.getPatientInsuranceById(this.insuranceIdvalue)\r\n                .subscribe(\r\n                    function (response: any) {\r\n                        vm.model = response;\r\n\r\n                        if (vm.model.startDate)\r\n                            vm.model.startDate = vm.utilityClass.getUtcDateFromString(vm.model.startDate);\r\n                        if (vm.model.endDate)\r\n                            vm.model.endDate = vm.utilityClass.getUtcDateFromString(vm.model.endDate);\r\n                    },\r\n                    function (error: any) {\r\n                        vm.toastr.error(error, '');\r\n                        vm.showProgress = false;\r\n                    },\r\n                    function () {\r\n                        vm.showProgress = false;\r\n                    });\r\n        }\r\n\r\n    }\r\n    ngAfterContentChecked(): void {\r\n\r\n        let vm = this;\r\n        if (vm.model.companyId != undefined && vm.model.companyId > 0) {\r\n            vm.fillPolicies(vm.model.companyId);\r\n\r\n\r\n            //this.displayMarker();\r\n        }\r\n    }\r\n\r\n    fillPolicies(id: string) {\r\n        var company: any = this.companies.find((i: any) => i.id == id);\r\n\r\n        if (company != null) {\r\n            this.policies = company.insurancePolicies;\r\n        }\r\n        else {\r\n            this.policies = [];\r\n        }\r\n    }\r\n    onSubmit(): void {\r\n\r\n        let vm = this;\r\n        vm.showProgress = true;\r\n        vm.model.patientId = vm.patientId;\r\n        if (this.model.startDate)\r\n            this.model.startDate = this.utilityClass.getUtcDate(this.model.startDate);\r\n        if (this.model.endDate)\r\n            this.model.endDate = this.utilityClass.getUtcDate(this.model.endDate);\r\n\r\n        if (isNaN(vm.insuranceIdvalue) && vm.insuranceIdvalue.toString().toLowerCase() == 'new') {\r\n            // Add new\r\n            this.patientService.createPatientInsurance(this.model)\r\n                //.subscribe(\r\n                //organization => this.model = organization,\r\n                //error => this.errorMessage = <any>error);\r\n                .subscribe(\r\n                    function (response: any) {\r\n                        let msg = vm.translate.instant(\"SavedSuccessfully\");\r\n                        vm.toastr.success(msg, '');\r\n                        vm.model = response;\r\n                        vm.model.startDate = vm.utilityClass.getUtcDateFromString(vm.model.startDate);\r\n                        vm.model.endDate = vm.utilityClass.getUtcDateFromString(vm.model.endDate);\r\n                        // store selected organization ID\r\n                        //vm.storage.store(\"OrganizationID\", vm.model.id);\r\n                        //if (response.imageData != null) {\r\n                        //    vm.model.imageData = response.imageData;\r\n                        //    vm.model.imageId = response.imageId;\r\n                        //}\r\n                    },\r\n                    function (error: any) {\r\n                        //console.log(\"Error happened\" + error)\r\n                        vm.toastr.error(error, '');\r\n                        vm.showProgress = false;\r\n                    },\r\n                    function () {\r\n                        vm.showProgress = false;\r\n                    }\r\n                );\r\n        }\r\n        else {\r\n            // update\r\n            this.patientService.updatePatientInsurance(this.model)\r\n                .subscribe(\r\n                    function (response: any) {\r\n                        let msg = vm.translate.instant(\"SavedSuccessfully\");\r\n                        vm.toastr.success(msg, '');\r\n                        vm.model = response;\r\n                        vm.model.startDate = vm.utilityClass.getUtcDateFromString(vm.model.startDate);\r\n                        vm.model.endDate = vm.utilityClass.getUtcDateFromString(vm.model.endDate);\r\n\r\n                    },\r\n                    function (error: any) {\r\n                        //console.log(\"Error happened\" + error)\r\n                        vm.toastr.error(error, '');\r\n                        vm.showProgress = false;\r\n                    },\r\n                    function () {\r\n                        vm.showProgress = false;\r\n                    });\r\n        }\r\n\r\n    }\r\n    onClick() {\r\n        this.isTableViewValue.emit(this.isTableView);\r\n    }\r\n    /////////////////////////////////////////////////////////////\r\n    clear(): void {\r\n        this.model = {};\r\n        this.active = false;\r\n        this.insuranceIdvalue = 'new';\r\n        setTimeout(() => this.active = true, 0);\r\n    }\r\n    //deleteOrganization(id): void {\r\n    //    let vm = this;\r\n    //    if (id == undefined || isNaN(id)) {\r\n    //        vm.toastr.warning('لايوجد جمعية مختارة لمسحها', '');\r\n    //        return;\r\n    //    }\r\n\r\n    //    vm.showProgress = true;\r\n    //    this.patientService.deleteOrganization(id)\r\n    //        .subscribe(\r\n    //        function (response:any) {\r\n    //            vm.toastr.success('Deleted successfully', '');\r\n    //            vm.clear();\r\n\r\n    //            // store selected organization ID\r\n    //            vm.storage.store(\"OrganizationID\", 'new');\r\n    //        },\r\n    //        function (error:any) { \r\n    //            //console.log(\"Error happened\" + error)\r\n    //            vm.toastr.error('Failed to Delete - ' + error, '');\r\n    //        },\r\n    //        function () {\r\n    //            vm.showProgress = false;\r\n    //        });\r\n    //}\r\n\r\n    //imageChanged(response:any)\r\n    //{\r\n    //    let attchmentInfo: any = {};\r\n\r\n    //    if (response != null) {\r\n\r\n    //        if (response.originalName == undefined)\r\n    //        {\r\n    //            this.model.attachmentInfo = null;\r\n    //            return;\r\n    //        }\r\n\r\n    //        this.model.attachmentInfo = attchmentInfo;\r\n    //        this.model.attachmentInfo.originalName = response.originalName;\r\n    //        this.model.attachmentInfo.keyName = response.keyName;\r\n    //        this.model.attachmentInfo.fullPath = response.fullPath;\r\n    //        this.model.attachmentInfo.fileType = response.fileType;\r\n    //    }\r\n    //    else {\r\n    //        this.model.attachmentInfo = null;\r\n    //    }\r\n\r\n    //}\r\n\r\n}","<div *ngIf=\"showProgress\">\r\n    <loading></loading>\r\n</div>\r\n\r\n<div class=\"row\">\r\n        <form novalidate *ngIf=\"active\" class=\"form-horizontal\" name=\"organizationForm\" (ngSubmit)=\"onSubmit()\" #organizationForm=\"ngForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"ddlCompany\" class=\"control-label col-md-2\">{{ 'InsuranceCompany' | translate}}</label>\r\n                <div class=\"col-md-3\">\r\n                    <select class=\"form-control\" id=\"ddlCompany\" name=\"ddlCompany\" [(ngModel)]=\"model.companyId\" #ddlCompany=\"ngModel\" required #d (change)=\"fillPolicies(d.value)\">\r\n                        <option *ngFor=\"let item of companies | translateObjects\" [value]=\"item.id\">{{item.name}}</option>\r\n                    </select>\r\n                </div>\r\n                <label for=\"ddlPolicy\" class=\"control-label col-md-2\">{{ 'PolicyName' | translate}}</label>\r\n                <div class=\"col-md-3\">\r\n                    <select class=\"form-control\" id=\"ddlPolicy\" name=\"ddlPolicy\" [(ngModel)]=\"model.policyId\" #ddlPolicy=\"ngModel\" required>\r\n                        <option *ngFor=\"let item of policies | translateObjects\" [value]=\"item.id\">{{item.name}}</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"txtPhysicalStartDate\" class=\"control-label col-md-2\"> {{ 'StartDate' | translate}}</label>\r\n                <div class=\"col-md-3\">\r\n                    <p-calendar [(ngModel)]=\"model.startDate\" [monthNavigator]=\"true\" [yearNavigator]=\"true\" dateFormat=\"dd/mm/yy\"\r\n                                [showIcon]=\"true\" [required]=\"true\" [ngModelOptions]=\"{standalone: true}\" yearRange=\"2000:2050\"></p-calendar>\r\n                </div>\r\n                <label for=\"txtPhysicalEndDate\" class=\"control-label col-md-2\"> {{ 'EndDate' | translate}}</label>\r\n                <div class=\"col-md-3\">\r\n                    <p-calendar [(ngModel)]=\"model.endDate\" [monthNavigator]=\"true\" [yearNavigator]=\"true\" dateFormat=\"dd/mm/yy\"\r\n                                [showIcon]=\"true\" [required]=\"true\" [ngModelOptions]=\"{standalone: true}\" yearRange=\"2000:2050\"></p-calendar>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"txtcardNumber\" class=\"control-label col-md-2\">{{ 'CardNumber' | translate}}</label>\r\n                <div class=\"col-md-3\">\r\n                    <input id=\"txtcardNumber\" name=\"txtcardNumber\" class=\"form-control\" [(ngModel)]=\"model.cardNumber\" />\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"txtRemarks\" class=\"control-label col-md-2\">{{ 'Description' | translate}} </label>\r\n                <div class=\"col-md-6\">\r\n                    <textarea class=\"form-control\" id=\"txtRemarks\" name=\"txtRemarks\" [(ngModel)]=\"model.description\" ></textarea>\r\n                </div>\r\n            </div>\r\n            <br />\r\n            <div class=\"form-group\">\r\n                <div class=\"col-md-4 col-md-offset-2\">\r\n                    <button class=\"btn btn-primary\">{{ 'Save' | translate}}</button>\r\n                    <button class=\"btn btn-primary\" (click)=\"clear()\">{{ 'New' | translate}}</button>\r\n                    <button class=\"btn btn-primary\" (click)=\"onClick()\">{{ 'Back' | translate}}</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n</div>\r\n\r\n","import { Component, OnInit, ViewChild, Input, OnChanges, EventEmitter, Output } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { PatientService } from '../shared/patient.service';\r\nimport { SharedService } from '../../shared/shared/shared.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\nimport { UtilityClass } from '../../shared/shared/utility.class';\r\nimport { Table } from 'primeng/table';\r\n\r\n@Component({\r\n\r\n    selector: 'patient-insurance',\r\n    templateUrl: 'patient-insurance.component.html',\r\n})\r\n\r\nexport class PatientInsuranceComponent implements OnInit, OnChanges {\r\n    selectBasicTab: boolean = true;\r\n    @Input() patientId: string = '';\r\n    @Input() patientModel: any;\r\n    @Output() onModelUpdated = new EventEmitter<any>();\r\n    lstToTranslated: string[] = [];\r\n    active = true;\r\n    model: any = {};\r\n    hasInsurance: boolean = false;\r\n    insuranceId!: any;\r\n    insurances!: any;\r\n    isTableView: boolean = true;\r\n    insuranceToBeDeleted!: any;\r\n    patientIdValue!: any;\r\n    showProgress = false;\r\n    tst = \"test\";\r\n    @ViewChild(\"fileInput\") fileInput!: any;\r\n    utilityClass: UtilityClass = new UtilityClass();\r\n    selectedClinicId!: any;\r\n    @ViewChild('dt') table!: Table;\r\n    constructor(private patientService: PatientService\r\n        , private sharedService: SharedService\r\n        , public toastr: ToastrService\r\n        , private _route: ActivatedRoute\r\n        , public storage: LocalStorageService\r\n        , private router: Router\r\n        , public translate: TranslateService\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        this.lstToTranslated = ['companyName', 'companyNameTranslation', 'policyName', 'policyNameTranslation', 'patientName', 'patientNameTranslation'];\r\n        let vm = this;\r\n        this.selectedClinicId = this.storage.retrieve(\"ClinicID\");\r\n        vm.showProgress = true;\r\n        vm.patientIdValue = vm.patientId;\r\n        if (this.patientIdValue.toString().toLowerCase() != 'new') {\r\n            vm.loadPatientInsurances();\r\n        } else {\r\n\r\n            vm.showProgress = false;\r\n        }\r\n    }\r\n    ngOnChanges(): void {\r\n        let vm = this;\r\n        vm.patientIdValue = vm.patientModel.id;\r\n        //vm.patientIdValue = vm.patientId;\r\n        if (vm.patientModel.isInsured) {\r\n            vm.hasInsurance = true;\r\n            //vm.tst = \"iam\";\r\n        } else {\r\n            vm.hasInsurance = false;\r\n        }\r\n\r\n    }\r\n    loadPatientInsurances() {\r\n        let vm = this;\r\n        this.patientService.getAllPatientInsurances(vm.patientIdValue).subscribe(\r\n            function (response: any) {\r\n                vm.insurances = response;\r\n                if (vm.patientModel.birthDate)\r\n                    vm.patientModel.birthDate = vm.utilityClass.getUtcDateFromString(vm.patientModel.birthDate);\r\n            },\r\n            function (error: any) {\r\n                vm.toastr.error(error, '');\r\n            },\r\n            function () { // finally\r\n                vm.showProgress = false;\r\n            });\r\n\r\n    }\r\n    changeActivation(insuranceId: any, event: any) {\r\n        let vm = this;\r\n        vm.showProgress = true;\r\n\r\n        this.patientService.togglePatientInsuranceActivation(insuranceId)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    // get company by Id from the companies List\r\n                    //var selectedCompany = vm.companiesList.find(comp => comp.id == id);\r\n                    //selectedCompany.isActive = response;\r\n\r\n                    // load all companies\r\n                    vm.loadPatientInsurances();\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                    vm.showProgress = false;\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n    }\r\n    editItem(id: string): void {\r\n        //this.isForm = true;\r\n        this.isTableView = false;\r\n        this.insuranceId = id;\r\n\r\n    }\r\n    setInsuranceIdValue(id: string) {\r\n        this.isTableView = false;\r\n        this.insuranceId = id;\r\n    }\r\n    onIsTableViewValue(value: boolean): void {\r\n        this.isTableView = value;\r\n        this.loadPatientInsurances();\r\n    }\r\n    selectPatientInsuranceToDelete(id: string) {\r\n        this.insuranceToBeDeleted = id;\r\n    }\r\n    deleteSelectedItem(): void {\r\n\r\n        let vm = this;\r\n        if (this.insuranceToBeDeleted == '') {\r\n\r\n            let msg = vm.translate.instant(\"ItemToBeDeleted\");\r\n            vm.toastr.warning(msg, '');\r\n            return;\r\n        }\r\n\r\n        vm.showProgress = true;\r\n        this.patientService.deletePatientInsurance(this.insuranceToBeDeleted)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    let msg = vm.translate.instant(\"DeletedSuccessfully\");\r\n                    vm.toastr.success(msg, '');\r\n\r\n                    // remove delete object from collection\r\n                    var selectedObject = vm.insurances.find((o: any) => o.id == vm.insuranceToBeDeleted);\r\n                    var index = vm.insurances.indexOf(selectedObject);\r\n                    if (index > -1)\r\n                        vm.insurances.splice(index, 1);\r\n\r\n                    // clear fields\r\n                    //  vm.clear();\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                    vm.showProgress = false;\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n    }\r\n\r\n    public navigateToPackages() {\r\n        //routerLink=\"/receptionistPatients/1\"\r\n        this.router.navigate(['/receptionist/patients', this.selectedClinicId]);\r\n    }\r\n\r\n    changeInsuranceStatus(patientId: any, event: any) {\r\n        let vm = this;\r\n        vm.showProgress = true;\r\n        if (event.target.checked)\r\n            vm.patientModel.isInsured = true;\r\n        else\r\n            vm.patientModel.isInsured = false;\r\n        this.patientService.updatePatientPersonalData(vm.patientModel)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    vm.patientModel = response;\r\n\r\n                    if (vm.model.birthDate)\r\n                        vm.model.birthDate = vm.utilityClass.getUtcDateFromString(vm.model.birthDate);\r\n\r\n                    vm.raiseModelUpdated(vm.patientModel);\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                    vm.showProgress = false;\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n    }\r\n\r\n    raiseModelUpdated(model: any) {\r\n        this.onModelUpdated.emit(model);\r\n    }\r\n}","<div *ngIf=\"showProgress\">\r\n    <loading></loading>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <!-- <div class=\"col-md-2 nopadding\">\r\n        <patient-receptionist-tabs [activeTabIndex]=\"3\"></patient-receptionist-tabs>\r\n    </div>-->\r\n    <div class=\"row nopadding\" *ngIf=\"isTableView\">\r\n        <div class=\"padding5\">\r\n            <div class=\"row\" style=\"vertical-align:middle\">\r\n                <div class=\"col-md-12\">\r\n                    <label class=\"lead\">Insured?</label>\r\n                    &nbsp;&nbsp;&nbsp;\r\n                    <label>\r\n                        <input type=\"checkbox\" class=\"ace ace-switch ace-switch-6\" id=\"chkBoxHasInsurance\"\r\n                            name=\"chkBoxHasInsurance\" [checked]=\"patientModel.isInsured\"\r\n                            (click)=\"changeInsuranceStatus(patientModel.id , $event)\" />\r\n                        <span class=\"lbl\"></span>\r\n                    </label>\r\n                    &nbsp;&nbsp;&nbsp;\r\n                    &nbsp;&nbsp;&nbsp;\r\n                    <!--<button type=\"button\" class=\"btn btn-primary\" (click)=\"navigateToPackages()\" >{{ 'Back' | translate}}</button>-->\r\n                </div>\r\n            </div>\r\n            <hr />\r\n            <div class=\"row\">\r\n                <div class=\"col-md-4 nopadding\">\r\n                    <input type=\"text\" placeholder=\"Search...\" class=\"form-control\" #gb />\r\n                </div>\r\n                <div class=\"col-md-8 align-reverse nopadding\">\r\n                    <button type=\"button\" class=\"btn btn-primary\" (click)=\"setInsuranceIdValue('new')\"\r\n                        [(disabled)]=\"!patientModel.isInsured\">{{ 'New' | translate}}</button>\r\n\r\n                    <button type=\"button\" class=\"btn btn-primary\" (click)=\"navigateToPackages()\">{{ 'Back' |\r\n                        translate}}</button>\r\n                </div>\r\n            </div>\r\n            <div class=\"padding2\"></div>\r\n            <div class=\"row\">\r\n                <!--<table class=\"table table-responsive table-hover\">\r\n                    <thead class=\"alert alert-info\">\r\n                        <tr>\r\n                            <th>Insurance Company</th>\r\n                            <th> Policy Name </th>\r\n                            <th> Start Date </th>\r\n                            <th>End Date  </th>\r\n                            <th>Card Number</th>\r\n                            <th>Remarks </th>\r\n                            <th class=\"text-center\">Active</th>\r\n                            <th class=\"text-center\">Edit </th>\r\n                            <th class=\"text-center\"> Delete </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n\r\n                    </tbody>\r\n                </table>-->\r\n\r\n\r\n                <!---New Table-->\r\n                <p-table #dt [value]=\"insurances\" dataKey=\"id\" [rowHover]=\"true\" [rows]=\"10\"\r\n                    [showCurrentPageReport]=\"true\" [rowsPerPageOptions]=\"[10,20,30,40,50,100]\" [paginator]=\"true\"\r\n                    currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" [filterDelay]=\"0\"\r\n                    [globalFilterFields]=\"['companyName','policyName','startDateString','endDateString','cardNumber','description']\">\r\n\r\n                    <ng-template pTemplate=\"header\">\r\n                        <tr>\r\n                            <th pSortableColumn=\"companyName\">{{'InsuranceCompany' | translate}} <p-sortIcon\r\n                                    field=\"companyName\"></p-sortIcon>\r\n                            </th>\r\n                            <th pSortableColumn=\"policyName\">{{'PolicyName' | translate}} <p-sortIcon\r\n                                    field=\"policyName\"></p-sortIcon>\r\n                            </th>\r\n                            <th pSortableColumn=\"startDateString\">{{'StartDate' | translate}} <p-sortIcon\r\n                                    field=\"startDateString\"></p-sortIcon>\r\n                            </th>\r\n                            <th pSortableColumn=\"endDateString\">{{'EndDate' | translate}} <p-sortIcon\r\n                                    field=\"endDateString\"></p-sortIcon>\r\n                            </th>\r\n                            <th pSortableColumn=\"cardNumber\">{{'CardNumber' | translate}} <p-sortIcon\r\n                                    field=\"cardNumber\"></p-sortIcon>\r\n                            </th>\r\n                            <th pSortableColumn=\"description\">{{'Description' | translate}} <p-sortIcon\r\n                                    field=\"description\"></p-sortIcon>\r\n                            </th>\r\n                            <th><span styleClass=\"text-center width70\">{{'Active' | translate}} </span>\r\n                            </th>\r\n                            <th><span styleClass=\"text-center width70\">{{'Edit' | translate}} </span>\r\n                            </th>\r\n                            <th><span styleClass=\"text-center width70\">{{'Delete' | translate}} </span>\r\n                            </th>\r\n                            <th style=\"width: 8rem\">\r\n                            </th>\r\n                        </tr>\r\n\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"body\" let-item>\r\n                        <tr class=\"p-selectable-row\">\r\n                            <td>\r\n                                {{item.companyName}}\r\n                            </td>\r\n                            <td>\r\n                                <span>{{item.policyName}}</span>\r\n                            </td>\r\n                            <td>\r\n                                <span>{{item.startDateString}}</span>\r\n                            </td>\r\n                            <td>\r\n                                <span>{{item.endDateString}}</span>\r\n                            </td>\r\n                            <td>\r\n                                <span>{{item.cardNumber}}</span>\r\n                            </td>\r\n                            <td>\r\n                                <span>{{item.description}}</span>\r\n                            </td>\r\n                            <td>\r\n                                <input id=\"ChkIsActiveInGrid\" name=\"ChkIsActiveInGrid\" class=\"ace ace-switch ace-switch-6\"\r\n                                type=\"checkbox\" [checked]=\"item.isActive\"\r\n                                (click)=\"changeActivation(item.id , $event)\" />\r\n                         <span class=\"lbl\"></span>\r\n                            </td>\r\n                            <td style=\"text-align: center\">\r\n                                <a class=\"pointer\" (click)=\"setInsuranceIdValue(item.id)\">\r\n                                    <img src=\"assets/images/edit-24.png\" />\r\n                                </a>\r\n                            </td>\r\n                            <td>\r\n                                <a data-toggle=\"modal\" data-target=\"#deleteAppointmentSchedule\" class=\"pointer\"\r\n                                (click)=\"selectPatientInsuranceToDelete(item.id)\">\r\n                                 <img src=\"assets/images/DeleteRed.png\" />\r\n                             </a>\r\n                            </td>\r\n                        </tr>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"emptymessage\">\r\n                        <tr>\r\n                            <td colspan=\"8\">No data found.</td>\r\n                        </tr>\r\n                    </ng-template>\r\n                </p-table>\r\n                <!--End Table-->\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div *ngIf=\"!isTableView\">\r\n        <patient-insurance-details [patientId]='patientIdValue' [insuranceId]='insuranceId'\r\n            (isTableViewValue)='onIsTableViewValue($event)'></patient-insurance-details>\r\n    </div>\r\n</div>\r\n<div id=\"deleteAppointmentSchedule\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">{{ 'PasswordCriteria' | translate}}</h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <p>{{ 'AreYouSureDelete' | translate}}</p>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-danger\" (click)=\"deleteSelectedItem()\" data-dismiss=\"modal\">{{\r\n                    'Yes' | translate}}</button>\r\n                <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\">{{ 'No' | translate}}</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>","import { Component, OnChanges, OnInit, SimpleChanges, ViewChild, Output, EventEmitter, Input } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TreeNode } from 'primeng/api';\r\nimport { DoctorService } from '../../doctors/shared/doctor.service';\r\nimport { SharedService } from '../../shared/shared/shared.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\n\r\n@Component({\r\n    selector: 'patient-lab-details',\r\n    templateUrl: 'patient-lab-details.component.html',\r\n})\r\n\r\nexport class PatientLabDetailsComponent implements OnInit, OnChanges {\r\n    selectBasicTab: boolean = true;\r\n    selectedMedicationNode: any;\r\n    @Output() onBack = new EventEmitter();\r\n    @Input() noteId: string = '';\r\n    @Input() noteLabTestId!: string;\r\n    selectedAction = 1;\r\n    active = true;\r\n    labTestToSave: any = { id: 0, quantity: 1 };\r\n    filterString!: string;\r\n    labTreeDataSourceItems: any[] = [];\r\n    leafType: string = 'LaboratoryTest';\r\n    classifications = [];\r\n    showProgress = false;\r\n    @ViewChild(\"fileInput\") fileInput!: any;\r\n    selectedLabNode: any;\r\n    selectedNode!: TreeNode;\r\n    isLabTest = true;\r\n    selectedFiles!: TreeNode;\r\n    labTests: any[] = [];\r\n    noteDiagnosis: any[] = [];\r\n    //needed to be inputs\r\n    divisionId = \"\";\r\n    clinicId = \"\";\r\n    selectedGroupNode!: TreeNode;\r\n    labTestCode = '';\r\n    isAll = true;\r\n    getAllLabs = true;\r\n\r\n    constructor(private doctorService: DoctorService\r\n        , private sharedService: SharedService\r\n        , public toastr: ToastrService\r\n        , private _route: ActivatedRoute\r\n        , public storage: LocalStorageService\r\n        , public translate: TranslateService\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        let vm = this;\r\n        this.selectedMedicationNode = null;\r\n        this.clinicId = this.storage.retrieve(\"ClinicID\");\r\n        this.divisionId = this._route.snapshot.params['divisionId'];\r\n        this.getAllLabTestsGroupsForTreeView(false);\r\n        vm.getClinicDepartmentLaboratoryTestsGroupsForTreeView();\r\n        //get note diagnosis\r\n        this.doctorService.getNoteDiagnosis(vm.noteId)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    vm.noteDiagnosis = response;\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                })\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        let vm = this;\r\n        //get organization in case of update\r\n        if (this.noteLabTestId == 'new') {\r\n            vm.showProgress = true;\r\n            if (this.noteLabTestId && this.noteLabTestId != undefined) {\r\n                this.doctorService.getClinicNoteLabTestById(this.noteLabTestId)\r\n                    .subscribe(\r\n                        function (response: any) {\r\n                            vm.labTestToSave = response;\r\n                            vm.displaySelectedParentGroupNode(vm.labTestToSave.labTestId);\r\n                        },\r\n                        function (error: any) {\r\n                            vm.toastr.error(error, '');\r\n                            vm.showProgress = false;\r\n                        },\r\n                        function () {\r\n                            vm.showProgress = false;\r\n                        });\r\n            }\r\n        }\r\n        if (this.noteLabTestId != 'new') {\r\n            vm.showProgress = true;\r\n            if (this.noteLabTestId && this.noteLabTestId != \"undefined\") {\r\n                this.doctorService.getClinicNoteLabTestById(this.noteLabTestId)\r\n                    .subscribe(\r\n                        function (response: any) {\r\n                            vm.labTestToSave = response;\r\n                        },\r\n                        function (error: any) {\r\n                            vm.toastr.error(error, '');\r\n                            vm.showProgress = false;\r\n                        },\r\n                        function () {\r\n                            vm.showProgress = false;\r\n                        });\r\n            }\r\n        }\r\n    }\r\n\r\n    getClinicDepartmentLaboratoryTestsGroupsForTreeView() {\r\n        let vm = this;\r\n        vm.isAll = true;\r\n        //get department services groups\r\n        this.doctorService.getClinicDivisionLaboratoryTestsGroupsForTreeView(vm.divisionId)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    vm.labTests = response;\r\n                    if (vm.labTestToSave) {\r\n                        vm.addModelToServicesList(vm.labTestToSave)\r\n                        vm.expandAll();\r\n                    }\r\n\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n    }\r\n\r\n    displaySelectedParentGroupNode(labTestId: string) {\r\n        let vm = this\r\n        vm.labTests.forEach(node => {\r\n            vm.displaySelectedNodeRecursive(node, labTestId);\r\n        });\r\n    }\r\n    getAllLabTestsGroupsForTreeView(needAll?: boolean) {\r\n        let vm = this;\r\n        vm.isAll = false;\r\n        /////////////////////////get all services groups\r\n        this.doctorService.getLaboratoryTestsGroupsForTreeView(vm.clinicId)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    vm.labTests = response;\r\n                    if (needAll) {\r\n                        vm.getAllLabs = false;\r\n                        vm.labTreeDataSourceItems = response;\r\n                        vm.expandAll();\r\n                    }\r\n\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n    }\r\n    private displaySelectedNodeRecursive(node: TreeNode, labTestId: string) {\r\n        let vm = this;\r\n        if (node.children) {\r\n            node.children.forEach((childNode: any) => {\r\n                this.displaySelectedNodeRecursive(childNode, labTestId);\r\n\r\n                if (childNode.data == labTestId && childNode.type.toLocaleLowerCase() == \"laboratorytest\")\r\n                    this.selectedNode = childNode;\r\n\r\n            });\r\n        }\r\n    }\r\n    nodeSelect(event: any) {\r\n        this.labTestToSave.labTestId = event.node.data;\r\n        this.labTestToSave.labTestCode = event.node.code;\r\n        this.labTestToSave.labTestName = event.node.name;\r\n\r\n    }\r\n    nodeUnselect(event: any) {\r\n        this.labTestToSave.labTestId = '';\r\n    }\r\n    expandAll() {\r\n        this.labTreeDataSourceItems.forEach(node => {\r\n            this.expandRecursive(node, true);\r\n        });\r\n    }\r\n\r\n    collapseAll() {\r\n        this.labTreeDataSourceItems.forEach(node => {\r\n            this.expandRecursive(node, false);\r\n        });\r\n    }\r\n\r\n    private expandRecursive(node: TreeNode, isExpand: boolean) {\r\n        node.expanded = isExpand;\r\n        if (node.children) {\r\n            node.children.forEach(childNode => {\r\n                this.expandRecursive(childNode, isExpand);\r\n            });\r\n        }\r\n    }\r\n\r\n    onSubmit(): void {\r\n        let vm = this;\r\n        vm.showProgress = true;\r\n        vm.labTestToSave.clinicNoteId = vm.noteId;\r\n        if (!(this.labTestToSave.id > 0)) {\r\n            // Add new\r\n            this.doctorService.createClinicNoteLabTest(this.labTestToSave)\r\n                .subscribe(\r\n                    function (response: any) {\r\n                        let msg = vm.translate.instant(\"SavedSuccessfully\");\r\n                        vm.toastr.success(msg, '');\r\n                        vm.labTestToSave = response;\r\n                        vm.noteLabTestId = vm.labTestToSave.id;\r\n                        vm.onBack.emit();\r\n\r\n                    },\r\n                    function (error: any) {\r\n                        //console.log(\"Error happened\" + error)\r\n                        vm.toastr.error(error, '');\r\n                        vm.showProgress = false;\r\n                    },\r\n                    function () {\r\n                        vm.showProgress = false;\r\n                    }\r\n                );\r\n        }\r\n        else {\r\n            // update\r\n            this.doctorService.updateClinicNoteLabTest(this.labTestToSave)\r\n                .subscribe(\r\n                    function (response: any) {\r\n                        let msg = vm.translate.instant(\"SavedSuccessfully\");\r\n                        vm.toastr.success(msg, '');\r\n                        vm.labTestToSave = response;\r\n                        vm.onBack.emit();\r\n\r\n                    },\r\n                    function (error: any) {\r\n                        //console.log(\"Error happened\" + error)\r\n                        vm.toastr.error(error, '');\r\n                        vm.showProgress = false;\r\n                    },\r\n                    function () {\r\n                        vm.showProgress = false;\r\n                    });\r\n        }\r\n    }\r\n\r\n    clear(): void {\r\n        this.labTestToSave = { quantity: 1 };\r\n        this.noteLabTestId = 'new';\r\n        this.selectedNode = {};\r\n        this.labTestToSave.labTestId = '';\r\n        this.active = false;\r\n        setTimeout(() => this.active = true, 0);\r\n    }\r\n    goBack() {\r\n        this.onBack.emit();\r\n\r\n    }\r\n\r\n    addModelToServicesList(returnedModel: any) {\r\n        //  var existElement = this.services.find(o => o.serviceId == vm.returnedModel.serviceId);\r\n        // we have tree source not flat source\r\n        this.displaySelectedNode(returnedModel.labTestId, this.labTreeDataSourceItems);\r\n        if (this.selectedLabNode == undefined) {\r\n            this.displaySelectedNode(returnedModel.labTestId, this.labTests)\r\n            if (this.selectedLabNode != undefined)\r\n                this.addServiceToDepartmentList(this.selectedLabNode);\r\n        }\r\n\r\n    }\r\n    addServiceToDepartmentList(node: TreeNode) {\r\n        // var parentNode = this.services[0];\r\n        this.labTreeDataSourceItems[0].children.push(node);\r\n        this.selectedLabNode = node;\r\n    }\r\n    displaySelectedNode(nodeId: string, services: any[]) {\r\n        let vm = this\r\n        services.forEach(node => {\r\n            if (node.data == nodeId && node.type == \"LaboratoryTest\")\r\n                vm.selectedLabNode = node;\r\n\r\n            vm.displayNodeRecursive(node, nodeId);\r\n\r\n        });\r\n    }\r\n\r\n    private displayNodeRecursive(node: TreeNode, nodeId: string) {\r\n        if (node.children) {\r\n            node.children.forEach(childNode => {\r\n                this.displayNodeRecursive(childNode, nodeId);\r\n\r\n                if (childNode.data == nodeId && childNode.type == \"LaboratoryTest\") {\r\n                    this.selectedMedicationNode = childNode;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n\r\n}","<form novalidate *ngIf=\"active\" class=\"form-horizontal\" name=\"organizationForm\" (ngSubmit)=\"onSubmit()\" #organizationForm=\"ngForm\">\r\n    <div class=\"form-group\">\r\n        <label for=\"txtName\" class=\"control-label col-md-2\">{{ 'TestName' | translate}} </label>\r\n        <div class=\"col-md-4\">\r\n            <a class=\"pointer\" (click)=\"getAllLabTestsGroupsForTreeView()\" *ngIf=\"isAll\">{{ 'GetAll' | translate}}</a>\r\n            <a class=\"pointer\" (click)=\"getClinicDepartmentLaboratoryTestsGroupsForTreeView()\" *ngIf=\"!isAll\">{{ 'GetSpecific' | translate}}</a>\r\n            <div class=\"row nopadding\">\r\n                <input [placeholder]=\"'SearchNameOrCode' | translate\" class=\"form-control\" [(ngModel)]=\"filterString\" name=\"txtFilterString\" #txtFilterString=\"ngModel\" />\r\n            </div>\r\n            <div class=\"nopadding treeBorder\">\r\n                <p-tree [value]=\"labTests | filterbynameorcode:filterString : leafType  | translateObjects  : 'label' : 'labelTranslation'\" selectionMode=\"single\" [(selection)]=\"selectedFiles\" class=\"height100\" (onNodeSelect)=\"nodeSelect($event)\" (onNodeUnselect)=\"nodeUnselect($event)\">\r\n                    <ng-template let-node pTemplate=\"ClinicDepartmentLaboratoryTestsGroup\">\r\n                        <span class=\"nav-icon\"><i class=\"fa fa-cubes\"></i></span>\r\n                        &nbsp;\r\n                        {{node.label}}\r\n                    </ng-template>\r\n                    <ng-template let-node pTemplate=\"LaboratoryTestsGroup\">\r\n                        <span class=\"nav-icon\"><i class=\"fa fa-cubes\"></i></span>\r\n                        &nbsp;\r\n                        {{node.label}}\r\n                    </ng-template>\r\n                    <ng-template let-node pTemplate=\"LaboratoryTest\">\r\n                        <span class=\"nav-icon\"><i class=\"fa fa-cube\"></i></span>\r\n                        &nbsp;\r\n                        {{node.label}}\r\n                    </ng-template>\r\n                </p-tree>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"labTestCode\" class=\"control-label col-md-2\">{{ 'TestCode' | translate}}</label>\r\n        <div class=\"col-md-2\">\r\n            <input id=\"labTestCode\" name=\"labTestCode\" class=\"form-control\" [(ngModel)]='labTestToSave.labTestCode' disabled />\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"quantity\" class=\"control-label col-md-2\">{{ 'Quantity' | translate}}</label>\r\n        <div class=\"col-md-2\">\r\n            <input type=\"number\" id=\"quantity\" name=\"quantity\" class=\"form-control\" [(ngModel)]='labTestToSave.quantity'/>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"ddlDiagnosis\" class=\"control-label col-md-2\">{{ 'Diagnosis' | translate}}</label>\r\n        <div class=\"col-md-4\">\r\n            <select class=\"form-control\" id=\"ddlDiagnosis\" name=\"ddlDiagnosis\"  [(ngModel)]='labTestToSave.diagnoseId'>\r\n                <option value=\"\">{{ 'Select' | translate}}</option>\r\n                <option *ngFor=\"let obj of noteDiagnosis\" [value]=\"obj.id\">{{obj.name}}</option>\r\n            </select>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"txtRemarks\" class=\"control-label col-md-2\">{{ 'Description' | translate}} </label>\r\n        <div class=\"col-md-6\">\r\n            <textarea class=\"form-control\" id=\"txtRemarks\" name=\"txtRemarks\" [(ngModel)]='labTestToSave.description'></textarea>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <div class=\"col-md-4 col-md-offset-2\">\r\n            <button type=\"submit\" class=\"btn btn-primary\">{{ 'Save' | translate}}</button>\r\n            <button class=\"btn btn-primary\" (click)=\"clear()\">{{ 'New' | translate}}</button>\r\n            <button class=\"btn btn-primary\" type=\"button\" (click)=\"goBack()\">{{ 'Back' | translate}}</button>\r\n        </div>\r\n    </div>\r\n</form>","import { Component, OnInit, OnChanges, ViewChild, Input } from '@angular/core';\r\nimport { Table } from 'primeng/table';\r\n\r\n@Component({\r\n\r\n    selector: 'patient-laboratoryGrid',\r\n    templateUrl: 'patient-laboratoryGrid.component.html',\r\n})\r\n\r\nexport class PatientLaboratoryGridComponent implements OnInit, OnChanges {\r\n\r\n    @Input() laboratories!: any[];\r\n    @Input() noteLaboratories!: any[];\r\n    @Input() diagnosis: any[] = [];\r\n    @Input() masterList!: any[];\r\n    @Input() noteId!: number;\r\n\r\n    allLaboratories: any[] = [];\r\n    lstToTranslated: string[] = ['labTestName', 'labTestNameTranslation'];\r\n    @ViewChild('dt') table!: Table;\r\n    \r\n    ngOnInit(): void {\r\n\r\n    }\r\n\r\n    ngOnChanges(): void {\r\n        if (this.laboratories && this.noteLaboratories && this.masterList) {\r\n            this.allLaboratories = [];\r\n            // loop for all services \r\n            for (let laboratory of this.laboratories) {\r\n                let bindedLaboratory: any = this.createClinicNoteLaboratory(laboratory);\r\n\r\n                this.allLaboratories.push(bindedLaboratory);\r\n\r\n                if (bindedLaboratory.id == 0) // new object\r\n                {\r\n                    // check if laboratory exsists in note laboratories \r\n                    let existedLaboratory = this.noteLaboratories.find(s => s.labTestId == laboratory.data);\r\n\r\n                    if (existedLaboratory) {\r\n                        bindedLaboratory.id = existedLaboratory.id;\r\n                        bindedLaboratory.isSelected = true;\r\n                        bindedLaboratory.clinicNoteId = this.noteId;\r\n                        bindedLaboratory.labTestId = laboratory.data;\r\n                        bindedLaboratory.labTestCode = laboratory.code;\r\n                        bindedLaboratory.labTestName = laboratory.label;\r\n                        bindedLaboratory.quantity = existedLaboratory.quantity;\r\n                        bindedLaboratory.diagnoseId = existedLaboratory.diagnoseId;\r\n                        bindedLaboratory.description = existedLaboratory.description;\r\n                        bindedLaboratory.labTestNameTranslation = existedLaboratory.labTestNameTranslation;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    createClinicNoteLaboratory(laboratory: any): any {\r\n        let bindedLaboratory: any;\r\n\r\n        bindedLaboratory = this.masterList.find(s => s.labTestId == laboratory.data);\r\n\r\n        if (bindedLaboratory == undefined) {\r\n            bindedLaboratory = { id: 0, isSelected: false, clinicNoteId: this.noteId, labTestId: laboratory.data, labTestCode: laboratory.code, labTestName: laboratory.label, quantity: 1, labTestNameTranslation: laboratory.labelTranslation };\r\n\r\n            this.masterList.push(bindedLaboratory);\r\n        }\r\n\r\n        return bindedLaboratory;\r\n    }\r\n\r\n    updateSelectedLaboratory(labTestId: any, event: any) {\r\n        if (!event.target.checked) {\r\n            // if the item removed clear data\r\n            let noteRadiology = this.allLaboratories.find(s => s.labTestId == labTestId);\r\n            noteRadiology.quantity = 1;\r\n            noteRadiology.isSelected = false;\r\n            noteRadiology.diagnoseId = 0;\r\n            noteRadiology.description = '';\r\n\r\n            let masterNoteRadiology = this.masterList.find(s => s.labTestId == labTestId);\r\n            masterNoteRadiology.quantity = 1;\r\n            masterNoteRadiology.isSelected = false;\r\n            masterNoteRadiology.diagnoseId = 0;\r\n            masterNoteRadiology.description = '';\r\n        }\r\n        else {\r\n            let noteLaboratory = this.allLaboratories.find(s => s.labTestId == labTestId);\r\n            let masterNoteLaboratory = this.masterList.find(s => s.labTestId == labTestId);\r\n            noteLaboratory.isSelected = true;\r\n            masterNoteLaboratory.isSelected = true;\r\n        }\r\n    }\r\n\r\n}\r\n","<div class=\"inner-addon left-addon\">\r\n    <i class=\"glyphicon glyphicon-search\"></i>\r\n    <input pInputText type=\"text\" (input)=\"dt.filterGlobal($event.target.value, 'contains')\"\r\n        [placeholder]=\"'Search' | translate\" />\r\n</div>\r\n<!---New Table-->\r\n<p-table #dt [value]=\"allLaboratories\" dataKey=\"id\" [rowHover]=\"true\" [rows]=\"10\" [showCurrentPageReport]=\"true\"\r\n    [rowsPerPageOptions]=\"[10,20,30,40,50,100]\" [paginator]=\"true\"\r\n    currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" [filterDelay]=\"0\"\r\n    [globalFilterFields]=\"['labTestCode','labTestName','Quantity']\">\r\n\r\n    <ng-template pTemplate=\"header\">\r\n        <tr>\r\n            <th></th>\r\n            <th pSortableColumn=\"labTestCode\">{{'LaboratoryCode' | translate}} <p-sortIcon field=\"labTestCode\"></p-sortIcon>\r\n            </th>\r\n            <th pSortableColumn=\"labTestName\">{{'LaboratoryName' | translate}} <p-sortIcon field=\"labTestName\">\r\n                </p-sortIcon>\r\n            </th>\r\n            <th pSortableColumn=\"Quantity\">{{'Quantity' | translate}} <p-sortIcon field=\"Quantity\">\r\n                </p-sortIcon>\r\n            </th>\r\n            <th><span styleClass=\"text-center width70\">{{'DiagnoseName' | translate}} </span>\r\n            </th>\r\n            <th><span styleClass=\"text-center width70\">{{'Remarks' | translate}} </span>\r\n            </th>\r\n        </tr>\r\n\r\n    </ng-template>\r\n    <ng-template pTemplate=\"body\" let-item>\r\n        <tr class=\"p-selectable-row\">\r\n            <td>\r\n                <input type=\"checkbox\" [checked] =\"item.isSelected\"\r\n                   (change)=\"updateSelectedLaboratory(item.labTestId, $event)\" />\r\n            </td>\r\n            <td>\r\n                {{item.labTestCode}}\r\n            </td>\r\n            <td>\r\n                <span>{{item.labTestName}}</span>\r\n            </td>\r\n            <td>\r\n                <input type=\"number\" min=\"0\" id=\"txtQuantity\" name=\"txtQuantity\" [(ngModel)]='item.quantity' class=\"form-control\" />\r\n            </td>\r\n            <td>\r\n                <select class=\"form-control\" name=\"ddlDiagnosis\" [(ngModel)]='item.diagnoseId' >\r\n                    <option *ngFor=\"let obj of diagnosis| translateObjects\" [value]=\"obj.id\">{{obj.name}}</option>\r\n                </select>\r\n            </td>\r\n            <td style=\"text-align: center\">\r\n                <textarea class=\"form-control\" id=\"txtRemarks\" name=\"txtRemarks\" [(ngModel)]='item.description'></textarea>\r\n            </td>\r\n        </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"emptymessage\">\r\n        <tr>\r\n            <td colspan=\"8\">No data found.</td>\r\n        </tr>\r\n    </ng-template>\r\n</p-table>\r\n<!--End Table-->","import { Component, OnInit, ViewChild, Input, Output, EventEmitter } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { DoctorService } from '../../doctors/shared/doctor.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { SharedService } from '../../shared/shared/shared.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\nimport { Table } from 'primeng/table';\r\n\r\n@Component({\r\n    selector: 'patient-laboratory',\r\n    templateUrl: 'patient-laboratory.component.html',\r\n})\r\n\r\nexport class PatientLaboratoryComponent implements OnInit {\r\n    selectBasicTab: boolean = true;\r\n    @Input() noteId!: any;\r\n    isDetailsVisible: boolean = false;\r\n    @Input() allowEditing: boolean = true;\r\n    @Input() usedInClinicNoteMedications: boolean = false;\r\n    lstToTranslated: string[] = [];\r\n    active = true;\r\n    labTests: any[] = [];\r\n    labTestToBeDeleted: any;\r\n    noteLabTestId: any;\r\n    classifications = [];\r\n    showProgress = false;\r\n    @ViewChild(\"fileInput\") fileInput!: any;\r\n    filterString: any;\r\n    @ViewChild('dt') table!: Table;\r\n    constructor(private doctorService: DoctorService\r\n        , private sharedService: SharedService\r\n        , public toastr: ToastrService\r\n        , private _route: ActivatedRoute\r\n        , public storage: LocalStorageService\r\n        , public translate: TranslateService\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        let vm = this;\r\n        //   this.clinicId = this.storage.retrieve(\"ClinicID\");\r\n\r\n        vm.loadNoteLabTestList();\r\n\r\n        this.lstToTranslated = ['diagnoseName', 'diagnoseNameTranslation', 'labTestName', 'labTestNameTranslation'];\r\n    }\r\n\r\n    loadNoteLabTestList() {\r\n        if (this.noteId && this.noteId > 0) {\r\n            let vm = this;\r\n            vm.showProgress = true;\r\n            this.doctorService.getClinicNoteLabTests(vm.noteId).subscribe(\r\n                function (response: any) {\r\n                    vm.labTests = response;\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                },\r\n                function () { // finally\r\n                    vm.showProgress = false;\r\n                });\r\n\r\n        }\r\n    }\r\n\r\n    selectLabTestToDelete(id: string) {\r\n        this.labTestToBeDeleted = id;\r\n    }\r\n    deleteSelectedItem(): void {\r\n        let vm = this;\r\n        if (this.labTestToBeDeleted == '') {\r\n            let msg = vm.translate.instant(\"ItemToBeDeleted\");\r\n            vm.toastr.warning(msg, '');\r\n            return;\r\n        }\r\n        vm.showProgress = true;\r\n        this.doctorService.deleteClinicNoteLabTest(this.labTestToBeDeleted)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    let msg = vm.translate.instant(\"DeletedSuccessfully\");\r\n                    vm.toastr.success(msg, '');\r\n                    // remove delete object from collection\r\n                    var selectedObject = vm.labTests.find(o => o.id == vm.labTestToBeDeleted);\r\n                    var index = vm.labTests.indexOf(selectedObject);\r\n                    if (index > -1)\r\n                        vm.labTests.splice(index, 1);\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                    vm.showProgress = false;\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n    }\r\n\r\n    showDetails(id?: string) {\r\n        this.isDetailsVisible = true;\r\n        this.noteLabTestId = id;\r\n    }\r\n\r\n    hideDetails() {\r\n        this.isDetailsVisible = false;\r\n        this.loadNoteLabTestList();\r\n    }\r\n    editItem(id: string): void {\r\n        //this.isForm = true;\r\n        this.isDetailsVisible = true;\r\n        this.noteLabTestId = id;\r\n\r\n    }\r\n\r\n}","<div id=\"divTable\" class=\"padding5\" *ngIf=\"!isDetailsVisible\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-4 nopadding\">\r\n            <input pInputText type=\"text\" [(ngModel)]='filterString'\r\n                (input)=\"dt.filterGlobal($event.target.value, 'contains')\" [placeholder]=\"'Search' | translate\" />\r\n        </div>\r\n\r\n        <div class=\"col-md-8 align-reverse nopadding\" *ngIf=\"allowEditing\">\r\n            <button type=\"button\" class=\"btn btn-primary\" (click)=\"showDetails()\">{{ 'NewTest' | translate}} </button>\r\n        </div>\r\n    </div>\r\n    <div class=\"padding2\"></div>\r\n\r\n    <!--<table class=\"table table-responsive table-hover\">\r\n        <thead class=\"alert alert-info\">\r\n            <tr>\r\n                <th>Test Code</th>\r\n                <th>Test Name </th>\r\n                <th>Quantity</th>\r\n                <th>Diagnsis</th>\r\n                <th>Remarks</th>\r\n                <th class=\"text-center\" *ngIf=\"allowEditing\">Edit </th>\r\n                <th class=\"text-center\" *ngIf=\"allowEditing\"> Remove </th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr>\r\n                <td>1255</td>\r\n                <td>فحص 1</td>\r\n                <td>2</td>\r\n                <td>تشخيص 1</td>\r\n                <td>ملاحظات ملاحظات ملاحظات ملاحظات </td>\r\n                <td class=\"text-center\" *ngIf=\"allowEditing\">\r\n                    <a class=\"pointer\" (click)=\"showDetails()\">\r\n                        <img src=\"assets/images/edit-24.png\" />\r\n                    </a>\r\n                </td>\r\n                <td class=\"text-center\" *ngIf=\"allowEditing\">\r\n                    <a class=\"pointer\">\r\n                        <img src=\"assets/images/delete-24.png\" />\r\n                    </a>\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td>1220</td>\r\n                <td>فحص 2</td>\r\n                <td>2</td>\r\n                <td>تشخيص 2</td>\r\n                <td>ملاحظات ملاحظات ملاحظات ملاحظات </td>\r\n                <td class=\"text-center\" *ngIf=\"allowEditing\">\r\n                    <a class=\"pointer\" (click)=\"showDetails()\">\r\n                        <img src=\"assets/images/edit-24.png\" />\r\n                    </a>\r\n                </td>\r\n                <td class=\"text-center\" *ngIf=\"allowEditing\">\r\n                    <a class=\"pointer\">\r\n                        <img src=\"assets/images/delete-24.png\" />\r\n                    </a>\r\n                </td>\r\n            </tr>\r\n\r\n        </tbody>\r\n    </table>-->\r\n\r\n    <!---New Table-->\r\n    <p-table #dt [value]=\"labTests\" dataKey=\"id\" [rowHover]=\"true\" [rows]=\"10\" [showCurrentPageReport]=\"true\"\r\n        [rowsPerPageOptions]=\"[10,20,30,40,50,100]\" [paginator]=\"true\"\r\n        currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" [filterDelay]=\"0\"\r\n        [globalFilterFields]=\"['labTestCode','labTestName','quantity','diagnoseName']\">\r\n\r\n        <ng-template pTemplate=\"header\">\r\n            <tr>\r\n                <th pSortableColumn=\"labTestCode\">{{'TestCode' | translate}} <p-sortIcon field=\"labTestCode\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"labTestName\">{{'TestName' | translate}} <p-sortIcon field=\"labTestName\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"quantity\">{{'Quantity' | translate}} <p-sortIcon field=\"quantity\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"diagnoseName\">{{'DiagnoseName' | translate}} <p-sortIcon field=\"diagnoseName\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th><span styleClass=\"text-center width70\">{{'Edit' | translate}} </span>\r\n                </th>\r\n                <th><span styleClass=\"text-center width70\">{{'Delete' | translate}} </span>\r\n                </th>\r\n            </tr>\r\n\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-item>\r\n            <tr class=\"p-selectable-row\">\r\n                <td>\r\n                    {{item.labTestCode}}\r\n                </td>\r\n                <td>\r\n                    <span>{{item.labTestName}}</span>\r\n                </td>\r\n                <td>\r\n                    <span>{{item.quantity}}</span>\r\n                </td>\r\n                <td>\r\n                    <span>{{item.diagnoseName}}</span>\r\n                </td>\r\n                <td>\r\n                    <a class=\"pointer\" (click)=\"editItem(item.id)\">\r\n                        <img src=\"assets/images/edit-24.png\" />\r\n                    </a>\r\n                </td>\r\n                <td style=\"text-align: center\">\r\n                    <a data-toggle=\"modal\" data-target=\"#deleteNoteLabTest\" class=\"pointer\"\r\n                        (click)=\"selectLabTestToDelete(item.id)\">\r\n                        <img src=\"assets/images/DeleteRed.png\" />\r\n                    </a>\r\n                </td>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"emptymessage\">\r\n            <tr>\r\n                <td colspan=\"8\">No data found.</td>\r\n            </tr>\r\n        </ng-template>\r\n    </p-table>\r\n    <!--End Table-->\r\n\r\n    <!--noteLabTestId-->\r\n</div>\r\n<div id=\"divTable\" class=\"padding5\" *ngIf=\"isDetailsVisible\">\r\n    <patient-lab-details [noteId]=\"noteId\" [noteLabTestId]='noteLabTestId' (onBack)=\"hideDetails()\">\r\n    </patient-lab-details>\r\n</div>\r\n\r\n<div id=\"deleteNoteLabTest\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\"> {{ 'DeleteConfirmation' | translate}}</h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <p>{{ 'AreYouSureDelete' | translate}}</p>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-danger\" (click)=\"deleteSelectedItem()\" data-dismiss=\"modal\">{{\r\n                    'Yes' | translate}}</button>\r\n                <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\">{{ 'No' | translate}}</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>","import {Component, OnInit, ViewChild, Input, Output, EventEmitter} from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { TreeNode } from 'primeng/api';\r\nimport {TranslateService} from '@ngx-translate/core';\r\n\r\nimport { DoctorService } from '../../doctors/shared/doctor.service';\r\nimport {ClinicService} from '../../clinics/shared/clinic.service';\r\nimport { UtilityClass } from '../../shared/shared/utility.class';\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport {LocalStorageService} from 'ng2-webstorage';\r\n\r\n@Component({\r\n   \r\n    selector: 'patient-medication-details',\r\n    templateUrl: 'patient-medication-details.component.html',\r\n})\r\n\r\nexport class PatientMedicationDetailsComponent implements OnInit {\r\n    active = true;\r\n    showProgress = false;\r\n    selectBasicTab: boolean = true;\r\n\r\n    filterString!:string;\r\n    leafType: string = 'Drug';\r\n\r\n    clinicId!:any;\r\n    divisionId!:any;\r\n    recorderId!:any;\r\n\r\n    selectedMedicationNode: any;\r\n    @Input() patientId!: number;\r\n    @Input() clinicNoteId!: number;\r\n    @Input() toSaveClinicNoteMedication: any;\r\n    @Output() onBack = new EventEmitter<any>();\r\n    medicationTreeDataSourceItems: any[] = [];\r\n    drugDosageUnitsList: any[] = [];\r\n    drugFrequenciesList: any[] = [];\r\n    durationUnitsList: any[] = [];\r\n    clinicNoteDiagnosisList: any[] = [];\r\n    getAllMedications = true;\r\n    allDrugs = [];\r\n    nodeToAdded!: TreeNode;\r\n    ttt = \"aaa\";\r\n    utilityClass: UtilityClass = new UtilityClass();\r\n\r\n    constructor(private doctorService: DoctorService\r\n        , private clinicService: ClinicService\r\n        , public toastr: ToastrService\r\n        , private _route: ActivatedRoute\r\n        , public localStorage: LocalStorageService\r\n        , public translate: TranslateService\r\n    )\r\n    { }\r\n\r\n    ngOnInit(): void {\r\n        this.divisionId = this._route.snapshot.params['divisionId'];\r\n        this.toSaveClinicNoteMedication = {};\r\n        this.clinicId = this.localStorage.retrieve(\"ClinicID\");\r\n        this.recorderId = this.localStorage.retrieve(\"UserID\");\r\n        this.selectedMedicationNode = null;\r\n        this.getAllDrugGroupsForTreeView(false);\r\n        this.getClinicDepartmentDrugGroupsForTreeView();\r\n\r\n        let vm = this;\r\n        //get drop down lists initial values\r\n        this.doctorService.getClinicNoteMedicationWrapper(vm.clinicNoteId)\r\n            .subscribe(\r\n            function (response:any) {\r\n                vm.drugDosageUnitsList = response.drugUnits;\r\n                vm.drugFrequenciesList = response.drugFrequencies;\r\n                vm.durationUnitsList = response.durationUnits;\r\n                vm.clinicNoteDiagnosisList = response.clinicNoteDiagnosis;\r\n            },\r\n            function (error:any) { \r\n                vm.toastr.error( error, '');\r\n            },\r\n            function () {\r\n                vm.showProgress = false;\r\n            });\r\n    }\r\n\r\n    getClinicDepartmentDrugGroupsForTreeView() {\r\n        let vm = this;\r\n        vm.getAllMedications = true;\r\n        //get department drug groups\r\n        this.doctorService.getClinicDivisionDrugGroupsForTreeView(vm.divisionId)\r\n            .subscribe(\r\n            function (response:any) {\r\n                vm.medicationTreeDataSourceItems = response;\r\n                if (vm.toSaveClinicNoteMedication) {\r\n                    vm.addModelToServicesList(vm.toSaveClinicNoteMedication)\r\n                   // vm.displaySelectedNode(vm.toSaveClinicNoteMedication.drugId, \"Drug\");\r\n                    vm.expandAll();\r\n                }\r\n            },\r\n            function (error:any) { \r\n                vm.toastr.error( error, '');\r\n            },\r\n            function () {\r\n                vm.showProgress = false;\r\n            });\r\n    }\r\n    getAllDrugGroupsForTreeView(needAll: boolean) {\r\n        let vm = this;\r\n\r\n        /////////////////////////get all drug groups\r\n        this.clinicService.getDrugsGroupsForTree(vm.clinicId)\r\n            .subscribe(\r\n            function (response:any) {\r\n\r\n                vm.allDrugs = response;\r\n                if (needAll) {\r\n                    vm.getAllMedications = false;\r\n                    vm.medicationTreeDataSourceItems = response;\r\n                    vm.expandAll();\r\n                }\r\n            },\r\n            function (error:any) { \r\n                vm.toastr.error( error, '');\r\n            },\r\n            function () {\r\n                vm.showProgress = false;\r\n            });\r\n    }\r\n\r\n    addModelToServicesList(returnedModel: any) {\r\n        //  var existElement = this.services.find(o => o.serviceId == vm.returnedModel.serviceId);\r\n        // we have tree source not flat source\r\n        this.displaySelectedNode(returnedModel.drugId, this.medicationTreeDataSourceItems);\r\n        if (this.selectedMedicationNode == undefined) {\r\n            this.displaySelectedNode(returnedModel.drugId, this.allDrugs)\r\n            if (this.selectedMedicationNode != undefined)\r\n                this.addServiceToDepartmentList(this.selectedMedicationNode);\r\n        }\r\n\r\n    }\r\n    addServiceToDepartmentList(node: TreeNode) {\r\n        // var parentNode = this.services[0];\r\n        this.medicationTreeDataSourceItems[0].children.push(node);\r\n        this.selectedMedicationNode = node;\r\n        this.ttt = \"bbbb\";\r\n    }\r\n    displaySelectedNode(nodeId: string, services: any[]) {\r\n        let vm = this\r\n        services.forEach(node => {\r\n            if (node.data == nodeId && node.type == \"Drug\")\r\n                vm.selectedMedicationNode = node;\r\n\r\n            vm.displayNodeRecursive(node, nodeId);\r\n\r\n        });\r\n    }\r\n\r\n    private displayNodeRecursive(node: TreeNode, nodeId: string) {\r\n        if (node.children) {\r\n            node.children.forEach(childNode => {\r\n                this.displayNodeRecursive(childNode, nodeId);\r\n\r\n                if (childNode.data == nodeId && childNode.type == \"Drug\") {\r\n                    this.selectedMedicationNode = childNode;\r\n                }\r\n            });\r\n        }\r\n    }\r\n     expandAll() {\r\n        this.medicationTreeDataSourceItems.forEach(node => {\r\n            this.expandRecursive(node, true);\r\n        });\r\n    }\r\n\r\n    collapseAll() {\r\n        this.medicationTreeDataSourceItems.forEach(node => {\r\n            this.expandRecursive(node, false);\r\n        });\r\n    }\r\n\r\n    private expandRecursive(node: TreeNode, isExpand: boolean) {\r\n        node.expanded = isExpand;\r\n        if (node.children) {\r\n            node.children.forEach(childNode => {\r\n                this.expandRecursive(childNode, isExpand);\r\n            });\r\n        }\r\n    }\r\n\r\n    onSubmit(): void {\r\n        let vm = this;\r\n        if (!this.toSaveClinicNoteMedication.drugCode || this.toSaveClinicNoteMedication.drugCode == '')\r\n            return;\r\n\r\n        this.toSaveClinicNoteMedication.startDate = this.utilityClass.getUtcDateTime(this.toSaveClinicNoteMedication.startDate);\r\n\r\n        vm.showProgress = true;\r\n        vm.toSaveClinicNoteMedication.patientId = vm.patientId;\r\n        vm.toSaveClinicNoteMedication.clinicNoteId = vm.clinicNoteId;\r\n        vm.toSaveClinicNoteMedication.isCurrent = true;\r\n        if (vm.selectedMedicationNode)\r\n            vm.toSaveClinicNoteMedication.drugId = vm.selectedMedicationNode.data;\r\n        if (!this.toSaveClinicNoteMedication.hasOwnProperty('id') || this.toSaveClinicNoteMedication.id.toString().toLowerCase() == 'new') {\r\n            //Add new\r\n            vm.toSaveClinicNoteMedication.recorderId = vm.recorderId;\r\n            this.doctorService.createClinicNoteMedication(this.toSaveClinicNoteMedication)\r\n                .subscribe(\r\n                function (response:any) {\r\n                    let msg = vm.translate.instant(\"SavedSuccessfully\");\r\n                    vm.toastr.success(msg, '');\r\n                    vm.toSaveClinicNoteMedication = response;\r\n                    vm.clear();\r\n                    vm.onBack.emit(response);\r\n                },\r\n                function (error:any) { \r\n                    console.log( error)\r\n                    vm.toastr.error( error, '');\r\n                    vm.showProgress = false;\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n        }\r\n        else {\r\n            //update\r\n            this.doctorService.updateClinicNoteMedication(this.toSaveClinicNoteMedication)\r\n                .subscribe(\r\n                function (response:any) {\r\n                    let msg = vm.translate.instant(\"SavedSuccessfully\");\r\n                    vm.toastr.success(msg, '');\r\n                    vm.toSaveClinicNoteMedication = response;\r\n                    vm.clear();\r\n                    vm.onBack.emit(response);\r\n                },\r\n                function (error:any) { \r\n                    console.log(error)\r\n                    vm.toastr.error( error, '');\r\n                    vm.showProgress = false;\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n        }\r\n    }\r\n\r\n    clear(): void {\r\n        this.toSaveClinicNoteMedication = {};\r\n        this.active = false;\r\n        setTimeout(() => this.active = true, 0);\r\n    }\r\n\r\n\r\n    treeNodeSelected(event:any) {\r\n        if (event && event.node && event.node.code && event.node.code != '') {\r\n            this.toSaveClinicNoteMedication.drugCode = event.node.code;\r\n        }\r\n        else {\r\n            this.toSaveClinicNoteMedication.drugCode = '';\r\n        }\r\n    }\r\n\r\n    goBack() {\r\n        this.onBack.emit();\r\n    }\r\n\r\n\r\n}","<div *ngIf=\"showProgress\">\r\n    <loading></loading>\r\n</div>\r\n<form novalidate *ngIf=\"active\" class=\"form-horizontal\" name=\"organizationForm\" (ngSubmit)=\"onSubmit()\" #organizationForm=\"ngForm\">\r\n    <div class=\"form-group\">\r\n        <label for=\"txtName\" class=\"control-label col-md-2\">{{ 'MedicationName' | translate}}</label>\r\n        <div class=\"col-md-6\">\r\n            <a class=\"pointer\" (click)=\"getAllDrugGroupsForTreeView(true)\" *ngIf=\"getAllMedications\">{{ 'GetAll' | translate}}</a>\r\n            <a class=\"pointer\" (click)=\"getClinicDepartmentDrugGroupsForTreeView()\" *ngIf=\"!getAllMedications\">{{ 'GetSpecific' | translate}}</a>\r\n            <div class=\"nopadding treeBorder\" >\r\n                <div class=\"row nopadding\">\r\n                    <input placeholder=\"Search by name or code...\" class=\"form-control\" [(ngModel)]=\"filterString\" name=\"txtFilterString\" #txtFilterString=\"ngModel\" />\r\n                </div>\r\n                <p-tree [value]=\"medicationTreeDataSourceItems | filterbynameorcode:filterString : leafType  | translateObjects  : 'label' : 'labelTranslation' \" selectionMode=\"single\"\r\n                        [(selection)]=\"selectedMedicationNode\" (onNodeSelect)=\"treeNodeSelected($event)\">\r\n                    \r\n                    <ng-template let-node pTemplate=\"ClinicDepartmentDrugsGroup\">\r\n                        <span class=\"nav-icon\"><i class=\"fa fa-cubes\"></i></span>\r\n                        &nbsp;\r\n                        {{node.label}}\r\n                    </ng-template>\r\n                    <ng-template let-node pTemplate=\"DrugsGroup\">\r\n                        <span class=\"nav-icon\"><i class=\"fa fa-cubes\"></i></span>\r\n                        &nbsp;\r\n                        {{node.label}}\r\n                    </ng-template>\r\n                    <ng-template let-node pTemplate=\"Drug\">\r\n                        <span class=\"nav-icon\"><i class=\"fa fa-cube\"></i></span>\r\n                        &nbsp;\r\n                        {{node.label}}\r\n                    </ng-template>\r\n                </p-tree>\r\n            </div>\r\n        </div>\r\n        <label for=\"txtName\" class=\"control-label col-md-2\">{{ 'MedicationCode' | translate}}</label>\r\n        <div class=\"col-md-2\">\r\n            <input name=\"txtMedicationCode\" class=\"form-control\" disabled\r\n                   [(ngModel)]='toSaveClinicNoteMedication.drugCode' #txtMedicationCode=\"ngModel\" />\r\n        </div>\r\n        <div class=\"col-md-2\">\r\n            <div *ngIf=\"!toSaveClinicNoteMedication.drugCode || toSaveClinicNoteMedication.drugCode ==''\" class=\"alert alert-danger\">\r\n                {{ 'RequiredField' | translate}}\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"txtName\" class=\"control-label col-md-2\">{{ 'DosageQuantity' | translate}}</label>\r\n        <div class=\"col-md-2\">\r\n            <input type=\"number\" pattern=\"^[0-9]\\d*$\"  min=\"0\" name=\"txtMedicationDosageQuantity\" class=\"form-control\"\r\n                   [(ngModel)]='toSaveClinicNoteMedication.dosageQuantity' #txtMedicationDosageQuantity=\"ngModel\" />\r\n        </div>\r\n        <div class=\"col-md-2\"></div>\r\n        <label for=\"txtRemarks\" class=\"control-label col-md-2\">{{ 'Duration' | translate}}</label>\r\n        <div class=\"col-md-1\">\r\n            <input type=\"number\" pattern=\"^[0-9]\\d*$\" min=\"0\" id=\"txtName\" name=\"txtName\" class=\"form-control\"\r\n                   [(ngModel)]='toSaveClinicNoteMedication.duration' #txtRemarks=\"ngModel\" />\r\n        </div>\r\n        <div class=\"col-md-1\">\r\n            <select class=\"form-control\" name=\"ddlDrugDurationUnit\" [(ngModel)]=\"toSaveClinicNoteMedication.durationUnit\" #ddlDrugDurationUnit=\"ngModel\" required>\r\n                <option *ngFor=\"let item of durationUnitsList\" [value]=\"item.name\">{{item.name}}</option>\r\n            </select>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"txtName\" class=\"control-label col-md-2\">{{ 'Frequency' | translate}}</label>\r\n        <div class=\"col-md-2\">\r\n            <select class=\"form-control\" name=\"ddlDrugFrequencies\" [(ngModel)]=\"toSaveClinicNoteMedication.frequencyId\" #ddlDrugFrequencies=\"ngModel\"  required>\r\n                <option *ngFor=\"let item of drugFrequenciesList\" [value]=\"item.id\">{{item.name}}</option>\r\n            </select>\r\n        </div>\r\n        <div class=\"col-md-2\"></div>\r\n        <label for=\"txtName\" class=\"control-label col-md-2\">{{ 'StartDate' | translate}}</label>\r\n        <div class=\"col-md-2\">\r\n            <p-calendar [(ngModel)]=\"toSaveClinicNoteMedication.startDate\"\r\n                        [monthNavigator]=\"true\"\r\n                        [yearNavigator]=\"true\"\r\n                        dateFormat=\"dd/mm/yy\"\r\n                        [showIcon]=\"true\" [required]=\"true\"\r\n                        [ngModelOptions]=\"{standalone: true}\"\r\n                        yearRange=\"2000:2050\"></p-calendar>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"txtName\" class=\"control-label col-md-2\">{{ 'DosageUnit' | translate}}</label>\r\n        <div class=\"col-md-2\">\r\n            <select class=\"form-control\" name=\"ddlDosageUnits\" [(ngModel)]=\"toSaveClinicNoteMedication.dosageUnitId\" #ddlDosageUnits=\"ngModel\"  required>\r\n                <option *ngFor=\"let item of drugDosageUnitsList\" [value]=\"item.id\">{{item.name}}</option>\r\n            </select>\r\n        </div>\r\n        <div class=\"col-md-2\"></div>\r\n        <label for=\"txtName\" class=\"control-label col-md-2\">{{ 'Diagnosis' | translate}}</label>\r\n        <div class=\"col-md-4\">\r\n            <select class=\"form-control\" name=\"ddlClinicNoteDiagnosis\" [(ngModel)]=\"toSaveClinicNoteMedication.relatedDiagnoseId\" #ddlClinicNoteDiagnosis=\"ngModel\" required>\r\n                <option *ngFor=\"let item of clinicNoteDiagnosisList\" [value]=\"item.id\">{{item.name}}</option>\r\n            </select>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"txtName\" class=\"control-label col-md-2\">{{ 'Description' | translate}} </label>\r\n        <div class=\"col-md-6\">\r\n            <textarea class=\"form-control\" id=\"txtRemarks\" name=\"txtRemarks\"\r\n                      [(ngModel)]='toSaveClinicNoteMedication.description' #txtRemarks=\"ngModel\"></textarea>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <div class=\"col-md-4 col-md-offset-2\">\r\n            <button class=\"btn btn-primary\">{{ 'Save' | translate}}</button>\r\n            <button class=\"btn btn-primary\" type=\"button\" (click)=\"goBack()\">{{ 'Back' | translate}}</button>\r\n        </div>\r\n    </div>\r\n</form>","import { Component, OnInit, ViewChild, Input } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\nimport { DoctorService } from '../../doctors/shared/doctor.service';\r\nimport { SharedService } from '../../shared/shared/shared.service';\r\nimport { UtilityClass } from '../../shared/shared/utility.class';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\nimport { Table } from 'primeng/table';\r\n\r\n@Component({\r\n    selector: 'patient-medication',\r\n    templateUrl: 'patient-medication.component.html',\r\n})\r\n\r\nexport class PatientMedicationComponent implements OnInit {\r\n    selectBasicTab: boolean = true;\r\n\r\n    @Input() allowEditing: boolean = true;\r\n    @Input() patientId!: number;\r\n    @Input() clinicNoteId!: number;\r\n    @Input() usedInClinicNoteMedications: boolean = false;\r\n    utilityClass: UtilityClass = new UtilityClass();\r\n\r\n    isDetailsVisible: boolean = false;\r\n\r\n    active = true;\r\n    toSaveClinicNoteMedication: any = {};\r\n\r\n    clinicNoteMedicationList: any[] = [];\r\n    showProgress = false;\r\n\r\n    isDoctor: boolean = false;\r\n    previousTab: string = '';\r\n    nextTab: string = '';\r\n    lstToTranslated: string[] = [];\r\n    @ViewChild('dt') table!: Table;\r\n    constructor(private doctorService: DoctorService\r\n        , private sharedService: SharedService\r\n        , public toastr: ToastrService\r\n        , private _route: ActivatedRoute\r\n        , public storage: LocalStorageService\r\n        , public translate: TranslateService\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        this.lstToTranslated = ['drugName', 'drugNameTranslation', 'dosageUnitName', 'dosageUnitNameTranslation', 'frequencyName', 'frequencyNameTranslation', 'relatedDiagnoseName', 'relatedDiagnoseNameTranslation', 'recorderName', 'recorderNameTranslation'];\r\n        this.isDoctor = this.storage.retrieve(\"IsDoctor\");\r\n\r\n        if (this.isDoctor) {\r\n            this.previousTab = '/patient/diagnosis/1';\r\n            this.nextTab = '/patient/surgeries/1';\r\n        }\r\n        else {\r\n            this.previousTab = '/patient/vitalSigns/1';\r\n            this.nextTab = '/patient/services/1';\r\n        }\r\n\r\n        let thisComponent = this;\r\n\r\n        if (this.usedInClinicNoteMedications && this.clinicNoteId && this.clinicNoteId > 0) {\r\n            thisComponent.showProgress = true;\r\n            this.doctorService.getClinicNoteMedications(thisComponent.clinicNoteId)\r\n                .subscribe(\r\n                    function (clinicNoteMedication: any) {\r\n                        thisComponent.clinicNoteMedicationList = clinicNoteMedication;\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () { // finally\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n        }\r\n        else if (this.patientId != null && this.patientId > 0) {\r\n            thisComponent.showProgress = true;\r\n            this.doctorService.getPatientSnapshotMedications(thisComponent.patientId)\r\n                .subscribe(\r\n                    function (clinicNoteMedication: any) {\r\n                        thisComponent.clinicNoteMedicationList = clinicNoteMedication;\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () { // finally\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n        }\r\n    }\r\n\r\n    addNewClinicNoteMedication() {\r\n        this.toSaveClinicNoteMedication = {};\r\n        this.isDetailsVisible = true;\r\n    }\r\n\r\n    showDetails(rowData: any) {\r\n        if (rowData && rowData.id) {\r\n            let thisComponent = this;\r\n            thisComponent.showProgress = true;\r\n            this.doctorService.getClinicNoteMedicationById(rowData.id)\r\n                .subscribe(\r\n                    function (matchedClinicNoteMedication: any) {\r\n                        thisComponent.toSaveClinicNoteMedication = matchedClinicNoteMedication;\r\n                        thisComponent.toSaveClinicNoteMedication.startDate = thisComponent.utilityClass.getDateTimeFromString(thisComponent.toSaveClinicNoteMedication.startDate);\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () { // finally\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n            this.isDetailsVisible = true;\r\n        }\r\n    }\r\n\r\n    hideDetails(updatedClinicNoteMedication: any) {\r\n        if (updatedClinicNoteMedication) {\r\n\r\n            let thisComponent = this;\r\n            thisComponent.clinicNoteMedicationList.forEach(clinicNoteMedication => {\r\n                if (clinicNoteMedication.id == updatedClinicNoteMedication.id)\r\n                    thisComponent.clinicNoteMedicationList.splice(thisComponent.clinicNoteMedicationList.indexOf(clinicNoteMedication), 1);\r\n            });\r\n\r\n            this.clinicNoteMedicationList.push(updatedClinicNoteMedication);\r\n        }\r\n\r\n        this.isDetailsVisible = false;\r\n    }\r\n\r\n    deleteClinicNotMedication(rowData: any) {\r\n        if (rowData && rowData.id) {\r\n            let thisComponent = this;\r\n            thisComponent.showProgress = true;\r\n            this.doctorService.deleteClinicNoteMedication(rowData.id)\r\n                .subscribe(\r\n                    function (matchedClinicNoteMedication: any) {\r\n                        thisComponent.clinicNoteMedicationList.forEach(clinicNoteMedication => {\r\n                            if (clinicNoteMedication.id == rowData.id)\r\n                                thisComponent.clinicNoteMedicationList.splice(thisComponent.clinicNoteMedicationList.indexOf(clinicNoteMedication), 1);\r\n                        });\r\n                        let msg = thisComponent.translate.instant(\"DeletedSuccessfully\");\r\n                        thisComponent.toastr.success(msg, '');\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () { // finally\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n        }\r\n    }\r\n\r\n    changeCurrentStatus(clinicNoteMedicationId: any, event: any) {\r\n        let thisComponent = this;\r\n        thisComponent.showProgress = true;\r\n        this.doctorService.changeClinicNoteMedicationCurrentStatus({ \"id\": clinicNoteMedicationId, \"isCurrent\": event.target.checked })\r\n            .subscribe(\r\n                function () {\r\n                    let msg = thisComponent.translate.instant(\"StatusChanged\");\r\n                    thisComponent.toastr.success(msg, '');\r\n                },\r\n                function (error: any) {\r\n                    thisComponent.toastr.error(error, '');\r\n                    thisComponent.showProgress = false;\r\n                },\r\n                function () { // finally\r\n                    thisComponent.showProgress = false;\r\n                });\r\n\r\n    }\r\n\r\n    deleteClinicNoteMedication(event: any) {\r\n\r\n    }\r\n}","<div *ngIf=\"showProgress\">\r\n    <loading></loading>\r\n</div>\r\n<div id=\"divTable\" class=\"padding5\" *ngIf=\"!isDetailsVisible\">\r\n    <div class=\"row\" *ngIf=\"allowEditing\">\r\n        <div class=\"col-md-4 nopadding\">\r\n        </div>\r\n        <div class=\"col-md-8 align-reverse nopadding\">\r\n            <button type=\"button\" class=\"btn btn-primary\" (click)=\"addNewClinicNoteMedication()\">{{ 'NewMedication' |\r\n                translate}}</button>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"inner-addon left-addon\">\r\n        <i class=\"glyphicon glyphicon-search\"></i>\r\n        <input pInputText type=\"text\" #gb (input)=\"dt.filterGlobal($event.target.value, 'contains')\"\r\n            [placeholder]=\"'Search' | translate\" />\r\n    </div>\r\n\r\n    <!---New Table-->\r\n    <p-table #dt [value]=\"clinicNoteMedicationList\" dataKey=\"id\" [rowHover]=\"true\" [rows]=\"10\"\r\n        [showCurrentPageReport]=\"true\" [rowsPerPageOptions]=\"[10,20,30,40,50,100]\" [paginator]=\"true\"\r\n        currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" [filterDelay]=\"0\"\r\n        [globalFilterFields]=\"['drugCode','drugName','dosageQuantity','dosageUnitName','frequencyName','startDateString','duration','description']\">\r\n\r\n        <ng-template pTemplate=\"header\">\r\n            <tr>\r\n                <th pSortableColumn=\"drugCode\">{{'MedicationCode' | translate}} <p-sortIcon field=\"drugCode\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"drugName\">{{'Name' | translate}} <p-sortIcon field=\"drugName\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"dosageQuantity\">{{'DosageQuantity' | translate}} <p-sortIcon\r\n                        field=\"dosageQuantity\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"dosageUnitName\">{{'DosageUnit' | translate}} <p-sortIcon field=\"dosageUnitName\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"frequencyName\">{{'Frequency' | translate}} <p-sortIcon field=\"frequencyName\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"startDateString\">{{'StartDate' | translate}} <p-sortIcon field=\"startDateString\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"duration\">{{'Duration' | translate}} <p-sortIcon field=\"duration\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"description\">{{'Description' | translate}} <p-sortIcon field=\"description\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"relatedDiagnoseName\">{{'Diagnosis' | translate}} <p-sortIcon\r\n                        field=\"relatedDiagnoseName\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"recorderName\">{{'RecorderName' | translate}} <p-sortIcon field=\"recorderName\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"recordingDateString\">{{'RecordedDate' | translate}} <p-sortIcon\r\n                        field=\"recordingDateString\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th><span styleClass=\"text-center width70\">{{'IsCurrent' | translate}} </span>\r\n                </th>\r\n                <th><span styleClass=\"text-center width70\">{{'Edit' | translate}} </span>\r\n                </th>\r\n                <th><span styleClass=\"text-center width70\">{{'Delete' | translate}} </span>\r\n                </th>\r\n                <th style=\"width: 8rem\">\r\n                </th>\r\n            </tr>\r\n\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-item>\r\n            <tr class=\"p-selectable-row\">\r\n                <td>\r\n                    {{item.drugCode}}\r\n                </td>\r\n                <td>\r\n                    <span>{{item.drugName}}</span>\r\n                </td>\r\n                <td>\r\n                    <span>{{item.dosageQuantity}}</span>\r\n                </td>\r\n                <td>\r\n                    <span>{{item.dosageUnitName}}</span>\r\n                </td>\r\n                <td>\r\n                    <span>{{item.frequencyName}}</span>\r\n                </td>\r\n                <td>\r\n                    <span>{{item.startDateString}}</span>\r\n                </td>\r\n                <td>\r\n                    <span>{{item.duration}}</span>\r\n                </td>\r\n                <td>\r\n                    <span>{{item.description}}</span>\r\n                </td>\r\n                <td>\r\n                    <span>{{item.relatedDiagnoseName}}</span>\r\n                </td>\r\n                <td>\r\n                    <span>{{item.recorderName}}</span>\r\n                </td>\r\n                <td>\r\n                    <span>{{item.recordingDateString}}</span>\r\n                </td>\r\n                <td>\r\n                    <input id=\"ChkIsCurrentInGrid\" name=\"ChkIsCurrent\" class=\"ace ace-switch ace-switch-6\"\r\n                        type=\"checkbox\" [checked]=\"item.isCurrent\" (click)=\"changeCurrentStatus(item.id,$event)\" />\r\n                    <span class=\"lbl\"></span>\r\n                </td>\r\n                <td style=\"text-align: center\">\r\n                    <a class=\"pointer\" (click)=\"showDetails(item)\">\r\n                        <img src=\"assets/images/edit-24.png\" />\r\n                    </a>\r\n                </td>\r\n                <td>\r\n                    <a class=\"pointer\" (click)=\"deleteClinicNoteMedication(item)\">\r\n                        <img src=\"assets/images/delete-24.png\" />\r\n                    </a>\r\n                </td>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"emptymessage\">\r\n            <tr>\r\n                <td colspan=\"8\">No data found.</td>\r\n            </tr>\r\n        </ng-template>\r\n    </p-table>\r\n    <!--End Table-->\r\n\r\n</div>\r\n\r\n<div id=\"divDetails\" class=\"padding5\" *ngIf=\"isDetailsVisible\">\r\n    <patient-medication-details [toSaveClinicNoteMedication]=\"toSaveClinicNoteMedication\" [clinicNoteId]=\"clinicNoteId\"\r\n        [patientId]=\"patientId\" (onBack)=\"hideDetails($event)\"></patient-medication-details>\r\n</div>","import { Component, OnInit, OnChanges, ViewChild, Input } from '@angular/core';\r\nimport { Table } from 'primeng/table';\r\nimport { UtilityClass } from '../../shared/shared/utility.class';\r\n\r\n@Component({\r\n\r\n    selector: 'patient-medicationsGrid',\r\n    templateUrl: 'patient-medicationsGrid.component.html',\r\n})\r\n\r\nexport class PatientMedicationsGridComponent implements OnInit, OnChanges {\r\n\r\n    utilityClass: UtilityClass = new UtilityClass();\r\n    @Input() drugs!: any[];\r\n    @Input() noteDrugs!: any[];\r\n    @Input() diagnosis: any[] = [];\r\n    @Input() drugDosageUnits: any[] = [];\r\n    @Input() drugFrequencies: any[] = [];\r\n    @Input() durationUnits: any[] = [];\r\n    @Input() masterList!: any[];\r\n    @Input() noteId!: number;\r\n\r\n    allDrugs: any[] = [];\r\n    lstToTranslated: string[] = ['drugName', 'drugNameTranslation'];\r\n    @ViewChild('dt') table!: Table;\r\n    \r\n    ngOnInit(): void {\r\n\r\n    }\r\n\r\n\r\n\r\n    ngOnChanges(): void {\r\n        if (this.drugs && this.noteDrugs && this.masterList && this.drugDosageUnits && this.diagnosis) {\r\n            this.allDrugs = [];\r\n            // loop for all drugs \r\n            for (let drug of this.drugs) {\r\n                let bindedDrug: any = this.createClinicNoteDrug(drug);\r\n                this.allDrugs.push(bindedDrug);\r\n\r\n                if (bindedDrug.id == 0) // new object\r\n                {\r\n                    // check if drug exsists in note drug \r\n                    let existedDrug = this.noteDrugs.find(s => s.drugId == drug.data);\r\n\r\n                    if (existedDrug) {\r\n                        bindedDrug.id = existedDrug.id;\r\n                        bindedDrug.isSelected = true;\r\n                        bindedDrug.clinicNoteId = this.noteId;\r\n                        bindedDrug.drugId = drug.data;\r\n                        bindedDrug.drugCode = drug.code;\r\n                        bindedDrug.drugName = drug.label;\r\n                        bindedDrug.drugNameTranslation = existedDrug.drugNameTranslation;\r\n                        bindedDrug.dosageQuantity = existedDrug.dosageQuantity;\r\n                        bindedDrug.dosageUnitId = existedDrug.dosageUnitId;\r\n                        bindedDrug.frequencyId = existedDrug.frequencyId;\r\n                        bindedDrug.duration = existedDrug.duration;\r\n                        bindedDrug.durationUnit = existedDrug.durationUnit;\r\n                        bindedDrug.startDate = this.utilityClass.getDateTimeFromString(existedDrug.startDate);\r\n                        bindedDrug.relatedDiagnoseId = existedDrug.relatedDiagnoseId;\r\n                        bindedDrug.description = existedDrug.description;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    createClinicNoteDrug(drug: any): any {\r\n        let bindedDrug: any;\r\n\r\n        bindedDrug = this.masterList.find(s => s.drugId == drug.data);\r\n\r\n        if (bindedDrug == undefined) {\r\n            bindedDrug = { id: 0, isSelected: false, clinicNoteId: this.noteId, drugId: drug.data, drugCode: drug.code, drugName: drug.label, drugNameTranslation: drug.labelTranslation, dosageQuantity: 0, duration: 0 };\r\n\r\n            this.masterList.push(bindedDrug);\r\n        }\r\n\r\n        return bindedDrug;\r\n    }\r\n\r\n    updateSelectedDrug(drugId: any, event: any) {\r\n        if (!event.target.checked) {\r\n            // if the item removed clear data\r\n            let noteDrug = this.allDrugs.find(s => s.drugId == drugId);\r\n\r\n            noteDrug.isSelected = false;\r\n            noteDrug.dosageQuantity = 0;\r\n            noteDrug.dosageUnitId = 0;\r\n            noteDrug.frequencyId = 0;\r\n            noteDrug.duration = 0;\r\n            noteDrug.durationUnit = 0;\r\n            noteDrug.startDate = null;\r\n            noteDrug.relatedDiagnoseId = 0;\r\n            noteDrug.description = '';\r\n\r\n            let masterNoteDrug = this.masterList.find(s => s.drugId == drugId);\r\n            masterNoteDrug.isSelected = false;\r\n            masterNoteDrug.dosageQuantity = 0;\r\n            masterNoteDrug.dosageUnitId = 0;\r\n            masterNoteDrug.frequencyId = 0;\r\n            masterNoteDrug.duration = 0;\r\n            masterNoteDrug.durationUnit = 0;\r\n            masterNoteDrug.startDate = null;\r\n            masterNoteDrug.relatedDiagnoseId = 0;\r\n            masterNoteDrug.description = '';\r\n        }\r\n        else {\r\n            let noteDrug = this.allDrugs.find(s => s.drugId == drugId);\r\n            let masterNoteDrug = this.masterList.find(s => s.drugId == drugId);\r\n            noteDrug.isSelected = true;\r\n            masterNoteDrug.isSelected = true;\r\n        }\r\n    }\r\n\r\n}\r\n","<div class=\"inner-addon left-addon\">\r\n    <i class=\"glyphicon glyphicon-search\"></i>\r\n    <input #gb type=\"text\" pInputText size=\"50\" class=\"inputSearch\" [placeholder]=\"'Search' | translate\">\r\n\r\n    <input pInputText type=\"text\" (input)=\"dt.filterGlobal($event.target.value, 'contains')\"\r\n        [placeholder]=\"'Search' | translate\" />\r\n</div>\r\n\r\n<!---New Table-->\r\n<p-table #dt [value]=\"allDrugs\" dataKey=\"id\" [rowHover]=\"true\" [rows]=\"10\" [showCurrentPageReport]=\"true\"\r\n    [rowsPerPageOptions]=\"[10,20,30,40,50,100]\" [paginator]=\"true\"\r\n    currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" [filterDelay]=\"0\"\r\n    [globalFilterFields]=\"['drugName']\">\r\n\r\n    <ng-template pTemplate=\"header\">\r\n        <tr>\r\n            <th></th>\r\n            <th pSortableColumn=\"drugName\">{{'DrugName' | translate}} <p-sortIcon field=\"drugName\">\r\n                </p-sortIcon>\r\n            </th>\r\n            <th><span styleClass=\"text-center width70\">{{'DosageQuantity' | translate}} </span>\r\n            </th>\r\n            <th><span styleClass=\"text-center width70\">{{'Frequency' | translate}} </span>\r\n            </th>\r\n            <th><span styleClass=\"text-center width70\">{{'Duration' | translate}} </span>\r\n            </th>\r\n            <th><span styleClass=\"text-center width70\">{{'DiagnoseName' | translate}} </span>\r\n            </th>\r\n            <th><span styleClass=\"text-center width70\">{{'Remarks' | translate}} </span>\r\n            </th>\r\n        </tr>\r\n\r\n    </ng-template>\r\n    <ng-template pTemplate=\"body\" let-item>\r\n        <tr class=\"p-selectable-row\">\r\n            <td>\r\n                <input type=\"checkbox\" [checked]=\"item.isSelected\"\r\n                    (change)=\"updateSelectedDrug(item.drugId, $event)\" />\r\n            </td>\r\n            <td>\r\n                <span>{{item.drugName}}</span>\r\n            </td>\r\n            <td>\r\n                <div class=\"row\">\r\n                    <input type=\"number\" pattern=\"^[0-9]\\d*$\" min=\"0\" name=\"txtMedicationDosageQuantity\"\r\n                        class=\"form-control\" [(ngModel)]='item.dosageQuantity'\r\n                        #txtMedicationDosageQuantity=\"ngModel\" />\r\n                </div>\r\n                <div class=\"row\" style=\"padding-top:4px!important;\">\r\n                    <select class=\"form-control\" name=\"ddldrugDosageUnits\" [(ngModel)]='item.dosageUnitId' required>\r\n                        <option *ngFor=\"let obj of drugDosageUnits| translateObjects\" [value]=\"obj.id\">{{obj.name}}\r\n                        </option>\r\n                    </select>\r\n                </div>\r\n            </td>\r\n            <td>\r\n                <select class=\"form-control\" name=\"ddldrugFrequencies\" [(ngModel)]='item.frequencyId' required>\r\n                    <option *ngFor=\"let obj of drugFrequencies| translateObjects\" [value]=\"obj.id\">{{obj.name}}</option>\r\n                </select>\r\n            </td>\r\n            <td>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-4 nopadding\">\r\n                        <input type=\"number\" pattern=\"^[0-9]\\d*$\" min=\"0\" name=\"txtDuration\" class=\"form-control\"\r\n                            [(ngModel)]='item.duration' #txtDuration=\"ngModel\" />\r\n                    </div>\r\n                    <div class=\"col-md-8 nopadding\">\r\n                        <select class=\"form-control\" name=\"ddldurationUnits\" [(ngModel)]='item.durationUnit'\r\n                            required>\r\n                            <option *ngFor=\"let obj of durationUnits| translateObjects\" [value]=\"obj.name\">{{obj.name}}\r\n                            </option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\" style=\"padding-top:4px!important;\"> </div>\r\n                <p-calendar [(ngModel)]=\"item.startDate\" [required]=\"true\" [monthNavigator]=\"true\"\r\n                    [yearNavigator]=\"true\" dateFormat=\"dd/mm/yy\" [showIcon]=\"true\" [ngModelOptions]=\"{standalone: true}\"\r\n                    yearRange=\"2000:2050\" [inputStyle]=\"{'width':'125px'}\"></p-calendar>\r\n            </td>\r\n            <td>\r\n                <select class=\"form-control\" name=\"ddlDiagnosis\" [(ngModel)]='item.relatedDiagnoseId' required>\r\n                    <option *ngFor=\"let obj of diagnosis| translateObjects\" [value]=\"obj.id\">{{obj.name}}</option>\r\n                </select>\r\n            </td>\r\n            <td>\r\n                <textarea class=\"form-control\" id=\"txtRemarks\" name=\"txtRemarks\"\r\n                    [(ngModel)]='item.description'></textarea>\r\n            </td>\r\n        </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"emptymessage\">\r\n        <tr>\r\n            <td colspan=\"8\">No data found.</td>\r\n        </tr>\r\n    </ng-template>\r\n</p-table>\r\n<!--End Table-->","import { Component, Input, OnInit, EventEmitter, ViewChild, ElementRef, Output, OnChanges } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\nimport { PatientService } from '../shared/patient.service'\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\nimport { ReceptionistAppointmentManager } from '../../receptionists/shared/receptionist-appointment.manager';\r\nimport { UtilityClass } from '../../shared/shared/utility.class';\r\nimport { AccountService } from '../../security/shared/account.service';\r\nimport { UserPermissions } from '../../classes/user-permissions.class';\r\nimport { PermissionKeyEnum } from '../../shared/shared/permission-key.enum';\r\n@Component({\r\n\r\n    selector: 'patient-mrf',\r\n    templateUrl: 'patient-mrf.component.html'\r\n})\r\n\r\nexport class PatientMrfComponent implements OnInit {\r\n    selectAddressTab: boolean = true;\r\n    selectedPatientId!: any;\r\n    active = true;\r\n    selectedPatient: any = {};\r\n    showProgress = false;\r\n    divisionId!: any;\r\n    parentType: string = \"PatientFileType\";\r\n    detailsUrl = \"PatientReceptionistAttachmentsDetails\";\r\n\r\n    documentDetailsUrl: string = \"patientAttachments\";\r\n    fileNameUploadTxt: string = this.translate.instant(\"File\");\r\n\r\n    fileNameTxt: string = this.translate.instant(\"FileName\");\r\n    btnUploadText = this.translate.instant(\"UploadFile\");\r\n    fileType: boolean = true;\r\n    showDocumentDetails: boolean = true;\r\n    appointmentModel: any = { id: 0 };\r\n    selectedDate!: any;\r\n    selectedTimeSlot!: any;\r\n    patientName = '';\r\n    selectedDept: any = {};\r\n    appointmentSchedulesList: any[] = [];\r\n    sessionExtensionsList: any[] = [];\r\n    appointmentClassesList: any[] = [];\r\n    visitTypesList: any[] = [];\r\n    timeSlotsList: any[] = [];\r\n    appointementsList: any[] = [];\r\n    currentWeekDays: any[] = [];\r\n    slotDuration!: number;\r\n    doctorId!: any;\r\n    clinicId!: any;\r\n    entireDayTimeSlotsList: any[] = [];\r\n    pateintMrfs: any[] = [];\r\n    noteId = \"new\";\r\n    getMrf: boolean = false;\r\n\r\n    @ViewChild('appointmentModalButton') appointmentModalButton!: ElementRef;\r\n    @ViewChild('btnClostAppointmentModal') btnClostAppointmentModal!: ElementRef;\r\n    @ViewChild('btnAddNewNote') btnAddNewNote!: ElementRef;\r\n    @ViewChild('newClinicalNoteComp') newClinicalNoteComp!: any;\r\n\r\n    // @ViewChild('triggerOldNotes') triggerOldNotes: ElementRef;\r\n    utilityClass: UtilityClass = new UtilityClass();\r\n    receptionistAppointmentManager!: ReceptionistAppointmentManager;\r\n    userPermisions: UserPermissions = new UserPermissions();\r\n    key: PermissionKeyEnum = new PermissionKeyEnum();\r\n    enableAttachmentBtn: boolean = false;\r\n    enableNewAppointmentBtn: boolean = false;\r\n    enableSaveNewAppointmentBtn: boolean = false;\r\n    enableNewNoteBtn: boolean = false;\r\n    defaultAppointmentId: any;\r\n    selectedAppointmentId: any;\r\n    doctorName: any;\r\n    Attachement: any;\r\n    constructor(private patientService: PatientService,\r\n        public toastr: ToastrService,\r\n        private _route: ActivatedRoute\r\n        , public storage: LocalStorageService\r\n        , public translate: TranslateService\r\n        , public accountService: AccountService\r\n    ) { }\r\n\r\n\r\n    ngOnInit(): void {\r\n\r\n        this.showProgress = true;\r\n        this.selectedPatientId = this._route.snapshot.params['id'];\r\n        this.divisionId = this._route.snapshot.params['divisionId'];\r\n        this.doctorId = this.storage.retrieve(\"UserID\");\r\n        this.clinicId = this.storage.retrieve(\"ClinicID\");\r\n        this.defaultAppointmentId = this._route.snapshot.params['appointmentId'];\r\n\r\n        let vm = this;\r\n        this.receptionistAppointmentManager = new ReceptionistAppointmentManager(this.appointmentSchedulesList, this.sessionExtensionsList);\r\n        this.entireDayTimeSlotsList = this.receptionistAppointmentManager.getFullDayTimeSlots(null);\r\n        this.patientService.getPatientById(vm.selectedPatientId.toString()).subscribe(\r\n            function (response: any) {\r\n                vm.selectedPatient = response;\r\n            },\r\n            function (error: any) {\r\n                vm.toastr.error(error, '');\r\n            },\r\n            function () { // finally\r\n                vm.showProgress = false;\r\n            });\r\n\r\n        if (this.accountService.userPermision._isScalar != undefined)\r\n            this.accountService.userPermision.subscribe((item: any) => this.handleUserInterfaceViews(item));\r\n        else\r\n            this.handleUserInterfaceViews(this.accountService.userPermision);\r\n\r\n        /*if (vm.divisionId == \"0\" && vm.defaultAppointmentId == \"0\" && vm.enableNewNoteBtn == true) {\r\n            vm.enableNewNoteBtn = false;\r\n            vm.enableAttachmentBtn = false;\r\n            vm.enableNewAppointmentBtn = false;\r\n        }*/\r\n\r\n    }\r\n    addNewAppointment() {\r\n        this.clear();\r\n        this.getAppointmentDetailsWrapper(this.doctorId);\r\n        this.showAppointmentModal();\r\n\r\n    }\r\n    showAppointmentModal() {\r\n        this.appointmentModalButton.nativeElement.click();\r\n    }\r\n\r\n    selectAppointmentClass(classId: any) {\r\n        this.appointmentModel.appointmentClassId = classId;\r\n    }\r\n    getAppointmentDetailsWrapper(doctorId: any) {\r\n\r\n        this.showProgress = true;\r\n        let thisComp = this;\r\n        this.patientService.getAppointmentDetailsWrapper(doctorId)\r\n            .subscribe(\r\n                function (response: any) {\r\n\r\n                    thisComp.appointmentSchedulesList = response.appointmentSchedules;\r\n                    thisComp.sessionExtensionsList = response.sessionExtensions;\r\n                    thisComp.appointmentClassesList = response.appointmentClasses;\r\n                    thisComp.visitTypesList = response.visitTypes;\r\n                    thisComp.appointementsList = response.appointments;\r\n                },\r\n                function (error: any) {\r\n                    thisComp.toastr.error(error, '');\r\n                    thisComp.showProgress = false;\r\n                },\r\n                function () {\r\n                    thisComp.showProgress = false;\r\n                });\r\n    }\r\n    onDateSelect(dateValue: Date) {\r\n        this.timeSlotsList = [];\r\n        if (dateValue != undefined) {\r\n            this.receptionistAppointmentManager = new ReceptionistAppointmentManager(this.appointmentSchedulesList, this.sessionExtensionsList);\r\n            this.timeSlotsList = this.receptionistAppointmentManager.getTimeSlots(dateValue);\r\n            this.slotDuration = this.receptionistAppointmentManager.getSlotDuration();\r\n        }\r\n    }\r\n    closeAppointmentModal() {\r\n        this.btnClostAppointmentModal.nativeElement.click();\r\n    }\r\n    clear() {\r\n        this.appointmentModel = { id: 0 };\r\n        this.timeSlotsList = [];\r\n        this.selectedDate = '';\r\n        this.selectedTimeSlot = '';\r\n    }\r\n    saveOrUpdateAppointment() {\r\n\r\n        this.appointmentModel.clinicId = this.clinicId;\r\n        this.appointmentModel.clinicDivisionId = this.divisionId;\r\n        //if (this.appointmentModel.arrivalTime)//time only\r\n        //    this.appointmentModel.arrivalTime = this.utilityClass.getUtcDateTime(this.appointmentModel.arrivalTime);\r\n\r\n        //if (this.appointmentModel.reconfirmDate)//date\r\n        //{\r\n        //    this.appointmentModel.reconfirmDate = this.utilityClass.getUtcDateTime(this.reconfirmTime);\r\n        //}\r\n\r\n\r\n        //if (this.appointmentModel.cancellationDate != undefined) {//date only\r\n        //    this.appointmentModel.cancellationDate = this.utilityClass.getUtcDate(this.appointmentModel.cancellationDate);\r\n        //    this.appointmentModel.cancelled = this.cancelled;\r\n        //}\r\n\r\n        let timeSlot = this.timeSlotsList.find(ts => ts.name == this.selectedTimeSlot);\r\n        if (timeSlot != undefined) {\r\n            //Update the model\r\n            //if (this.appointmentModel.cancelled)//in case of cancelled = true\r\n            //    this.timeSlotForCancelledApp = timeSlot;\r\n\r\n            this.appointmentModel.dateTime = this.utilityClass.getUtcDateTime(timeSlot.dateTime);\r\n            this.appointmentModel.doctorId = this.doctorId;\r\n            this.appointmentModel.patientId = this.selectedPatient.id;\r\n            this.appointmentModel.slotDuration = this.slotDuration;\r\n\r\n            this.showProgress = true;\r\n            let thisComp = this;\r\n            let isNewAppointment: boolean = (this.appointmentModel.id == 0) ? true : false;\r\n\r\n            this.patientService.saveOrUpdateAppointment(this.appointmentModel)\r\n                .subscribe(\r\n                    function (response: any) {\r\n                        thisComp.appointmentModel = response;\r\n                        thisComp.closeAppointmentModal();\r\n\r\n                        let msg = thisComp.translate.instant(\"SavedSuccessfully\");\r\n                        thisComp.toastr.success(msg, '');\r\n                    },\r\n                    function (error: any) {\r\n                        thisComp.toastr.error(error, '');\r\n                        thisComp.showProgress = false;\r\n                    },\r\n                    function () {\r\n                        thisComp.showProgress = false;\r\n                    });\r\n\r\n        }\r\n        else {\r\n            let msg = this.translate.instant(\"EnterDateAndTime\");\r\n            this.toastr.error(msg, '');\r\n        }\r\n    }\r\n\r\n    /*//to fix\r\n    getAllPatientMRF(): void {\r\n        let vm = this;\r\n        vm.showProgress = true;\r\n        if (this.selectedPatientId && this.selectedPatientId != undefined) {\r\n            this.patientService.GetAllPatientMRF(this.selectedPatientId)\r\n                .subscribe(\r\n                function (response:any) {\r\n                    vm.pateintMrfs = response;\r\n                },\r\n                function (error:any) { \r\n                    vm.toastr.error(error, '');\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n        }\r\n    }\r\n    */\r\n\r\n    getPatientMrf(value: any) {\r\n        this.getMrf = value;\r\n        this.pateintMrfs = [];\r\n        this.patientService.notifyOther({ option: 'call_child', value: 'From child' });\r\n\r\n        // this.triggerOldNotes.nativeElement.click();\r\n    }\r\n\r\n    handleUserInterfaceViews(user: any) {\r\n        if (user.permissions != undefined) {\r\n            for (let item of user.permissions) {\r\n                if (item.permission.key == this.key.AddPatientAttachment && (item.allow == true))\r\n                    this.enableAttachmentBtn = true;\r\n                if (item.permission.key == this.key.AppointmentSchedule && (item.fullControl == true || item.add == true || item.edit == true))\r\n                    this.enableNewAppointmentBtn = true;\r\n                if (item.permission.key == this.key.EMR && (item.fullControl == true))\r\n                    this.enableNewNoteBtn = true;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    updateModel(event: any) {\r\n\r\n    }\r\n    openAddNewNote() {\r\n        if (this.noteId == '')\r\n            this.noteId = 'new';\r\n        else\r\n            this.noteId = '';\r\n\r\n        this.newClinicalNoteComp.setSelectedTab(0);\r\n        this.btnAddNewNote.nativeElement.click();\r\n    }\r\n\r\n}","<div *ngIf=\"showProgress\">\r\n    <loading></loading>\r\n</div>\r\n<div class=\"row\">\r\n    <shared-tabs [activeTabIndex]=\"3\"></shared-tabs>\r\n</div>\r\n<div class=\"padding10\">\r\n\r\n    <div class=\"row well\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-8\">\r\n                <div>\r\n                    <label class=\"labelSucess labelSize btn label-success\">\r\n                        {{ 'UnifiedMRN' | translate}} : {{selectedPatient ? selectedPatient.unifiedMRN : ''}}\r\n                    </label>\r\n                    <label class=\"labelSucess labelSize btn label-pink\">\r\n                        {{ 'ClinicMRN' | translate}} : {{selectedPatient ? selectedPatient.clinicMRN : ''}}\r\n                    </label>\r\n                </div>\r\n                <h3 class=\"h3Deco\">\r\n                    <!--{{ 'MRF' | translate}}--> {{selectedPatient ? selectedPatient.name : ''}}\r\n                </h3>\r\n                <p class=\"forum-sub-title\">\r\n                    <span class=\"h4Deco\">\r\n                            <strong>\r\n                                {{ 'AlertMessage' | translate}}:\r\n                            </strong>\r\n                            {{selectedPatient ? selectedPatient.alertMessage : ''}}\r\n                    </span>\r\n                </p>\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <div class=\"forum-meta\">\r\n                    <div class=\"forum-meta-info\">\r\n                        <ul style=\"list-style-type:none;\">\r\n                            <li>\r\n                                <label class=\"labelStyle\"><strong>{{ 'Gender' | translate}}:</strong>&nbsp; {{selectedPatient ? selectedPatient.gender : ''}}</label>\r\n                            </li>\r\n                            <li>\r\n                                <label class=\"labelStyle\"><strong>{{ 'Age' | translate}}: </strong>&nbsp;{{selectedPatient ? selectedPatient.age : ''}}</label>\r\n                            </li>\r\n                            <li>\r\n                                <label class=\"labelStyle\"><strong> {{ 'Company' | translate}}: </strong>&nbsp;{{selectedPatient && selectedPatient.activeInsurance ? selectedPatient.activeInsurance.companyName : ''}}</label>\r\n                            </li>\r\n                            <li>\r\n                                <label class=\"labelStyle\"><strong>{{ 'PolicyName' | translate}}: </strong>&nbsp;{{selectedPatient && selectedPatient.activeInsurance ? selectedPatient.activeInsurance.policyName : ''}}</label>\r\n                            </li>\r\n                            <li>\r\n                                <label class=\"labelStyle\"><strong>{{ 'ExpirationDate' | translate}}: </strong>&nbsp;{{selectedPatient && selectedPatient.activeInsurance ? selectedPatient.activeInsurance.endDateString : ''}}</label>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <div class=\"row text-right\">\r\n        <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#pateitnAttachments\" disabled=\"{{ enableAttachmentBtn ? '' :'disabled'}}\">{{ 'Attachments' | translate}}</button>\r\n        <button type=\"button\" class=\"btn btn-success\" (click)=\"addNewAppointment()\" disabled=\"{{ enableNewAppointmentBtn ? '' :'disabled'}}\">{{ 'NewAppointment' | translate}}</button>\r\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"openAddNewNote()\" disabled=\"{{ enableNewNoteBtn ? '' :'disabled'}}\">{{ 'NewNote' | translate}}</button>\r\n    </div>\r\n    <br />\r\n    <br /><br />\r\n    <div id=\"navtab\" class=\"row well\">\r\n        <div class=\"tabbable-panel\">\r\n            <div class=\"tabbable-line\">\r\n                <ul class=\"nav nav-tabs\">\r\n                    <li class=\"active\"><a href=\"#snapshot\" data-toggle=\"tab\" aria-expanded=\"true\">{{ 'Snapshot' | translate}}</a></li>\r\n                    <li><a href=\"#oldNotes\" data-toggle=\"tab\" aria-expanded=\"true\">{{ 'AllNotes' | translate}}</a></li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n\r\n        <div id=\"myTabContent\" class=\"tab-content\">\r\n            <div class=\"tab-pane fade active in\" id=\"snapshot\">\r\n                <patient-snapshot [patientId]=\"selectedPatientId\" [patientDOB]=\"selectedPatient.birthDate\"></patient-snapshot>\r\n            </div>\r\n            <div class=\"tab-pane fade\" id=\"oldNotes\">\r\n                <patient-notes [divisionId]=\"divisionId\" [getMrf]=\"getMrf\" #patientNotesComp></patient-notes>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div id=\"pateitnAttachments\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog fullWidth\">\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">{{ 'PatientAttachments' | translate}}</h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <documents (onModelUpdated)=\"updateModel($event)\" [parentId]=\"selectedPatientId\" [title]=\"Attachement\" [parentType]='parentType' [showDocumentDetails]=\"showDocumentDetails\" [btnUploadText]=\"btnUploadText\" [fileType]=\"fileType\" [fileNameTxt]='fileNameTxt' [fileNameUploadTxt]='fileNameUploadTxt'></documents>\r\n            </div>\r\n            <!--<div class=\"modal-footer\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12 text-center\">\r\n                        <button type=\"button\" class=\"btn btn-primary\">Save</button>\r\n                        <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Close</button>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>-->\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<button type=\"button\" #btnAddNewNote class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#noteEditingfromAddNewNote\" style=\"display:none\"></button>\r\n<div id=\"noteEditingfromAddNewNote\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog fullWidth\">\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">{{ 'ClinicalNoteDetailsPatient' | translate}}: {{selectedPatient ? selectedPatient.name : ''}}</h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <patient-clinical-note (onNewNoteSaved)=\"getPatientMrf($event)\"\r\n                                       [selectedAppointmentId]=\"defaultAppointmentId\"\r\n                                       [noteId]=\"noteId\"\r\n                                       [allowEditing]=\"true\"\r\n                                       #newClinicalNoteComp></patient-clinical-note>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<button type=\"button\" data-toggle=\"modal\" data-target=\"#appointmentModal\" style=\"display:none\" #appointmentModalButton></button>\r\n<div id=\"appointmentModal\" #appointmentModal class=\"modal fade\" role=\"dialog\" data-backdrop=\"static\">\r\n    <form *ngIf=\"active\" class=\"form-horizontal\" name=\"appointmentDetailsFrm\" #appointmentDetailsFrm=\"ngForm\">\r\n        <div class=\"modal-dialog width75percent\">\r\n            <!-- Modal content-->\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header\">\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                    <h4 class=\"modal-title\">{{ 'AppointmentDetails' | translate}} - {{doctorName}}</h4>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                    <div *ngIf=\"showProgress\">\r\n                        <loading></loading>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label class=\"control-label col-md-2\">\r\n                            {{ 'Date' | translate}}\r\n                        </label>\r\n                        <div class=\"col-md-4\">\r\n                            <p-calendar [(ngModel)]=\"selectedDate\"\r\n                                        [monthNavigator]=\"true\"\r\n                                        [yearNavigator]=\"true\"\r\n                                        dateFormat=\"dd/mm/yy\"\r\n                                        [showIcon]=\"true\" [required]=\"true\"\r\n                                        [ngModelOptions]=\"{standalone: true}\"\r\n                                        yearRange=\"2000:2050\"\r\n                                        (onSelect)=\"onDateSelect($event)\"></p-calendar>\r\n                        </div>\r\n                        <label class=\"control-label col-md-2\">\r\n                            {{ 'Time ' | translate}}\r\n                        </label>\r\n                        <div class=\"col-md-4\">\r\n                            <select class=\"form-control\" id=\"ddlTime\" name=\"ddlTime\"\r\n                                    [(ngModel)]=\"selectedTimeSlot\" #ddlTime=\"ngModel\" required>\r\n                                <option *ngFor=\"let itm of timeSlotsList | translateObjects\" [value]=\"itm.name\">{{itm.name}}</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"form-group\">\r\n                        <label class=\"control-label col-md-2\">\r\n                            {{ 'Class' | translate}}\r\n                        </label>\r\n                        <div class=\"col-md-4\">\r\n                            <table>\r\n                                <tr>\r\n                                    <td *ngFor=\"let item of appointmentClassesList | translateObjects\">\r\n                                        <input type=\"radio\" name=\"appClass\"\r\n                                               (click)=\"selectAppointmentClass(item.id)\"\r\n                                               [value]=\"item.id\" [checked]=\"item.id == appointmentModel.appointmentClassId\" /> {{item.name}}\r\n                                    </td>\r\n                                </tr>\r\n                            </table>\r\n                        </div>\r\n                        <label class=\"control-label col-md-2\">\r\n                            {{ 'VisitType' | translate}}\r\n                        </label>\r\n                        <div class=\"col-md-4\">\r\n                            <select class=\"form-control\" id=\"ddlVisitType\" name=\"ddlVisitType\" required\r\n                                    [(ngModel)]=\"appointmentModel.visitTypeId\" #ddlVisitType=\"ngModel\">\r\n                                <option *ngFor=\"let itm of visitTypesList | translateObjects\" [value]=\"itm.id\">{{itm.name}}</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"form-group\">\r\n                        <label class=\"control-label col-md-2\">\r\n                            {{ 'Description' | translate}}\r\n                        </label>\r\n                        <div class=\"col-md-4\">\r\n                            <textarea id=\"txtRemarks\" name=\"txtRemarks\" class=\"form-control\" [(ngModel)]=\"appointmentModel.description\"></textarea>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                    <div class=\"form-group\">\r\n                        <button type=\"button\" class=\"btn btn-primary\" (click)=\"saveOrUpdateAppointment()\" [disabled]=\"!appointmentDetailsFrm.form.valid || !enableNewAppointmentBtn\">{{ 'Save' | translate}}</button>\r\n                        <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\" #btnClostAppointmentModal>{{ 'Cancel' | translate}}</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </form>\r\n</div>\r\n","import { Component, OnInit, OnChanges, ViewChild, Input, Output, EventEmitter } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { SharedService } from '../../shared/shared/shared.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\nimport { DoctorService } from '../../doctors/shared/doctor.service';\r\nimport { TranslateObjectsPipe } from '../../shared/pipes/translateObjects.pipe';\r\n@Component({\r\n\r\n    selector: 'patient-note-diagnosis',\r\n    templateUrl: 'patient-note-diagnosis.component.html',\r\n})\r\n\r\nexport class PatientNoteDiagnosisComponent implements OnInit, OnChanges {\r\n\r\n    selectedLang = 'ar';\r\n    showProgress = false;\r\n    departmentDiagnosis:any = [];\r\n    //noteDiagnosis = [];\r\n    noteDiagnosisList: any[] = [];\r\n    divisionId!: string;\r\n    masterNoteDiagnosisList: any[] = [];\r\n    diagnosisStatuses: any[] = [];\r\n    @Input() noteId!: number;\r\n\r\n    @Output() onDiagnosisSaved = new EventEmitter<any>();\r\n\r\n    lstToTranslated: string[] = [];\r\n    translateObjects = new TranslateObjectsPipe(this.storage);\r\n\r\n    constructor(private doctorService: DoctorService\r\n        , private sharedService: SharedService\r\n        , public toastr: ToastrService\r\n        , private _route: ActivatedRoute\r\n        , public storage: LocalStorageService\r\n        , public translate: TranslateService) {\r\n        this.masterNoteDiagnosisList = [];\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n        this.divisionId = this._route.snapshot.params['divisionId'];\r\n        this.getClinicDepartmentDiagnoseGroupsForTreeView();\r\n        this.lstToTranslated = ['label', 'labelTranslation'];\r\n        this.getPatientNoteDiagnoseWrapper();\r\n\r\n    }\r\n    getPatientNoteDiagnoseWrapper() {\r\n        let vm = this;\r\n        //get department services groups\r\n        this.doctorService.getPatientNoteDiagnoseWrapper()\r\n            .subscribe(\r\n                function (response: any) {\r\n                    vm.diagnosisStatuses = response.noteDiagnosisStatuses;\r\n                    //vm.translateObjects.transform(vm.departmentDiagnosis, null, null, vm.lstToTranslated);\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n\r\n    }\r\n    ngOnChanges() {\r\n\r\n        if (this.noteId) {\r\n            this.selectedLang = this.storage.retrieve(\"selectedLanguage\");\r\n            //this.getNoteDiagnosis();\r\n            this.loadNoteDiagnosisList();\r\n        }\r\n    }\r\n\r\n    getClinicDepartmentDiagnoseGroupsForTreeView() {\r\n        let vm = this;\r\n        //get department services groups\r\n        this.doctorService.getClinicDivisionDiagnoseGroupsForTreeView(this.divisionId)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    vm.departmentDiagnosis = response;\r\n                    vm.translateObjects.transform(vm.departmentDiagnosis, '', null, vm.lstToTranslated);\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n    }\r\n\r\n    //getNoteDiagnosis()\r\n    //{\r\n    //    let vm = this;\r\n    //    this.doctorService.getNoteDiagnosis(this.noteId.toString())\r\n    //        .subscribe(\r\n    //        function (response:any) {\r\n    //            vm.noteDiagnosis = response;\r\n    //        },\r\n    //        function (error:any) { \r\n    //            vm.toastr.error('Failed to Load Data - ' + error, '');\r\n    //        },\r\n    //        function () {\r\n    //            vm.showProgress = false;\r\n    //        });\r\n    //}\r\n\r\n    loadNoteDiagnosisList() {\r\n        let vm = this;\r\n        if (vm.noteId && vm.noteId > 0) {\r\n            vm.showProgress = true;\r\n\r\n            this.doctorService.getClinicNoteDiagnosis(vm.noteId).subscribe(\r\n                function (response: any) {\r\n                    vm.noteDiagnosisList = response;\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                },\r\n                function () { // finally\r\n                    vm.showProgress = false;\r\n                });\r\n        }\r\n    }\r\n\r\n    SaveNoteDiagnosis() {\r\n        let vm = this;\r\n        vm.showProgress = true;\r\n        this.doctorService.createClinicNoteDiagnose(this.masterNoteDiagnosisList)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    vm.noteDiagnosisList = response;\r\n                    let msg = vm.translate.instant(\"SavedSuccessfully\");\r\n                    vm.toastr.success(msg, '');\r\n                    vm.onDiagnosisSaved.emit();\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                    vm.showProgress = false;\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n    }\r\n\r\n}","<div *ngIf=\"showProgress\">\r\n    <loading></loading>\r\n</div>\r\n\r\n<button *ngIf=\"departmentDiagnosis.length\" class=\"btn btn-primary text-right\" (click)=\"SaveNoteDiagnosis()\">{{'Save' | translate}}</button>\r\n<br />\r\n<br />\r\n<div class=\"row\" *ngIf=\"departmentDiagnosis.length\">\r\n    <ul class=\"nav nav-tabs\">\r\n        <li *ngFor=\"let diagnoseGroup of departmentDiagnosis; let i=index\" class=\"{{i === 0 ? 'active' : ''}}\"><a href=\"#divDiagnoseGroup{{diagnoseGroup.data}}\" data-toggle=\"tab\" aria-expanded=\"true\">{{ selectedLang === 'ar' ?  diagnoseGroup.label : diagnoseGroup.labelTranslation }}</a></li>\r\n    </ul>\r\n    <div class=\"tab-content\">\r\n        <div *ngFor=\"let diagnoseGroup of departmentDiagnosis; let j=index\" class=\"tab-pane fade {{j === 0 ? 'active in' : ''}}\" id=\"divDiagnoseGroup{{diagnoseGroup.data}}\">\r\n            <patient-diagnosisGrid [diagnosis]=\"diagnoseGroup.children\"\r\n                                  [noteDiagnosis]=\"noteDiagnosisList\"\r\n                                  [masterList]=\"masterNoteDiagnosisList\"\r\n                                  [noteId]=\"noteId\"\r\n                                  [diagnosisStatuses]=\"diagnosisStatuses\"></patient-diagnosisGrid>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, OnChanges, ViewChild, Input, Output, EventEmitter } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { SharedService } from '../../shared/shared/shared.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\nimport { DoctorService } from '../../doctors/shared/doctor.service';\r\nimport { TranslateObjectsPipe } from '../../shared/pipes/translateObjects.pipe';\r\n@Component({\r\n\r\n    selector: 'patient-note-laboratory',\r\n    templateUrl: 'patient-note-laboratory.component.html',\r\n})\r\n\r\nexport class PatientNoteLaboratoryComponent implements OnInit, OnChanges {\r\n\r\n    selectedLang = 'ar';\r\n    showProgress = false;\r\n    departmentLaboratories: any = [];\r\n    noteDiagnosis = [];\r\n    noteLaboratoriesList: any[] = [];\r\n    divisionId!: string;\r\n    masterNoteLaboratoriesList: any[] = [];\r\n\r\n    @Input() noteId!: number;\r\n    @Output() onLaboratoriesSaved = new EventEmitter<any>();\r\n\r\n    lstToTranslated: string[] = [];\r\n    translateObjects = new TranslateObjectsPipe(this.storage);\r\n    constructor(private doctorService: DoctorService\r\n        , private sharedService: SharedService\r\n        , public toastr: ToastrService\r\n        , private _route: ActivatedRoute\r\n        , public storage: LocalStorageService\r\n        , public translate: TranslateService) {\r\n        this.masterNoteLaboratoriesList = [];\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n        this.divisionId = this._route.snapshot.params['divisionId'];\r\n        this.getClinicDepartmentLaboratoryTestsGroupsForTreeView();\r\n        this.lstToTranslated = ['label', 'labelTranslation'];\r\n\r\n    }\r\n\r\n    ngOnChanges() {\r\n\r\n        if (this.noteId) {\r\n\r\n            this.selectedLang = this.storage.retrieve(\"selectedLanguage\");\r\n            this.getNoteDiagnosis();\r\n            this.loadNoteLaboratoryList();\r\n        }\r\n    }\r\n\r\n    getClinicDepartmentLaboratoryTestsGroupsForTreeView() {\r\n        let vm = this;\r\n        //get department services groups\r\n        this.doctorService.getClinicDivisionLaboratoryTestsGroupsForTreeView(this.divisionId)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    vm.departmentLaboratories = response;\r\n                    vm.translateObjects.transform(vm.departmentLaboratories, '', null, vm.lstToTranslated);\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n    }\r\n\r\n    getNoteDiagnosis() {\r\n        let vm = this;\r\n        this.doctorService.getNoteDiagnosis(this.noteId.toString())\r\n            .subscribe(\r\n                function (response: any) {\r\n                    vm.noteDiagnosis = response;\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n    }\r\n\r\n    loadNoteLaboratoryList() {\r\n        let vm = this;\r\n        if (vm.noteId && vm.noteId > 0) {\r\n            vm.showProgress = true;\r\n\r\n            this.doctorService.getClinicNoteLabTests(vm.noteId).subscribe(\r\n                function (response: any) {\r\n                    vm.noteLaboratoriesList = response;\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                },\r\n                function () { // finally\r\n                    vm.showProgress = false;\r\n                });\r\n        }\r\n    }\r\n\r\n    SaveNoteLaboratories() {\r\n        let vm = this;\r\n        vm.showProgress = true;\r\n        this.doctorService.createClinicNoteLabTest(this.masterNoteLaboratoriesList)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    vm.noteLaboratoriesList = response;\r\n                    let msg = vm.translate.instant(\"SavedSuccessfully\");\r\n                    vm.toastr.success(msg, '');\r\n                    vm.onLaboratoriesSaved.emit();\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                    vm.showProgress = false;\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n    }\r\n\r\n}","<div *ngIf=\"showProgress\">\r\n    <loading></loading>\r\n</div>\r\n\r\n<button *ngIf=\"departmentLaboratories.length\" class=\"btn btn-primary text-right\" (click)=\"SaveNoteLaboratories()\">{{'Save' | translate}}</button>\r\n<br />\r\n<br />\r\n<div class=\"row\" *ngIf=\"departmentLaboratories.length\">\r\n    <ul class=\"nav nav-tabs\">\r\n        <li *ngFor=\"let laboratoryGroup of departmentLaboratories; let i=index\" class=\"{{i === 0 ? 'active' : ''}}\"><a href=\"#divLaboratoryGroup{{laboratoryGroup.data}}\" data-toggle=\"tab\" aria-expanded=\"true\">{{ selectedLang === 'ar' ?  laboratoryGroup.label : laboratoryGroup.labelTranslation }}</a></li>\r\n    </ul>\r\n    <div class=\"tab-content\">\r\n        <div *ngFor=\"let laboratoryGroup of departmentLaboratories; let j=index\" class=\"tab-pane fade {{j === 0 ? 'active in' : ''}}\" id=\"divLaboratoryGroup{{laboratoryGroup.data}}\">\r\n            <patient-laboratoryGrid [laboratories]=\"laboratoryGroup.children\"\r\n                                  [noteLaboratories]=\"noteLaboratoriesList\"\r\n                                  [diagnosis]=\"noteDiagnosis\"\r\n                                  [masterList]=\"masterNoteLaboratoriesList\"\r\n                                  [noteId]=\"noteId\"></patient-laboratoryGrid>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, OnChanges, ViewChild, Input, Output, EventEmitter } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { SharedService } from '../../shared/shared/shared.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\nimport { DoctorService } from '../../doctors/shared/doctor.service';\r\nimport { TranslateObjectsPipe } from '../../shared/pipes/translateObjects.pipe';\r\n\r\n@Component({\r\n\r\n    selector: 'patient-note-medications',\r\n    templateUrl: 'patient-note-medications.component.html',\r\n})\r\n\r\nexport class PatientNoteMedicationsComponent implements OnInit, OnChanges {\r\n\r\n    selectedLang = 'ar';\r\n    showProgress = false;\r\n    departmentDrugs!:any ;\r\n    noteDiagnosis = [];\r\n    noteDrugsList: any[] = [];\r\n    divisionId!: string;\r\n    masterNoteDrugsList: any[] = [];\r\n    drugDosageUnitsList: any[] = [];\r\n    drugFrequenciesList: any[] = [];\r\n    durationUnitsList: any[] = [];\r\n\r\n    @Input() noteId!: number;\r\n    @Output() onMedicationSaved = new EventEmitter<any>();\r\n\r\n    lstToTranslated: string[] = [];\r\n    translateObjects = new TranslateObjectsPipe(this.storage);\r\n    constructor(private doctorService: DoctorService\r\n        , private sharedService: SharedService\r\n        , public toastr: ToastrService\r\n        , private _route: ActivatedRoute\r\n        , public storage: LocalStorageService\r\n        , public translate: TranslateService) {\r\n        this.masterNoteDrugsList = [];\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n        this.divisionId = this._route.snapshot.params['divisionId'];\r\n        this.getClinicDepartmentDrugGroupsForTreeView();\r\n        this.lstToTranslated = ['label', 'labelTranslation'];\r\n        this.getClinicNoteMedicationWrapper();\r\n    }\r\n\r\n    ngOnChanges() {\r\n\r\n        if (this.noteId) {\r\n            this.selectedLang = this.storage.retrieve(\"selectedLanguage\");\r\n            this.getNoteDiagnosis();\r\n            this.loadnoteDrugsList();\r\n        }\r\n    }\r\n\r\n    getClinicNoteMedicationWrapper() {\r\n        let vm = this;\r\n        //get drop down lists initial values\r\n        this.doctorService.getClinicNoteMedicationWrapper(0)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    vm.drugDosageUnitsList = response.drugUnits;\r\n                    vm.drugFrequenciesList = response.drugFrequencies;\r\n                    vm.durationUnitsList = response.durationUnits;\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n    }\r\n\r\n    getClinicDepartmentDrugGroupsForTreeView() {\r\n        let vm = this;\r\n        //get department services groups\r\n        this.doctorService.getClinicDivisionDrugGroupsForTreeView(this.divisionId)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    vm.departmentDrugs = response;\r\n                    vm.translateObjects.transform(vm.departmentDrugs, '', null, vm.lstToTranslated);\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n    }\r\n\r\n    getNoteDiagnosis() {\r\n        let vm = this;\r\n        this.doctorService.getNoteDiagnosis(this.noteId.toString())\r\n            .subscribe(\r\n                function (response: any) {\r\n                    vm.noteDiagnosis = response;\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n    }\r\n\r\n    loadnoteDrugsList() {\r\n        let vm = this;\r\n        if (vm.noteId && vm.noteId > 0) {\r\n            vm.showProgress = true;\r\n\r\n            this.doctorService.getClinicNoteMedications(vm.noteId).subscribe(\r\n                function (response: any) {\r\n                    vm.noteDrugsList = response;\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                },\r\n                function () { // finally\r\n                    vm.showProgress = false;\r\n                });\r\n        }\r\n    }\r\n\r\n    SaveNoteDrugs() {\r\n        let vm = this;\r\n\r\n        let msg = this.validateRequiredFields();\r\n\r\n        if (msg != '') {\r\n            vm.toastr.error(msg, '');\r\n            return;\r\n        }\r\n\r\n        vm.showProgress = true;\r\n        this.doctorService.createClinicNoteMedication(this.masterNoteDrugsList)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    vm.noteDrugsList = response;\r\n                    let msg = vm.translate.instant('SavedSuccessfully');\r\n                    vm.toastr.success(msg, '');\r\n                    vm.onMedicationSaved.emit();\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                    vm.showProgress = false;\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n    }\r\n\r\n    validateRequiredFields(): string {\r\n        let msg = '';\r\n        for (let obj of this.masterNoteDrugsList) {\r\n            if (obj.isSelected) {\r\n                if (obj.startDate == '' || obj.frequencyId == 0 || obj.relatedDiagnoseId == 0 ||\r\n                    obj.durationUnit == 0 || obj.dosageUnitId == 0 ||\r\n                    obj.startDate == null || obj.frequencyId == null || obj.relatedDiagnoseId == null ||\r\n                    obj.durationUnit == null || obj.dosageUnitId == null)\r\n                    return this.translate.instant('MustFillAllRequiredFields');\r\n                if (obj.dosageQuantity < 0 || obj.duration < 0)\r\n                    return this.translate.instant('NegativeNumberValidation');\r\n            }\r\n        }\r\n        return msg;\r\n    }\r\n\r\n}","<div *ngIf=\"showProgress\">\r\n    <loading></loading>\r\n</div>\r\n\r\n<button *ngIf=\"departmentDrugs.length\" class=\"btn btn-primary text-right\" (click)=\"SaveNoteDrugs()\">{{'Save' | translate}}</button>\r\n<br />\r\n<br />\r\n<div class=\"row\" *ngIf=\"departmentDrugs.length\">\r\n    <ul class=\"nav nav-tabs\">\r\n        <li *ngFor=\"let drugGroup of departmentDrugs; let i=index\" class=\"{{i === 0 ? 'active' : ''}}\"><a href=\"#divDrugsGroup{{drugGroup.data}}\" data-toggle=\"tab\" aria-expanded=\"true\">{{ selectedLang === 'ar' ?  drugGroup.label : drugGroup.labelTranslation }}</a></li>\r\n    </ul>\r\n    <div class=\"tab-content\">\r\n        <div *ngFor=\"let drugGroup of departmentDrugs; let j=index\" class=\"tab-pane fade {{j === 0 ? 'active in' : ''}}\" id=\"divDrugsGroup{{drugGroup.data}}\">\r\n            <patient-medicationsGrid [drugs]=\"drugGroup.children\"\r\n                                  [noteDrugs]=\"noteDrugsList\"\r\n                                  [diagnosis]=\"noteDiagnosis\"\r\n                                  [drugDosageUnits]=\"drugDosageUnitsList\"\r\n                                  [drugFrequencies]=\"drugFrequenciesList\"\r\n                                  [durationUnits]=\"durationUnitsList\"\r\n                                  [masterList]=\"masterNoteDrugsList\"\r\n                                  [noteId]=\"noteId\"></patient-medicationsGrid>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, OnChanges, ViewChild, Input, Output, EventEmitter } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { SharedService } from '../../shared/shared/shared.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\nimport { DoctorService } from '../../doctors/shared/doctor.service';\r\nimport { TranslateObjectsPipe } from '../../shared/pipes/translateObjects.pipe';\r\n@Component({\r\n\r\n    selector: 'patient-note-radiology',\r\n    templateUrl: 'patient-note-radiology.component.html',\r\n})\r\n\r\nexport class PatientNoteRadiologyComponent implements OnInit, OnChanges {\r\n\r\n    selectedLang = 'ar';\r\n    showProgress = false;\r\n    departmentRadiologies:any = [];\r\n    noteDiagnosis = [];\r\n    noteRadiologiesList: any[] = [];\r\n    divisionId!: string;\r\n    masterNoteRadiologiesList: any[] = [];\r\n\r\n    @Input() noteId!: number;\r\n    @Output() onRadiologiesSaved = new EventEmitter<any>();\r\n\r\n    lstToTranslated: string[] = [];\r\n    translateObjects = new TranslateObjectsPipe(this.storage);\r\n    constructor(private doctorService: DoctorService\r\n        , private sharedService: SharedService\r\n        , public toastr: ToastrService\r\n        , private _route: ActivatedRoute\r\n        , public storage: LocalStorageService\r\n        , public translate: TranslateService) {\r\n        this.masterNoteRadiologiesList = [];\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n        this.divisionId = this._route.snapshot.params['divisionId'];\r\n        this.getClinicDepartmentRadiologyTestsGroups();\r\n        this.lstToTranslated = ['label', 'labelTranslation'];\r\n\r\n    }\r\n\r\n    ngOnChanges() {\r\n\r\n        if (this.noteId) {\r\n            this.selectedLang = this.storage.retrieve(\"selectedLanguage\");\r\n            this.getNoteDiagnosis();\r\n            this.loadNoteRadiologyList();\r\n        }\r\n    }\r\n\r\n    getClinicDepartmentRadiologyTestsGroups() {\r\n        let vm = this;\r\n        //get department services groups\r\n        this.doctorService.getClinicDivisionRadiologyTestsGroups(this.divisionId)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    vm.departmentRadiologies = response;\r\n                    vm.translateObjects.transform(vm.departmentRadiologies, '', null, vm.lstToTranslated);\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n    }\r\n\r\n    getNoteDiagnosis() {\r\n        let vm = this;\r\n        this.doctorService.getNoteDiagnosis(this.noteId.toString())\r\n            .subscribe(\r\n                function (response: any) {\r\n                    vm.noteDiagnosis = response;\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n    }\r\n\r\n    loadNoteRadiologyList() {\r\n        let vm = this;\r\n        if (vm.noteId && vm.noteId > 0) {\r\n            vm.showProgress = true;\r\n\r\n            this.doctorService.getClinicNoteRadTests(vm.noteId).subscribe(\r\n                function (response: any) {\r\n                    vm.noteRadiologiesList = response;\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                },\r\n                function () { // finally\r\n                    vm.showProgress = false;\r\n                });\r\n        }\r\n    }\r\n\r\n    SaveNoteRadiologies() {\r\n        let vm = this;\r\n        vm.showProgress = true;\r\n        this.doctorService.createClinicNoteRadTest(this.masterNoteRadiologiesList)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    vm.noteRadiologiesList = response;\r\n                    let msg = vm.translate.instant(\"SavedSuccessfully\");\r\n                    vm.toastr.success(msg, '');\r\n                    vm.onRadiologiesSaved.emit();\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                    vm.showProgress = false;\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n    }\r\n\r\n}","<div *ngIf=\"showProgress\">\r\n    <loading></loading>\r\n</div>\r\n\r\n<button *ngIf=\"departmentRadiologies.length\" class=\"btn btn-primary text-right\" (click)=\"SaveNoteRadiologies()\">{{'Save' | translate}}</button>\r\n<br />\r\n<br />\r\n<div class=\"row\" *ngIf=\"departmentRadiologies.length\">\r\n    <ul class=\"nav nav-tabs\">\r\n        <li *ngFor=\"let radiologyGroup of departmentRadiologies; let i=index\" class=\"{{i === 0 ? 'active' : ''}}\"><a href=\"#divRadiologyGroup{{radiologyGroup.data}}\" data-toggle=\"tab\" aria-expanded=\"true\">{{ selectedLang === 'ar' ?  radiologyGroup.label : radiologyGroup.labelTranslation }}</a></li>\r\n    </ul>\r\n    <div class=\"tab-content\">\r\n        <div *ngFor=\"let radiologyGroup of departmentRadiologies; let j=index\" class=\"tab-pane fade {{j === 0 ? 'active in' : ''}}\" id=\"divRadiologyGroup{{radiologyGroup.data}}\">\r\n            <patient-radiologyGrid [radiologies]=\"radiologyGroup.children\"\r\n                                  [noteRadiologies]=\"noteRadiologiesList\"\r\n                                  [diagnosis]=\"noteDiagnosis\"\r\n                                  [masterList]=\"masterNoteRadiologiesList\"\r\n                                  [noteId]=\"noteId\"></patient-radiologyGrid>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, OnChanges, ViewChild, Input, Output, EventEmitter } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { SharedService } from '../../shared/shared/shared.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\nimport { DoctorService } from '../../doctors/shared/doctor.service';\r\nimport { TranslateObjectsPipe } from '../../shared/pipes/translateObjects.pipe';\r\n@Component({\r\n\r\n    selector: 'patient-note-services',\r\n    templateUrl: 'patient-note-services.component.html',\r\n})\r\n\r\nexport class PatientNoteServicesComponent implements OnInit, OnChanges {\r\n\r\n    selectedLang = 'ar';\r\n    showProgress = false;\r\n    departmentServices:any = [];\r\n    noteDiagnosis:any = [];\r\n    noteServicesList: any[] = [];\r\n    noteServicePackagesList: any[] = [];\r\n    divisionId!: string;\r\n    masterNoteServicesList: any[] = [];\r\n    masterNoteServicePackagesList: any[] = [];\r\n    departmentServicePackages:any = [];\r\n    rbSelections = [{ value: 1, text: 'Service' }, { value: 2, text: 'ServicePackage' }];\r\n    isService = true;\r\n    selectedAction = 1;\r\n    @Input() noteId!: number;\r\n    @Output() onServicesSaved = new EventEmitter<any>();\r\n\r\n    lstToTranslated: string[] = [];\r\n    translateObjects = new TranslateObjectsPipe(this.storage);\r\n    constructor(private doctorService: DoctorService\r\n        , private sharedService: SharedService\r\n        , public toastr: ToastrService\r\n        , private _route: ActivatedRoute\r\n        , public storage: LocalStorageService\r\n        , public translate: TranslateService) {\r\n        this.masterNoteServicesList = [];\r\n        this.masterNoteServicePackagesList = [];\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n        this.divisionId = this._route.snapshot.params['divisionId'];\r\n        this.getClinicDepartmentServiceGroupsForTreeView();\r\n        this.getClinicDepartmentServicePackageGroupsForTreeView();\r\n        this.lstToTranslated = ['label', 'labelTranslation'];\r\n    }\r\n\r\n    ngOnChanges() {\r\n\r\n        if (this.noteId) {\r\n            this.selectedLang = this.storage.retrieve(\"selectedLanguage\");\r\n            this.getNoteDiagnosis();\r\n            this.loadNoteServicesList();\r\n        }\r\n    }\r\n\r\n    getClinicDepartmentServiceGroupsForTreeView() {\r\n        let vm = this;\r\n        //get department services groups\r\n        this.doctorService.getClinicDivisionServiceGroupsForTreeView(this.divisionId)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    vm.departmentServices = response;\r\n                    vm.translateObjects.transform(vm.departmentServices, '', null, vm.lstToTranslated);\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n    }\r\n\r\n    getClinicDepartmentServicePackageGroupsForTreeView() {\r\n        let vm = this;\r\n        //get department service packages groups\r\n        this.doctorService.getClinicDivisionServicePackageGroupsForTreeView(this.divisionId)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    vm.departmentServicePackages = response;\r\n                    vm.translateObjects.transform(vm.departmentServicePackages, '', null, vm.lstToTranslated);\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n    }\r\n    getNoteDiagnosis() {\r\n        let vm = this;\r\n        this.doctorService.getNoteDiagnosis(this.noteId.toString())\r\n            .subscribe(\r\n                function (response: any) {\r\n                    vm.noteDiagnosis = response;\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n    }\r\n\r\n    loadNoteServicesList() {\r\n        let vm = this;\r\n        if (vm.noteId && vm.noteId > 0) {\r\n            vm.showProgress = true;\r\n\r\n            this.doctorService.getNoteServicesList(vm.noteId).subscribe(\r\n                function (response: any) {\r\n                    vm.noteServicesList = response;\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                },\r\n                function () { // finally\r\n                    vm.showProgress = false;\r\n                });\r\n        }\r\n    }\r\n\r\n\r\n    SaveNoteServices() {\r\n        let vm = this;\r\n        vm.showProgress = true;\r\n        this.doctorService.createClinicNoteService(this.masterNoteServicesList)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    vm.noteServicesList = response;\r\n                    let msg = vm.translate.instant(\"SavedSuccessfully\");\r\n                    vm.toastr.success(msg, '');\r\n                    vm.onServicesSaved.emit();\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                    vm.showProgress = false;\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n    }\r\n\r\n\r\n    onSelectionChange(value: any) {\r\n        this.selectedAction = value;\r\n\r\n        if (this.selectedAction == 1) {\r\n            this.isService = true;\r\n        }\r\n        else if (this.selectedAction == 2) {\r\n            this.isService = false;\r\n        }\r\n    }\r\n}","<div *ngIf=\"showProgress\">\r\n    <loading></loading>\r\n</div>\r\n<button *ngIf=\"departmentServices.length || departmentServicePackages.length\" class=\"btn btn-primary text-right\" (click)=\"SaveNoteServices()\">{{'Save' | translate}}</button>\r\n<br />\r\n<!--<div class=\"row\">\r\n    <div class=\"col-sm-offset-2 col-md-8\">\r\n       <table>\r\n            <tr>\r\n                <td *ngFor=\"let item of rbSelections; let idx = index\">\r\n                    <input type=\"radio\" name=\"radiogroup\" [value]=\"item.value\"\r\n                           [checked]=\"item.value == selectedAction\" #i (change)=\"onSelectionChange(i.value)\">{{item.text| translate}}\r\n                </td>\r\n            </tr>\r\n        </table>\r\n    </div>\r\n</div>-->\r\n\r\n            <div class=\"row\">\r\n                <ul class=\"nav nav-tabs\">\r\n                    <li class=\"active\"><a href=\"#servicesPanel11\" data-toggle=\"tab\" aria-expanded=\"true\">{{ 'Services' | translate}}</a></li>\r\n                    <li><a href=\"#serviceGroupPanel11\" data-toggle=\"tab\" aria-expanded=\"true\">{{ 'ServicePackage' | translate}}</a></li>\r\n                </ul>\r\n                <div class=\"tab-content\">\r\n                    <div class=\"tab-pane fade active in\" id=\"servicesPanel11\">\r\n                            <ul class=\"nav nav-tabs\">\r\n                                <li *ngFor=\"let serviceGroup of departmentServices; let i=index\" class=\"{{i === 0 ? 'active' : ''}}\"><a href=\"#divServicesGroup{{serviceGroup.data}}\" data-toggle=\"tab\" aria-expanded=\"true\">{{ selectedLang === 'ar' ?  serviceGroup.label : serviceGroup.labelTranslation }}</a></li>\r\n                            </ul>\r\n                            <div class=\"tab-content\">\r\n                                <div *ngFor=\"let serviceGroup of departmentServices; let j=index\" class=\"tab-pane fade {{j === 0 ? 'active in' : ''}}\" id=\"divServicesGroup{{serviceGroup.data}}\">\r\n                                    <patient-servicesGrid [services]=\"serviceGroup.children\"\r\n                                                          [noteServices]=\"noteServicesList\"\r\n                                                          [diagnosis]=\"noteDiagnosis\"\r\n                                                          [masterList]=\"masterNoteServicesList\"\r\n                                                          [noteId]=\"noteId\"></patient-servicesGrid>\r\n                                </div>\r\n                            </div>\r\n                    </div>\r\n                    <div class=\"tab-pane fade\" id=\"serviceGroupPanel11\">\r\n                        <div class=\"row\" >\r\n                            <ul class=\"nav nav-tabs\">\r\n                                <li *ngFor=\"let servicePackageGroup of departmentServicePackages; let i=index\" class=\"{{i === 0 ? 'active' : ''}}\"><a href=\"#divServicePackagesGroup{{servicePackageGroup.data}}\" data-toggle=\"tab\" aria-expanded=\"true\">{{ selectedLang === 'ar' ?  servicePackageGroup.label : servicePackageGroup.labelTranslation }}</a></li>\r\n                            </ul>\r\n                            <div class=\"tab-content\">\r\n                                <div *ngFor=\"let servicePackageGroup of departmentServicePackages; let j=index\" class=\"tab-pane fade {{j === 0 ? 'active in' : ''}}\" id=\"divServicePackagesGroup{{servicePackageGroup.data}}\">\r\n                                    <patient-servicePackages-grid [packages]=\"servicePackageGroup.children\"\r\n                                                                  [notePackages]=\"noteServicesList\"\r\n                                                                  [diagnosis]=\"noteDiagnosis\"\r\n                                                                  [masterList]=\"masterNoteServicesList\"\r\n                                                                  [noteId]=\"noteId\"></patient-servicePackages-grid>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import {Component, Input, OnInit, OnChanges, SimpleChanges } from '@angular/core';\r\nimport {LocalStorageService} from 'ng2-webstorage';\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { PatientService } from '../shared/patient.service'\r\n\r\n@Component({\r\n   \r\n    selector: 'patient-note-view',\r\n    templateUrl: 'patient-note-view.component.html',\r\n})\r\n\r\nexport class PatientNoteViewComponent implements OnInit, OnChanges {\r\n    //@Input() noteId = '';\r\n    PrintNoteDive: string = 'PrintArea';\r\n    showProgress = false;\r\n    @Input() model: any = {};\r\n    lstToTranslatedDiagnosis: string[] = [];\r\n    lstToTranslatedMedications: string[] = [];\r\n    lstToTranslatedLabTests: string[] = [];\r\n    lstToTranslatedRadiologyTests: string[] = [];\r\n\r\n    lstToTranslatedServices: string[] = [];\r\n    lstToTranslated: string[] = [];\r\n    constructor(private localStorage: LocalStorageService,\r\n        public patientService: PatientService,\r\n        public toastr: ToastrService,\r\n        private _route: ActivatedRoute) { }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n       \r\n            //this.getClinicNotbyId();\r\n    }\r\n\r\n\r\n    ngOnInit() {\r\n        this.lstToTranslatedDiagnosis = ['diagnoseName', 'diagnoseNameTranslation', 'visitTypeName', 'visitTypeNameTranslation', 'doctorName', 'doctorNameTranslation'];\r\n        this.lstToTranslatedMedications = ['dosageUnitName', 'dosageUnitNameTranslation', 'frequencyName', 'frequencyNameNameTranslation', 'relatedDiagnoseName', 'relatedDiagnoseNameTranslation', 'recorderName', 'recorderNameTranslation'];\r\n        this.lstToTranslatedServices = ['serviceName', 'serviceNameTranslation', 'diagnoseName', 'diagnoseNameTranslation', 'servicePackageName', 'servicePackageNameTranslation', 'recorderName', 'recorderNameTranslation'];\r\n        this.lstToTranslatedLabTests = ['diagnoseName', 'diagnoseNameTranslation', 'labTestName', 'labTestNameTranslation'];\r\n        this.lstToTranslatedRadiologyTests = ['radTestName', 'radTestNameTranslation', 'diagnoseName', 'diagnoseNameTranslation'];\r\n\r\n        let patient: any = {};\r\n        let activeInsurance: any = {};\r\n        let chiefComplaint: any = {};\r\n\r\n        this.model.patient = patient;\r\n        this.model.patient.activeInsurance = activeInsurance;\r\n        this.model.chiefComplaint = chiefComplaint;\r\n       \r\n    }\r\n\r\n  \r\n\r\n}","<div *ngIf=\"showProgress\">\r\n    <loading></loading>\r\n</div>\r\n\r\n<print-page [section]='PrintNoteDive'></print-page>\r\n\r\n<div class=\"row\">\r\n    <strong>\r\n        {{ 'CreationDate' | translate}}\r\n    </strong>\r\n    : &nbsp;&nbsp;&nbsp;\r\n    {{model.creationDateString}}\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <div class=\"forum-header\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-8\">\r\n                <div>\r\n                    <label class=\"label label-success\">\r\n                        {{ 'UnifiedMRN' | translate}} : {{model.patient.unifiedMRN}}\r\n                    </label>\r\n                    <label class=\"label label-pink\">\r\n                        {{ 'ClinicMRN' | translate}} : {{model.patient.clinicMRN}}\r\n                    </label>\r\n                </div>\r\n                <h2 class=\"forum-title\">\r\n                    {{model.patient.name}}\r\n                </h2>\r\n                <p class=\"forum-sub-title\">\r\n                    <span class=\"topic-meta\">\r\n                        <em>\r\n                            <strong>\r\n                                {{ 'Description' | translate}}:\r\n                            </strong>\r\n                            {{model.patient.description}}\r\n                        </em>\r\n                    </span>\r\n                </p>\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <div class=\"forum-meta\">\r\n                    <div class=\"forum-meta-info\">\r\n                        <ul>\r\n                            <li>\r\n                                <label>{{ 'Gender' | translate}}:</label>&nbsp; {{model.patient.gender}}\r\n                            </li>\r\n                            <li>\r\n                                <label>{{ 'Age' | translate}}: </label>&nbsp;{{model.patient.age}}\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<br />\r\n<h4>{{ 'MedicalInsuranceDetails' | translate}}</h4>\r\n<div class=\"row\">\r\n    <div class=\"col-md-2\">\r\n        <strong>\r\n            {{ 'Company' | translate}}\r\n        </strong>\r\n    </div>\r\n    <div class=\"col-md-2\">\r\n        {{model.patient.activeInsurance.companyName}}\r\n    </div>\r\n    <div class=\"col-md-2\">\r\n        <strong>\r\n            {{ 'PolicyName' | translate}}\r\n        </strong>\r\n    </div>\r\n    <div class=\"col-md-2\">\r\n        {{model.patient.activeInsurance.policyName}}\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-md-2\">\r\n        <strong>\r\n            {{ 'StartDate' | translate}}\r\n        </strong>\r\n    </div>\r\n    <div class=\"col-md-2\">\r\n        {{model.patient.activeInsurance.startDateString}}\r\n    </div>\r\n    <div class=\"col-md-2\">\r\n        <strong>\r\n            {{ 'EndDate' | translate}}\r\n        </strong>\r\n    </div>\r\n    <div class=\"col-md-2\">\r\n        {{model.patient.activeInsurance.endDateString}}\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-md-2\">\r\n        <strong>\r\n            {{ 'Description' | translate}}\r\n        </strong>\r\n    </div>\r\n    <div class=\"col-md-6\">\r\n        {{model.patient.activeInsurance.description}}\r\n    </div>\r\n</div>\r\n\r\n<br />\r\n<h4>{{ 'ChiefComplaint' | translate}}</h4>\r\n<div class=\"row\">\r\n    <div class=\"col-md-2\">\r\n    </div>\r\n    <div class=\"col-md-6\">\r\n        {{model.chiefComplaint.chiefComplaintMain}}\r\n    </div>\r\n</div>\r\n\r\n<br />\r\n<h4>{{ 'VitalSigns' | translate}}</h4>\r\n<div class=\"row\">\r\n    <div class=\"col-md-2\">\r\n        <strong>\r\n            {{ 'Weight' | translate}}\r\n        </strong>\r\n    </div>\r\n    <div class=\"col-md-1\">\r\n        {{model.chiefComplaint.weightValue}}\r\n    </div>\r\n    <div class=\"col-md-5\">\r\n        {{model.chiefComplaint.weightValueMark}}\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-md-2\">\r\n        <strong>\r\n            {{ 'Temprature' | translate}}\r\n        </strong>\r\n    </div>\r\n    <div class=\"col-md-1\">\r\n        {{model.chiefComplaint.temperatureTypeValue}}\r\n    </div>\r\n    <div class=\"col-md-5\">\r\n        {{model.chiefComplaint.temperatureTypeMark}}\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-md-2\">\r\n        <strong>\r\n            {{ 'Respirationrate' | translate}}\r\n        </strong>\r\n    </div>\r\n    <div class=\"col-md-1\">\r\n        {{model.chiefComplaint.respirationRate}}\r\n    </div>\r\n    <div class=\"col-md-5\">\r\n        {{model.chiefComplaint.respirationRateMark}}\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-md-2\">\r\n        <strong>\r\n            {{ 'Pulse' | translate}}\r\n        </strong>\r\n    </div>\r\n    <div class=\"col-md-1\">\r\n        {{model.chiefComplaint.pulse}}\r\n    </div>\r\n    <div class=\"col-md-5\">\r\n        {{model.chiefComplaint.pulseMark}}\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-md-2\">\r\n        <strong>\r\n            {{ 'Height' | translate}}\r\n        </strong>\r\n    </div>\r\n    <div class=\"col-md-1\">\r\n        {{model.chiefComplaint.heightvalue}}\r\n    </div>\r\n    <div class=\"col-md-5\">\r\n        {{model.chiefComplaint.heightValueMark}}\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-md-2\">\r\n        <strong>\r\n            {{ 'HeadCircumferences' | translate}}\r\n        </strong>\r\n    </div>\r\n    <div class=\"col-md-1\">\r\n        {{model.chiefComplaint.headCircumferences}}\r\n    </div>\r\n    <div class=\"col-md-5\">\r\n        {{model.chiefComplaint.headCircumferencesMArk}}\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-md-2\">\r\n        <strong>\r\n            {{ 'BPSystolic' | translate}}\r\n        </strong>\r\n    </div>\r\n    <div class=\"col-md-1\">\r\n        {{model.chiefComplaint.bpSystolic}}\r\n    </div>\r\n    <div class=\"col-md-5\">\r\n        {{model.chiefComplaint.bpSystolicMark}}\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-md-2\">\r\n        <strong>\r\n            {{ 'BPDiastolic' | translate}}\r\n        </strong>\r\n    </div>\r\n    <div class=\"col-md-1\">\r\n        {{model.chiefComplaint.bpDiastolic}}\r\n    </div>\r\n    <div class=\"col-md-5\">\r\n        {{model.chiefComplaint.bpDiastolicMArk}}\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-md-2\">\r\n        <strong>\r\n            {{ 'BMI' | translate}}\r\n        </strong>\r\n    </div>\r\n    <div class=\"col-md-1\">\r\n        {{model.chiefComplaint.bMI}}\r\n    </div>\r\n    <div class=\"col-md-5\">\r\n        {{model.chiefComplaint.bMIMark}}\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-md-2\">\r\n        <strong>\r\n            {{ 'DurationOfIllness' | translate}}\r\n        </strong>\r\n    </div>\r\n    <div class=\"col-md-1\">\r\n        {{model.chiefComplaint.durationOfIllness}}\r\n    </div>\r\n    <div class=\"col-md-5\">\r\n        {{model.chiefComplaint.durationOfIllnessMark}}\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-md-2\">\r\n        <strong>\r\n            {{ 'SignificantSigns' | translate}}\r\n        </strong>\r\n    </div>\r\n    <div class=\"col-md-6\">\r\n        {{model.chiefComplaint.significantSigns}}\r\n    </div>\r\n</div>\r\n\r\n<br />\r\n<h4>{{ 'Diagnosis' | translate}}</h4>\r\n<div class=\"row\">\r\n    <!---New Table-->\r\n    <p-table #dt [value]=\"model.diagnosis\" dataKey=\"id\" [rowHover]=\"true\" [rows]=\"10\" [showCurrentPageReport]=\"true\"\r\n        [rowsPerPageOptions]=\"[10,20,30,40,50,100]\" [paginator]=\"true\"\r\n        currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" [filterDelay]=\"0\">\r\n\r\n        <ng-template pTemplate=\"header\">\r\n            <tr>\r\n                <th pSortableColumn=\"diagnoseCode\">{{'DiagnoseCode' | translate}} <p-sortIcon field=\"diagnoseCode\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"diagnoseName\">{{'DiagnoseName' | translate}} <p-sortIcon field=\"diagnoseName\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"dateTimeString\">{{'Date' | translate}} <p-sortIcon field=\"dateTimeString\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"description\">{{'Description' | translate}} <p-sortIcon field=\"description\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"doctorName\">{{'DoctorName' | translate}} <p-sortIcon field=\"doctorName\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"status\">{{'Status' | translate}} <p-sortIcon field=\"status\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"isCurrent\">{{'CurrentPast' | translate}} <p-sortIcon field=\"isCurrent\">\r\n                    </p-sortIcon>\r\n                </th>\r\n            </tr>\r\n\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-item>\r\n            <tr class=\"p-selectable-row\">\r\n                <td>\r\n                    {{item.diagnoseCode}}\r\n                </td>\r\n                <td>\r\n                    <span>{{item.diagnoseName}}</span>\r\n                </td>\r\n                <td>\r\n                    <span>{{item.dateTimeString}}</span>\r\n                </td>\r\n                <td>\r\n                    <span>{{item.description}}</span>\r\n                </td>\r\n                <td>\r\n                    <span>{{item.doctorName}}</span>\r\n                </td>\r\n                <td>\r\n                    <span>{{item.status}}</span>\r\n                </td>\r\n                <td>\r\n                    <span>{{item.isCurrent}}</span>\r\n                </td>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"emptymessage\">\r\n            <tr>\r\n                <td colspan=\"8\">No data found.</td>\r\n            </tr>\r\n        </ng-template>\r\n    </p-table>\r\n    <!--End Table-->\r\n\r\n</div>\r\n\r\n<br />\r\n<h4>{{ 'NewMedication' | translate}}</h4>\r\n<div class=\"row\">\r\n    <!---New Table-->\r\n    <p-table #dt [value]=\"model.medications\" dataKey=\"id\" [rowHover]=\"true\" [rows]=\"10\" [showCurrentPageReport]=\"true\"\r\n        [rowsPerPageOptions]=\"[10,20,30,40,50,100]\" [paginator]=\"true\"\r\n        currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" [filterDelay]=\"0\">\r\n\r\n        <ng-template pTemplate=\"header\">\r\n            <tr>\r\n                <th pSortableColumn=\"drugCode\">{{'DiagnoseCode' | translate}} <p-sortIcon field=\"drugCode\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"drugName\">{{'DiagnoseName' | translate}} <p-sortIcon field=\"drugName\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"dosageQuantity\">{{'Date' | translate}} <p-sortIcon field=\"dosageQuantity\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"dosageUnitName\">{{'Description' | translate}} <p-sortIcon field=\"dosageUnitName\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"frequencyName\">{{'DoctorName' | translate}} <p-sortIcon field=\"frequencyName\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"startDateString\">{{'Status' | translate}} <p-sortIcon field=\"startDateString\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"duration\">{{'CurrentPast' | translate}} <p-sortIcon field=\"duration\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"description\">{{'CurrentPast' | translate}} <p-sortIcon field=\"description\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"relatedDiagnoseName\">{{'CurrentPast' | translate}} <p-sortIcon\r\n                        field=\"relatedDiagnoseName\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"recorderName\">{{'CurrentPast' | translate}} <p-sortIcon field=\"recorderName\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"recordingDateString\">{{'CurrentPast' | translate}} <p-sortIcon\r\n                        field=\"recordingDateString\">\r\n                    </p-sortIcon>\r\n                </th>\r\n            </tr>\r\n\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-item>\r\n            <tr class=\"p-selectable-row\">\r\n                <td>\r\n                    {{item.drugCode}}\r\n                </td>\r\n                <td>\r\n                    <span>{{item.drugName}}</span>\r\n                </td>\r\n                <td>\r\n                    <span>{{item.dosageQuantity}}</span>\r\n                </td>\r\n                <td>\r\n                    <span>{{item.dosageUnitName}}</span>\r\n                </td>\r\n                <td>\r\n                    <span>{{item.doctorName}}</span>\r\n                </td>\r\n                <td>\r\n                    <span>{{item.frequencyName}}</span>\r\n                </td>\r\n                <td>\r\n                    <span>{{item.startDateString}}</span>\r\n                </td>\r\n                <td>\r\n                    <span>{{item.duration}}</span>\r\n                </td>\r\n                <td>\r\n                    <span>{{item.description}}</span>\r\n                </td>\r\n                <td>\r\n                    <span>{{item.relatedDiagnoseName}}</span>\r\n                </td>\r\n                <td>\r\n                    <span>{{item.recorderName}}</span>\r\n                </td>\r\n                <td>\r\n                    <span>{{item.recordingDateString}}</span>\r\n                </td>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"emptymessage\">\r\n            <tr>\r\n                <td colspan=\"8\">No data found.</td>\r\n            </tr>\r\n        </ng-template>\r\n    </p-table>\r\n    <!--End Table-->\r\n</div>\r\n\r\n<br />\r\n<h4>{{ 'Services' | translate}}</h4>\r\n<div class=\"row\">\r\n    <!---New Table-->\r\n    <p-table #dt [value]=\"model.services\" dataKey=\"id\" [rowHover]=\"true\" [rows]=\"10\" [showCurrentPageReport]=\"true\"\r\n        [rowsPerPageOptions]=\"[10,20,30,40,50,100]\" [paginator]=\"true\"\r\n        currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" [filterDelay]=\"0\">\r\n\r\n        <ng-template pTemplate=\"header\">\r\n            <tr>\r\n                <th pSortableColumn=\"serviceCode\">{{'DiagnoseCode' | translate}} <p-sortIcon field=\"serviceCode\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"serviceName\">{{'DiagnoseName' | translate}} <p-sortIcon field=\"serviceName\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"servicePackageName\">{{'Date' | translate}} <p-sortIcon field=\"servicePackageName\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"quantity\">{{'Description' | translate}} <p-sortIcon field=\"quantity\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"discount\">{{'DoctorName' | translate}} <p-sortIcon field=\"discount\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"diagnoseName\">{{'Status' | translate}} <p-sortIcon field=\"diagnoseName\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"description\">{{'CurrentPast' | translate}} <p-sortIcon field=\"description\">\r\n                    </p-sortIcon>\r\n                </th>\r\n            </tr>\r\n\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-item>\r\n            <tr class=\"p-selectable-row\">\r\n                <td>\r\n                    {{item.serviceCode}}\r\n                </td>\r\n                <td>\r\n                    <span>{{item.serviceName}}</span>\r\n                </td>\r\n                <td>\r\n                    <span>{{item.servicePackageCode}}</span>\r\n                </td>\r\n                <td>\r\n                    <span>{{item.servicePackageName}}</span>\r\n                </td>\r\n                <td>\r\n                    <span>{{item.quantity}}</span>\r\n                </td>\r\n                <td>\r\n                    <span>{{item.discount}}</span>\r\n                </td>\r\n                <td>\r\n                    <span>{{item.diagnoseName}}</span>\r\n                </td>\r\n                <td>\r\n                    <span>{{item.description}}</span>\r\n                </td>\r\n\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"emptymessage\">\r\n            <tr>\r\n                <td colspan=\"8\">No data found.</td>\r\n            </tr>\r\n        </ng-template>\r\n    </p-table>\r\n    <!--End Table-->\r\n</div>\r\n\r\n<br />\r\n<h4>{{ 'LabTests' | translate}}</h4>\r\n<div class=\"row\">\r\n    <!---New Table-->\r\n    <p-table #dt [value]=\"model.labTests\" dataKey=\"id\" [rowHover]=\"true\" [rows]=\"10\" [showCurrentPageReport]=\"true\"\r\n        [rowsPerPageOptions]=\"[10,20,30,40,50,100]\" [paginator]=\"true\"\r\n        currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" [filterDelay]=\"0\">\r\n\r\n        <ng-template pTemplate=\"header\">\r\n            <tr>\r\n                <th pSortableColumn=\"labTestCode\">{{'TestCode' | translate}} <p-sortIcon field=\"labTestCode\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"labTestName\">{{'TestName' | translate}} <p-sortIcon field=\"labTestName\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"quantity\">{{'Quantity' | translate}} <p-sortIcon field=\"quantity\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"diagnoseName\">{{'DiagnoseName' | translate}} <p-sortIcon field=\"diagnoseName\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"description\">{{'Remarks' | translate}} <p-sortIcon field=\"description\">\r\n                    </p-sortIcon>\r\n                </th>\r\n            </tr>\r\n\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-item>\r\n            <tr class=\"p-selectable-row\">\r\n                <td>\r\n                    {{item.labTestCode}}\r\n                </td>\r\n                <td>\r\n                    <span>{{item.labTestName}}</span>\r\n                </td>\r\n                <td>\r\n                    <span>{{item.quantity}}</span>\r\n                </td>\r\n                <td>\r\n                    <span>{{item.diagnoseName}}</span>\r\n                </td>\r\n                <td>\r\n                    <span>{{item.description}}</span>\r\n                </td>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"emptymessage\">\r\n            <tr>\r\n                <td colspan=\"8\">No data found.</td>\r\n            </tr>\r\n        </ng-template>\r\n    </p-table>\r\n    <!--End Table-->\r\n</div>\r\n\r\n<br />\r\n<h4>{{ 'RadiologyTests' | translate}}</h4>\r\n<div class=\"row\">\r\n    <!---New Table-->\r\n    <p-table #dt [value]=\"model.radiologyTests\" dataKey=\"id\" [rowHover]=\"true\" [rows]=\"10\"\r\n        [showCurrentPageReport]=\"true\" [rowsPerPageOptions]=\"[10,20,30,40,50,100]\" [paginator]=\"true\"\r\n        currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" [filterDelay]=\"0\">\r\n\r\n        <ng-template pTemplate=\"header\">\r\n            <tr>\r\n                <th pSortableColumn=\"radTestCode\">{{'TestCode' | translate}} <p-sortIcon field=\"radTestCode\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"radTestName\">{{'TestName' | translate}} <p-sortIcon field=\"radTestName\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"quantity\">{{'Quantity' | translate}} <p-sortIcon field=\"quantity\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"diagnoseName\">{{'DiagnoseName' | translate}} <p-sortIcon field=\"diagnoseName\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"description\">{{'Remarks' | translate}} <p-sortIcon field=\"description\">\r\n                    </p-sortIcon>\r\n                </th>\r\n            </tr>\r\n\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-item>\r\n            <tr class=\"p-selectable-row\">\r\n                <td>\r\n                    {{item.radTestCode}}\r\n                </td>\r\n                <td>\r\n                    <span>{{item.radTestName}}</span>\r\n                </td>\r\n                <td>\r\n                    <span>{{item.quantity}}</span>\r\n                </td>\r\n                <td>\r\n                    <span>{{item.diagnoseName}}</span>\r\n                </td>\r\n                <td>\r\n                    <span>{{item.description}}</span>\r\n                </td>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"emptymessage\">\r\n            <tr>\r\n                <td colspan=\"8\">No data found.</td>\r\n            </tr>\r\n        </ng-template>\r\n    </p-table>\r\n    <!--End Table-->\r\n</div>\r\n\r\n\r\n<br />\r\n<h4>{{ 'Remarks' | translate}}</h4>\r\n<div class=\"row\">\r\n    <p-editor [ngModel]=\"model.description\" [style]=\"{'height':'200px'}\" readonly=\"true\">\r\n    </p-editor>\r\n</div>\r\n<br />\r\n\r\n<div id=\"PrintArea\" class=\"row hidden\">\r\n    <div class=\"row\">\r\n        <strong>\r\n            {{ 'CreationDate' | translate}}\r\n        </strong>\r\n        : &nbsp;&nbsp;&nbsp;\r\n        {{model.creationDateString}}\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"forum-header\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-8\">\r\n                    <div>\r\n                        <label class=\"label label-success\">\r\n                            {{ 'UnifiedMRN' | translate}} : {{model.patient.unifiedMRN}}\r\n                        </label>\r\n                        <label class=\"label label-pink\">\r\n                            {{ 'ClinicMRN' | translate}} : {{model.patient.clinicMRN}}\r\n                        </label>\r\n                    </div>\r\n                    <h2 class=\"forum-title\">\r\n                        {{model.patient.name}}\r\n                    </h2>\r\n                    <p class=\"forum-sub-title\">\r\n                        <span class=\"topic-meta\">\r\n                            <em>\r\n                                <strong>\r\n                                    {{ 'Description' | translate}}:\r\n                                </strong>\r\n                                {{model.patient.description}}\r\n                            </em>\r\n                        </span>\r\n                    </p>\r\n                </div>\r\n                <div class=\"col-md-4\">\r\n                    <div class=\"forum-meta\">\r\n                        <div class=\"forum-meta-info\">\r\n                            <ul>\r\n                                <li>\r\n                                    <label>{{ 'Gender' | translate}}:</label>&nbsp; {{model.patient.gender}}\r\n                                </li>\r\n                                <li>\r\n                                    <label>{{ 'Age' | translate}}: </label>&nbsp;{{model.patient.age}}\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <br />\r\n    <h4>{{ 'MedicalInsuranceDetails' | translate}}</h4>\r\n    <table class=\"table table-condensed\" style=\"border:none;\">\r\n        <tr>\r\n            <td>\r\n                <strong>\r\n                    {{ 'Company' | translate}}\r\n                </strong>\r\n            </td>\r\n            <td>{{model.patient.activeInsurance.companyName}}</td>\r\n            <td>\r\n                <strong>\r\n                    {{ 'PolicyName' | translate}}\r\n                </strong>\r\n            </td>\r\n            <td>{{model.patient.activeInsurance.policyName}}</td>\r\n        </tr>\r\n        <tr>\r\n            <td>\r\n                <strong>\r\n                    {{ 'StartDate' | translate}}\r\n                </strong>\r\n            </td>\r\n            <td>{{model.patient.activeInsurance.startDateString}}</td>\r\n            <td>\r\n                <strong>\r\n                    {{ 'EndDate' | translate}}\r\n                </strong>\r\n            </td>\r\n            <td>{{model.patient.activeInsurance.endDateString}}</td>\r\n        </tr>\r\n        <tr>\r\n            <td>\r\n                <strong>\r\n                    {{ 'Description' | translate}}\r\n                </strong>\r\n            </td>\r\n            <td colspan=\"3\">\r\n                {{model.patient.activeInsurance.description}}\r\n            </td>\r\n        </tr>\r\n    </table>\r\n\r\n    <br />\r\n    <h4>{{ 'ChiefComplaint' | translate}}</h4>\r\n    <div class=\"row\">\r\n        <div class=\"col-md-2\">\r\n        </div>\r\n        <div class=\"col-md-6\">\r\n            {{model.chiefComplaint.chiefComplaintMain}}\r\n        </div>\r\n    </div>\r\n\r\n    <br />\r\n    <h4>{{ 'VitalSigns' | translate}}</h4>\r\n    <table class=\"table table-bordered table-striped\">\r\n        <tr>\r\n            <td width=\"30%\">{{ 'Weight' | translate}}</td>\r\n            <td>{{model.chiefComplaint.weightValue}}</td>\r\n            <td>{{model.chiefComplaint.weightValueMark}}</td>\r\n        </tr>\r\n        <tr>\r\n            <td>{{ 'Temprature' | translate}}</td>\r\n            <td>{{model.chiefComplaint.temperatureTypeValue}}</td>\r\n            <td>{{model.chiefComplaint.temperatureTypeMark}}</td>\r\n        </tr>\r\n        <tr>\r\n            <td>{{ 'Respirationrate' | translate}}</td>\r\n            <td>{{model.chiefComplaint.respirationRate}}</td>\r\n            <td>{{model.chiefComplaint.respirationRateMark}}</td>\r\n        </tr>\r\n        <tr>\r\n            <td>{{ 'Pulse' | translate}}</td>\r\n            <td>{{model.chiefComplaint.pulse}}</td>\r\n            <td>{{model.chiefComplaint.pulseMark}}</td>\r\n        </tr>\r\n        <tr>\r\n            <td>{{ 'Height' | translate}}</td>\r\n            <td>{{model.chiefComplaint.heightvalue}}</td>\r\n            <td>{{model.chiefComplaint.heightValueMark}}</td>\r\n        </tr>\r\n        <tr>\r\n            <td>{{ 'HeadCircumferences' | translate}}</td>\r\n            <td>{{model.chiefComplaint.headCircumferences}}</td>\r\n            <td>{{model.chiefComplaint.headCircumferencesMArk}}</td>\r\n        </tr>\r\n        <tr>\r\n            <td>{{ 'BPSystolic' | translate}}</td>\r\n            <td>{{model.chiefComplaint.bpSystolic}}</td>\r\n            <td>{{model.chiefComplaint.bpSystolicMark}}</td>\r\n        </tr>\r\n        <tr>\r\n            <td>{{ 'BPDiastolic' | translate}}</td>\r\n            <td>{{model.chiefComplaint.bpDiastolic}}</td>\r\n            <td>{{model.chiefComplaint.bpDiastolicMArk}}</td>\r\n        </tr>\r\n        <tr>\r\n            <td>{{ 'BMI' | translate}}</td>\r\n            <td>{{model.chiefComplaint.bMI}}</td>\r\n            <td>{{model.chiefComplaint.bMIMark}}</td>\r\n        </tr>\r\n        <tr>\r\n            <td>{{ 'DurationOfIllness' | translate}}</td>\r\n            <td>{{model.chiefComplaint.durationOfIllness}}</td>\r\n            <td>{{model.chiefComplaint.durationOfIllnessMark}}</td>\r\n        </tr>\r\n        <tr>\r\n            <td>{{ 'SignificantSigns' | translate}}</td>\r\n            <td colspan=\"2\">{{model.chiefComplaint.significantSigns}}</td>\r\n        </tr>\r\n    </table>\r\n\r\n    <br />\r\n    <h4>{{ 'Diagnosis' | translate}}</h4>\r\n    <div class=\"row\">\r\n        <table class=\"table table-responsive table-hover table-bordered table-striped\">\r\n            <thead class=\"alert alert-info\">\r\n                <tr>\r\n                    <th>{{'DiagnoseCode' | translate}}</th>\r\n                    <th>{{'DiagnoseName' | translate}}</th>\r\n                    <th>{{'Date' | translate}}</th>\r\n                    <th>{{'Description' | translate}}</th>\r\n                    <th>{{'DoctorName' | translate}}</th>\r\n                    <th>{{'Status' | translate}}</th>\r\n                    <th>{{'CurrentPast' | translate}}</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let item of model.diagnosis\">\r\n                    <td>{{item.diagnoseCode}}</td>\r\n                    <td>{{item.diagnoseName}}</td>\r\n                    <td>{{item.dateTimeString}}</td>\r\n                    <td>{{item.description}}</td>\r\n                    <td>{{item.doctorName}}</td>\r\n                    <td>{{item.status}}</td>\r\n                    <td>\r\n                        <img *ngIf=\"item.isCurrent\" src=\"assets/images/ok-24.jpg\" />\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n\r\n    <br />\r\n    <h4>{{ 'NewMedication' | translate}}</h4>\r\n    <div class=\"row\">\r\n        <table class=\"table table-responsive table-hover table-bordered table-striped\">\r\n            <thead class=\"alert alert-info\">\r\n                <tr>\r\n                    <th>{{'MedicationCode' | translate}}</th>\r\n                    <th>{{'Name' | translate}}</th>\r\n                    <th>{{'DosageQuantity' | translate}}</th>\r\n                    <th>{{'DosageUnit' | translate}}</th>\r\n                    <th>{{'Frequency' | translate}}</th>\r\n                    <th>{{'StartDate' | translate}}</th>\r\n                    <th>{{'Duration' | translate}}</th>\r\n                    <th>{{'Description' | translate}}</th>\r\n                    <th>{{'Diagnosis' | translate}}</th>\r\n                    <th>{{'RecorderName' | translate}}</th>\r\n                    <th>{{'RecordedDate' | translate}}</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let item of model.medications\">\r\n                    <td>{{item.drugCode}}</td>\r\n                    <td>{{item.drugName}}</td>\r\n                    <td>{{item.dosageQuantity}}</td>\r\n                    <td>{{item.dosageUnitName}}</td>\r\n                    <td>{{item.frequencyName}}</td>\r\n                    <td>{{item.startDateString}}</td>\r\n                    <td>{{item.duration}}</td>\r\n                    <td>{{item.description}}</td>\r\n                    <td>{{item.relatedDiagnoseName}}</td>\r\n                    <td>{{item.recorderName}}</td>\r\n                    <td>{{item.recordingDateString}}</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n\r\n    <br />\r\n    <h4>{{ 'Services' | translate}}</h4>\r\n    <div class=\"row\">\r\n        <table class=\"table table-responsive table-hover table-bordered table-striped\">\r\n            <thead class=\"alert alert-info\">\r\n                <tr>\r\n                    <th>{{'ServiceCode' | translate}}</th>\r\n                    <th>{{'ServiceName' | translate}}</th>\r\n                    <th>{{'Quantity' | translate}}</th>\r\n                    <th>{{'Discount' | translate}}</th>\r\n                    <th>{{'DiagnoseName' | translate}}</th>\r\n                    <th>{{'Remarks' | translate}}</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let item of model.services\">\r\n                    <td>{{item.serviceCode}}</td>\r\n                    <td>{{item.serviceName}}</td>\r\n                    <td>{{item.quantity}}</td>\r\n                    <td>{{item.discount}}</td>\r\n                    <td>{{item.diagnoseName}}</td>\r\n                    <td>{{item.description}}</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n\r\n\r\n    <br />\r\n    <h4>{{ 'LabTests' | translate}}</h4>\r\n    <div class=\"row\">\r\n        <table class=\"table table-responsive table-hover table-bordered table-striped\">\r\n            <thead class=\"alert alert-info\">\r\n                <tr>\r\n                    <th>{{'TestCode' | translate}}</th>\r\n                    <th>{{'TestName' | translate}}</th>\r\n                    <th>{{'Quantity' | translate}}</th>\r\n                    <th>{{'DiagnoseName' | translate}}</th>\r\n                    <th>{{'Remarks' | translate}}</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let item of model.labTests\">\r\n                    <td>{{item.labTestCode}}</td>\r\n                    <td>{{item.labTestName}}</td>\r\n                    <td>{{item.quantity}}</td>\r\n                    <td>{{item.diagnoseName}}</td>\r\n                    <td>{{item.description}}</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n\r\n    <br />\r\n    <h4>{{ 'RadiologyTests' | translate}}</h4>\r\n    <div class=\"row\">\r\n        <table class=\"table table-responsive table-hover table-bordered table-striped\">\r\n            <thead class=\"alert alert-info\">\r\n                <tr>\r\n                    <th>{{'TestCode' | translate}}</th>\r\n                    <th>{{'TestName' | translate}}</th>\r\n                    <th>{{'Quantity' | translate}}</th>\r\n                    <th>{{'DiagnoseName' | translate}}</th>\r\n                    <th>{{'Remarks' | translate}}</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let item of model.radiologyTests\">\r\n                    <td>{{item.radTestCode}}</td>\r\n                    <td>{{item.radTestName}}</td>\r\n                    <td>{{item.quantity}}</td>\r\n                    <td>{{item.diagnoseName}}</td>\r\n                    <td>{{item.description}}</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n\r\n    <br />\r\n    <h4>{{ 'Remarks' | translate}}</h4>\r\n    <div>\r\n        <p-editor [ngModel]=\"model.description\" [style]=\"{'height':'500px'}\" readonly=\"true\">\r\n        </p-editor>\r\n    </div>\r\n\r\n</div>","import { Component, OnInit, ViewChild, OnChanges, SimpleChanges, ElementRef, Input } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { PatientService } from '../shared/patient.service'\r\nimport { SharedService } from '../../shared/shared/shared.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\nimport { Table } from 'primeng/table';\r\n\r\n@Component({\r\n\r\n    selector: 'patient-notes',\r\n    templateUrl: 'patient-notes.component.html',\r\n})\r\n\r\nexport class PatientNotesComponent implements OnChanges, OnInit {\r\n    selectBasicTab: boolean = true;\r\n    selectedPatientId!: string;\r\n    @Input() divisionId!: string;\r\n    //@Input() updatedPateintMrf: any[] = [];\r\n    @Input() getMrf: boolean = false;\r\n    selectedPatient: any = {};\r\n    lstToTranslated: string[] = [];\r\n    active = true;\r\n    private subscription!: Subscription;\r\n    model: any = {};\r\n    noteId = \"new\";\r\n    pateintMrfs: any[] = [];\r\n    classifications = [];\r\n    showProgress = false;\r\n    @ViewChild(\"btnCloseViewClinicNotePopUp\") btnCloseViewClinicNotePopUp!: ElementRef;;\r\n    @ViewChild(\"btnEditClinicNote\") btnEditClinicNote!: ElementRef;;\r\n    @ViewChild(\"btnAddNewNote\") btnAddNewNote!: ElementRef;;\r\n    @ViewChild(\"patientClinicalNoteComp\") patientClinicalNoteComp: any;\r\n\r\n    selectedAppointmentId: any;\r\n    selectedNote: any = {};\r\n\r\n    appointmentId = '';\r\n    enable = true;\r\n    @ViewChild('dt') table!: Table;\r\n    constructor(private patientService: PatientService\r\n        , private sharedService: SharedService\r\n        , public toastr: ToastrService\r\n        , private _route: ActivatedRoute\r\n        , public storage: LocalStorageService\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        this.subscription = this.patientService.notifyObservable$.subscribe((res: any) => {\r\n            if (res.hasOwnProperty('option') && res.option === 'call_child') {\r\n\r\n                this.getAllPatientMRF();\r\n\r\n            }\r\n        });\r\n        this.lstToTranslated = ['clinicName', 'clinicNameTranslation', 'departmentName', 'departmentNameTranslation', 'divisionName', 'divisionNameTranslation', 'doctorName', 'doctorNameTranslation'];\r\n        this.divisionId = this._route.snapshot.params['divisionId'];\r\n        this.appointmentId = this._route.snapshot.params['appointmentId'];\r\n        let vm = this;\r\n        // vm.pateintMrfs = vm.updatedPateintMrf;\r\n        this.selectedPatientId = this._route.snapshot.params['id'];\r\n        this.getAllPatientMRF();\r\n\r\n        this.getAllPatientMRF();\r\n\r\n        //if (vm.divisionId == \"0\" && vm.appointmentId == \"0\")\r\n        //    vm.enable = false;\r\n\r\n    }\r\n    ngOnChanges(changes: SimpleChanges) {\r\n\r\n        this.getAllPatientMRF();\r\n    }\r\n    getAllPatientMRF(): void {\r\n        let vm = this;\r\n        vm.showProgress = true;\r\n        if (this.selectedPatientId && this.selectedPatientId != undefined) {\r\n            this.patientService.GetAllPatientMRF(this.selectedPatientId)\r\n                .subscribe(\r\n                    function (response: any) {\r\n                        vm.pateintMrfs = response;\r\n                    },\r\n                    function (error: any) {\r\n                        vm.toastr.error(error, '');\r\n                    },\r\n                    function () {\r\n                        vm.showProgress = false;\r\n                    });\r\n        }\r\n    }\r\n\r\n    setClinicNoteId(selectedNoteId: any, appointmentId: any) {\r\n        this.noteId = selectedNoteId;\r\n        this.selectedAppointmentId = appointmentId;\r\n\r\n        this.getClinicNotbyId();\r\n    }\r\n\r\n    getClinicNotbyId() {\r\n        let vm = this;\r\n\r\n        vm.showProgress = true;\r\n        this.patientService.getClinicNoteWithAllData(vm.noteId)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    vm.selectedNote = response;\r\n\r\n                    if (response.patient == undefined) {\r\n                        let patient: any = {};\r\n                        let activeInsurance: any = {};\r\n                        vm.selectedNote.patient = patient;\r\n                        vm.selectedNote.patient.activeInsurance = activeInsurance;\r\n                    }\r\n\r\n                    if (response.patient != undefined && response.patient.activeInsurance == undefined) {\r\n                        let activeInsurance: any = {};\r\n                        vm.selectedNote.patient.activeInsurance = activeInsurance;\r\n                    }\r\n\r\n                    if (response.chiefComplaint == undefined) {\r\n                        let chiefComplaint: any = {};\r\n                        vm.selectedNote.chiefComplaint = chiefComplaint;\r\n                    }\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                    vm.showProgress = false;\r\n                },\r\n                function () { // finally\r\n                    vm.showProgress = false;\r\n                });\r\n    }\r\n\r\n\r\n    openEditClinicNotePopup() {\r\n        this.btnCloseViewClinicNotePopUp.nativeElement.click();\r\n        //this.btnEditClinicNote.nativeElement.click();\r\n\r\n        setTimeout(() => this.openClinicNotePopup(), 500);\r\n    }\r\n\r\n    openClinicNotePopup() {\r\n        this.patientClinicalNoteComp.setSelectedTab(0);\r\n        this.btnEditClinicNote.nativeElement.click();\r\n    }\r\n\r\n    openPrescription(noteId: string, reportName: string) {\r\n\r\n        let lang = this.storage.retrieve(\"SelectedLanguage\");\r\n\r\n        if (lang == null || lang == undefined)\r\n            lang = 'ar';\r\n\r\n        let url = 'reports/' + reportName + \"/\" + \"ReportViewer.aspx?lang=\" + lang + \"&id=\" + noteId;\r\n\r\n        window.open(url);\r\n    }\r\n\r\n\r\n}","<div *ngIf=\"showProgress\">\r\n    <loading></loading>\r\n</div>\r\n\r\n<div class=\"padding5\">\r\n    <div class=\"inner-addon left-addon\">\r\n        <i class=\"glyphicon glyphicon-search\"></i>\r\n        <input pInputText type=\"text\" #gb (input)=\"dt.filterGlobal($event.target.value, 'contains')\"\r\n            [placeholder]=\"'Search' | translate\" />\r\n    </div>\r\n    <!---New Table-->\r\n    <p-table #dt [value]=\"pateintMrfs\" dataKey=\"id\" [rowHover]=\"true\" [rows]=\"10\" [showCurrentPageReport]=\"true\"\r\n        [rowsPerPageOptions]=\"[10,20,30,40,50,100]\" [paginator]=\"true\"\r\n        currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" [filterDelay]=\"0\"\r\n        [globalFilterFields]=\"['clinicName','departmentName','divisionName','doctorName','creationDateString']\">\r\n\r\n        <ng-template pTemplate=\"header\">\r\n            <tr>\r\n                <th pSortableColumn=\"clinicName\">{{'ClinicName' | translate}} <p-sortIcon field=\"clinicName\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"departmentName\">{{'DepartmentName' | translate}} <p-sortIcon\r\n                        field=\"departmentName\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"divisionName\">{{'DivisionName' | translate}} <p-sortIcon field=\"divisionName\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"doctorName\">{{'Doctor' | translate}} <p-sortIcon field=\"doctorName\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"creationDateString\">{{'CreationDate' | translate}} <p-sortIcon\r\n                        field=\"creationDateString\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th><span styleClass=\"text-center width70\">{{'Prescription' | translate}} </span>\r\n                </th>\r\n                <th><span styleClass=\"text-center width70\">{{'ViewDetails' | translate}} </span>\r\n                </th>\r\n                <th style=\"width: 8rem\">\r\n                </th>\r\n            </tr>\r\n\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-item>\r\n            <tr class=\"p-selectable-row\">\r\n                <td>\r\n                    {{item.clinicName}}\r\n                </td>\r\n                <td>\r\n                    <span>{{item.departmentName}}</span>\r\n                </td>\r\n                <td>\r\n                    <span>{{item.divisionName}}</span>\r\n                </td>\r\n                <td>\r\n                    <span>{{item.doctorName}}</span>\r\n                </td>\r\n                <td>\r\n                    <span>{{item.creationDateString}}</span>\r\n                </td>\r\n                <td>\r\n                    <a class=\"fa fa-print\" (click)=\"openPrescription(item.id , 'PrescriptionReport')\">\r\n                    </a>\r\n                </td>\r\n                <td style=\"text-align: center\">\r\n                    <a class=\"pointer\" data-toggle=\"modal\" data-target=\"#noteView\"\r\n                        (click)=\"setClinicNoteId(item.id , item.appointmentId)\">\r\n                        <img src=\"assets/images/details-24.jpg\" />\r\n                    </a>\r\n                </td>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"emptymessage\">\r\n            <tr>\r\n                <td colspan=\"8\">No data found.</td>\r\n            </tr>\r\n        </ng-template>\r\n    </p-table>\r\n    <!--End Table-->\r\n\r\n\r\n</div>\r\n<!-- Modal -->\r\n<div id=\"noteView\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog fullWidth\">\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">{{ 'ClinicalNoteDetails' | translate}} </h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <div class=\"row text-center\">\r\n                    <button type=\"button\" class=\"btn btn-primary\" (click)=\"openEditClinicNotePopup()\"\r\n                        [disabled]=\"!enable\">{{ 'Edit' | translate}}</button>\r\n                    <button type=\"button\" class=\"btn btn-danger\" #btnCloseViewClinicNotePopUp data-dismiss=\"modal\">{{\r\n                        'Close' | translate}}</button>\r\n\r\n                </div>\r\n                <br />\r\n                <patient-note-view [model]=\"selectedNote\"></patient-note-view>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12 text-center\">\r\n                        <button type=\"button\" class=\"btn btn-primary\" (click)=\"openEditClinicNotePopup()\"\r\n                            [disabled]=\"!enable\">{{ 'Edit' | translate}}</button>\r\n                        <button type=\"button\" class=\"btn btn-danger\" #btnCloseViewClinicNotePopUp\r\n                            data-dismiss=\"modal\">{{ 'Close' | translate}}</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"hidden\">\r\n    <button type=\"button\" #btnEditClinicNote data-toggle=\"modal\" data-target=\"#noteEditing\"></button>\r\n</div>\r\n\r\n<!--<div class=\"hidden\">\r\n    <patient-clinical-note [noteId]=\"noteId\" [selectedAppointmentId] =\"selectedAppointmentId\"  (onNewNoteSaved)=\"getAllPatientMRF($event)\" [allowEditing]=\"true\"></patient-clinical-note>\r\n</div>-->\r\n\r\n<!--<p-dialog header=\"Clinical Note Details\" [(visible)]=\"displayNoteInEditMode\" resizable=\"true\" width=\"800\" responsive=\"true\" height=\"auto\">\r\n    <div class=\"row\">\r\n        <patient-clinical-note [noteId]=\"noteId\" [allowEditing]=\"true\"></patient-clinical-note>\r\n    </div>\r\n</p-dialog>-->\r\n\r\n\r\n<div id=\"noteEditing\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog fullWidth\">\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">{{ 'ClinicalNoteDetails' | translate}} </h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <patient-clinical-note #patientClinicalNoteComp [noteId]=\"noteId\" [allowEditing]=\"true\"\r\n                    [selectedAppointmentId]=\"selectedAppointmentId\" [hasEditednote]=\"true\"></patient-clinical-note>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnChanges, OnInit, ViewChild, Input, EventEmitter, Output, SimpleChanges, AfterContentChecked } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { PatientService } from '../shared/patient.service'\r\nimport { SharedService } from '../../shared/shared/shared.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\nimport { UtilityClass } from '../../shared/shared/utility.class';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n    selector: 'patient-personal',\r\n    templateUrl: 'patient-personal.component.html',\r\n})\r\n\r\nexport class PatientPersonalComponent implements OnInit, AfterContentChecked, OnChanges {\r\n    selectBasicTab: boolean = true;\r\n    @Input() model: any = {};\r\n    @Output() onModelUpdated = new EventEmitter<any>();\r\n    @Input() patientId: string = '';\r\n    @Input() title: string = '';\r\n    active = true;\r\n    // model: any = {};\r\n\r\n    countries = [];\r\n    regions = [];\r\n    cities = [];\r\n    religions = [];\r\n    nationalities = [];\r\n    maritalStatuses = [];\r\n    idTypes = [];\r\n    bloodGroups = [];\r\n    showProgress = false;\r\n    selectedClinicId!: any;\r\n    @ViewChild(\"fileInput\") fileInput!: any;\r\n    utilityClass: UtilityClass = new UtilityClass();\r\n\r\n    constructor(private patientService: PatientService\r\n        , private sharedService: SharedService\r\n        , public toastr: ToastrService\r\n        , private _route: ActivatedRoute\r\n        , public storage: LocalStorageService\r\n        , private router: Router\r\n        , public translate: TranslateService\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        let vm = this;\r\n\r\n        //  let id = this._route.snapshot.params['id'];\r\n        this.selectedClinicId = this.storage.retrieve(\"ClinicID\");\r\n        vm.showProgress = true;\r\n\r\n        this.patientService.getPatientPersonalWrapper()\r\n            .subscribe(\r\n                function (response: any) {\r\n                    vm.countries = response.countries;\r\n                    //vm.regions = response.regions;\r\n                    vm.religions = response.religions;\r\n                    vm.nationalities = response.nationalities;\r\n                    vm.bloodGroups = response.bloodGroups;\r\n                    vm.idTypes = response.idTypes;\r\n                    vm.maritalStatuses = response.maritalStatuses;\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n\r\n        // get organization in case of update\r\n        //if (this.model.id.toString().toLowerCase() != 'new') {\r\n        //    vm.showProgress = true;\r\n        //this.patientService.getPatientById(this.patientId)\r\n        //    .subscribe(\r\n        //    function (response:any) {\r\n        //        vm.model = response;\r\n        //    },\r\n        //    function (error:any) { \r\n        //        vm.toastr.error('Failed to get patient with ID'+\" - \" + error, '');\r\n        //        vm.showProgress = false;\r\n        //    },\r\n        //    function () {\r\n        //        vm.showProgress = false;\r\n        //    });\r\n        //    }\r\n\r\n    }\r\n    ngOnChanges(): void {\r\n\r\n    }\r\n    ngAfterContentChecked(): void {\r\n\r\n        let vm = this;\r\n        if (vm != null && vm != undefined && vm.model != null) {\r\n            if (vm.model.birthCountryId != undefined && vm.model.birthCountryId > 0) {\r\n                vm.fillRegions(vm.model.birthCountryId);\r\n            }\r\n            if (vm.model.birthStateId != undefined && vm.model.birthStateId > 0) {\r\n                vm.fillCities(vm.model.birthStateId);\r\n            }\r\n        }\r\n    }\r\n    onSubmit(): void {\r\n\r\n        let vm = this;\r\n        vm.showProgress = true;\r\n\r\n\r\n        this.patientService.updatePatientPersonalData(this.model)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    vm.model = response;\r\n                    if (vm.model.birthDate)\r\n                        vm.model.birthDate = vm.utilityClass.getUtcDateFromString(vm.model.birthDate);\r\n\r\n                    vm.raiseModelUpdated(vm.model);\r\n                    let msg = vm.translate.instant(\"SavedSuccessfully\");\r\n                    vm.toastr.success(msg, '');\r\n\r\n                    if (response.imageData != null) {\r\n                        vm.model.imageData = response.imageData;\r\n                        vm.model.imageId = response.imageId;\r\n                    }\r\n                },\r\n                function (error: any) {\r\n                    //console.log(\"Error happened\" + error)\r\n                    vm.toastr.error(error, '');\r\n                    vm.showProgress = false;\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                }\r\n            );\r\n\r\n    }\r\n\r\n    clear(): void {\r\n        this.model = {};\r\n        this.active = false;\r\n        setTimeout(() => this.active = true, 0);\r\n    }\r\n\r\n    deleteOrganization(id: any): void {\r\n        let vm = this;\r\n        if (id == undefined || isNaN(id)) {\r\n            vm.toastr.warning('لايوجد جمعية مختارة لمسحها', '');\r\n            return;\r\n        }\r\n\r\n        //     vm.showProgress = true;\r\n        //this.organizationService.deleteOrganization(id)\r\n        //    .subscribe(\r\n        //    function (response:any) {\r\n        //        vm.toastr.success('Deleted successfully', '');\r\n        //        vm.clear();\r\n\r\n        //        // store selected organization ID\r\n        //        vm.storage.store(\"OrganizationID\", 'new');\r\n        //    },\r\n        //    function (error:any) { \r\n        //        //console.log(\"Error happened\" + error)\r\n        //        vm.toastr.error('Failed to Delete - ' + error, '');\r\n        //    },\r\n        //    function () {\r\n        //        vm.showProgress = false;\r\n        //    });\r\n    }\r\n\r\n    imageChanged(response: any) {\r\n        let attchmentInfo: any = {};\r\n\r\n        if (response != null) {\r\n\r\n            if (response.originalName == undefined) {\r\n                this.model.attachmentInfo = null;\r\n                return;\r\n            }\r\n\r\n            this.model.attachmentInfo = attchmentInfo;\r\n            this.model.attachmentInfo.originalName = response.originalName;\r\n            this.model.attachmentInfo.keyName = response.keyName;\r\n            this.model.attachmentInfo.fullPath = response.fullPath;\r\n            this.model.attachmentInfo.fileType = response.fileType;\r\n        }\r\n        else {\r\n            this.model.attachmentInfo = null;\r\n        }\r\n\r\n    }\r\n\r\n    fillRegions(id: string) {\r\n        var country: any = this.countries.find((i: any) => i.id == id);\r\n\r\n        if (country != null) {\r\n            this.regions = country.regions;\r\n            this.cities = [];\r\n        }\r\n        else {\r\n            this.regions = [];\r\n            this.cities = [];\r\n        }\r\n    }\r\n\r\n    fillCities(id: string) {\r\n        var region: any = this.regions.find((i: any) => i.id == id);\r\n\r\n        if (region != null)\r\n            this.cities = region.cities;\r\n        else\r\n            this.cities = [];\r\n    }\r\n\r\n    raiseModelUpdated(model: any) {\r\n        this.onModelUpdated.emit(model);\r\n    }\r\n\r\n    navigateToPackages() {\r\n        //routerLink=\"/receptionistPatients/1\"\r\n        this.router.navigate(['/receptionist/patients', this.selectedClinicId]);\r\n    }\r\n}","<div *ngIf=\"showProgress\">\r\n    <loading></loading>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <!--<div class=\"col-md-2 nopadding\">\r\n         <patient-receptionist-tabs [activeTabIndex]=\"1\"></patient-receptionist-tabs>\r\n     </div>-->\r\n    <div class=\"row nopadding\">\r\n        <form novalidate *ngIf=\"active\" class=\"form-horizontal\" name=\"patientForm\" (ngSubmit)=\"onSubmit()\" #patientForm=\"ngForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"txtRemarks\" class=\"control-label col-md-2\">{{ 'PatientName' | translate}} </label>\r\n                <label for=\"txtRemarks\" class=\"control-label col-md-2\">{{model.name}} </label>\r\n                <label for=\"txtRemarks\" class=\"control-label col-md-2\">{{ 'ClinicMRN' | translate}} </label>\r\n                <label for=\"txtRemarks\" class=\"control-label col-md-2\">{{model.clinicMRN}} </label>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"txtUnifiedMRN\" class=\"control-label col-md-2\">{{ 'UnifiedMRN' | translate}}</label>\r\n                <div class=\"col-md-2\">\r\n                    <input id=\"txtUnifiedMRN\" name=\"txtUnifiedMRN\" class=\"form-control\" [(ngModel)]='model.unifiedMRN' disabled />\r\n                </div>\r\n                <label for=\"txtClinicMRN\" class=\"control-label col-md-2\">{{ 'ClinicMRN' | translate}}</label>\r\n                <div class=\"col-md-2\">\r\n                    <input id=\"txtClinicMRN\" name=\"txtClinicMRN\" class=\"form-control\" [(ngModel)]='model.clinicMRN' #txtClinicMRN=\"ngModel\" />\r\n                    <div [hidden]=\"txtClinicMRN.valid || txtClinicMRN.pristine\" class=\"alert alert-danger\">\r\n                        {{ 'RequiredField' | translate}}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"ddlBirthCountry\" class=\"control-label col-md-2\">{{ 'BirthCountry' | translate}}</label>\r\n                <div class=\"col-md-2\">\r\n                    <select class=\"form-control\" id=\"ddlBirthCountry\" name=\"ddlBirthCountry\" [(ngModel)]=\"model.birthCountryId\" #ddlBirthCountry=\"ngModel\" #d (change)=\"fillRegions(d.value)\" >\r\n                        <option value=\"\">{{ 'Select' | translate}}</option>\r\n                        <option *ngFor=\"let ele of countries | translateObjects\" [value]=\"ele.id\">{{ele.name}}</option>\r\n                    </select>\r\n                    <div [hidden]=\"ddlBirthCountry.valid || ddlBirthCountry.pristine\" class=\"alert alert-danger\">\r\n                        {{ 'RequiredField' | translate}}\r\n                    </div>\r\n                </div>\r\n                <label for=\"ddlBirthState\" class=\"control-label col-md-2\">{{ 'BirthState' | translate}}</label>\r\n                <div class=\"col-md-2\">\r\n                    <select class=\"form-control\" id=\"ddlBirthState\" name=\"ddlBirthState\" [(ngModel)]=\"model.birthStateId\" #ddlBirthState=\"ngModel\" #r (change)=\"fillCities(r.value)\" >\r\n                        <option value=\"\">{{ 'Select' | translate}}</option>\r\n                        <option *ngFor=\"let ele of regions | translateObjects\" [value]=\"ele.id\">{{ele.name}}</option>\r\n                    </select>\r\n                    <div [hidden]=\"ddlBirthState.valid || ddlBirthState.pristine\" class=\"alert alert-danger\">\r\n                        {{ 'RequiredField' | translate}}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"ddlBirthCity\" class=\"control-label col-md-2\">{{ 'BirthCity' | translate}}</label>\r\n                <div class=\"col-md-2\">\r\n                    <select class=\"form-control\" id=\"ddlBirthCity\" name=\"ddlBirthCity\" [(ngModel)]=\"model.birthCityId\" #ddlBirthCity=\"ngModel\" >\r\n                        <option value=\"\">{{ 'Select' | translate}}</option>\r\n                        <option *ngFor=\"let ele of cities | translateObjects\" [value]=\"ele.id\">{{ele.name}}</option>\r\n                    </select>\r\n                    <div [hidden]=\"ddlBirthCity.valid || ddlBirthCity.pristine\" class=\"alert alert-danger\">\r\n                        {{ 'RequiredField' | translate}}\r\n                    </div>\r\n                </div>\r\n                <label for=\"ddlReligion\" class=\"control-label col-md-2\">{{ 'Religion' | translate}}</label>\r\n                <div class=\"col-md-2\">\r\n                    <select class=\"form-control\" id=\"ddlReligion\" name=\"ddlReligion\" [(ngModel)]=\"model.religionId\" #ddlReligion=\"ngModel\" required>\r\n                        <option value=\"\">{{ 'Select' | translate}}</option>\r\n                        <option *ngFor=\"let ele of religions | translateObjects\" [value]=\"ele.id\">{{ele.name}}</option>\r\n                    </select>\r\n                    <div [hidden]=\"ddlReligion.valid || ddlReligion.pristine\" class=\"alert alert-danger\">\r\n                        {{ 'RequiredField' | translate}}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"ddlMainNationality\" class=\"control-label col-md-2\">{{ 'MainNationality' | translate}}</label>\r\n                <div class=\"col-md-2\">\r\n                    <select class=\"form-control\" id=\"ddlMainNationality\" name=\"ddlMainNationality\" [(ngModel)]=\"model.mainNationalityId\" #ddlMainNationality=\"ngModel\" required>\r\n                        <option value=\"\">{{ 'Select' | translate}}</option>\r\n                        <option *ngFor=\"let ele of nationalities | translateObjects\" [value]=\"ele.id\">{{ele.name}}</option>\r\n                    </select>\r\n                    <div [hidden]=\"ddlMainNationality.valid || ddlMainNationality.pristine\" class=\"alert alert-danger\">\r\n                        {{ 'RequiredField' | translate}}\r\n                    </div>\r\n                </div>\r\n                <label for=\"ddlOtherNationality\" class=\"control-label col-md-2\">{{ 'OtherNationality' | translate}}</label>\r\n                <div class=\"col-md-2\">\r\n                    <select class=\"form-control\" id=\"ddlOtherNationality\" name=\"ddlOtherNationality\" [(ngModel)]=\"model.otherNationalityId\" #ddlOtherNationality=\"ngModel\">\r\n                        <option value=\"\">{{ 'Select' | translate}}</option>\r\n                        <option *ngFor=\"let ele of nationalities | translateObjects\" [value]=\"ele.id\">{{ele.name}}</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"ddlMaritalStatus\" class=\"control-label col-md-2\">{{ 'MaritalStatus' | translate}}</label>\r\n                <div class=\"col-md-2\">\r\n                    <select class=\"form-control\" id=\"ddlMaritalStatus\" name=\"ddlMaritalStatus\" [(ngModel)]=\"model.maritalStatusId\" #ddlMaritalStatus=\"ngModel\">\r\n                        <option value=\"\">{{ 'Select' | translate}}</option>\r\n                        <option *ngFor=\"let ele of maritalStatuses | translateObjects\" [value]=\"ele.id\">{{ele.name}}</option>\r\n                    </select>\r\n                </div>\r\n                <label for=\"ddlBloodGroup\" class=\"control-label col-md-2\">{{ 'BloodGroup' | translate}}</label>\r\n                <div class=\"col-md-2\">\r\n                    <select class=\"form-control\" id=\"ddlBloodGroup\" name=\"ddlBloodGroup\" [(ngModel)]=\"model.bloodGroupId\" #ddlBloodGroup=\"ngModel\">\r\n                        <option value=\"\">{{ 'Select' | translate}}</option>\r\n                        <option *ngFor=\"let ele of bloodGroups | translateObjects\" [value]=\"ele.id\">{{ele.name}}</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"ddlIDType\" class=\"control-label col-md-2\">{{ 'IDType' | translate}}</label>\r\n                <div class=\"col-md-2\">\r\n                    <select class=\"form-control\" id=\"ddlIDType\" name=\"ddlIDType\" [(ngModel)]=\"model.idTypeId\" #ddlIDType=\"ngModel\">\r\n                        <option value=\"\">{{ 'Select' | translate}}</option>\r\n                        <option *ngFor=\"let ele of idTypes | translateObjects\" [value]=\"ele.id\">{{ele.name}}</option>\r\n                    </select>\r\n                </div>\r\n                <label for=\"txtIDNumber\" class=\"control-label col-md-2\">{{ 'IdNumber' | translate}}</label>\r\n                <div class=\"col-md-2\">\r\n                    <input type=\"text\" id=\"txtIdNumber\" name=\"txtIdNumber\" class=\"form-control\" [(ngModel)]=\"model.idNumber\" #ddlIDType=\"ngModel\" />\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"txtAlertMessage\" class=\"control-label col-md-2\">{{ 'AlertMessage' | translate}}</label>\r\n                <div class=\"col-md-6\">\r\n                    <textarea class=\"form-control\" id=\"txtAlertMessage\" name=\"txtAlertMessage\" [(ngModel)]=\"model.alertMessage\"></textarea>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"txtRemarks\" class=\"control-label col-md-2\">{{ 'Remarks' | translate}} </label>\r\n                <div class=\"col-md-6\">\r\n                    <textarea class=\"form-control\" id=\"txtRemarks\" name=\"txtRemarks\" [(ngModel)]=\"model.description\"></textarea>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n                <label for=\"fileImage\" class=\"control-label col-md-2\">{{ 'Picture' | translate}}</label>\r\n                <div class=\"col-md-4\">\r\n                    <image-uploader [imageId]=\"model.imageId\" [imageData]=\"model.imageData\" (change)=\"imageChanged($event);\"></image-uploader>\r\n                </div>\r\n            </div>\r\n            <br />\r\n            <div class=\"form-group\">\r\n                <div class=\"col-md-4 col-md-offset-2\">\r\n                    <button class=\"btn btn-primary\" [disabled]=\"!patientForm.form.valid\">{{ 'Save' | translate}}</button>\r\n                    <button class=\"btn btn-primary\" (click)=\"navigateToPackages()\">{{ 'Back' | translate}} </button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n\r\n","import { Component, OnChanges, OnInit, ViewChild, Output, Input, SimpleChanges, EventEmitter } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { DoctorService } from '../../doctors/shared/doctor.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TreeNode } from 'primeng/api';\r\nimport { SharedService } from '../../shared/shared/shared.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\n\r\n@Component({\r\n\r\n    selector: 'patient-radiology-details',\r\n    templateUrl: 'patient-radiology-details.component.html',\r\n})\r\n\r\nexport class PatientRadiologyDetailsComponent implements OnInit, OnChanges {\r\n    selectBasicTab: boolean = true;\r\n    selectedMedicationNode: any;\r\n\r\n    @Output() onBack = new EventEmitter();\r\n    @Input() noteId: string = '';\r\n    @Input() noteRadTestId!: string;\r\n    active = true;\r\n    radTestToSave: any = { id: 0, quantity: 1 };\r\n    filterString!: string;\r\n    leafType: string = 'RadiologyTest';\r\n    selectedAction = 1;\r\n    classifications = [];\r\n    showProgress = false;\r\n    @ViewChild(\"fileInput\") fileInput!: any;\r\n    isRadTest = true;\r\n    radTests: any | undefined;\r\n    noteDiagnosis: any[] = [];\r\n    selectedGroupNode!: TreeNode;\r\n    radTestCode = '';\r\n    isAll = true;\r\n    divisionId = \"\";\r\n    clinicId = \"\";\r\n    selectedLabNode: any;\r\n    selectedNode!: TreeNode;\r\n    selectedFiles!: TreeNode;\r\n    radTreeDataSourceItems: any[] = [];\r\n    getAllRads = true;\r\n\r\n    constructor(private doctorService: DoctorService\r\n        , private sharedService: SharedService\r\n        , public toastr: ToastrService\r\n        , private _route: ActivatedRoute\r\n        , public storage: LocalStorageService\r\n        , public translate: TranslateService\r\n\r\n    ) { }\r\n\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        let vm = this;\r\n        //get organization in case of update\r\n        if (this.noteRadTestId == 'new') {\r\n            vm.showProgress = true;\r\n            if (this.noteRadTestId && this.noteRadTestId != undefined) {\r\n                this.doctorService.getClinicNoteRadTestById(this.noteRadTestId)\r\n                    .subscribe(\r\n                        function (response: any) {\r\n                            vm.radTestToSave = response;\r\n                            vm.displaySelectedParentGroupNode(vm.radTestToSave.radiologyTestId);\r\n                        },\r\n                        function (error: any) {\r\n                            vm.toastr.error(error, '');\r\n                            vm.showProgress = false;\r\n                        },\r\n                        function () {\r\n                            vm.showProgress = false;\r\n                        });\r\n            }\r\n        }\r\n        if (this.noteRadTestId != 'new') {\r\n            vm.showProgress = true;\r\n            if (this.noteRadTestId && this.noteRadTestId != \"undefined\") {\r\n                this.doctorService.getClinicNoteRadTestById(this.noteRadTestId)\r\n                    .subscribe(\r\n                        function (response: any) {\r\n                            vm.radTestToSave = response;\r\n                        },\r\n                        function (error: any) {\r\n                            vm.toastr.error(error, '');\r\n                            vm.showProgress = false;\r\n                        },\r\n                        function () {\r\n                            vm.showProgress = false;\r\n                        });\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        let vm = this;\r\n        this.selectedMedicationNode = null;\r\n        this.clinicId = this.storage.retrieve(\"ClinicID\");\r\n        this.divisionId = this._route.snapshot.params['divisionId'];\r\n        //let id = this._route.snapshot.params['id'];\r\n        //this.model.id = `${id}`;\r\n        //vm.showProgress = true;\r\n        vm.getClinicDepartmentRadiologyTestsGroups();\r\n        //get note diagnosis\r\n        this.doctorService.getNoteDiagnosis(vm.noteId)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    vm.noteDiagnosis = response;\r\n                    // vm.servicePackages = res\r\n\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                })\r\n    }\r\n\r\n    clear(): void {\r\n        this.radTestToSave = { quantity: 1 };\r\n        this.radTestToSave.radiologyTestId = '';\r\n        this.noteRadTestId = 'new';\r\n        this.selectedNode = {};\r\n        this.active = false;\r\n        setTimeout(() => this.active = true, 0);\r\n    }\r\n\r\n    getClinicDepartmentRadiologyTestsGroups() {\r\n        let vm = this;\r\n        vm.isAll = true;\r\n        //get department services groups\r\n        this.doctorService.getClinicDivisionRadiologyTestsGroups(vm.divisionId)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    vm.radTests = response;\r\n                    if (vm.radTestToSave) {\r\n                        vm.addModelToServicesList(vm.radTestToSave)\r\n                        vm.expandAll();\r\n                    }\r\n\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n    }\r\n    displaySelectedParentGroupNode(radTestId: string) {\r\n        let vm = this\r\n        vm.radTests.forEach((node: any) => {\r\n            vm.displaySelectedNodeRecursive(node, radTestId);\r\n\r\n            //if (node.data == parentId)\r\n            //    vm.selectedFile = node;\r\n        });\r\n    }\r\n    getRadiologyTestsGroupsForTreeView(needAll?: boolean | undefined) {\r\n        let vm = this;\r\n        vm.isAll = false;\r\n        /////////////////////////get all services groups\r\n        this.doctorService.getRadiologyTestsGroupsForTreeView(vm.clinicId)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    vm.radTests = response;\r\n                    if (needAll) {\r\n                        vm.getAllRads = false;\r\n                        vm.radTreeDataSourceItems = response;\r\n                        vm.expandAll();\r\n                    }\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n    }\r\n    private displaySelectedNodeRecursive(node: TreeNode, labTestId: string) {\r\n        let vm = this;\r\n        if (node.children) {\r\n            node.children.forEach((childNode: any) => {\r\n                this.displaySelectedNodeRecursive(childNode, labTestId);\r\n\r\n                if (childNode.data == labTestId && childNode.type.toLocaleLowerCase() == \"radiologytest\")\r\n                    this.selectedNode = childNode;\r\n\r\n            });\r\n        }\r\n    }\r\n    nodeSelect(event: any) {\r\n        this.radTestToSave.radiologyTestId = event.node.data;\r\n        this.radTestToSave.radTestCode = event.node.code;\r\n        this.radTestToSave.radTestName = event.node.name;\r\n\r\n    }\r\n    nodeUnselect(event: any) {\r\n        this.radTestToSave.labTestId = '';\r\n    }\r\n    expandAll() {\r\n        this.radTreeDataSourceItems.forEach(node => {\r\n            this.expandRecursive(node, true);\r\n        });\r\n    }\r\n    collapseAll() {\r\n        this.radTreeDataSourceItems.forEach(node => {\r\n            this.expandRecursive(node, false);\r\n        });\r\n    }\r\n\r\n    private expandRecursive(node: TreeNode, isExpand: boolean) {\r\n        node.expanded = isExpand;\r\n        if (node.children) {\r\n            node.children.forEach(childNode => {\r\n                this.expandRecursive(childNode, isExpand);\r\n            });\r\n        }\r\n    }\r\n\r\n    onSubmit(): void {\r\n        let vm = this;\r\n        vm.showProgress = true;\r\n        vm.radTestToSave.clinicNoteId = vm.noteId;\r\n        if (!(this.radTestToSave.id > 0)) {\r\n            // Add new\r\n            this.doctorService.createClinicNoteRadTest(this.radTestToSave)\r\n                .subscribe(\r\n                    function (response: any) {\r\n                        let msg = vm.translate.instant(\"SavedSuccessfully\");\r\n                        vm.toastr.success(msg, '');\r\n                        vm.radTestToSave = response;\r\n                        vm.noteRadTestId = vm.radTestToSave.id;\r\n                        vm.onBack.emit();\r\n\r\n                    },\r\n                    function (error: any) {\r\n                        //console.log(\"Error happened\" + error)\r\n                        vm.toastr.error(error, '');\r\n                        vm.showProgress = false;\r\n                    },\r\n                    function () {\r\n                        vm.showProgress = false;\r\n                    }\r\n                );\r\n        }\r\n        else {\r\n            // update\r\n            this.doctorService.updateClinicNoteRadTest(this.radTestToSave)\r\n                .subscribe(\r\n                    function (response: any) {\r\n                        let msg = vm.translate.instant(\"SavedSuccessfully\");\r\n                        vm.toastr.success(msg, '');\r\n                        vm.radTestToSave = response;\r\n                        vm.onBack.emit();\r\n\r\n                    },\r\n                    function (error: any) {\r\n                        //console.log(\"Error happened\" + error)\r\n                        vm.toastr.error(error, '');\r\n                        vm.showProgress = false;\r\n                    },\r\n                    function () {\r\n                        vm.showProgress = false;\r\n                    });\r\n        }\r\n    }\r\n\r\n\r\n    goBack() {\r\n        this.onBack.emit();\r\n    }\r\n    addModelToServicesList(returnedModel: any) {\r\n        //  var existElement = this.services.find(o => o.serviceId == vm.returnedModel.serviceId);\r\n        // we have tree source not flat source\r\n        this.displaySelectedNode(returnedModel.radiologyTestId, this.radTreeDataSourceItems);\r\n        if (this.selectedLabNode == undefined) {\r\n            this.displaySelectedNode(returnedModel.labTestId, this.radTests)\r\n            if (this.selectedLabNode != undefined)\r\n                this.addServiceToDepartmentList(this.selectedLabNode);\r\n        }\r\n\r\n    }\r\n    addServiceToDepartmentList(node: TreeNode) {\r\n        // var parentNode = this.services[0];\r\n        this.radTreeDataSourceItems[0].children.push(node);\r\n        this.selectedLabNode = node;\r\n    }\r\n    displaySelectedNode(nodeId: string, services: any[]) {\r\n        let vm = this\r\n        services.forEach(node => {\r\n            if (node.data == nodeId && node.type == \"RadiologyTest\")\r\n                vm.selectedLabNode = node;\r\n\r\n            vm.displayNodeRecursive(node, nodeId);\r\n\r\n        });\r\n    }\r\n\r\n    private displayNodeRecursive(node: TreeNode, nodeId: string) {\r\n        if (node.children) {\r\n            node.children.forEach(childNode => {\r\n                this.displayNodeRecursive(childNode, nodeId);\r\n\r\n                if (childNode.data == nodeId && childNode.type == \"RadiologyTest\") {\r\n                    this.selectedMedicationNode = childNode;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n}","<form novalidate *ngIf=\"active\" class=\"form-horizontal\" name=\"organizationForm\" (ngSubmit)=\"onSubmit()\" #organizationForm=\"ngForm\">\r\n    <div class=\"form-group\">\r\n        <label for=\"txtName\" class=\"control-label col-md-2\">{{ 'TestName' | translate}}</label>\r\n        <div class=\"col-md-6\">\r\n            <a class=\"pointer\" (click)=\"getRadiologyTestsGroupsForTreeView()\" *ngIf=\"isAll\">{{ 'GetAll' | translate}}</a>\r\n            <a class=\"pointer\" (click)=\"getClinicDepartmentRadiologyTestsGroups()\" *ngIf=\"!isAll\">{{ 'GetSpecific' | translate}}</a>\r\n            <div class=\"row nopadding\">\r\n                <input placeholder=\"Search by name or code...\" class=\"form-control\" [(ngModel)]=\"filterString\" name=\"txtFilterString\" #txtFilterString=\"ngModel\" />\r\n            </div>\r\n            <div class=\"nopadding treeBorder\">\r\n                <p-tree [value]=\"radTests | filterbynameorcode:filterString : leafType  | translateObjects  : 'label' : 'labelTranslation'\" selectionMode=\"single\" [(selection)]=\"selectedFiles\" class=\"height100\" (onNodeSelect)=\"nodeSelect($event)\" (onNodeUnselect)=\"nodeUnselect($event)\">\r\n                    <ng-template let-node pTemplate=\"ClinicDepartmentRadiologyTestsGroup\">\r\n                        <span class=\"nav-icon\"><i class=\"fa fa-cubes\"></i></span>\r\n                        &nbsp;\r\n                        {{node.label}}\r\n                    </ng-template>\r\n                    <ng-template let-node pTemplate=\"RadiologyTestsGroup\">\r\n                        <span class=\"nav-icon\"><i class=\"fa fa-cubes\"></i></span>\r\n                        &nbsp;\r\n                        {{node.label}}\r\n                    </ng-template>\r\n                    <ng-template let-node pTemplate=\"RadiologyTest\">\r\n                        <span class=\"nav-icon\"><i class=\"fa fa-cube\"></i></span>\r\n                        &nbsp;\r\n                        {{node.label}}\r\n                    </ng-template>\r\n                </p-tree>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"radTestCode\" class=\"control-label col-md-2\">{{ 'TestCode' | translate}}</label>\r\n        <div class=\"col-md-2\">\r\n            <input id=\"radTestCode\" name=\"radTestCode\" class=\"form-control\" [(ngModel)]='radTestToSave.radTestCode' disabled  />\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"quantity\" class=\"control-label col-md-2\">{{ 'Quantity' | translate}}</label>\r\n        <div class=\"col-md-2\">\r\n            <input type=\"number\" id=\"quantity\" name=\"quantity\" class=\"form-control\" [(ngModel)]='radTestToSave.quantity' />\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"ddlDiagnosis\" class=\"control-label col-md-2\">{{ 'Diagnosis' | translate}}</label>\r\n        <div class=\"col-md-4\">\r\n            <select class=\"form-control\" id=\"ddlDiagnosis\" name=\"ddlDiagnosis\" [(ngModel)]='radTestToSave.diagnoseId'>\r\n                <option value=\"\">Select{{ 'Select' | translate}}</option>\r\n                <option *ngFor=\"let obj of noteDiagnosis\" [value]=\"obj.id\">{{obj.name}}</option>\r\n            </select>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"txtName\" class=\"control-label col-md-2\">{{ 'Description' | translate}} </label>\r\n        <div class=\"col-md-6\">\r\n            <textarea class=\"form-control\" id=\"txtRemarks\" name=\"txtRemarks\" [(ngModel)]='radTestToSave.description'></textarea>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <div class=\"col-md-4 col-md-offset-2\">\r\n            <button type=\"submit\" class=\"btn btn-primary\">{{ 'Save' | translate}}</button>\r\n            <button class=\"btn btn-primary\" (click)=\"clear()\">{{ 'New' | translate}}</button>\r\n            <button class=\"btn btn-primary\" type=\"button\" (click)=\"goBack()\">{{ 'Back' | translate}}</button>\r\n        </div>\r\n    </div>\r\n</form>","import { Component, OnInit, OnChanges, ViewChild, Input } from '@angular/core';\r\nimport { Table } from 'primeng/table';\r\n\r\n@Component({\r\n\r\n    selector: 'patient-radiologyGrid',\r\n    templateUrl: 'patient-radiologyGrid.component.html',\r\n})\r\n\r\nexport class PatientRadiologyGridComponent implements OnInit, OnChanges {\r\n\r\n    @Input() radiologies!: any[];\r\n    @Input() noteRadiologies!: any[];\r\n    @Input() diagnosis: any[] = [];\r\n    @Input() masterList!: any[];\r\n    @Input() noteId!: number;\r\n    allRadiologies: any[] = [];\r\n    lstToTranslated: string[] = ['radTestName', 'radTestNameTranslation'];\r\n    @ViewChild('dt') table!: Table;\r\n    ngOnInit(): void {\r\n\r\n    }\r\n\r\n    ngOnChanges(): void {\r\n        if (this.radiologies && this.noteRadiologies && this.masterList) {\r\n            this.allRadiologies = [];\r\n            // loop for all services \r\n            for (let radiology of this.radiologies) {\r\n                let bindedRadiology: any = {};\r\n                // check if service exsists in note service \r\n                let existedRadiology = this.noteRadiologies.find(s => s.radiologyTestId == radiology.data);\r\n\r\n                if (existedRadiology) {\r\n                    bindedRadiology = { id: existedRadiology.id, isSelected: true, clinicNoteId: this.noteId, radiologyTestId: radiology.data, radTestCode: radiology.code, radTestName: radiology.label, quantity: existedRadiology.quantity, diagnoseId: existedRadiology.diagnoseId, description: existedRadiology.description, radTestNameTranslation: existedRadiology.radTestNameTranslation };\r\n                }\r\n                else // create new one\r\n                {\r\n                    bindedRadiology = { isSelected: false, clinicNoteId: this.noteId, radiologyTestId: radiology.data, radTestCode: radiology.code, radTestName: radiology.label, quantity: 1, radTestNameTranslation: radiology.labelTranslation };\r\n                }\r\n\r\n                this.allRadiologies.push(bindedRadiology);\r\n\r\n                let masterItem = this.masterList.find(s => s.radiologyTestId == radiology.data);\r\n\r\n                if (masterItem == null || masterItem == undefined)\r\n                    this.masterList.push(bindedRadiology);\r\n                else {\r\n                    var index = this.masterList.indexOf(masterItem);\r\n                    if (index > -1) {\r\n                        this.masterList.splice(index, 1);\r\n                        this.masterList.push(bindedRadiology); // update note service  \r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    updateSelectedRadiology(radiologyTestId: any, event: any) {\r\n        if (!event.target.checked) {\r\n            // if the item removed clear data\r\n            let noteRadiology = this.allRadiologies.find(s => s.radiologyTestId == radiologyTestId);\r\n            noteRadiology.quantity = 1;\r\n            noteRadiology.isSelected = false;\r\n            noteRadiology.diagnoseId = 0;\r\n            noteRadiology.description = '';\r\n\r\n            let masterNoteRadiology = this.masterList.find(s => s.radiologyTestId == radiologyTestId);\r\n            masterNoteRadiology.quantity = 1;\r\n            masterNoteRadiology.isSelected = false;\r\n            masterNoteRadiology.diagnoseId = 0;\r\n            masterNoteRadiology.description = '';\r\n        }\r\n        else {\r\n            let noteRadiology = this.allRadiologies.find(s => s.radiologyTestId == radiologyTestId);\r\n            let masterNoteRadiology = this.masterList.find(s => s.radiologyTestId == radiologyTestId);\r\n            noteRadiology.isSelected = true;\r\n            masterNoteRadiology.isSelected = true;\r\n        }\r\n    }\r\n\r\n}\r\n","<div class=\"inner-addon left-addon\">\r\n    <i class=\"glyphicon glyphicon-search\"></i>\r\n    <input pInputText type=\"text\" #gb (input)=\"dt.filterGlobal($event.target.value, 'contains')\"\r\n        [placeholder]=\"'Search' | translate\" />\r\n</div>\r\n\r\n\r\n<!---New Table-->\r\n<p-table #dt [value]=\"allRadiologies\" dataKey=\"id\" [rowHover]=\"true\" [rows]=\"10\" [showCurrentPageReport]=\"true\"\r\n    [rowsPerPageOptions]=\"[10,20,30,40,50,100]\" [paginator]=\"true\"\r\n    currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" [filterDelay]=\"0\"\r\n    [globalFilterFields]=\"['radTestCode','nameTranslation']\">\r\n    <ng-template pTemplate=\"header\">\r\n        <tr>\r\n            <th></th>\r\n            <th pSortableColumn=\"radTestCode\">{{'RadiologyCode' | translate}} <p-sortIcon field=\"radTestCode\">\r\n                </p-sortIcon>\r\n            </th>\r\n            <th pSortableColumn=\"radTestName\">{{'RadiologyName' | translate}} <p-sortIcon field=\"radTestName\">\r\n                </p-sortIcon>\r\n            </th>\r\n            <th><span styleClass=\"text-center width70\">{{'Quantity' | translate}} </span>\r\n            </th>\r\n            <th><span styleClass=\"text-center width70\">{{'DiagnoseName' | translate}} </span>\r\n            </th>\r\n            <th><span styleClass=\"text-center width70\">{{'Remarks' | translate}} </span>\r\n            </th>\r\n        </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"body\" let-item>\r\n        <tr class=\"p-selectable-row\">\r\n            <td>\r\n                <input type=\"checkbox\" [checked]=\"item.isSelected\"\r\n                    (change)=\"updateSelectedRadiology(item.radiologyTestId, $event)\" />\r\n            </td>\r\n            <td>\r\n                {{item.radTestCode}}\r\n            </td>\r\n            <td>\r\n                <span>{{item.radTestName}}</span>\r\n            </td>\r\n            <td>\r\n                <input type=\"number\" min=\"0\" id=\"txtQuantity\" name=\"txtQuantity\" [(ngModel)]='item.quantity'\r\n                    class=\"form-control\" />\r\n            </td>\r\n            <td style=\"text-align: center\">\r\n                <select class=\"form-control\" name=\"ddlDiagnosis\" [(ngModel)]='item.diagnoseId'>\r\n                    <option *ngFor=\"let obj of diagnosis| translateObjects\" [value]=\"obj.id\">{{obj.name}}</option>\r\n                </select>\r\n            </td>\r\n            <td>\r\n                <textarea class=\"form-control\" id=\"txtRemarks\" name=\"txtRemarks\"\r\n                    [(ngModel)]='item.description'></textarea>\r\n            </td>\r\n        </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"emptymessage\">\r\n        <tr>\r\n            <td colspan=\"8\">No data found.</td>\r\n        </tr>\r\n    </ng-template>\r\n</p-table>\r\n<!--End Table-->","import { Component, OnInit, ViewChild, Input } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { DoctorService } from '../../doctors/shared/doctor.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { SharedService } from '../../shared/shared/shared.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\nimport { Table } from 'primeng/table';\r\n\r\n@Component({\r\n    selector: 'patient-radiology',\r\n    templateUrl: 'patient-radiology.component.html',\r\n})\r\n\r\nexport class PatientRadiologyComponent implements OnInit {\r\n    selectBasicTab: boolean = true;\r\n    lstToTranslated: string[] = [];\r\n    isDetailsVisible: boolean = false;\r\n    @Input() allowEditing: boolean = true;\r\n    @Input() noteId!: any;\r\n    active = true;\r\n    radTests: any[] = [];\r\n    radTestToBeDeleted: any;\r\n    noteRadtId: any;\r\n    classifications = [];\r\n    showProgress = false;\r\n    @ViewChild(\"fileInput\") fileInput!: any;\r\n    filterString!: any;\r\n    @ViewChild('dt') table!: Table;\r\n    constructor(private doctorService: DoctorService\r\n        , private sharedService: SharedService\r\n        , public toastr: ToastrService\r\n        , private _route: ActivatedRoute\r\n        , public storage: LocalStorageService\r\n        , public translate: TranslateService\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        this.lstToTranslated = ['radTestName', 'radTestNameTranslation', 'diagnoseName', 'diagnoseNameTranslation'];\r\n        let vm = this;\r\n        vm.showProgress = true;\r\n        vm.loadNoteRadTestList();\r\n    }\r\n    selectRadTestToDelete(id: string) {\r\n        this.radTestToBeDeleted = id;\r\n    }\r\n    deleteSelectedItem(): void {\r\n        let vm = this;\r\n        if (this.radTestToBeDeleted == '') {\r\n            let msg = vm.translate.instant(\"ItemToBeDeleted\");\r\n            vm.toastr.warning(msg, '');\r\n            return;\r\n        }\r\n        vm.showProgress = true;\r\n        this.doctorService.deleteClinicNoteRadTest(this.radTestToBeDeleted)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    let msg = vm.translate.instant(\"DeletedSuccessfully\");\r\n                    vm.toastr.success(msg, '');\r\n                    // remove delete object from collection\r\n                    var selectedObject = vm.radTests.find(o => o.id == vm.radTestToBeDeleted);\r\n                    var index = vm.radTests.indexOf(selectedObject);\r\n                    if (index > -1)\r\n                        vm.radTests.splice(index, 1);\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                    vm.showProgress = false;\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n    }\r\n    loadNoteRadTestList() {\r\n        let vm = this;\r\n        if (vm.noteId && vm.noteId > 0) {\r\n            this.doctorService.getClinicNoteRadTests(vm.noteId).subscribe(\r\n                function (response: any) {\r\n                    vm.radTests = response;\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                },\r\n                function () { // finally\r\n                    vm.showProgress = false;\r\n                });\r\n        }\r\n\r\n    }\r\n\r\n    showDetails(id?: string) {\r\n        this.isDetailsVisible = true;\r\n        this.noteRadtId = id;\r\n    }\r\n    hideDetails() {\r\n        this.isDetailsVisible = false;\r\n        this.loadNoteRadTestList();\r\n    }\r\n    editItem(id: string): void {\r\n        this.isDetailsVisible = true;\r\n        this.noteRadtId = id;\r\n    }\r\n\r\n}","<div id=\"divTable\" class=\"padding5\" *ngIf=\"!isDetailsVisible\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-4 nopadding\">\r\n            <input type=\"text\" [placeholder]=\"'Search' | translate\" class=\"form-control\" [(ngModel)]='filterString' />\r\n        </div>\r\n        <div class=\"col-md-8 align-reverse nopadding\" *ngIf=\"allowEditing\">\r\n            <button type=\"button\" class=\"btn btn-primary\" (click)=\"showDetails()\">{{ 'NewTest' | translate}}</button>\r\n        </div>\r\n    </div>\r\n    <div class=\"padding2\"></div>\r\n\r\n\r\n    <!---New Table-->\r\n    <p-table #dt [value]=\"radTests\" dataKey=\"id\" [rowHover]=\"true\" [rows]=\"10\" [showCurrentPageReport]=\"true\"\r\n        [rowsPerPageOptions]=\"[10,20,30,40,50,100]\" [paginator]=\"true\"\r\n        currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" [filterDelay]=\"0\"\r\n        [globalFilterFields]=\"['radTestCode','nameTranslation']\">\r\n\r\n        <ng-template pTemplate=\"header\">\r\n            <tr>\r\n                <th pSortableColumn=\"radTestCode\">{{'ArabicName' | translate}} <p-sortIcon field=\"radTestCode\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"radTestName\">{{'EnglishName' | translate}} <p-sortIcon field=\"radTestName\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"quantity\">{{'EnglishName' | translate}} <p-sortIcon field=\"quantity\"></p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"diagnoseName\">{{'EnglishName' | translate}} <p-sortIcon field=\"diagnoseName\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th><span styleClass=\"text-center width70\">{{'Edit' | translate}} </span>\r\n                </th>\r\n                <th><span styleClass=\"text-center width70\">{{'Delete' | translate}} </span>\r\n                </th>\r\n            </tr>\r\n\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-item>\r\n            <tr class=\"p-selectable-row\">\r\n                <td>\r\n                    {{item.radTestCode}}\r\n                </td>\r\n                <td>\r\n                    <span>{{item.radTestName}}</span>\r\n                </td>\r\n                <td>\r\n                    <span>{{item.quantity}}</span>\r\n                </td>\r\n                <td>\r\n                    <span>{{item.diagnoseName}}</span>\r\n                </td>\r\n                <td>\r\n                    <a class=\"pointer\" (click)=\"editItem(item.id)\">\r\n                        <img src=\"assets/images/edit-24.png\" />\r\n                    </a>\r\n                </td>\r\n                <td style=\"text-align: center\">\r\n                    <a data-toggle=\"modal\" data-target=\"#deleteNoteRadTest\" class=\"pointer\"\r\n                        (click)=\"selectRadTestToDelete(item.id)\">\r\n                        <img src=\"assets/images/DeleteRed.png\" />\r\n                    </a>\r\n                </td>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"emptymessage\">\r\n            <tr>\r\n                <td colspan=\"8\">No data found.</td>\r\n            </tr>\r\n        </ng-template>\r\n    </p-table>\r\n    <!--End Table-->\r\n\r\n\r\n\r\n</div>\r\n<div id=\"divTable\" class=\"padding5\" *ngIf=\"isDetailsVisible\">\r\n    <patient-radiology-details [noteId]=\"noteId\" [noteRadTestId]='noteRadtId' (onBack)=\"hideDetails()\">\r\n    </patient-radiology-details>\r\n</div>\r\n\r\n\r\n<div id=\"deleteNoteRadTest\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">{{ 'DeleteConfirmation' | translate}}</h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <p>{{ 'AreYouSureDelete' | translate}}</p>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-danger\" (click)=\"deleteSelectedItem()\" data-dismiss=\"modal\">{{\r\n                    'Yes' | translate}}</button>\r\n                <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\">{{ 'No' | translate}}</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n\r\n    selector: 'patient-receptionist-attachments-details',\r\n    templateUrl: 'patient-receptionist-attachments-details.component.html'\r\n\r\n})\r\n\r\nexport class PatientReceptionistAttachmentsDetailsComponent {\r\n    selectedAttachmenTab: boolean = true;\r\n    type = 'PatientFileType';\r\n    detailsUrl = \"PatientReceptionistAttachmentsDetails\";\r\n    showProgress: boolean = true;\r\n    documentDetailsUrl: string = \"patientAttachments\";\r\n\r\n}","<div *ngIf=\"showProgress\">\r\n    <loading></loading>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-md-2 nopadding\">\r\n        <patient-receptionist-tabs [activeTabIndex]=\"4\"></patient-receptionist-tabs>\r\n    </div>\r\n    <div class=\"col-md-10 nopadding\">\r\n        <div class=\"breadcrumbs\" id=\"breadcrumbs\">\r\n            <span class=\"heaersitemap\">\r\n                {{ 'PatientFileAttachments' | translate}}\r\n            </span>\r\n            <script type=\"text/javascript\">\r\n                try { ace.settings.check('breadcrumbs', 'fixed') } catch (e) { }\r\n            </script>\r\n        </div>\r\n        <br />\r\n        <div class=\"row\">\r\n            <document-details  [parentType]='type' ></document-details>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { PatientService } from '../shared/patient.service'\r\nimport { SharedService } from '../../shared/shared/shared.service';\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport {LocalStorageService} from 'ng2-webstorage';\r\n\r\n@Component({\r\n   \r\n    selector: 'patient-receptionist-attachments',\r\n    templateUrl: 'patient-receptionist-attachments.component.html',\r\n})\r\n\r\nexport class PatientReceptionistAttachmentsComponent implements OnInit {\r\n    selectBasicTab: boolean = true;\r\n\r\n    active = true;\r\n    model: any = {};\r\n    hasInsurance: boolean = true;\r\n  \r\n    classifications = [];\r\n    showProgress = false;\r\n    @ViewChild(\"fileInput\") fileInput!:any;\r\n\r\n\r\n\r\n    patientId = '';\r\n    type = 'PatientFileType';\r\n    detailsUrl = \"PatientReceptionistAttachmentsDetails\";\r\n    \r\n    documentDetailsUrl: string = \"patientAttachments\";\r\n\r\n    constructor(private organizationService: PatientService\r\n        , private sharedService: SharedService\r\n        , public toastr: ToastrService\r\n        , private _route: ActivatedRoute\r\n        , public storage: LocalStorageService\r\n    )\r\n    { }\r\n\r\n    ngOnInit(): void {\r\n        let id = this._route.snapshot.params['id'];\r\n        this.patientId = `${id}`;\r\n    }\r\n\r\n\r\n}","<div *ngIf=\"showProgress\">\r\n    <loading></loading>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-md-2 nopadding\">\r\n        <patient-receptionist-tabs [activeTabIndex]=\"4\"></patient-receptionist-tabs>\r\n    </div>\r\n    <div class=\"col-md-10 nopadding\">\r\n        <div class=\"breadcrumbs\" id=\"breadcrumbs\">\r\n            <span class=\"heaersitemap\">\r\n              {{ 'PatientFileAttachments' | translate}}\r\n            </span>\r\n            <script type=\"text/javascript\">\r\n                try { ace.settings.check('breadcrumbs', 'fixed') } catch (e) { }\r\n            </script>\r\n        </div>\r\n        <br />\r\n        <documents [parentId]=\"patientId\" [docDetailsUrl]=\"documentDetailsUrl\" [parentType]='type' [details]=\"detailsUrl\"></documents>\r\n\r\n    </div>\r\n</div>\r\n\r\n","import {Component, Input, OnInit, OnChanges, SimpleChanges} from '@angular/core';\r\nimport {LocalStorageService} from 'ng2-webstorage';\r\n\r\n@Component({\r\n   \r\n    selector: 'patient-receptionist-tabs',\r\n    templateUrl: 'patient-receptionist-tabs.component.html',\r\n   \r\n})\r\n\r\nexport class PatientReceptionistTabsComponent implements OnChanges {\r\n    @Input() activeTabIndex: number = 0;\r\n    @Input() patientId = '1';\r\n    isDoctor: boolean = false;\r\n\r\n    constructor(private localStorage: LocalStorageService) { }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n\r\n        this.isDoctor = this.localStorage.retrieve(\"IsDoctor\");\r\n    }\r\n}","\r\n\r\n<ul class=\"nav nav-pills nav-stacked alert alert-info padding5\">\r\n    <li class=\"{{ (activeTabIndex == 0) ? 'active' : '' }}\">\r\n        <a routerLink=\"/patientAccount/{{patientId}}\">{{ 'Account' | translate}}\r\n</a>\r\n    </li>\r\n    <li class=\"{{ (activeTabIndex == 1) ? 'active' : '' }}\">\r\n        <a routerLink=\"/patientPersonal/{{patientId}}\">{{ 'BasicData' | translate}}</a>\r\n    </li>\r\n    <li class=\"{{ (activeTabIndex == 2) ? 'active' : '' }}\">\r\n        <a routerLink=\"/patientAddress/{{patientId}}\"> {{ 'AddressContact' | translate}} </a>\r\n    </li>\r\n    <li class=\"{{ (activeTabIndex == 3) ? 'active' : '' }}\">\r\n        <a routerLink=\"/patientInsurance/{{patientId}}\"> {{ 'InsuranceData' | translate}}</a>\r\n    </li>\r\n    <li class=\"{{ (activeTabIndex == 4) ? 'active' : '' }}\">\r\n        <a routerLink=\"/patient/attachments/{{patientId}}\">{{ 'Attachments' | translate}} </a>\r\n    </li>\r\n\r\n</ul>\r\n\r\n","import {Component, OnInit, ViewChild, Input, Output, EventEmitter} from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { PatientService } from '../shared/patient.service'\r\nimport { SharedService } from '../../shared/shared/shared.service';\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport {LocalStorageService} from 'ng2-webstorage';\r\nimport {TranslateService} from '@ngx-translate/core';\r\n\r\n@Component({\r\n   \r\n    selector: 'patient-remarks',\r\n    templateUrl: 'patient-remarks.component.html',\r\n})\r\n\r\nexport class PatientRemarksComponent implements OnInit {\r\n\r\n    clinicNote: any = {};\r\n    @Input() noteId!: number;\r\n    @Output() onRemarksSaved = new EventEmitter<any>();\r\n\r\n    constructor(public toastr: ToastrService\r\n        , public patientService: PatientService\r\n        , public storage: LocalStorageService\r\n        , public translate: TranslateService\r\n    )\r\n    { }\r\n\r\n    ngOnInit() {\r\n        // get clinic note must be passed as a parameter\r\n        let vm = this;\r\n        if (this.noteId && this.noteId > 0){\r\n            this.patientService.getClinicNoteById(vm.noteId)\r\n                .subscribe(\r\n                function (response:any) {\r\n                    vm.clinicNote = response;\r\n                },\r\n                function (error:any) { \r\n                    vm.toastr.error(error, '');\r\n                },\r\n                function () {\r\n                    //vm.showProgress = false;\r\n                });\r\n    }\r\n    }\r\n\r\n    saveNoteRemark()\r\n    {\r\n        let vm = this;\r\n\r\n        this.patientService.saveClinicNoteRemarks(this.clinicNote)\r\n            .subscribe(\r\n            function (response:any) {\r\n                let msg = vm.translate.instant(\"SavedSuccessfully\");\r\n                vm.toastr.success(msg, '');\r\n                vm.clinicNote = response;\r\n                vm.onRemarksSaved.emit();\r\n            },\r\n            function (error:any) { \r\n                vm.toastr.error( error, '');\r\n            },\r\n            function () {\r\n                //vm.showProgress = false;\r\n            });\r\n    }\r\n\r\n\r\n}","\r\n<div class=\"align-reverse\">\r\n    <button class=\"btn btn-primary\" (click)=\"saveNoteRemark()\">{{ 'Save' | translate}}</button>\r\n    <button class=\"btn btn-primary\">{{ 'Cancel' | translate}}</button>\r\n</div>\r\n\r\n<p-editor [(ngModel)]=\"clinicNote.description\" [style]=\"{'height':'320px'}\" >\r\n</p-editor>\r\n\r\n\r\n","import { Component, OnInit, ViewChild, Input, Output, EventEmitter } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ReceptionistService } from '../../receptionists/shared/receptionist.service'\r\nimport { SharedService } from '../../shared/shared/shared.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\nimport { AccountService } from '../../security/shared/account.service';\r\nimport { UserPermissions } from '../../classes/user-permissions.class';\r\nimport { PermissionKeyEnum } from '../../shared/shared/permission-key.enum';\r\nimport { Table } from 'primeng/table';\r\n\r\n@Component({\r\n\r\n    selector: 'patient-search',\r\n    templateUrl: 'patient-search.component.html'\r\n})\r\n\r\nexport class PatienSearchComponent implements OnInit {\r\n\r\n    selectBasicTab: boolean = true;\r\n    filterString!: string;\r\n    searchCriteria: any = {};\r\n\r\n    matchedPatients = [];\r\n    selectedClinicId: string = \"0\";\r\n\r\n    active = true;\r\n    @Input() showActive: boolean = true;\r\n    @Input() showEdit: boolean = true;\r\n    @Input() showSelect: boolean = false;\r\n    @Input() showClose: boolean = false;\r\n    @Output() patientSelected = new EventEmitter<any>();\r\n\r\n    @Input() patientAccountTitle: boolean = true;\r\n    display: boolean = false;\r\n\r\n    patientId = '';\r\n    mrn = '';\r\n\r\n    showProgress = false;\r\n    userPermisions: UserPermissions = new UserPermissions();\r\n    key: PermissionKeyEnum = new PermissionKeyEnum();\r\n    enableEditPatientBtn: boolean = false;\r\n    enableActivatePatientBtn: boolean = false;\r\n    @ViewChild('dt') table!: Table;\r\n    constructor(private receptionistService: ReceptionistService\r\n        , private sharedService: SharedService\r\n        , private localStorage: LocalStorageService\r\n        , public toastr: ToastrService\r\n        , private _route: ActivatedRoute\r\n        , public storage: LocalStorageService\r\n        , public translate: TranslateService\r\n        , public accountService: AccountService\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        this.selectedClinicId = this.localStorage.retrieve(\"ClinicID\");\r\n\r\n        if (this.accountService.userPermision._isScalar != undefined)\r\n            this.accountService.userPermision.subscribe((item: any) => this.handleUserInterfaceViews(item));\r\n        else\r\n            this.handleUserInterfaceViews(this.accountService.userPermision);\r\n    }\r\n\r\n    getAllPatients() {\r\n        let thisComponent = this;\r\n        thisComponent.showProgress = true;\r\n        thisComponent.receptionistService.SearchForPatient(thisComponent.searchCriteria)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    thisComponent.matchedPatients = [];\r\n                    thisComponent.matchedPatients = response;\r\n                },\r\n                function (error: any) {\r\n                    thisComponent.toastr.error(error, '');\r\n                    thisComponent.showProgress = false;\r\n                    thisComponent.matchedPatients = [];\r\n                },\r\n                function () { // finally\r\n                    thisComponent.showProgress = false;\r\n                });\r\n    }\r\n\r\n    changePatientActivation(type: any, id: any, event: any) {\r\n        let thisComponent = this;\r\n\r\n        thisComponent.showProgress = true;\r\n        thisComponent.receptionistService.updatePatientActiveState({ \"id\": id, \"isActive\": event.target.checked })\r\n            .subscribe(\r\n                function (response: any) {\r\n                    let msg = thisComponent.translate.instant(\"SavedSuccessfully\");\r\n                    thisComponent.toastr.success(msg, '');\r\n                },\r\n                function (error: any) {\r\n                    thisComponent.toastr.error(error, '');\r\n                    thisComponent.showProgress = false;\r\n                },\r\n                function () { // finally\r\n                    thisComponent.showProgress = false;\r\n                });\r\n    }\r\n    showDialog() {\r\n        this.display = true;\r\n    }\r\n\r\n    selectPatientForSearch(patientId: string) {\r\n        let thisComponent = this;\r\n        this.patientId = patientId;\r\n        if (this.patientId.toString().toLowerCase() != 'new') {\r\n            thisComponent.showProgress = true;\r\n            this.receptionistService.getPatientById(this.patientId)\r\n                .subscribe(\r\n                    function (response: any) {//ClinicMRN\r\n                        thisComponent.mrn = response.clinicMRN;\r\n                        thisComponent.patientSelected.emit(thisComponent.mrn);\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () {\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n        }\r\n    }\r\n\r\n    handleUserInterfaceViews(user: any) {\r\n        if (this.showActive && this.showEdit) {\r\n\r\n            for (let item of user.permissions) {\r\n                if (item.permission.key == this.key.PatientRegistration && (item.edit == true || item.fullControl == true))\r\n                    this.enableEditPatientBtn = true;\r\n                if (item.permission.key == this.key.MRN && (item.activate == true))\r\n                    this.enableActivatePatientBtn = true;\r\n            }\r\n        }\r\n\r\n    }\r\n}","<div *ngIf=\"showProgress\">\r\n    <loading></loading>\r\n</div>\r\n\r\n<div class=\"row form-horizontal well\">\r\n    <br />\r\n    <div class=\"form-group\">\r\n        <label for=\"txtName\" class=\"col-md-2 control-label\">{{ 'NameOrPartOfName' | translate}}</label>\r\n        <div class=\"col-md-4\">\r\n            <input type=\"text\" id=\"txtName\" name=\"txtName\" [placeholder]=\"'NameOrPartOfName' | translate\"\r\n                [(ngModel)]='searchCriteria.searchableName' #txtName=\"ngModel\" class=\"form-control nopadding\" />\r\n        </div>\r\n        <label for=\"txtMRN\" class=\"col-md-2 control-label\">{{ 'MRN' | translate}}</label>\r\n        <div class=\"col-md-4\">\r\n            <input type=\"text\" id=\"txtMRN\" name=\"txtMRN\" [placeholder]=\"'MRN' | translate\"\r\n                [(ngModel)]='searchCriteria.clinicMRN' #txtMRN=\"ngModel\" class=\"form-control nopadding\" />\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"txtMobile\" class=\"col-md-2 control-label\">{{ 'MobileNumber' | translate}}</label>\r\n        <div class=\"col-md-4\">\r\n            <input type=\"text\" id=\"txtMobile\" [placeholder]=\"'MobileNumber' | translate\" name=\"txtMobile\"\r\n                [(ngModel)]='searchCriteria.mobileNumber' #txtMobile=\"ngModel\" class=\"form-control nopadding\" />\r\n        </div>\r\n        <label for=\"txtIdNumber\" class=\"col-md-2 control-label\">{{ 'IdNumber' | translate}}</label>\r\n        <div class=\"col-md-4\">\r\n            <input id=\"txtIdNumber\" name=\"txtIdNumber\" [placeholder]=\"'MobileNumber' | translate\"\r\n                [(ngModel)]='searchCriteria.iDNumber' #txtIdNumber=\"ngModel\" type=\"text\"\r\n                class=\"form-control nopadding\" />\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <div>\r\n            <button class=\"btn btn-primary\" (click)=\"getAllPatients()\">\r\n                <i class=\"fa fa-search\"></i>{{ 'Search' | translate}}</button>\r\n            <button type=\"button\" class=\"btn btn-danger\" (click)=\"display=false\" *ngIf=\"showClose\">{{ 'Cancel' |\r\n                translate}}</button>\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"row well\" style=\"background-color: #f6f7f9 !important;\">\r\n    <h4 class=\"h4Deco\">{{ 'SearchResults' | translate}}</h4>\r\n    <hr />\r\n    <div class=\"row well\" style=\"background-color: #f6f7f9 !important;\">\r\n\r\n        <div class=\"inner-addon left-addon\">\r\n            <i class=\"glyphicon glyphicon-search\"></i>\r\n            <input pInputText type=\"text\" (input)=\"dt.filterGlobal($event.target.value, 'contains')\"\r\n                [placeholder]=\"'Search' | translate\" />\r\n        </div>\r\n\r\n        <!---New Table-->\r\n        <p-table #dt [value]=\"matchedPatients\" dataKey=\"id\" [rowHover]=\"true\" [rows]=\"10\" [showCurrentPageReport]=\"true\"\r\n            [rowsPerPageOptions]=\"[10,20,30,40,50,100]\" [paginator]=\"true\"\r\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" [filterDelay]=\"0\"\r\n            [globalFilterFields]=\"['clinicMRN','name','idNumber']\">\r\n\r\n            <ng-template pTemplate=\"header\">\r\n                <tr>\r\n                    <th pSortableColumn=\"clinicMRN\">{{'MRN' | translate}} <p-sortIcon field=\"clinicMRN\"></p-sortIcon>\r\n                    </th>\r\n                    <th pSortableColumn=\"name\">{{'PatientName' | translate}} <p-sortIcon field=\"name\"></p-sortIcon>\r\n                    </th>\r\n                    <th><span styleClass=\"text-center width70\">{{'MobileNumber' | translate}} </span>\r\n                    </th>\r\n                    <th pSortableColumn=\"idNumber\">{{'IdNumber' | translate}} <p-sortIcon field=\"idNumber\"></p-sortIcon>\r\n                    </th>\r\n                    <th><span styleClass=\"text-center width70\">{{'IsActive' | translate}} </span>\r\n                    </th>\r\n                    <th><span styleClass=\"text-center width70\">{{'Edit' | translate}} </span>\r\n                    </th>\r\n                    <th><span styleClass=\"text-center width70\">{{'SelectPatient' | translate}} </span>\r\n                    </th>\r\n                </tr>\r\n\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-item>\r\n                <tr class=\"p-selectable-row\">\r\n                    <td>\r\n                        {{item.clinicMRN}}\r\n                    </td>\r\n                    <td>\r\n                        <span>{{item.name}}</span>\r\n                    </td>\r\n                    <td>\r\n                        {{item.reachInfo?.mobile}}\r\n                    </td>\r\n                    <td>\r\n                        <span>{{item.idNumber}}</span>\r\n                    </td>\r\n                    <td>\r\n                        <input type=\"checkbox\" class=\"ace ace-switch ace-switch-6\" #patientType\r\n                            [checked]=\"item.isActive\" id=\"chkBoxIsActive\" name=\"chkBoxIsActive\" [value]=\"item.isActive\"\r\n                            (click)=\"changePatientActivation(patientType.value,item.id, $event)\"\r\n                            disabled=\"{{ enableActivatePatientBtn ? '' :'disabled'}}\" />\r\n                        <span class=\"lbl\"></span>\r\n                    </td>\r\n                    <td style=\"text-align: center\">\r\n                        <a class=\"pointer\" routerLink=\"/patient/file/{{item.id}}\">\r\n                            <img src=\"assets/images/edit-24.png\" />\r\n                        </a>\r\n                    </td>\r\n                    <td>\r\n                        <img src=\"assets/images/if_hand_finger_17529.png\" (click)=\"selectPatientForSearch(item.id)\"\r\n                            width=\"30\" height=\"30\" />\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"emptymessage\">\r\n                <tr>\r\n                    <td colspan=\"8\">No data found.</td>\r\n                </tr>\r\n            </ng-template>\r\n        </p-table>\r\n        <!--End Table-->\r\n    </div>\r\n\r\n\r\n</div>","import { Component, OnInit, OnChanges, ViewChild, Input } from '@angular/core';\r\nimport { Table } from 'primeng/table';\r\n\r\n@Component({\r\n\r\n    selector: 'patient-servicePackages-grid',\r\n    templateUrl: 'patient-servicePackages-grid.component.html',\r\n})\r\n\r\nexport class PatientServicePackagesGridComponent implements OnInit, OnChanges {\r\n\r\n    @Input() packages!: any[];\r\n    @Input() notePackages!: any[];\r\n    @Input() diagnosis: any[] = [];\r\n    @Input() masterList!: any[];\r\n    @Input() noteId!: number;\r\n\r\n    allPackages: any[] = [];\r\n    lstToTranslated: string[] = ['servicePackageName', 'servicePackageNameTranslation'];\r\n    @ViewChild('dt') table!: Table;\r\n    ngOnInit(): void {\r\n\r\n    }\r\n\r\n    ngOnChanges(): void {\r\n        if (this.packages && this.notePackages && this.masterList) {\r\n            this.allPackages = [];\r\n            // loop for all services \r\n            for (let packge of this.packages) {\r\n\r\n                let bindedPackage: any = this.createClinicNoteService(packge);\r\n                this.allPackages.push(bindedPackage);\r\n\r\n                if (bindedPackage.id == 0) // new object\r\n                {\r\n                    let existedPackage = this.notePackages.find(s => s.servicePackageId == packge.data);\r\n\r\n                    if (existedPackage) {\r\n                        bindedPackage.id = existedPackage.id;\r\n                        bindedPackage.isSelected = true;\r\n                        bindedPackage.clinicNoteId = this.noteId;\r\n                        bindedPackage.servicePackageId = packge.data;\r\n                        bindedPackage.servicePackageCode = packge.code;\r\n                        bindedPackage.servicePackageName = packge.label;\r\n                        bindedPackage.quantity = existedPackage.quantity;\r\n                        bindedPackage.discount = existedPackage.discount;\r\n                        bindedPackage.diagnoseId = existedPackage.diagnoseId;\r\n                        bindedPackage.description = existedPackage.description;\r\n                        bindedPackage.servicePackageNameTranslation = existedPackage.servicePackageNameTranslation;\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    createClinicNoteService(packge: any): any {\r\n        let bindedService: any;\r\n\r\n        bindedService = this.masterList.find(s => s.servicePackageId == packge.data);\r\n\r\n        if (bindedService == undefined) {\r\n            bindedService = { id: 0, isSelected: false, clinicNoteId: this.noteId, servicePackageId: packge.data, servicePackageCode: packge.code, servicePackageName: packge.label, quantity: 1, discount: 0, servicePackageNameTranslation: packge.labelTranslation };\r\n\r\n            this.masterList.push(bindedService);\r\n        }\r\n\r\n        return bindedService;\r\n    }\r\n\r\n    updateSelectedService(servicePackageId: any, event: any) {\r\n        if (!event.target.checked) {\r\n            // if the item removed clear data\r\n            let noteService = this.allPackages.find(s => s.servicePackageId == servicePackageId);\r\n            noteService.quantity = 1;\r\n            noteService.discount = 0;\r\n            noteService.isSelected = false;\r\n            noteService.diagnoseId = 0;\r\n            noteService.description = '';\r\n\r\n            let masterNoteService = this.masterList.find(s => s.servicePackageId == servicePackageId);\r\n            masterNoteService.quantity = 1;\r\n            masterNoteService.discount = 0;\r\n            masterNoteService.isSelected = false;\r\n            masterNoteService.diagnoseId = 0;\r\n            masterNoteService.description = '';\r\n        }\r\n        else {\r\n            let noteService = this.allPackages.find(s => s.servicePackageId == servicePackageId);\r\n            let masterNoteService = this.masterList.find(s => s.servicePackageId == servicePackageId);\r\n            noteService.isSelected = true;\r\n            masterNoteService.isSelected = true;\r\n        }\r\n    }\r\n\r\n}\r\n","<div>\r\n    <div class=\"ui-widget-header searchWidget\">\r\n        <i class=\"fa fa-search searchIcon\"></i>\r\n        <input pInputText type=\"text\" (input)=\"dt.filterGlobal($event.target.value, 'contains')\"\r\n            [placeholder]=\"'Search' | translate\" />\r\n    </div>\r\n    <!---New Table-->\r\n    <p-table #dt [value]=\"allPackages\" dataKey=\"id\" [rowHover]=\"true\" [rows]=\"10\" [showCurrentPageReport]=\"true\"\r\n        [rowsPerPageOptions]=\"[10,20,30,40,50,100]\" [paginator]=\"true\"\r\n        currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" [filterDelay]=\"0\"\r\n        [globalFilterFields]=\"['servicePackageCode','servicePackageName']\">\r\n\r\n        <ng-template pTemplate=\"header\">\r\n            <tr>\r\n                <th></th>\r\n                <th pSortableColumn=\"servicePackageCode\">{{'PackageCode' | translate}} <p-sortIcon\r\n                        field=\"servicePackageCode\"></p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"servicePackageName\">{{'PackageName' | translate}} <p-sortIcon\r\n                        field=\"servicePackageName\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th><span styleClass=\"text-center width70\">{{'Quantity' | translate}} </span>\r\n                </th>\r\n                <th><span styleClass=\"text-center width70\">{{'Discount' | translate}} </span>\r\n                </th>\r\n                <th><span styleClass=\"text-center width70\">{{'DiagnoseName' | translate}} </span>\r\n                </th>\r\n                <th><span styleClass=\"text-center width70\">{{'Remarks' | translate}} </span>\r\n                </th>\r\n                <th style=\"width: 8rem\">\r\n                </th>\r\n            </tr>\r\n\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-item>\r\n            <tr class=\"p-selectable-row\">\r\n                <td>\r\n                    <input type=\"checkbox\" [checked]=\"item.isSelected\"\r\n                        (change)=\"updateSelectedService(item.servicePackageId, $event)\" />\r\n                </td>\r\n                <td>\r\n                    {{item.servicePackageCode}}\r\n                </td>\r\n                <td>\r\n                    <span>{{item.servicePackageName}}</span>\r\n                </td>\r\n                <td>\r\n                    <input type=\"number\" min=\"0\" id=\"txtQuantity\" name=\"txtQuantity\" [(ngModel)]='item.quantity' class=\"form-control\" />\r\n                </td>\r\n                <td style=\"text-align: center\">\r\n                    <input type=\"number\" min=\"0\" id=\"txtDiscount\" name=\"txtDiscount\" [(ngModel)]='item.discount' class=\"form-control\" />\r\n                </td>\r\n                <td>\r\n                    <select class=\"form-control\" name=\"ddlDiagnosis\" [(ngModel)]='item.diagnoseId'>\r\n                        <option *ngFor=\"let obj of diagnosis| translateObjects\" [value]=\"obj.id\">{{obj.name}}</option>\r\n                    </select>\r\n                </td>\r\n                <td>\r\n                    <textarea class=\"form-control\" id=\"txtRemarks\" name=\"txtRemarks\" [(ngModel)]='item.description'></textarea>\r\n                </td>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"emptymessage\">\r\n            <tr>\r\n                <td colspan=\"8\">No data found.</td>\r\n            </tr>\r\n        </ng-template>\r\n    </p-table>\r\n    <!--End Table-->\r\n</div>","import { Component, OnInit, OnChanges, ViewChild, Input } from '@angular/core';\r\nimport { Table } from 'primeng/table';\r\n\r\n@Component({\r\n\r\n    selector: 'patient-servicesGrid',\r\n    templateUrl: 'patient-servicesGrid.component.html',\r\n})\r\n\r\nexport class PatientServicesGridComponent implements OnInit, OnChanges {\r\n\r\n    @Input() services!: any[];\r\n    @Input() noteServices!: any[];\r\n    @Input() diagnosis: any[] = [];\r\n    @Input() masterList!: any[];\r\n    @Input() noteId!: number;\r\n\r\n    allServices: any[] = [];\r\n    lstToTranslated: string[] = ['serviceName', 'serviceNameTranslation'];\r\n    @ViewChild('dt') table!: Table;\r\n    ngOnInit(): void {\r\n\r\n    }\r\n\r\n    ngOnChanges(): void {\r\n        if (this.services && this.noteServices && this.masterList) {\r\n            this.allServices = [];\r\n            // loop for all services \r\n            for (let service of this.services) {\r\n\r\n                let bindedService: any = this.createClinicNoteService(service);\r\n                this.allServices.push(bindedService);\r\n\r\n                if (bindedService.id == 0) // new object\r\n                {\r\n                    let existedService = this.noteServices.find(s => s.serviceId == service.data);\r\n\r\n                    if (existedService) {\r\n                        bindedService.id = existedService.id;\r\n                        bindedService.isSelected = true;\r\n                        bindedService.clinicNoteId = this.noteId;\r\n                        bindedService.serviceId = service.data;\r\n                        bindedService.serviceCode = service.code;\r\n                        bindedService.serviceName = service.label;\r\n                        bindedService.quantity = existedService.quantity;\r\n                        bindedService.discount = existedService.discount;\r\n                        bindedService.diagnoseId = existedService.diagnoseId;\r\n                        bindedService.description = existedService.description;\r\n                        bindedService.serviceNameTranslation = existedService.serviceNameTranslation;\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    createClinicNoteService(service: any): any {\r\n        let bindedService: any;\r\n\r\n        bindedService = this.masterList.find(s => s.serviceId == service.data);\r\n\r\n        if (bindedService == undefined) {\r\n            bindedService = { id: 0, isSelected: false, clinicNoteId: this.noteId, serviceId: service.data, serviceCode: service.code, serviceName: service.label, quantity: 1, discount: 0, serviceNameTranslation: service.labelTranslation };\r\n\r\n            this.masterList.push(bindedService);\r\n        }\r\n\r\n        return bindedService;\r\n    }\r\n\r\n    updateSelectedService(serviceId: any, event: any) {\r\n        if (!event.target.checked) {\r\n            // if the item removed clear data\r\n            let noteService = this.allServices.find(s => s.serviceId == serviceId);\r\n            noteService.quantity = 1;\r\n            noteService.discount = 0;\r\n            noteService.isSelected = false;\r\n            noteService.diagnoseId = 0;\r\n            noteService.description = '';\r\n\r\n            let masterNoteService = this.masterList.find(s => s.serviceId == serviceId);\r\n            masterNoteService.quantity = 1;\r\n            masterNoteService.discount = 0;\r\n            masterNoteService.isSelected = false;\r\n            masterNoteService.diagnoseId = 0;\r\n            masterNoteService.description = '';\r\n        }\r\n        else {\r\n            let noteService = this.allServices.find(s => s.serviceId == serviceId);\r\n            let masterNoteService = this.masterList.find(s => s.serviceId == serviceId);\r\n            noteService.isSelected = true;\r\n            masterNoteService.isSelected = true;\r\n        }\r\n    }\r\n\r\n}\r\n","<div class=\"ui-widget-header searchWidget\">\r\n    <i class=\"fa fa-search searchIcon\"></i>\r\n    <input pInputText type=\"text\" (input)=\"dt.filterGlobal($event.target.value, 'contains')\"\r\n        [placeholder]=\"'Search' | translate\" />\r\n</div>\r\n<!---New Table-->\r\n<p-table #dt [value]=\"allServices\" dataKey=\"id\" [rowHover]=\"true\" [rows]=\"10\" [showCurrentPageReport]=\"true\"\r\n    [rowsPerPageOptions]=\"[10,20,30,40,50,100]\" [paginator]=\"true\"\r\n    currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" [filterDelay]=\"0\"\r\n    [globalFilterFields]=\"['serviceCode','serviceName']\">\r\n\r\n    <ng-template pTemplate=\"header\">\r\n        <tr>\r\n            <th></th>\r\n            <th pSortableColumn=\"serviceCode\">{{'ServiceCode' | translate}} <p-sortIcon field=\"serviceCode\">\r\n                </p-sortIcon>\r\n            </th>\r\n            <th pSortableColumn=\"serviceName\">{{'ServiceName' | translate}} <p-sortIcon field=\"serviceName\">\r\n                </p-sortIcon>\r\n            </th>\r\n            <th><span styleClass=\"text-center width70\">{{'Quantity' | translate}} </span>\r\n            </th>\r\n            <th><span styleClass=\"text-center width70\">{{'Discount' | translate}} </span>\r\n            </th>\r\n            <th><span styleClass=\"text-center width70\">{{'DiagnoseName' | translate}} </span>\r\n            </th>\r\n            <th><span styleClass=\"text-center width70\">{{'Remarks' | translate}} </span>\r\n            </th>\r\n        </tr>\r\n\r\n    </ng-template>\r\n    <ng-template pTemplate=\"body\" let-item>\r\n        <tr class=\"p-selectable-row\">\r\n            <td>\r\n                <input type=\"checkbox\" [checked]=\"item.isSelected\"\r\n                    (change)=\"updateSelectedService(item.serviceId, $event)\" />\r\n            </td>\r\n            <td>\r\n                {{item.serviceCode}}\r\n            </td>\r\n            <td>\r\n                <span>{{item.serviceName}}</span>\r\n            </td>\r\n            <td>\r\n                <input type=\"number\" min=\"0\" id=\"txtQuantity\" name=\"txtQuantity\" [(ngModel)]='item.quantity'\r\n                    class=\"form-control\" />\r\n            </td>\r\n            <td style=\"text-align: center\">\r\n                <input type=\"number\" min=\"0\" id=\"txtDiscount\" name=\"txtDiscount\" [(ngModel)]='item.discount'\r\n                    class=\"form-control\" />\r\n            </td>\r\n            <td>\r\n                <select class=\"form-control\" name=\"ddlDiagnosis\" [(ngModel)]='item.diagnoseId'>\r\n                    <option *ngFor=\"let obj of diagnosis| translateObjects\" [value]=\"obj.id\">{{obj.name}}</option>\r\n                </select>\r\n            </td>\r\n            <td>\r\n                <textarea class=\"form-control\" id=\"txtRemarks\" name=\"txtRemarks\"\r\n                    [(ngModel)]='item.description'></textarea>\r\n            </td>\r\n        </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"emptymessage\">\r\n        <tr>\r\n            <td colspan=\"8\">No data found.</td>\r\n        </tr>\r\n    </ng-template>\r\n</p-table>\r\n<!--End Table-->","import {Component, Input, OnInit, OnChanges, SimpleChanges} from '@angular/core';\r\nimport {LocalStorageService} from 'ng2-webstorage';\r\nimport { DoctorService } from '../../doctors/shared/doctor.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport {TranslateService, LangChangeEvent} from '@ngx-translate/core';\r\n\r\n@Component({\r\n   \r\n    selector: 'patient-snapshot',\r\n    templateUrl: 'patient-snapshot.component.html',\r\n\r\n})\r\n\r\nexport class PatientSnapshotComponent implements OnChanges, OnInit {\r\n    @Input() activeTabIndex: number = 0;\r\n    @Input() patientId!: number;\r\n    @Input() patientDOB: Date | undefined;\r\n    isDoctor: boolean = false;\r\n\r\n    isNotesSelected: boolean = false;\r\n    isDiagnosisSelected: boolean = true;\r\n    isMedicationSelected: boolean = false;\r\n    isSurgeriesSelected: boolean = false;\r\n    isAllergiesSelected: boolean = false;\r\n    isServicesSelected: boolean = false;\r\n    isLaboratorySelected: boolean = false;\r\n    isRadiologySelected: boolean = false;\r\n    clinicId!:any;\r\n    headerText: string = this.translate.instant('Diagnosis');\r\n    allServices = [];\r\n    divisionId = '';\r\n    appointmentId = '';\r\n    enable = true;\r\n\r\n    constructor(private localStorage: LocalStorageService\r\n        , private doctorService: DoctorService\r\n        , public toastr: ToastrService\r\n        , private _route: ActivatedRoute\r\n        , public translate: TranslateService) { }\r\n    ngOnInit(): void {\r\n        this.divisionId = this._route.snapshot.params['divisionId'];\r\n        this.appointmentId = this._route.snapshot.params['appointmentId'];\r\n        //\r\n        this.clinicId = this.localStorage.retrieve(\"ClinicID\");\r\n        let thisComponent = this;\r\n        if (thisComponent.divisionId == \"0\" && thisComponent.appointmentId == \"0\")\r\n            thisComponent.enable = false;\r\n\r\n        this.getAllServiceGroupsForTreeView(false);\r\n    }\r\n    getAllServiceGroupsForTreeView(needAll: boolean) {\r\n        let vm = this;\r\n\r\n        /////////////////////////get all services groups\r\n        this.doctorService.getServiceGroupsForTreeView(vm.clinicId)\r\n            .subscribe(\r\n            function (response:any) {\r\n\r\n                vm.allServices = response;\r\n\r\n            },\r\n            function (error:any) { \r\n                vm.toastr.error(error, '');\r\n            },\r\n            function () {\r\n                // vm.showProgress = false;\r\n            });\r\n    }\r\n    ngOnChanges(changes: SimpleChanges) {\r\n    }\r\n\r\n    setSelectedTab(tabName: string) {\r\n        this.isNotesSelected = false;\r\n        this.isDiagnosisSelected = false;\r\n        this.isMedicationSelected = false;\r\n        this.isSurgeriesSelected = false;\r\n        this.isAllergiesSelected = false;\r\n        this.isServicesSelected = false;\r\n        this.isLaboratorySelected = false;\r\n        this.isRadiologySelected = false;\r\n\r\n        if (tabName == 'Notes') {\r\n            this.isNotesSelected = true;\r\n        }\r\n        else if (tabName == 'Diagnosis') {\r\n            this.isDiagnosisSelected = true;\r\n            this.headerText = this.translate.instant('Diagnosis');\r\n        }\r\n        else if (tabName == 'Medication') {\r\n            this.isMedicationSelected = true;\r\n            this.headerText = this.translate.instant('Medication');\r\n        }\r\n        else if (tabName == 'Surgeries') {\r\n            this.isSurgeriesSelected = true;\r\n            this.headerText = this.translate.instant('PastSurgeries');\r\n        }\r\n        else if (tabName == 'Allergies') {\r\n            this.isAllergiesSelected = true;\r\n            this.headerText = this.translate.instant('DrugAllergies');\r\n        }\r\n        else if (tabName == 'Services') {\r\n            this.isServicesSelected = true;\r\n            this.headerText = 'Services';\r\n        }\r\n        else if (tabName == 'Laboratory') {\r\n            this.isLaboratorySelected = true;\r\n            this.headerText = 'Lab Tests';\r\n        }\r\n        else if (tabName == 'Radiology') {\r\n            this.isRadiologySelected = true;\r\n            this.headerText = 'Radiology Test';\r\n        }\r\n    }\r\n}","<div class=\"row\">\r\n    <div class=\"col-md-2 nopadding\">\r\n        <ul id=\"nav\" class=\"list-group\" >\r\n            <!--<li class=\"{{ isNotesSelected ? 'active' : '' }}\">\r\n                <a (click)=\"setSelectedTab('Notes')\" class=\"pointer\">Notes</a>\r\n            </li>-->\r\n            <li class=\"{{ isDiagnosisSelected ? 'selectednavbaritem active' : '' }} pointer list-group-item\">\r\n                <a  (click)=\"setSelectedTab('Diagnosis')\" class=\"aStyle\" >\r\n                  <span class=\"nav-label spanActive\">&nbsp;{{ 'Diagnosis' | translate}}</span>\r\n                </a>\r\n            </li>\r\n            <li class=\"{{ isMedicationSelected ? 'selectednavbaritem active' : '' }} pointer list-group-item\" >\r\n                <a (click)=\"setSelectedTab('Medication')\"  class=\"aStyle\"  >\r\n                    <span class=\"nav-icon\"><!--<i class=\"fa fa-glass\"></i>--></span><span class=\"nav-label\">&nbsp;{{ 'Medication' | translate}}</span>\r\n                </a>\r\n            </li>\r\n            <li class=\"{{ isSurgeriesSelected ? 'selectednavbaritem active' : '' }} pointer list-group-item\">\r\n                <a  (click)=\"setSelectedTab('Surgeries')\"   class=\"aStyle\" >\r\n                    <span class=\"nav-icon\"><!--<i class=\"fa fa-scissors\"></i>--></span><span class=\"nav-label\">&nbsp;{{ 'PastSurgeries' | translate}}</span>\r\n                </a>\r\n            </li>\r\n            <li class=\"{{ isAllergiesSelected ? 'selectednavbaritem active' : '' }} pointer list-group-item\">\r\n        <a  (click)=\"setSelectedTab('Allergies')\"  class=\"aStyle\"  >\r\n            <span class=\"nav-icon\"><!--<i class=\"ico-lab-flask\"></i>--></span><span class=\"nav-label\">&nbsp;{{ 'DrugAllergies' | translate}}</span>\r\n                </a>\r\n            </li>\r\n            <!--<li class=\"{{ isServicesSelected ? 'active' : '' }}\">\r\n                <a (click)=\"setSelectedTab('Services')\" class=\"pointer\">Services</a>\r\n            </li>-->\r\n            <!--<li class=\"{{ isLaboratorySelected ? 'active' : '' }}\">\r\n                <a (click)=\"setSelectedTab('Laboratory')\" class=\"pointer\">Lab Tests</a>\r\n            </li>-->\r\n            <!--<li class=\"{{ isRadiologySelected ? 'active' : '' }}\">\r\n                <a (click)=\"setSelectedTab('Radiology')\" class=\"pointer\">Radiology Tests</a>\r\n            </li>-->\r\n        </ul>\r\n    </div>\r\n    <div class=\"col-md-10 nopadding\">\r\n        <!--<div class=\"NBbreadcrumb\">\r\n            <a>{{ 'Snapshot' | translate}}</a> &nbsp;/\r\n            {{headerText}}\r\n        </div>-->\r\n        <div id=\"notes\" *ngIf=\"isNotesSelected\">\r\n            <br />\r\n            <h3> {{ 'PatientClinicalNotes' | translate}}</h3>\r\n        </div>\r\n        <div id=\"diagnosis\" *ngIf=\"isDiagnosisSelected\">\r\n            <patient-diagnosis [allowEditing]=\"false\" [patientId]=\"patientId\"></patient-diagnosis>\r\n        </div>\r\n        <div id=\"medication\" *ngIf=\"isMedicationSelected\">\r\n            <patient-medication [allowEditing]=\"false\" [patientId]=\"patientId\"></patient-medication>\r\n        </div>\r\n        <div id=\"surgeries\" *ngIf=\"isSurgeriesSelected\">\r\n            <patient-surgeries [patientId]=\"patientId\" [patientDOB] =\"patientDOB\" [allServices]=\"allServices\" [enable]=\"enable\"></patient-surgeries>\r\n        </div>\r\n        <div id=\"allergies\" *ngIf=\"isAllergiesSelected\">\r\n            <patient-allergies [patientId]=\"patientId\" [enable]=\"enable\"></patient-allergies>\r\n        </div>\r\n        <div id=\"services\" *ngIf=\"isServicesSelected\">\r\n            <!--<patient-services></patient-services>-->\r\n        </div>\r\n        <div id=\"laboratory\" *ngIf=\"isLaboratorySelected\">\r\n            <patient-laboratory></patient-laboratory>\r\n        </div>\r\n        <div id=\"radiology\" *ngIf=\"isRadiologySelected\">\r\n            <patient-radiology></patient-radiology>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n","import { Component, OnInit, ViewChild, Input } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\nimport { PatientService } from '../shared/patient.service'\r\nimport { SharedService } from '../../shared/shared/shared.service';\r\nimport { DoctorService } from '../../doctors/shared/doctor.service';\r\nimport { UtilityClass } from '../../shared/shared/utility.class';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\nimport { Table } from 'primeng/table';\r\n\r\n@Component({\r\n\r\n    selector: 'patient-surgeries',\r\n    templateUrl: 'patient-surgeries.component.html',\r\n})\r\n\r\nexport class PatientSurgeriesComponent implements OnInit {\r\n    selectBasicTab: boolean = true;\r\n    utilityClass: UtilityClass = new UtilityClass();\r\n    isDetailsVisible: boolean = false;\r\n    @Input() patientId!: number;\r\n    @Input() patientDOB: Date | undefined;\r\n    @Input() allServices: any[] = [];\r\n    @Input() enable: boolean = true;\r\n    active = true;\r\n    lstToTranslated: string[] = [];\r\n    surgeriesList: any = [];\r\n    showProgress = false;\r\n    toSaveSurgery: any = {};\r\n    @ViewChild('dt') table!: Table;\r\n    constructor(private doctorService: DoctorService\r\n        , private sharedService: SharedService\r\n        , public toastr: ToastrService\r\n        , private _route: ActivatedRoute\r\n        , public storage: LocalStorageService\r\n        , public translate: TranslateService\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        this.lstToTranslated = ['surgeryName', 'surgeryNameTranslation'];\r\n        let thisComponent = this;\r\n        thisComponent.showProgress = true;\r\n        this.doctorService.getPatientSnapshotSurgeries(thisComponent.patientId)\r\n            .subscribe(\r\n                function (surgeries: any) {\r\n                    thisComponent.surgeriesList = surgeries;\r\n                },\r\n                function (error: any) {\r\n                    thisComponent.toastr.error(error, '');\r\n                    thisComponent.showProgress = false;\r\n                },\r\n                function () { // finally\r\n                    thisComponent.showProgress = false;\r\n                });\r\n\r\n    }\r\n\r\n    addNewSurgery() {\r\n        this.toSaveSurgery = {};\r\n        this.isDetailsVisible = true;\r\n    }\r\n\r\n    showDetails(rowData: any) {\r\n        if (rowData && rowData.id) {\r\n            let thisComponent = this;\r\n            thisComponent.showProgress = true;\r\n            this.doctorService.getSurgeryById(rowData.id)\r\n                .subscribe(\r\n                    function (matchedSurgery: any) {\r\n                        thisComponent.toSaveSurgery = matchedSurgery;\r\n                        thisComponent.toSaveSurgery.dateTime = thisComponent.utilityClass.getDateTimeFromString(thisComponent.toSaveSurgery.dateTime);\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () { // finally\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n            this.isDetailsVisible = true;\r\n        }\r\n    }\r\n\r\n    hideDetails(updatedSurgery: any) {\r\n        if (updatedSurgery) {\r\n\r\n            let thisComponent = this;\r\n            thisComponent.surgeriesList.forEach((surgery: any) => {\r\n                if (surgery.id == updatedSurgery.id)\r\n                    thisComponent.surgeriesList.splice(thisComponent.surgeriesList.indexOf(surgery), 1);\r\n            });\r\n\r\n            this.surgeriesList.push(updatedSurgery);\r\n        }\r\n\r\n        this.isDetailsVisible = false;\r\n    }\r\n\r\n    deleteSurgery(rowData: any) {\r\n\r\n        if (rowData && rowData.id) {\r\n            let thisComponent = this;\r\n            thisComponent.showProgress = true;\r\n            this.doctorService.deleteSurgery(rowData.id)\r\n                .subscribe(\r\n                    function () {\r\n                        thisComponent.surgeriesList.forEach((surgery: any) => {\r\n                            if (surgery.id == rowData.id)\r\n                                thisComponent.surgeriesList.splice(thisComponent.surgeriesList.indexOf(surgery), 1);\r\n                        });\r\n                        let msg = thisComponent.translate.instant(\"DeletedSuccessfully\");\r\n                        thisComponent.toastr.success(msg, '');\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () { // finally\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n        }\r\n    }\r\n\r\n}","<div *ngIf=\"showProgress\">\r\n    <loading></loading>\r\n</div>\r\n\r\n<div id=\"divTable\" class=\"padding5\" *ngIf=\"!isDetailsVisible\">\r\n    <div class=\"row text-right\">\r\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"addNewSurgery()\" [disabled]=\"!enable\">{{ 'NewSurgery' |\r\n            translate}}</button>\r\n    </div>\r\n    <div class=\"row padding5\">&nbsp;</div>\r\n\r\n    <div class=\"inner-addon left-addon\">\r\n        <i class=\"glyphicon glyphicon-search\"></i>\r\n        <input pInputText type=\"text\" (input)=\"dt.filterGlobal($event.target.value, 'contains')\"\r\n            [placeholder]=\"'Search' | translate\" />\r\n    </div>\r\n    <!---New Table-->\r\n    <p-table #dt [value]=\"surgeriesList\" dataKey=\"id\" [rowHover]=\"true\" [rows]=\"10\" [showCurrentPageReport]=\"true\"\r\n        [rowsPerPageOptions]=\"[10,20,30,40,50,100]\" [paginator]=\"true\"\r\n        currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" [filterDelay]=\"0\"\r\n        [globalFilterFields]=\"['surgeryCode','surgeryName']\">\r\n\r\n        <ng-template pTemplate=\"header\">\r\n            <tr>\r\n                <th pSortableColumn=\"surgeryCode\">{{'SurgeryCode' | translate}} <p-sortIcon field=\"surgeryCode\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"surgeryName\">{{'surgeryName' | translate}} <p-sortIcon field=\"surgeryName\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"dateTimeString\">{{'Date' | translate}} <p-sortIcon field=\"dateTimeString\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"description\">{{'Description' | translate}} <p-sortIcon field=\"description\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th><span styleClass=\"text-center width70\">{{'Edit' | translate}} </span>\r\n                </th>\r\n                <th><span styleClass=\"text-center width70\">{{'Delete' | translate}} </span>\r\n                </th>\r\n            </tr>\r\n\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-item>\r\n            <tr class=\"p-selectable-row\">\r\n                <td>\r\n                    {{item.surgeryCode}}\r\n                </td>\r\n                <td>\r\n                    <span>{{item.surgeryName}}</span>\r\n                </td>\r\n                <td>\r\n                    <span>{{item.dateTimeString}}</span>\r\n                </td>\r\n                <td>\r\n                    <span>{{item.description}}</span>\r\n                </td>\r\n                <td>\r\n                    <a class=\"pointer\" (click)=\"showDetails(item)\" [class.disabled]=\"!enable ? true : null\">\r\n                        <i class=\"fa fa-pencil fa-2x\" style=\"color: #32bea6;\"></i>\r\n                    </a>\r\n                </td>\r\n                <td style=\"text-align: center\">\r\n                    <a class=\"pointer\" (click)=\"deleteSurgery(item)\" [class.disabled]=\"!enable ? true : null\">\r\n                        <i class=\"glyphicon glyphicon-remove iconClose\"></i>\r\n                    </a>\r\n                </td>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"emptymessage\">\r\n            <tr>\r\n                <td colspan=\"8\">No data found.</td>\r\n            </tr>\r\n        </ng-template>\r\n    </p-table>\r\n    <!--End Table-->\r\n</div>\r\n<div id=\"divTable\" class=\"padding5\" *ngIf=\"isDetailsVisible\">\r\n    <patient-surgery-details [toSaveSurgery]=\"toSaveSurgery\" [patientId]=\"patientId\" [patientDOB]=\"patientDOB\"\r\n        (onBack)=\"hideDetails($event)\" [allServices]=\"allServices\"></patient-surgery-details>\r\n</div>","import { Component, OnInit, ViewChild, Input, Output, EventEmitter } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { TreeNode } from 'primeng/api';\r\n\r\nimport { DoctorService } from '../../doctors/shared/doctor.service';\r\nimport { ClinicService } from '../../clinics/shared/clinic.service';\r\nimport { UtilityClass } from '../../shared/shared/utility.class';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\n\r\n@Component({\r\n\r\n    selector: 'patient-surgery-details',\r\n    templateUrl: 'patient-surgery-details.component.html',\r\n})\r\n\r\nexport class PatientSurgeryDetailsComponent implements OnInit {\r\n    selectBasicTab: boolean = true;\r\n    filterString!: string;\r\n    leafType: string = 'Service';\r\n    divisionId!: any;\r\n    @Input() toSaveSurgery!: any;\r\n    @Input() patientId!: number;\r\n    @Input() patientDOB: Date | undefined;\r\n    @Output() onBack = new EventEmitter<any>();\r\n    @Input() allServices: any[] = [];\r\n    utilityClass: UtilityClass = new UtilityClass();\r\n    active = true;\r\n    selectedSurgeryNode: any;\r\n    tempSelectedSurgeryNode: any;\r\n    clinicId!: any;\r\n    servicesTreeDataSourceItems!: any[];\r\n    getAllServices = true;\r\n\r\n    showProgress = false;\r\n    // allServices = [];\r\n    nodeToAdded!: TreeNode;\r\n    ttt = \"aaa\";\r\n    isExist: boolean = false;\r\n    constructor(private doctorService: DoctorService\r\n        , private clinicService: ClinicService\r\n        , public toastr: ToastrService\r\n        , private _route: ActivatedRoute\r\n        , public localStorage: LocalStorageService\r\n        , public translate: TranslateService) { }\r\n\r\n    ngOnInit(): void {\r\n        this.divisionId = this._route.snapshot.params['divisionId'];\r\n        this.toSaveSurgery = {};\r\n        this.clinicId = this.localStorage.retrieve(\"ClinicID\");\r\n        let thisComponent = this;\r\n        this.showProgress = true;\r\n        //  this.selectedSurgeryNode = null;hh\r\n        this.getAllServiceGroupsForTreeView(false, false);\r\n        this.getClinicDepartmentServiceGroupsForTreeView();\r\n\r\n    }\r\n\r\n    getClinicDepartmentServiceGroupsForTreeView() {\r\n        let vm = this;\r\n        vm.getAllServices = true;\r\n        //get department services groups\r\n        this.doctorService.getClinicDivisionServiceGroupsForTreeView(vm.divisionId)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    vm.servicesTreeDataSourceItems = response;\r\n                    if (vm.toSaveSurgery) {\r\n                        vm.addModelToServicesList(vm.toSaveSurgery);\r\n                        //  this.displaySelectedNode(thisComponent.toSaveSurgery.serviceId, \"Service\");\r\n                        vm.expandAll();\r\n                    }\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n    }\r\n    getAllServiceGroupsForTreeView(needAll: boolean, displayNode: boolean) {\r\n        let vm = this;\r\n\r\n        /////////////////////////get all services groups\r\n        this.doctorService.getServiceGroupsForTreeView(vm.clinicId)\r\n            .subscribe(\r\n                function (response: any) {\r\n\r\n                    vm.allServices = response;\r\n                    if (needAll) {\r\n                        vm.getAllServices = false;\r\n                        vm.servicesTreeDataSourceItems = response;\r\n                        if (displayNode || vm.selectedSurgeryNode != undefined)\r\n                            vm.displaySelectedNode(vm.toSaveSurgery.serviceId, vm.servicesTreeDataSourceItems);\r\n\r\n\r\n                        vm.expandAll();\r\n                    }\r\n\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n    }\r\n    addModelToServicesList(returnedModel: any) {\r\n        if (this.servicesTreeDataSourceItems != null && this.servicesTreeDataSourceItems != undefined && this.servicesTreeDataSourceItems.length > 0) {\r\n            this.displaySelectedNode(returnedModel.serviceId, this.servicesTreeDataSourceItems);\r\n            if (this.selectedSurgeryNode == undefined) {\r\n                this.displaySelectedNode(returnedModel.serviceId, this.allServices)\r\n                if (this.selectedSurgeryNode != undefined)\r\n                    this.addServiceToDepartmentList(this.selectedSurgeryNode);\r\n            }// else {\r\n            //        this.addServiceToDepartmentList(this.selectedSurgeryNode);\r\n            //}\r\n\r\n        } else {\r\n            this.getAllServiceGroupsForTreeView(true, true);\r\n        }\r\n\r\n    }\r\n    addServiceToDepartmentList(node: TreeNode) {\r\n        this.servicesTreeDataSourceItems[0].children.push(node);\r\n        this.selectedSurgeryNode = node;\r\n    }\r\n    displaySelectedNode(nodeId: string, services: any[]) {\r\n        let vm = this\r\n\r\n        services.forEach(node => {\r\n            if (node.data == nodeId && node.type == \"Service\") {\r\n                vm.selectedSurgeryNode = node;\r\n\r\n            }\r\n\r\n\r\n            vm.displayNodeRecursive(node, nodeId);\r\n\r\n        });\r\n    }\r\n\r\n    private displayNodeRecursive(node: TreeNode, nodeId: string) {\r\n        if (node.children) {\r\n            node.children.forEach(childNode => {\r\n                this.displayNodeRecursive(childNode, nodeId);\r\n\r\n                if (childNode.data == nodeId && childNode.type == \"Service\") {\r\n                    this.selectedSurgeryNode = childNode;\r\n                }\r\n            });\r\n        }\r\n    }\r\n    //displaySelectedNode(nodeId: string, nodeType: string) {\r\n    //    let vm = this\r\n    //    vm.servicesTreeDataSourceItems.forEach(node => {\r\n    //        if (node.data == nodeId && node.type == nodeType)\r\n    //            vm.selectedSurgeryNode = node;\r\n\r\n    //        vm.displaySelectedNodeRecursive(node, nodeId, nodeType);\r\n\r\n    //    });\r\n    //}\r\n\r\n    //private displaySelectedNodeRecursive(node: TreeNode, nodeId: string, nodeType: string) {\r\n    //    if (node.children) {\r\n    //        node.children.forEach(childNode => {\r\n    //            this.displaySelectedNodeRecursive(childNode, nodeId, nodeType);\r\n\r\n    //            if (childNode.data == nodeId && childNode.type == nodeType) {\r\n    //                this.selectedSurgeryNode = childNode;\r\n    //            }\r\n    //        });\r\n    //    }\r\n    //}\r\n\r\n    expandAll() {\r\n        this.servicesTreeDataSourceItems.forEach(node => {\r\n            this.expandRecursive(node, true);\r\n        });\r\n    }\r\n\r\n    collapseAll() {\r\n        this.servicesTreeDataSourceItems.forEach(node => {\r\n            this.expandRecursive(node, false);\r\n        });\r\n    }\r\n\r\n    private expandRecursive(node: TreeNode, isExpand: boolean) {\r\n        node.expanded = isExpand;\r\n        if (node.children) {\r\n            node.children.forEach(childNode => {\r\n                this.expandRecursive(childNode, isExpand);\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    onSubmit(): void {\r\n        let vm = this;\r\n\r\n        if (!this.toSaveSurgery.surgeryCode || this.toSaveSurgery.surgeryCode == '')\r\n            return;\r\n\r\n        this.toSaveSurgery.dateTime = this.utilityClass.getUtcDateTime(this.toSaveSurgery.dateTime);\r\n\r\n        if (this.toSaveSurgery && this.toSaveSurgery.dateTime) {\r\n            if (this.toSaveSurgery.dateTime > Date.now()) {\r\n                let msg = this.translate.instant(\"SurgeryDateValidation\");\r\n                this.toastr.error(msg, '');\r\n                return;\r\n            }\r\n\r\n            if (this.patientDOB && this.toSaveSurgery.dateTime < this.utilityClass.getDateTimeFromString(this.patientDOB.toString())) {\r\n                let msg = this.translate.instant(\"SurgeryBirthDate\");\r\n                this.toastr.error(msg, '');\r\n                return;\r\n            }\r\n        }\r\n\r\n        vm.showProgress = true;\r\n        vm.toSaveSurgery.patientId = vm.patientId;\r\n        if (vm.selectedSurgeryNode)\r\n            vm.toSaveSurgery.serviceId = vm.selectedSurgeryNode.data;\r\n\r\n\r\n        if (!this.toSaveSurgery.hasOwnProperty('id') || this.toSaveSurgery.id.toString().toLowerCase() == 'new') {\r\n            //Add new\r\n            this.doctorService.createSurgery(this.toSaveSurgery)\r\n                .subscribe(\r\n                    function (response: any) {\r\n                        let msg = vm.translate.instant(\"SavedSuccessfully\");\r\n                        vm.toastr.success(msg, '');\r\n                        vm.toSaveSurgery = response;\r\n                        vm.clear();\r\n                        vm.onBack.emit(response);\r\n                    },\r\n                    function (error: any) {\r\n                        console.log(error)\r\n                        vm.toastr.error(error, '');\r\n                        vm.showProgress = false;\r\n                    },\r\n                    function () {\r\n                        vm.showProgress = false;\r\n                    });\r\n        }\r\n        else {\r\n            //update\r\n            this.doctorService.updateSurgery(this.toSaveSurgery)\r\n                .subscribe(\r\n                    function (response: any) {\r\n                        let msg = vm.translate.instant(\"SavedSuccessfully\");\r\n                        vm.toastr.success(msg, '');\r\n                        vm.toSaveSurgery = response;\r\n                        vm.clear();\r\n                        vm.onBack.emit(response);\r\n                    },\r\n                    function (error: any) {\r\n                        console.log(error)\r\n                        vm.toastr.error(error, '');\r\n                        vm.showProgress = false;\r\n                    },\r\n                    function () {\r\n                        vm.showProgress = false;\r\n                    });\r\n        }\r\n    }\r\n\r\n    clear(): void {\r\n        this.toSaveSurgery = {};\r\n        this.selectedSurgeryNode = {};\r\n        this.active = false;\r\n        setTimeout(() => this.active = true, 0);\r\n    }\r\n\r\n    treeNodeSelected(event: any) {\r\n        if (event && event.node && event.node.code && event.node.code != '') {\r\n            this.toSaveSurgery.surgeryCode = event.node.code;\r\n        }\r\n        else {\r\n            this.toSaveSurgery.surgeryCode = '';\r\n        }\r\n    }\r\n\r\n\r\n    goBack() {\r\n        this.onBack.emit();\r\n    }\r\n}","<form novalidate *ngIf=\"active\" class=\"form-horizontal\" name=\"organizationForm\" (ngSubmit)=\"onSubmit()\" #organizationForm=\"ngForm\">\r\n    <div class=\"form-group\">\r\n        <label for=\"txtName\" class=\"control-label col-md-2\">{{ 'SurgeryName' | translate}}</label>\r\n        <div class=\"col-md-6\">\r\n            <a class=\"pointer\" (click)=\"getAllServiceGroupsForTreeView(true,false)\" *ngIf=\"getAllServices \">{{ 'GetAll' | translate}}</a>\r\n            <a class=\"pointer\" (click)=\"getClinicDepartmentServiceGroupsForTreeView()\" *ngIf=\"!getAllServices \">{{ 'GetSpecific' | translate}}</a>\r\n            <div class=\"nopadding treeBorder\">\r\n                <div class=\"row nopadding\">\r\n                    <input   [placeholder]=\"'SearchNameOrCode' | translate\" class=\"form-control\" [(ngModel)]=\"filterString\" name=\"txtFilterString\" #txtFilterString=\"ngModel\" />\r\n                </div>\r\n                <p-tree [value]=\"servicesTreeDataSourceItems | filterbynameorcode:filterString : leafType  | translateObjects  : 'label' : 'labelTranslation'\" selectionMode=\"single\"\r\n                        [(selection)]=\"selectedSurgeryNode\" (onNodeSelect)=\"treeNodeSelected($event)\">\r\n                    <ng-template let-node pTemplate=\"ServiceGroup\">\r\n                        <span class=\"nav-icon\"><i class=\"fa fa-cubes\"></i></span>\r\n                        &nbsp;\r\n                        {{node.label}}\r\n                    </ng-template>\r\n                    <ng-template let-node pTemplate=\"Service\">\r\n                        <span class=\"nav-icon\"><i class=\"fa fa-cube\"></i></span>\r\n                        &nbsp;\r\n                        {{node.label}}\r\n                    </ng-template>\r\n                </p-tree>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"txtSurgeryCode\" class=\"control-label col-md-2\">{{ 'SurgeryCode' | translate}}</label>\r\n        <div class=\"col-md-2\">\r\n            <input id=\"txtSurgeryCode\" name=\"txtSurgeryCode\" class=\"form-control\" disabled\r\n                   [(ngModel)]='toSaveSurgery.surgeryCode' #txtSurgeryCode=\"ngModel\"/>\r\n        </div>\r\n        <div class=\"col-md-4\">\r\n            <div *ngIf=\"!toSaveSurgery.surgeryCode || toSaveSurgery.surgeryCode ==''\" class=\"alert alert-danger\">\r\n             {{ 'RequiredField' | translate}}\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"txtName\" class=\"control-label col-md-2\">{{ 'Date' | translate}}</label>\r\n        <div class=\"col-md-2\">\r\n            <p-calendar [(ngModel)]=\"toSaveSurgery.dateTime\"\r\n                        [monthNavigator]=\"true\"\r\n                        [yearNavigator]=\"true\"\r\n                        dateFormat=\"dd/mm/yy\"\r\n                        [showIcon]=\"true\" [required]=\"true\"\r\n                        [ngModelOptions]=\"{standalone: true}\"\r\n                        yearRange=\"2000:2050\"></p-calendar>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"txtRemarks\" class=\"control-label col-md-2\">{{ 'Description' | translate}} </label>\r\n        <div class=\"col-md-6\">\r\n            <textarea class=\"form-control\" id=\"txtRemarks\" name=\"txtRemarks\"\r\n                      [(ngModel)]='toSaveSurgery.description' #txtRemarks=\"ngModel\"></textarea>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <div class=\"col-md-4 col-md-offset-2\">\r\n            <button class=\"btn btn-primary\">{{ 'Save' | translate}} </button>\r\n            <button class=\"btn btn-primary\" type=\"button\" (click)=\"goBack()\">{{ 'Back' | translate}} </button>\r\n        </div>\r\n    </div>\r\n</form>","import {Component, Input, OnInit, OnChanges, SimpleChanges} from '@angular/core';\r\nimport {LocalStorageService} from 'ng2-webstorage';\r\n\r\n@Component({\r\n   \r\n    selector: 'patient-tabs',\r\n    templateUrl: 'patient-tabs.component.html',\r\n   \r\n})\r\n\r\nexport class PatientTabsComponent implements OnChanges {\r\n    @Input() activeTabIndex: number = 0;\r\n    @Input() patientId = 'new';\r\n    isDoctor: boolean = false;\r\n\r\n    constructor(private localStorage: LocalStorageService) { }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n\r\n        this.isDoctor = this.localStorage.retrieve(\"IsDoctor\");\r\n    }\r\n}","\r\n<div class=\"left-aside desktop-view\">\r\n    <div class=\"aside-branding\">\r\n        <a>\r\n            <!--<img src=\"assets/images/logo.png\" height=\"60\" width=\"60\" />-->\r\n            <img src=\"assets/images/App-Logo.png\" title=\"Logo\" class=\"appLogo\" />\r\n        </a>\r\n        <!--<a routerLink=\"/home\" class=\"large-logo\">\r\n            <span style=\"color:white;\">&nbsp;&nbsp;CIS</span>\r\n        </a>-->\r\n        <span class=\"aside-pin waves-effect\"><i class=\"fa fa-thumb-tack\"></i></span>\r\n        <span class=\"aside-close waves-effect\" onclick=\"closeLeftBar();\"><i class=\"fa fa-times\"></i></span>\r\n    </div>\r\n    <div class=\"left-navigation\">\r\n        <ul class=\"list-accordion padding5\">\r\n            <li>\r\n                <a class=\"{{ (activeTabIndex == 0) ? 'selectednavbaritem active' : '' }}\" routerLink=\"/patient/basic/{{patientId}}\">البيانات الأساسية</a>\r\n            </li>\r\n            <li>\r\n                <a class=\"{{ (activeTabIndex == 1) ? 'selectednavbaritem active' : '' }}\" routerLink=\"/patient/vitalSigns/{{patientId}}\">\r\n                    <span *ngIf=\"isDoctor\">\r\n                        الشكوى الرئيسة & العلامات الحيوية\r\n                    </span>\r\n                    <span>\r\n                        العلامات الحيوية\r\n                    </span>\r\n                </a>\r\n            </li>\r\n            <li *ngIf=\"isDoctor\">\r\n                <a class=\"{{ (activeTabIndex == 2) ? 'selectednavbaritem active' : '' }}\" routerLink=\"/patient/diagnosis/{{patientId}}\">التشخيص</a>\r\n            </li>\r\n            <li>\r\n                <a class=\"{{ (activeTabIndex == 3) ? 'selectednavbaritem active' : '' }}\" routerLink=\"/patient/medication/{{patientId}}\">الدواء</a>\r\n            </li>\r\n            <li *ngIf=\"isDoctor\">\r\n                <a class=\"{{ (activeTabIndex == 4) ? 'selectednavbaritem active' : '' }}\" routerLink=\"/patient/surgeries/{{patientId}}\">العمليات الجراحية السابقة</a>\r\n            </li>\r\n            <li *ngIf=\"isDoctor\">\r\n                <a class=\"{{ (activeTabIndex == 5) ? 'selectednavbaritem active' : '' }}\" routerLink=\"/patient/allergies/{{patientId}}\">الحساسية من الدواء</a>\r\n            </li>\r\n            <li>\r\n                <a class=\"{{ (activeTabIndex == 6) ? 'selectednavbaritem active' : '' }}\" routerLink=\"/patient/services/{{patientId}}\">الخدمات</a>\r\n            </li>\r\n            <li *ngIf=\"isDoctor\">\r\n                <a class=\"{{ (activeTabIndex == 7) ? 'selectednavbaritem active' : '' }}\" routerLink=\"/patient/laboratory/{{patientId}}\">الفحوصات المختبرية</a>\r\n            </li>\r\n            <li>\r\n                <a class=\"{{ (activeTabIndex == 8) ? 'selectednavbaritem active' : '' }}\" routerLink=\"/patient/radiology/{{patientId}}\" *ngIf=\"isDoctor\">فحوصات الأشعة</a>\r\n            </li>\r\n            <li>\r\n                <a class=\"{{ (activeTabIndex == 9) ? 'selectednavbaritem active' : '' }}\" routerLink=\"/patient/attachments/{{patientId}}\">المرفقات </a>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild, Output, Input, EventEmitter } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\nimport { PatientService } from '../shared/patient.service'\r\nimport { SharedService } from '../../shared/shared/shared.service';\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\n\r\n@Component({\r\n    selector: 'patient-template-details',\r\n    templateUrl: 'patient-template-details.component.html',\r\n})\r\n\r\nexport class PatientTemplateDetailsComponent implements OnInit {\r\n\r\n    selectBasicTab: boolean = true;\r\n    @Input() noteId!: number;\r\n    @Output() onBack = new EventEmitter();\r\n    showDocumentDetails: boolean = false;\r\n    fileNameTxt: string = this.translate.instant(\"TemplateName\");\r\n    btnUploadText = this.translate.instant(\"ApplyTemplate\");\r\n    fileNameUploadTxt = this.translate.instant(\"AppliedTemplate\");\r\n    fileType: boolean = false;\r\n    isTemplateExist: boolean = true;\r\n    showSelectedTemplates: boolean = true;\r\n    showBackBtn: boolean = false;\r\n    parentType: string = \"DoctorAppliedTemplate\";\r\n    attachmentsList: any = [];\r\n    parentId: string = '';\r\n    active = true;\r\n    model: any = {};\r\n\r\n    classifications = [];\r\n    showProgress = false;\r\n    @ViewChild(\"fileInput\") fileInput!: any;\r\n\r\n    isReceptionist: boolean = false;\r\n    Attachment: any;\r\n    patientAttachementId!: any;\r\n    constructor(private organizationService: PatientService\r\n        , private sharedService: SharedService\r\n        , public toastr: ToastrService\r\n        , private _route: ActivatedRoute\r\n        , public storage: LocalStorageService\r\n        , public translate: TranslateService\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n\r\n        this.isReceptionist = this.storage.retrieve(\"IsReceptionist\");\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    clear(): void {\r\n        this.model = {};\r\n        this.active = false;\r\n        // store selected Organization ID\r\n        this.storage.store(\"OrganizationID\", 'new');\r\n        setTimeout(() => this.active = true, 0);\r\n    }\r\n\r\n    goBack() {\r\n        this.onBack.emit();\r\n\r\n    }\r\n\r\n}","    <document-details  [parentType]=\"parentType\" [isTemplateExist]=\"isTemplateExist\" [fileType]=\"fileType\" [fileNameTxt]='fileNameTxt'[showSelectedTemplates]='showSelectedTemplates' [noteId]='noteId' [fileNameUploadTxt]='fileNameUploadTxt'[showBackBtn]='showBackBtn' [attachementId]=\"patientAttachementId\"  [title]=\"Attachment\" (onAttachementSaved)=\"goBack()\"></document-details>\r\n<!--<div class=\"form-group\">\r\n    <div class=\"col-md-4 col-md-offset-2\">\r\n        <button class=\"btn btn-primary\" type=\"button\" (click)=\"goBack()\">{{ 'Back' | translate}}</button>\r\n    </div>\r\n</div>-->","import { Component, OnInit, ViewChild, Input } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\nimport { PatientService } from '../shared/patient.service'\r\nimport { SharedService } from '../../shared/shared/shared.service';\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\n\r\n@Component({\r\n    selector: 'patient-templates',\r\n    templateUrl: 'patient-templates.component.html',\r\n})\r\n\r\nexport class PatientTemplatesComponent implements OnInit {\r\n    selectBasicTab: boolean = true;\r\n    isDetailsVisible: boolean = false;\r\n    @Input() allowEditing: boolean = true;\r\n    active = true;\r\n    classifications = [];\r\n    showProgress = false;\r\n    @ViewChild(\"fileInput\") fileInput!: any;\r\n    isDoctor: boolean = false;\r\n    isReceptionist: boolean = false;\r\n    previousTab: string = '';\r\n    nextTab: string = '';\r\n    fileNameTxt: string = this.translate.instant(\"TemplateName\");\r\n    btnUploadText = this.translate.instant(\"ApplyTemplate\");\r\n    fileNameUploadTxt = this.translate.instant(\"AppliedTemplate\");\r\n    fileType: boolean = false;\r\n    isTemplateExist: any = true;\r\n\r\n    @Input() noteId!: any;\r\n    model: any;\r\n    type = 'DoctorAppliedTemplate';\r\n    patientAttachementId = '';\r\n    Template: any;\r\n\r\n    constructor(private organizationService: PatientService\r\n        , private sharedService: SharedService\r\n        , public toastr: ToastrService\r\n        , private _route: ActivatedRoute\r\n        , public storage: LocalStorageService\r\n        , public translate: TranslateService\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n\r\n        this.isDoctor = this.storage.retrieve(\"IsDoctor\");\r\n        this.isReceptionist = this.storage.retrieve(\"IsReceptionist\");\r\n\r\n        if (this.isDoctor) {\r\n            this.previousTab = '/patient/radiology/1';\r\n            this.nextTab = '/doctor/appointments';\r\n        }\r\n        else {\r\n            this.previousTab = '/patient/services/1';\r\n            this.nextTab = '/nurse/appointments/1';\r\n        }\r\n\r\n    }\r\n\r\n    showDetails() {\r\n        this.isDetailsVisible = true;\r\n    }\r\n\r\n    hideDetails() {\r\n        this.isDetailsVisible = false;\r\n    }\r\n\r\n    updateModel(event: any) {\r\n\r\n    }\r\n\r\n}","\r\n\r\n<div id=\"divTable\" class=\"padding5\" *ngIf=\"!isDetailsVisible\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-4 nopadding\">\r\n\r\n        </div>\r\n        <div class=\"col-md-8 align-reverse nopadding\" *ngIf=\"allowEditing\">\r\n            <button type=\"button\" class=\"btn btn-primary\" (click)=\"showDetails()\">Apply Template</button>\r\n        </div>\r\n    </div>\r\n    <div class=\"padding2\"></div>\r\n\r\n\r\n    <documents (onModelUpdated)=\"updateModel($event)\" [btnUploadText]=\"btnUploadText\" [parentId]=\"noteId\" [title]=\"Template\" [fileNameUploadTxt]=\"fileNameUploadTxt\" [fileType]=\"fileType\" [parentType]=\"type\" [isTemplateExist]=\"isTemplateExist\" [fileNameTxt]=\"fileNameTxt\"></documents>\r\n</div>\r\n<div id=\"divTable\" class=\"padding5\" *ngIf=\"isDetailsVisible\">\r\n    <patient-template-details [noteId]=\"noteId\" (onBack)=\"hideDetails()\"></patient-template-details>\r\n</div>","import { Component, OnInit, ViewChild, Output, Input, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { PatientService } from '../shared/patient.service'\r\nimport { SharedService } from '../../shared/shared/shared.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\nimport { AccountService } from '../../security/shared/account.service';\r\nimport { UserPermissions } from '../../classes/user-permissions.class';\r\nimport { PermissionKeyEnum } from '../../shared/shared/permission-key.enum';\r\n\r\n@Component({\r\n    selector: 'patient-vital-signs',\r\n    templateUrl: 'patient-vital-signs.component.html',\r\n})\r\n\r\nexport class PatientVitalSignsComponent implements OnInit, OnChanges {\r\n    selectBasicTab: boolean = true;\r\n\r\n    @Output() onCheifComplaintSaved = new EventEmitter<any>();\r\n    @Input() passedAppointmentId: number = 0;\r\n    @Input() noteId: string = '';\r\n\r\n    active = true;\r\n    chiefComplaint: any = { id: 0 };\r\n\r\n    classifications = [];\r\n    showProgress = false;\r\n    @ViewChild(\"fileInput\") fileInput!: any;\r\n    doctorId!: string;\r\n    clinicIdReq!: string;\r\n    height!: number;\r\n    heightValue!: number;\r\n    heightType!: string;\r\n    weight!: number;\r\n    weightvalue!: number;\r\n    userType: boolean | undefined; // if user Type equal true this mean this person is Doctor else patient\r\n    bmi!: number;\r\n    selectedPatientId!: number;\r\n    selectedApointmentId!: number;\r\n    weightType!: string;\r\n    isDoctor: boolean = false;\r\n    previousTab: string = '';\r\n    nextTab: string = '';\r\n    heightList: any[] = [];\r\n    weightList: any[] = [];\r\n    enableNewNoteBtn: boolean = false;\r\n    userPermisions: UserPermissions = new UserPermissions();\r\n    key: PermissionKeyEnum = new PermissionKeyEnum();\r\n    constructor(private patientService: PatientService\r\n        , private sharedService: SharedService\r\n        , public toastr: ToastrService\r\n        , private _route: ActivatedRoute\r\n        , public storage: LocalStorageService\r\n        , public translate: TranslateService\r\n        , public accountService: AccountService\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        this.loadDoctorOrNurseInfo();\r\n        if (this.isDoctor) {\r\n            this.previousTab = '/patient/basic/1';\r\n            this.nextTab = '/patient/diagnosis/1';\r\n        }\r\n        else {\r\n            this.previousTab = '/patient/basic/1';\r\n            this.nextTab = '/patient/medication/1';\r\n        }\r\n        this.loadProductWrapper();\r\n        //this.getChiefComplaintById();\r\n\r\n        if (this.accountService.userPermision._isScalar != undefined)\r\n            this.accountService.userPermision.subscribe((item: any) => this.handleUserInterfaceViews(item));\r\n        else\r\n            this.handleUserInterfaceViews(this.accountService.userPermision);\r\n    }\r\n\r\n    loadDoctorOrNurseInfo(): void {\r\n        if (this.chiefComplaint.clinicNote == null || this.chiefComplaint.clinicNote == undefined) {\r\n            let clinicNote: any = {};\r\n            this.chiefComplaint.clinicNote = clinicNote;\r\n\r\n        }\r\n\r\n        this.clinicIdReq = this.storage.retrieve(\"ClinicID\");\r\n        this.doctorId = this.storage.retrieve(\"UserID\");\r\n        this.isDoctor = this.storage.retrieve(\"IsDoctor\");\r\n        this.selectedPatientId = this._route.snapshot.params['id'];\r\n        this.selectedApointmentId = this._route.snapshot.params['appointmentId'];\r\n\r\n        if (this.passedAppointmentId != null && this.passedAppointmentId != undefined && this.passedAppointmentId != 0)\r\n            this.selectedApointmentId = this.passedAppointmentId;\r\n    }\r\n\r\n    loadProductWrapper() {\r\n        let thisComponent = this;\r\n        this.patientService.getProductUnits()\r\n            .subscribe(\r\n                function (wrapper: any) {\r\n                    thisComponent.heightList = wrapper.heights;\r\n                    thisComponent.weightList = wrapper.weights;\r\n                },\r\n                function (error: any) {\r\n                    thisComponent.toastr.error(error, '');\r\n                    thisComponent.showProgress = false;\r\n                },\r\n                function () { // finally\r\n                    thisComponent.showProgress = false;\r\n                });\r\n\r\n    }\r\n\r\n    SavechiefComplaint(): void {\r\n        let vm = this;\r\n        if (this.chiefComplaint.clinicNote == null || this.chiefComplaint.clinicNote == undefined) {\r\n            let clinicNote: any = {};\r\n            this.chiefComplaint.clinicNote = clinicNote;\r\n        }\r\n        vm.showProgress = true;\r\n\r\n        //if (this.chiefComplaint.recordedBy > 0 && this.chiefComplaint.clinicNote.appointmentId > 0 && this.chiefComplaint.userType == this.isDoctor) {\r\n        if (this.chiefComplaint.id > 0) {//Update\r\n            vm.chiefComplaint.clinicNote = null;\r\n            this.patientService.updateChiefComplaintData(this.chiefComplaint)\r\n                .subscribe(\r\n                    function (response: any) {\r\n                        let msg = vm.translate.instant(\"SavedSuccessfully\");\r\n                        vm.toastr.success(msg, '');\r\n                        vm.chiefComplaint = response;\r\n                        vm.onCheifComplaintSaved.emit({ clinicNoteId: vm.chiefComplaint.cLinicNoteId, moveNext: true });\r\n                    },\r\n                    function (error: any) {\r\n                        //console.log(\"Error happened\" + error)\r\n                        vm.toastr.error(error, '');\r\n                        vm.showProgress = false;\r\n                    },\r\n                    function () {\r\n                        vm.showProgress = false;\r\n                    });\r\n\r\n        }\r\n        else {//Create new\r\n            this.chiefComplaint.clinicNote.clinicId = this.clinicIdReq;\r\n            this.chiefComplaint.clinicNote.patientId = this.selectedPatientId;\r\n            //Appoinment is optional\r\n            if (this.selectedApointmentId == 0 || this.selectedApointmentId == undefined)\r\n                this.chiefComplaint.clinicNote.appointmentId = undefined;\r\n            else\r\n                this.chiefComplaint.clinicNote.appointmentId = this.selectedApointmentId;\r\n\r\n            if (this.isDoctor) {\r\n                this.chiefComplaint.userType = true;\r\n                this.chiefComplaint.recordedBy = this.doctorId;\r\n                this.chiefComplaint.clinicNote.doctorId = this.doctorId;\r\n\r\n            }\r\n            else {\r\n                this.chiefComplaint.userType = false;\r\n                this.chiefComplaint.recordedBy = this.doctorId;\r\n                this.chiefComplaint.clinicNote.doctorId = this.doctorId;\r\n            }\r\n            this.patientService.createChiefComplaint(this.chiefComplaint)\r\n                .subscribe(\r\n                    function (response: any) {\r\n                        let msg = vm.translate.instant(\"SavedSuccessfully\");\r\n                        vm.toastr.success(msg, '');\r\n                        vm.chiefComplaint = response;\r\n\r\n                        vm.onCheifComplaintSaved.emit({ clinicNoteId: vm.chiefComplaint.clinicNote.id, moveNext: true });\r\n                    },\r\n                    function (error: any) {\r\n                        //console.log(\"Error happened\" + error)\r\n                        vm.toastr.error(error, '');\r\n                        vm.showProgress = false;\r\n                    },\r\n                    function () {\r\n                        vm.showProgress = false;\r\n                    });\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    getChiefComplaintById() {\r\n        let vm = this;\r\n        if (this.isDoctor) {\r\n            this.chiefComplaint.userType = true;\r\n            vm.userType = this.chiefComplaint.userType;\r\n\r\n        }\r\n        else {\r\n            this.chiefComplaint.userType = false;\r\n            vm.userType = this.chiefComplaint.userType;\r\n            //this.chiefComplaint.recordedBy = this.doctorId;\r\n        }\r\n\r\n        //if (vm.selectedPatientId != undefined && vm.doctorId != undefined && vm.selectedApointmentId != undefined) {\r\n        if (vm.noteId != '' && vm.noteId != 'new') {\r\n            this.patientService.getChiefComplaintByNoteId(vm.noteId)\r\n                .subscribe(\r\n                    function (response: any) {\r\n                        vm.chiefComplaint = response;\r\n                        vm.onCheifComplaintSaved.emit({ clinicNoteId: vm.chiefComplaint.cLinicNoteId, moveNext: false });\r\n                    },\r\n                    function (error: any) {\r\n                        //vm.toastr.error('Failed to Load Data - ' + error, '');\r\n                    },\r\n                    function () {\r\n                        vm.showProgress = false;\r\n                    });\r\n        }\r\n        //}\r\n    }\r\n\r\n    getHeight(height: any) {\r\n        this.heightValue = height;\r\n        this.CaluclateBMI();\r\n\r\n    }\r\n\r\n    getWeight(weight: any) {\r\n        this.weightvalue = weight;\r\n        this.CaluclateBMI();\r\n\r\n    }\r\n    getWeightType(weightTypeId: any) {\r\n        for (let weightType of this.weightList) {\r\n            if (weightType.id == weightTypeId) {\r\n                this.weightType = weightType.key;\r\n            }\r\n        }\r\n\r\n        if (this.weightType == \"Kg\") {\r\n            this.weightvalue = this.weightvalue;\r\n        }\r\n        else if (this.weightType == \"Pound\") {\r\n            this.weightvalue = this.weightvalue / 2.2;\r\n\r\n        }\r\n        else if (this.weightType == \"gram\") {\r\n            this.weightvalue = this.weightvalue / 1000;\r\n        }\r\n        this.CaluclateBMI();\r\n\r\n    }\r\n    getHeightType(heightTypeId: string) {\r\n\r\n        for (let heightType of this.heightList) {\r\n            if (heightType.id == heightTypeId) {\r\n                this.heightType = heightType.key;\r\n            }\r\n        }\r\n\r\n        if (this.heightType == \"Meter\") {\r\n            this.heightValue = this.heightValue;\r\n        }\r\n        else if (this.heightType == \"Kilometr\") {\r\n            this.heightValue = this.heightValue * 1000;\r\n\r\n        }\r\n        else if (this.heightType == \"Centimeter\") {\r\n            this.heightValue = this.heightValue / 1000;\r\n        }\r\n        this.CaluclateBMI();\r\n    }\r\n\r\n    //BMI = weight / (height) ^ 2\r\n\r\n    //where weight is in kg and height in cm.\r\n\r\n    CaluclateBMI() {\r\n        if (this.weightvalue > 0 && this.heightValue > 0) {\r\n            this.bmi = this.weightvalue / (this.heightValue * this.heightValue);\r\n            this.chiefComplaint.bmi = this.bmi.toFixed(3);\r\n        }\r\n\r\n    }\r\n    clear(): void {\r\n        this.chiefComplaint = { id: 0 };\r\n        this.chiefComplaint.clinicNote = {};\r\n        this.active = false;\r\n\r\n        setTimeout(() => this.active = true, 0);\r\n    }\r\n\r\n    handleUserInterfaceViews(user: any) {\r\n        if (user.permissions != undefined) {\r\n            for (let item of user.permissions) {\r\n\r\n                if (item.permission.key == this.key.EMR && (item.fullControl == true))\r\n                    this.enableNewNoteBtn = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n\r\n        this.selectedApointmentId = this.passedAppointmentId;\r\n        if (this.noteId == '' || this.noteId == 'new')\r\n            this.clear();\r\n\r\n        this.getChiefComplaintById();\r\n\r\n        /*if (this.passedAppointmentId != null && this.passedAppointmentId != undefined && this.passedAppointmentId != 0) {\r\n            this.selectedApointmentId = this.passedAppointmentId;\r\n\r\n               this.getChiefComplaintById();\r\n        }*/\r\n    }\r\n\r\n\r\n}","\r\n<form novalidate *ngIf=\"active\" class=\"form-horizontal\" name=\"organizationForm\" #organizationForm=\"ngForm\">\r\n    <div class=\"form-group\">\r\n        <button type=\"button\" class=\"btn btn-primary text-right\" (click)=\"SavechiefComplaint()\" disabled=\"{{ enableNewNoteBtn ? '' :'disabled'}}\">{{ 'Save' | translate}}</button>\r\n        <!--<button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">{{ 'Close' | translate}}</button>-->\r\n    </div>\r\n    <div class=\"form-group\" *ngIf=\"isDoctor\">\r\n        <label for=\"txtChiefComplaint\" class=\"control-label col-md-2\">{{ 'ChiefComplaint' | translate}} </label>\r\n        <div class=\"col-md-6\">\r\n            <textarea class=\"form-control\" name=\"txtChiefComplaint\" [(ngModel)]='chiefComplaint.chiefComplaintMain'></textarea>\r\n        </div>\r\n    </div>\r\n    <h4 *ngIf=\"isDoctor\">\r\n        {{ 'VitalSigns' | translate}}\r\n    </h4>\r\n    <hr *ngIf=\"isDoctor\" />\r\n    <div class=\"form-group\">\r\n        <label for=\"txtWeightValue\" class=\"control-label col-md-2\">{{ 'Weight' | translate}}</label>\r\n        <div class=\"col-md-1\">\r\n            <input type=\"number\" #weightValue (change)=\"getWeight(weightValue.value)\" class=\"form-control\" name=\"txtWeightValue\" [(ngModel)]='chiefComplaint.weightValue' />\r\n        </div>\r\n        <div class=\"col-md-1\">\r\n            <select class=\"form-control\" #weightType name=\"weightUnitId\" (change)=\"getWeightType(weightType.value)\" [(ngModel)]=\"chiefComplaint.weightUnitId\">\r\n                <option *ngFor=\"let item of weightList\" [value]=\"item.id\">{{item.name}}</option>\r\n            </select>\r\n        </div>\r\n        <label for=\"weightValueMark\" class=\"control-label col-md-2\">{{ 'Description' | translate}}</label>\r\n        <div class=\"col-md-5\">\r\n            <input type=\"text\"  class=\"form-control\" name=\"weightValueMark\" [(ngModel)]='chiefComplaint.weightValueMark' />\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"temperatureTypeValue\" class=\"control-label col-md-2\">{{ 'Temprature' | translate}}</label>\r\n        <div class=\"col-md-2\">\r\n            <input type=\"number\" name=\"temperatureTypeValue\" class=\"form-control\" [(ngModel)]='chiefComplaint.temperatureTypeValue' />\r\n        </div>\r\n        <label for=\"temperatureTypeMark\" class=\"control-label col-md-2\">{{ 'Description' | translate}}</label>\r\n        <div class=\"col-md-5\">\r\n            <input type=\"text\" name=\"temperatureTypeMark\" class=\"form-control\" [(ngModel)]='chiefComplaint.temperatureTypeMark' />\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"respirationRate\" class=\"control-label col-md-2\">{{ 'Respirationrate' | translate}}</label>\r\n        <div class=\"col-md-2\">\r\n            <input type=\"number\"  name=\"respirationRate\" class=\"form-control\" [(ngModel)]='chiefComplaint.respirationRate' />\r\n        </div>\r\n        <label for=\"respirationRateMark\" class=\"control-label col-md-2\">{{ 'Description' | translate}}</label>\r\n        <div class=\"col-md-5\">\r\n            <input type=\"text\"  name=\"respirationRateMark\" class=\"form-control\" [(ngModel)]='chiefComplaint.respirationRateMark' />\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"pulse\" class=\"control-label col-md-2\">{{ 'Pulse' | translate}}</label>\r\n        <div class=\"col-md-2\">\r\n            <input type=\"number\" name=\"pulse\" class=\"form-control\" [(ngModel)]='chiefComplaint.pulse' />\r\n        </div>\r\n        <label for=\"pulseMark\" class=\"control-label col-md-2\">{{ 'Description' | translate}}</label>\r\n        <div class=\"col-md-5\">\r\n            <input type=\"text\"  name=\"pulseMark\" class=\"form-control\" [(ngModel)]='chiefComplaint.pulseMark' />\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"heightvalue\" class=\"control-label col-md-2\">{{ 'Height' | translate}}</label>\r\n        <div class=\"col-md-1\">\r\n            <input type=\"number\" #heightValue name=\"heightvalue\" class=\"form-control\" (change)=\"getHeight(heightValue.value)\" [(ngModel)]='chiefComplaint.heightvalue' />\r\n        </div>\r\n        <div class=\"col-md-1\">\r\n            <select class=\"form-control\" name=\"heightUnitId\" [(ngModel)]='chiefComplaint.heightUnitId' #heightType (change)=\"getHeightType(heightType.value)\">\r\n                <option *ngFor=\"let item of heightList\" [value]=\"item.id\">{{item.name}}</option>\r\n            </select>\r\n        </div>\r\n        <label for=\"heightValueMark\" class=\"control-label col-md-2\">{{ 'Description' | translate}}</label>\r\n        <div class=\"col-md-5\">\r\n            <input type=\"text\"  name=\"heightValueMark\" class=\"form-control\" [(ngModel)]='chiefComplaint.heightValueMark' />\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"headCircumferences\" class=\"control-label col-md-2\">{{ 'HeadCircumferences' | translate}}</label>\r\n        <div class=\"col-md-2\">\r\n            <input type=\"number\"  name=\"headCircumferences\" class=\"form-control\" [(ngModel)]='chiefComplaint.headCircumferences' />\r\n        </div>\r\n        <label for=\"headCircumferencesMArk\" class=\"control-label col-md-2\">{{ 'Description' | translate}}</label>\r\n        <div class=\"col-md-5\">\r\n            <input type=\"text\" name=\"headCircumferencesMArk\"  class=\"form-control\" [(ngModel)]='chiefComplaint.headCircumferencesMArk' />\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"bpSystolic\" class=\"control-label col-md-2\">{{ 'BPSystolic' | translate}} </label>\r\n        <div class=\"col-md-2\">\r\n            <input type=\"number\" name=\"bpSystolic\" class=\"form-control\" [(ngModel)]='chiefComplaint.bpSystolic' />\r\n        </div>\r\n        <label for=\"bpSystolicMark\" class=\"control-label col-md-2\">{{ 'Description' | translate}}</label>\r\n        <div class=\"col-md-5\">\r\n            <input type=\"text\" name=\"bpSystolicMark\" class=\"form-control\" [(ngModel)]='chiefComplaint.bpSystolicMark' />\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"bpDiastolic\" class=\"control-label col-md-2\">{{ 'BPDiastolic' | translate}} </label>\r\n        <div class=\"col-md-2\">\r\n            <input type=\"number\" name=\"bpDiastolic\" class=\"form-control\" [(ngModel)]='chiefComplaint.bpDiastolic' #bpDiastolic />\r\n        </div>\r\n        <label for=\"bpDiastolicMArk\" class=\"control-label col-md-2\">{{ 'Description' | translate}}</label>\r\n        <div class=\"col-md-5\">\r\n            <input type=\"text\"  name=\"bpDiastolicMArk\" class=\"form-control\" [(ngModel)]='chiefComplaint.bpDiastolicMArk' #bpDiastolicMArk />\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"bMI\" class=\"control-label col-md-2\">{{ 'BMI' | translate}}</label>\r\n        <div class=\"col-md-2\">\r\n            <input type=\"number\" name=\"bMI\" class=\"form-control\" [(ngModel)]='chiefComplaint.bmi' #bMI />\r\n        </div>\r\n        <label for=\"bMIMark\" class=\"control-label col-md-2\">{{ 'Description' | translate}}</label>\r\n        <div class=\"col-md-5\">\r\n            <input type=\"text\" name=\"bMIMark\" class=\"form-control\" [(ngModel)]='chiefComplaint.bmiMark' #bMIMark />\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\" *ngIf=\"isDoctor\">\r\n        <label for=\"durationOfIllness\" class=\"control-label col-md-2\">{{ 'DurationOfIllness' | translate}}</label>\r\n        <div class=\"col-md-2\">\r\n            <input type=\"number\" name=\"durationOfIllness\" [(ngModel)]='chiefComplaint.durationOfIllness' class=\"form-control\" #durationOfIllness />\r\n        </div>\r\n        <label for=\"durationOfIllnessMark\" class=\"control-label col-md-2\">{{ 'Description' | translate}}</label>\r\n        <div class=\"col-md-5\">\r\n            <input type=\"text\" name=\"durationOfIllnessMark\" class=\"form-control\" [(ngModel)]='chiefComplaint.durationOfIllnessMark' #durationOfIllnessMark />\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\" *ngIf=\"isDoctor\">\r\n        <label for=\"significantSigns\" class=\"control-label col-md-2\">{{ 'SignificantSigns' | translate}}</label>\r\n        <div class=\"col-md-6\">\r\n            <textarea class=\"form-control\"  name=\"significantSigns\" [(ngModel)]='chiefComplaint.significantSigns'></textarea>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\" *ngIf=\"isDoctor\">\r\n        <label for=\"possibleLineManagement\" class=\"control-label col-md-2\">{{ 'PossibleLineManagement' | translate}} </label>\r\n        <div class=\"col-md-6\">\r\n            <textarea class=\"form-control\"  name=\"possibleLineManagement\" [(ngModel)]='chiefComplaint.possibleLineManagement'></textarea>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"description\" class=\"control-label col-md-2\">{{ 'Description' | translate}}</label>\r\n        <div class=\"col-md-6\">\r\n            <textarea class=\"form-control\" name=\"description\" [(ngModel)]='chiefComplaint.description'></textarea>\r\n        </div>\r\n    </div>\r\n    <div class=\"modal-footer\">   \r\n    </div>\r\n\r\n</form>\r\n\r\n","\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n// import {EditorModule, SharedModule as SharedModuleNg} from 'primeng/primeng';\r\nimport { PatientRoutingModule } from './patients.routing';\r\nimport { PatientTabsComponent } from './patient-tabs/patient-tabs.component';\r\nimport { PatientBasicComponent } from './patient-basic/patient-basic.component';\r\nimport { PatientVitalSignsComponent } from './patient-vital-signs/patient-vital-signs.component';\r\nimport { PatientDiagnosisComponent } from './patient-diagnosis/patient-diagnosis.component';\r\nimport { PatientMedicationComponent } from './patient-medication/patient-medication.component';\r\nimport { PatientSurgeriesComponent } from './patient-surgeries/patient-surgeries.component';\r\nimport { PatientAllergiesComponent } from './patient-allergies/patient-allergies.component';\r\n//import { PatientServicesComponent }   from './patient-services/patient-services.component';\r\nimport { PatientLaboratoryComponent } from './patient-laboratory/patient-laboratory.component';\r\nimport { PatientRadiologyComponent } from './patient-radiology/patient-radiology.component';\r\nimport { PatientAttachmentsComponent } from './patient-attachments/patient-attachments.component';\r\nimport { PatientDiagnoseDetailsComponent } from './patient-diagnose-details/patient-diagnose-details.component';\r\nimport { PatientMedicationDetailsComponent } from './patient-medication-details/patient-medication-details.component';\r\nimport { PatientSurgeryDetailsComponent } from './patient-surgery-details/patient-surgery-details.component';\r\nimport { PatientAllergyDetailsComponent } from './patient-allergy-details/patient-allergy-details.component';\r\nimport { PatientLabDetailsComponent } from './patient-lab-details/patient-lab-details.component';\r\nimport { PatientRadiologyDetailsComponent } from './patient-radiology-details/patient-radiology-details.component';\r\nimport { PatientAttachmentDetailsComponent } from './patient-attachment-details/patient-attachment-details.component';\r\nimport { DateHijriGregorian } from './date-hijri-gregorian/date-hijri-gregorian.component';\r\nimport { PatientReceptionistTabsComponent } from './patient-receptionist-tabs/patient-receptionist-tabs.component';\r\nimport { PatientAccountComponent } from './patient-account/patient-account.component';\r\nimport { PatientPersonalComponent } from './patient-personal/patient-personal.component';\r\nimport { PatientAddressComponent } from './patient-address/patient-address.component';\r\nimport { PatientInsuranceComponent } from './patient-insurance/patient-insurance.component';\r\nimport { PatientInsuranceDetailsComponent } from './patient-insurance-details/patient-insurance-details.component';\r\nimport { PatientMrfComponent } from './patient-mrf/patient-mrf.component';\r\nimport { PatientSnapshotComponent } from './patient-snapshot/patient-snapshot.component';\r\nimport { PatientClinicalNoteComponent } from './patient-clinical-note/patient-clinical-note.component';\r\nimport { PatientNotesComponent } from './patient-notes/patient-notes.component';\r\nimport { PatientTemplatesComponent } from './patient-templates/patient-templates.component';\r\nimport { PatientTemplateDetailsComponent } from './patient-template-details/patient-template-details.component';\r\nimport { PatientReceptionistAttachmentsComponent } from './patient-receptionist-attachments/patient-receptionist-attachments.component';\r\nimport { PatientReceptionistAttachmentsDetailsComponent } from './patient-receptionist-attachments-details/patient-receptionist-attachments-details.component';\r\nimport { PatientNoteViewComponent } from './patient-note-view/patient-note-view.component';\r\nimport { PatientRemarksComponent } from './patient-remarks/patient-remarks.component';\r\nimport { PatientFileComponent } from './patient-file/patient-file.component';\r\nimport { PatienSearchComponent } from './patient-search/patient-search.component';\r\nimport { PatientNoteServicesComponent } from './patient-note-services/patient-note-services.component';\r\nimport { PatientNoteDiagnosisComponent } from './patient-note-diagnosis/patient-note-diagnosis.component';\r\nimport { PatientNoteRadiologyComponent } from './patient-note-radiology/patient-note-radiology.component';\r\nimport { PatientRadiologyGridComponent } from './patient-radiologyGrid/patient-radiologyGrid.component';\r\nimport { PatientNoteLaboratoryComponent } from './patient-note-laboratory/patient-note-laboratory.component';\r\nimport { PatientNoteMedicationsComponent } from './patient-note-medications/patient-note-medications.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { PatientServicesGridComponent } from './patient-servicesGrid/patient-servicesGrid.component';\r\nimport { PatientDiagnosisGridComponent } from './patient-diagnosisGrid/patient-diagnosisGrid.component';\r\nimport { PatientLaboratoryGridComponent } from './patient-laboratoryGrid/patient-laboratoryGrid.component';\r\nimport { PatientMedicationsGridComponent } from './patient-medicationsGrid/patient-medicationsGrid.component';\r\nimport { PatientServicePackagesGridComponent } from './patient-servicePackages-grid/patient-servicePackages-grid.component';\r\n\r\n\r\n@NgModule({\r\n    imports: [\r\n        FormsModule,\r\n        CommonModule,\r\n        PatientRoutingModule,\r\n        SharedModule,\r\n        // EditorModule,\r\n        // SharedModuleNg,      \r\n        //routing,  \r\n\r\n    ],\r\n    declarations: [\r\n        PatientTabsComponent,\r\n        PatientBasicComponent,\r\n        PatientVitalSignsComponent,\r\n        PatientDiagnosisComponent,\r\n        PatientMedicationComponent,\r\n        PatientSurgeriesComponent,\r\n        PatientAllergiesComponent,\r\n        //PatientServicesComponent,\r\n        PatientLaboratoryComponent,\r\n        PatientRadiologyComponent,\r\n        PatientAttachmentsComponent,\r\n        PatientDiagnoseDetailsComponent,\r\n        PatientMedicationDetailsComponent,\r\n        PatientSurgeryDetailsComponent,\r\n        PatientAllergyDetailsComponent,\r\n        PatientLabDetailsComponent,\r\n        PatientRadiologyDetailsComponent,\r\n        PatientAttachmentDetailsComponent,\r\n        DateHijriGregorian,\r\n        //PatientServiceDetailsComponent,\r\n        PatientReceptionistTabsComponent,\r\n        PatientAccountComponent,\r\n        PatientPersonalComponent,\r\n        PatientAddressComponent,\r\n        PatientInsuranceComponent,\r\n        PatientInsuranceDetailsComponent,\r\n        PatientMrfComponent,\r\n        PatientSnapshotComponent,\r\n        PatientClinicalNoteComponent,\r\n        PatientNotesComponent,\r\n        PatientTemplatesComponent,\r\n        PatientTemplateDetailsComponent,\r\n        PatientReceptionistAttachmentsComponent,\r\n        PatientReceptionistAttachmentsDetailsComponent,\r\n        PatientNoteViewComponent,\r\n        PatientRemarksComponent,\r\n        PatientFileComponent,\r\n        PatienSearchComponent,\r\n        PatientNoteServicesComponent,\r\n        PatientServicesGridComponent,\r\n        PatientDiagnosisGridComponent,\r\n        PatientNoteDiagnosisComponent,\r\n        PatientRadiologyGridComponent,\r\n        PatientNoteRadiologyComponent,\r\n        PatientLaboratoryGridComponent,\r\n        PatientNoteLaboratoryComponent,\r\n        PatientNoteMedicationsComponent,\r\n        PatientMedicationsGridComponent,\r\n        PatientServicePackagesGridComponent\r\n\r\n\r\n    ],\r\n    providers: [],\r\n    exports: [\r\n        PatientTabsComponent,\r\n        PatientBasicComponent,\r\n        PatientVitalSignsComponent,\r\n        PatientDiagnosisComponent,\r\n        PatientMedicationComponent,\r\n        PatientSurgeriesComponent,\r\n        PatientAllergiesComponent,\r\n        //PatientServicesComponent,\r\n        PatientLaboratoryComponent,\r\n        PatientRadiologyComponent,\r\n        PatientAttachmentsComponent,\r\n        PatientDiagnoseDetailsComponent,\r\n        PatientMedicationDetailsComponent,\r\n        PatientSurgeryDetailsComponent,\r\n        PatientAllergyDetailsComponent,\r\n        PatientLabDetailsComponent,\r\n        PatientRadiologyDetailsComponent,\r\n        PatientAttachmentDetailsComponent,\r\n        DateHijriGregorian,\r\n        //PatientServiceDetailsComponent,\r\n        PatientReceptionistTabsComponent,\r\n        PatientAccountComponent,\r\n        PatientPersonalComponent,\r\n        PatientAddressComponent,\r\n        PatientInsuranceComponent,\r\n        PatientInsuranceDetailsComponent,\r\n        PatientMrfComponent,\r\n        PatientSnapshotComponent,\r\n        PatientClinicalNoteComponent,\r\n        PatientNotesComponent,\r\n        PatientTemplatesComponent,\r\n        PatientTemplateDetailsComponent,\r\n        PatientReceptionistAttachmentsComponent,\r\n        PatientNoteViewComponent,\r\n        PatientRemarksComponent,\r\n        PatientFileComponent,\r\n        PatienSearchComponent,\r\n        PatientNoteServicesComponent,\r\n        PatientServicesGridComponent,\r\n        PatientDiagnosisGridComponent,\r\n        PatientNoteDiagnosisComponent,\r\n        PatientRadiologyGridComponent,\r\n        PatientNoteRadiologyComponent,\r\n        PatientLaboratoryGridComponent,\r\n        PatientNoteLaboratoryComponent,\r\n        PatientNoteMedicationsComponent,\r\n        PatientMedicationsGridComponent,\r\n        PatientServicePackagesGridComponent\r\n\r\n    ]\r\n})\r\nexport class PatientsModule { }\r\n","import { NgModule }  from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { PatientBasicComponent } from './patient-basic/patient-basic.component';\r\nimport { PatientVitalSignsComponent }   from './patient-vital-signs/patient-vital-signs.component';\r\nimport { PatientDiagnosisComponent }   from './patient-diagnosis/patient-diagnosis.component';\r\nimport { PatientMedicationComponent }   from './patient-medication/patient-medication.component';\r\nimport { PatientSurgeriesComponent }   from './patient-surgeries/patient-surgeries.component';\r\nimport { PatientAllergiesComponent }   from './patient-allergies/patient-allergies.component';\r\n//import { PatientServicesComponent }   from './patient-services/patient-services.component';\r\nimport { PatientLaboratoryComponent } from './patient-laboratory/patient-laboratory.component';\r\nimport { PatientRadiologyComponent } from './patient-radiology/patient-radiology.component';\r\nimport { PatientAttachmentsComponent } from './patient-attachments/patient-attachments.component';\r\nimport { PatientDiagnoseDetailsComponent } from './patient-diagnose-details/patient-diagnose-details.component';\r\nimport { PatientMedicationDetailsComponent } from './patient-medication-details/patient-medication-details.component';\r\nimport { PatientSurgeryDetailsComponent } from './patient-surgery-details/patient-surgery-details.component';\r\nimport { PatientAllergyDetailsComponent } from './patient-allergy-details/patient-allergy-details.component';\r\nimport { PatientLabDetailsComponent } from './patient-lab-details/patient-lab-details.component';\r\nimport { PatientRadiologyDetailsComponent } from './patient-radiology-details/patient-radiology-details.component';\r\nimport { PatientAttachmentDetailsComponent } from './patient-attachment-details/patient-attachment-details.component';\r\n//import { PatientServiceDetailsComponent } from './patient-service-details/patient-service-details.component';\r\nimport { PatientAccountComponent } from './patient-account/patient-account.component';\r\nimport { PatientPersonalComponent } from './patient-personal/patient-personal.component';\r\nimport { PatientAddressComponent } from './patient-address/patient-address.component';\r\nimport { PatientInsuranceComponent } from './patient-insurance/patient-insurance.component';\r\nimport { PatientInsuranceDetailsComponent } from './patient-insurance-details/patient-insurance-details.component';\r\nimport { PatientMrfComponent } from './patient-mrf/patient-mrf.component';\r\nimport { PatientReceptionistAttachmentsComponent } from './patient-receptionist-attachments/patient-receptionist-attachments.component';\r\nimport { PatientReceptionistAttachmentsDetailsComponent } from './patient-receptionist-attachments-details/patient-receptionist-attachments-details.component';\r\nimport { PatientFileComponent } from './patient-file/patient-file.component';\r\n\r\n\r\nconst patientRoutes: Routes = [\r\n\r\n    //Patients\r\n    { path: 'basic/:id', component: PatientBasicComponent },\r\n    { path: 'vitalSigns/:id', component: PatientVitalSignsComponent },\r\n    { path: 'diagnosis/:id', component: PatientDiagnosisComponent },\r\n    { path: 'medication/:id', component: PatientMedicationComponent },\r\n    { path: 'surgeries/:id', component: PatientSurgeriesComponent },\r\n    { path: 'allergies/:id', component: PatientAllergiesComponent },\r\n    //{ path: 'services/:id', component: PatientServicesComponent },\r\n    { path: 'laboratory/:id', component: PatientLaboratoryComponent },\r\n    { path: 'radiology/:id', component: PatientRadiologyComponent },\r\n    { path: 'attachments/:id', component: PatientReceptionistAttachmentsComponent },\r\n    { path: 'patientDiagnoseDetails/:id', component: PatientDiagnoseDetailsComponent },\r\n    { path: 'patientMedicationDetails/:id', component: PatientMedicationDetailsComponent },\r\n    { path: 'patientSurgeryDetails/:id', component: PatientSurgeryDetailsComponent },\r\n    { path: 'patientAllergyDetails/:id', component: PatientAllergyDetailsComponent },\r\n    { path: 'patientLabDetails/:id', component: PatientLabDetailsComponent },\r\n    { path: 'patientRadiologyDetails/:id', component: PatientRadiologyDetailsComponent },\r\n    { path: 'PatientReceptionistAttachmentsDetails/:parentId/:id', component: PatientReceptionistAttachmentsDetailsComponent },\r\n    //{ path: 'patientServiceDetails/:id', component: PatientServiceDetailsComponent },\r\n    { path: 'patientAccount/:id', component: PatientAccountComponent },\r\n    { path: 'patientPersonal/:id', component: PatientPersonalComponent },\r\n    { path: 'patientAddress/:id', component: PatientAddressComponent },\r\n    { path: 'patientInsurance/:id', component: PatientInsuranceComponent },\r\n    { path: 'patientInsuranceDetails/:id', component: PatientInsuranceDetailsComponent },\r\n    { path: 'mrf/:id/:appointmentId/:divisionId', component: PatientMrfComponent },\r\n    { path: 'file/:id', component: PatientFileComponent }\r\n\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(patientRoutes)\r\n    ],\r\n    exports: [\r\n        RouterModule\r\n    ]\r\n})\r\nexport class PatientRoutingModule { }","\r\n\r\nexport enum HijriMonthList {\r\n    Muharram = 1,\r\n    Safar,\r\n    RabiAlAwwal,\r\n    RabiAlThani,\r\n    JumadaAlAwwal,\r\n    JumadaAlThani,\r\n    Rajab,\r\n    Shaban,\r\n    Ramadan,\r\n    Shawwal,\r\n    DhuAlQiDah,\r\n    DhuAlHijjah,\r\n\r\n}\r\nexport enum GregorianMonthList {\r\n    January = 1,\r\n    February,\r\n    March,\r\n    April,\r\n    May,\r\n    June,\r\n    July,\r\n    August,\r\n    September,\r\n    October,\r\n    November,\r\n    December,\r\n}\r\n","\r\nimport { UtilityClass } from '../../shared/shared/utility.class'\r\nimport { TimeSlot } from '../../shared/shared/time-slot.model'\r\nimport { calendarSlotDuration } from '../../app.config';\r\n\r\nexport class ReceptionistAppointmentManager {\r\n    utilityClass: UtilityClass = new UtilityClass();\r\n    appointmentSchedulesList: any[] = [];\r\n    sessionExtensionsList: any[] = [];\r\n    timeSlotsList: any[] = [];\r\n    toExcludeTimeSlotsList: any[] = [];\r\n    sessionsList: any[] = [];\r\n    slotDuration!: number;\r\n\r\n    constructor(schedulesList: any[], sessionExtensionsList: any) {\r\n        this.appointmentSchedulesList = schedulesList;\r\n        this.sessionExtensionsList = sessionExtensionsList;\r\n    }\r\n\r\n    public getFirstTimeSlot(dateValue: Date) {\r\n        let firstTimeSlot!: TimeSlot;\r\n\r\n        for (let dayno = 0; dayno <= 6; dayno++) {\r\n\r\n            let satrt: number = dateValue.getDate();\r\n            let date: Date = new Date(dateValue.getTime());\r\n            date.setDate(satrt + dayno)\r\n\r\n            let arrSlotsInDate = this.getTimeSlots(date);\r\n            if (arrSlotsInDate != undefined && arrSlotsInDate.length > 0) {\r\n                firstTimeSlot = arrSlotsInDate[0];\r\n                break;\r\n            }\r\n        }\r\n\r\n        return firstTimeSlot;\r\n    }\r\n\r\n    public getTimeSlots(dateValue: Date): any[] {\r\n\r\n        this.timeSlotsList = [];\r\n        //this.toExcludeTimeSlotsList = [];\r\n        if (dateValue != undefined) {\r\n            let appSchedule = this.getAppointmentSchedule(dateValue);\r\n            if (appSchedule != undefined) {\r\n                //Get the day name\r\n                let dayName = this.utilityClass.getDayName(dateValue.getDay());\r\n                //Get the slot duration\r\n                this.slotDuration = appSchedule.slotDuration;\r\n                //Get the day sessions\r\n                let daySessions: any[] = this.getDaySessions(appSchedule, dayName);\r\n\r\n                //Divide the sessions into time-slots\r\n                this.fillTimeSlots(dateValue, daySessions);\r\n\r\n                //Handle sesion extensions\r\n                this.handleSessionExtensions(dateValue);\r\n            }\r\n        }\r\n\r\n        //Sort time slots\r\n        this.timeSlotsList.sort(function (slot1, slot2) {\r\n\r\n            if (slot1.dateTime > slot2.dateTime)\r\n                return 1;\r\n            else\r\n                return -1\r\n        });\r\n\r\n        return this.timeSlotsList;\r\n    }\r\n\r\n    handleSessionExtensions(selectedDate: any) {\r\n        if (this.sessionExtensionsList != undefined) {\r\n\r\n            //Get session extensions in selected date\r\n            let sessionExtensionsInDate: any = [];\r\n\r\n            this.sessionExtensionsList.forEach((item: any) => {\r\n                var date = this.utilityClass.getUtcDateFromString(item.day);\r\n                if (date.toDateString() == selectedDate.toDateString()) {\r\n                    sessionExtensionsInDate.push(item);\r\n                }\r\n            });\r\n\r\n            //Sort by DB ID\r\n            let thisComp = this;\r\n            sessionExtensionsInDate.sort(function (sesion1: any, sesion2: any) {\r\n                let id1: number = Number(sesion1.id);\r\n                let id2: number = Number(sesion2.id);\r\n\r\n                if (id1 > id2)\r\n                    return 1;\r\n                else\r\n                    return -1\r\n            });\r\n\r\n            //Manage session extenstions slots\r\n            sessionExtensionsInDate.forEach((item: any) => this.manageSesssionExtensionItem(selectedDate, item));\r\n        }\r\n    }\r\n\r\n    manageSesssionExtensionItem(selectedDate: any, item: any) {\r\n        let itemTimeSlots: any = [];\r\n        this.addTimeSlots(selectedDate, item, itemTimeSlots)\r\n\r\n        itemTimeSlots.forEach((slot: any) => this.handleSesssionExtensionSlot(item, slot));\r\n    }\r\n\r\n    handleSesssionExtensionSlot(sessionExtensionItem: any, slot: any) {\r\n        if (sessionExtensionItem.type == \"OpenSlot\") {\r\n            let availableSlot = this.timeSlotsList.find(s => s.name == slot.name);\r\n            if (availableSlot == undefined)//add it\r\n                this.timeSlotsList.push(slot);\r\n        }\r\n        else if (sessionExtensionItem.type == \"CloseSlot\") {\r\n            var matchedIndex = this.findWithAttr(this.timeSlotsList, 'name', slot.name);\r\n            if (matchedIndex > -1)\r\n                this.timeSlotsList.splice(matchedIndex, 1);\r\n        }\r\n    }\r\n\r\n    public getSessions(dateValue: Date): any[] {\r\n        this.sessionsList = [];\r\n        if (dateValue != undefined) {\r\n            let appSchedule = this.getAppointmentSchedule(dateValue);\r\n            if (appSchedule != undefined) {\r\n                //Get the day name\r\n                let dayName = this.utilityClass.getDayName(dateValue.getDay());\r\n                //Get the slot duration\r\n                this.slotDuration = appSchedule.slotDuration;\r\n                //Get the day sessions\r\n                this.sessionsList = this.getDaySessions(appSchedule, dayName);\r\n\r\n                if (this.sessionExtensionsList != undefined) {\r\n                    this.sessionExtensionsList.forEach((item: any) => {\r\n                        var date = this.utilityClass.getUtcDateFromString(item.day);\r\n                        if (date.toDateString() == dateValue.toDateString() && item.type == \"OpenSlot\") {\r\n                            this.sessionsList.push(item);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        return this.sessionsList;\r\n    }\r\n\r\n    public getSlotDurationForDate(dateValue: Date): number {\r\n\r\n        let appSchedule = this.getAppointmentSchedule(dateValue);\r\n        //Get the slot duration\r\n        if (appSchedule != undefined)\r\n            this.slotDuration = appSchedule.slotDuration;\r\n\r\n        return this.slotDuration;\r\n    }\r\n\r\n    public getSlotDuration(): number {\r\n        return this.slotDuration;\r\n    }\r\n\r\n\r\n    public getAppointmentSchedule(dateValue: Date): any {\r\n\r\n        dateValue = this.utilityClass.getUtcDate(dateValue);\r\n        let appSchedule;\r\n        if (this.appointmentSchedulesList != undefined) {\r\n            appSchedule = this.appointmentSchedulesList.find(schdul => dateValue >= this.utilityClass.getUtcDateFromString(schdul.startDate) && dateValue <= this.utilityClass.getUtcDateFromString(schdul.endDate));\r\n        }\r\n\r\n        return appSchedule;\r\n    }\r\n\r\n    private getDaySessions(appSchedule: any, dayName: string): any[] {\r\n        let daySessions: any[] = [];\r\n        if (appSchedule != undefined && appSchedule.sessions != undefined) {\r\n            appSchedule.sessions.forEach((item: any) => {\r\n                if (item.day == dayName)\r\n                    daySessions.push(item);\r\n            });\r\n        }\r\n\r\n        ////Sort the session by the StartTime\r\n        //let thisComp = this;\r\n        //daySessions.sort(function (sesion1, sesion2) {\r\n        //    let startTime1: Date = thisComp.utilityClass.getDateTimeFromString(sesion1.startTime);\r\n        //    let startTime2: Date = thisComp.utilityClass.getDateTimeFromString(sesion2.startTime);\r\n\r\n        //    if (startTime1 > startTime2)\r\n        //        return 1;\r\n        //    else\r\n        //        return -1\r\n        //});\r\n\r\n        return daySessions;\r\n    }\r\n\r\n    private fillTimeSlots(selectedDate: Date, daySessions: any[]) {\r\n        let thisCompnonent = this;\r\n        daySessions.forEach((item: any) => this.addTimeSlots(selectedDate, item, this.timeSlotsList));\r\n    }\r\n\r\n    findWithAttr(array: any, attr: any, value: any) {\r\n        for (var i = 0; i < array.length; i += 1) {\r\n            if (array[i][attr] === value) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n    private addTimeSlots(selectedDate: Date, session: any, toFillTimeSlotsList: any[]) {\r\n        //Start Time\r\n        let startHour: number = this.utilityClass.getDateTimeFromString(session.startTime).getHours();\r\n        let startMinute: number = this.utilityClass.getDateTimeFromString(session.startTime).getMinutes();\r\n        let timeSlotDate: Date = new Date(selectedDate.getFullYear(), selectedDate.getMonth(), selectedDate.getDate(), startHour, startMinute);\r\n\r\n        //End Time\r\n        let endHour: number = this.utilityClass.getDateTimeFromString(session.endTime).getHours();\r\n        let endMinute: number = this.utilityClass.getDateTimeFromString(session.endTime).getMinutes();\r\n        let endSlotDate: Date = new Date(selectedDate.getFullYear(), selectedDate.getMonth(), selectedDate.getDate(), endHour, endMinute);\r\n\r\n        while (timeSlotDate < endSlotDate) {\r\n\r\n            let timeSlot: TimeSlot = new TimeSlot(timeSlotDate);\r\n\r\n            toFillTimeSlotsList.push(timeSlot);\r\n\r\n            let minutes: number = timeSlotDate.getMinutes();\r\n\r\n            timeSlotDate.setMinutes(minutes + this.slotDuration);\r\n        }\r\n\r\n        //Add the end slot\r\n        /*let endTimeSlot: TimeSlot = new TimeSlot(endSlotDate);\r\n        if (getExcluded == undefined || getExcluded == false) {\r\n            if (this.findWithAttr(toFillTimeSlotsList,'name', endTimeSlot.name) == -1) {\r\n                toFillTimeSlotsList.push(endTimeSlot);\r\n            }\r\n        }*/\r\n        //else if (session.type == \"CloseSlot\")\r\n        //    toFillTimeSlotsList.push(endTimeSlot);\r\n    }\r\n\r\n    getFullDayTimeSlots(daySlotDuration: any): TimeSlot[] {\r\n        if (daySlotDuration == null || daySlotDuration == undefined) {\r\n            daySlotDuration = 10;//Default\r\n            //Override it if there is calendar slot duration\r\n            if (calendarSlotDuration != undefined && calendarSlotDuration != '') {\r\n                let components: string[] = calendarSlotDuration.split(':');\r\n                if (components.length >= 1) {\r\n                    daySlotDuration = Number(components[1]);//get the minutes component\r\n                }\r\n            }\r\n        }\r\n        let dayTimeSlotsList: TimeSlot[] = [];\r\n\r\n        let slotsPerHour: number = 60 / daySlotDuration;\r\n        let slotsPerDay: number = 24 * slotsPerHour;\r\n\r\n        let todDay: Date = new Date();\r\n        //Day start time\r\n        let date: Date = new Date(todDay.getFullYear(), todDay.getMonth(), todDay.getDate(), 0, 0);\r\n\r\n        dayTimeSlotsList.push(new TimeSlot(date));\r\n\r\n        for (let slotNo = 1; slotNo < slotsPerDay; slotNo++) {\r\n\r\n            //Increase minutes\r\n            let minutes = date.getMinutes() + daySlotDuration;\r\n            date.setMinutes(minutes);\r\n\r\n            //Add time to the list\r\n            dayTimeSlotsList.push(new TimeSlot(date));\r\n        }\r\n\r\n        return dayTimeSlotsList;\r\n    }\r\n\r\n\r\n}","import { UtilityClass } from './utility.class';\r\n\r\nexport class TimeSlot {\r\n\r\n    utilClass: UtilityClass = new UtilityClass();\r\n\r\n    name!:string;\r\n    amPmName!:string;\r\n\r\n    hour!: number;\r\n    minute!: number;\r\n    dateTime: Date | undefined;\r\n\r\n    constructor(selectedDate: Date) {\r\n        this.hour = selectedDate.getHours();\r\n        this.minute = selectedDate.getMinutes();\r\n        this.dateTime = new Date(selectedDate.getFullYear(), selectedDate.getMonth(),\r\n            selectedDate.getDate(), this.hour, this.minute);\r\n\r\n        this.name = this.utilClass.getFormattedTime(this.hour, this.minute);\r\n        this.amPmName = this.utilClass.getAmPmTime(this.hour, this.minute);\r\n    }\r\n}"],"names":[],"sourceRoot":"webpack:///"}