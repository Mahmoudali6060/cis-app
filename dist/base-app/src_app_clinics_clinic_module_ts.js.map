{"version":3,"file":"src_app_clinics_clinic_module_ts.js","mappings":"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","sources":["./src/app/classes/attachmentInfo.class.ts","./src/app/classes/clinicNews.class.ts","./src/app/classes/feedback.class.ts","./src/app/classes/reply.class.ts","./src/app/clinics/clinic-EMRMaster-diagnosis/clinic-EMRMaster-diagnosis.component.ts","./src/app/clinics/clinic-EMRMaster-diagnosis/clinic-EMRMaster-diagnosis.component.html","./src/app/clinics/clinic-EMRMaster-drugs/clinic-EMRMaster-drugs.component.ts","./src/app/clinics/clinic-EMRMaster-drugs/clinic-EMRMaster-drugs.component.html","./src/app/clinics/clinic-EMRMaster-laboratoryTests/clinic-EMRMaster-laboratoryTests.component.ts","./src/app/clinics/clinic-EMRMaster-laboratoryTests/clinic-EMRMaster-laboratoryTests.component.html","./src/app/clinics/clinic-EMRMaster-radiologyTests/clinic-EMRMaster-radiologyTests.component.ts","./src/app/clinics/clinic-EMRMaster-radiologyTests/clinic-EMRMaster-radiologyTests.component.html","./src/app/clinics/clinic-EMRMaster-servicePackages/clinic-EMRMaster-servicePackages.component.ts","./src/app/clinics/clinic-EMRMaster-servicePackages/clinic-EMRMaster-servicePackages.component.html","./src/app/clinics/clinic-EMRMaster-services/clinic-EMRMaster-services.component.ts","./src/app/clinics/clinic-EMRMaster-services/clinic-EMRMaster-services.component.html","./src/app/clinics/clinic-EMRMaster/clinic-EMRMaster.component.ts","./src/app/clinics/clinic-EMRMaster/clinic-EMRMaster.component.html","./src/app/clinics/clinic-EMRWizard/clinic-EMRWizard.component.ts","./src/app/clinics/clinic-EMRWizard/clinic-EMRWizard.component.html","./src/app/clinics/clinic-account/clinic-account.component.ts","./src/app/clinics/clinic-account/clinic-account.component.html","./src/app/clinics/clinic-address/clinic-address.component.ts","./src/app/clinics/clinic-address/clinic-address.component.html","./src/app/clinics/clinic-appointment-details/clinic-appointment-details.component.ts","./src/app/clinics/clinic-appointment-details/clinic-appointment-details.component.html","./src/app/clinics/clinic-appointments/clinic-appointments.component.ts","./src/app/clinics/clinic-appointments/clinic-appointments.component.html","./src/app/clinics/clinic-dashboard/clinic-dashboard.component.ts","./src/app/clinics/clinic-dashboard/clinic-dashboard.component.html","./src/app/clinics/clinic-diagnosis/clinic-diagnosis.component.ts","./src/app/clinics/clinic-diagnosis/clinic-diagnosis.component.html","./src/app/clinics/clinic-diagnosis/manage-diagnose/clinic-manage-diagnose.component.ts","./src/app/clinics/clinic-diagnosis/manage-diagnose/clinic-manage-diagnose.component.html","./src/app/clinics/clinic-diagnosis/manage-diagnosis-group/clinic-manage-diagnosis-group.component.ts","./src/app/clinics/clinic-diagnosis/manage-diagnosis-group/clinic-manage-diagnosis-group.component.html","./src/app/clinics/clinic-drugs/clinic-drugs.component.ts","./src/app/clinics/clinic-drugs/clinic-drugs.component.html","./src/app/clinics/clinic-drugs/manage-drug/clinic-manage-drug.component.ts","./src/app/clinics/clinic-drugs/manage-drug/clinic-manage-drug.component.html","./src/app/clinics/clinic-drugs/manage-drugs-group/clinic-manage-drugs-group.component.ts","./src/app/clinics/clinic-drugs/manage-drugs-group/clinic-manage-drugs-group.component.html","./src/app/clinics/clinic-feedback/reply-to-feedback/reply-to-feedback.component.ts","./src/app/clinics/clinic-feedback/reply-to-feedback/reply-to-feedback.component.html","./src/app/clinics/clinic-feedback/view-feedbacks-list/view-feedbacks-list.component.ts","./src/app/clinics/clinic-feedback/view-feedbacks-list/view-feedbacks-list.component.html","./src/app/clinics/clinic-humanResource-basic/clinic-humanResource-basic.component.ts","./src/app/clinics/clinic-humanResource-basic/clinic-humanResource-basic.component.html","./src/app/clinics/clinic-humanResource-serviceFees/clinic-humanResource-serviceFees.component.ts","./src/app/clinics/clinic-humanResource-serviceFees/clinic-humanResource-serviceFees.component.html","./src/app/clinics/clinic-humanResource-serviceSlots/clinic-humanResource-serviceSlots.component.ts","./src/app/clinics/clinic-humanResource-serviceSlots/clinic-humanResource-serviceSlots.component.html","./src/app/clinics/clinic-humanResource/clinic-humanResource.component.ts","./src/app/clinics/clinic-humanResource/clinic-humanResource.component.html","./src/app/clinics/clinic-inventory/clinic-inventory-add-quantity/clinic-inventory-add-quantity.component.ts","./src/app/clinics/clinic-inventory/clinic-inventory-add-quantity/clinic-inventory-add-quantity.component.html","./src/app/clinics/clinic-inventory/clinic-inventory-adjust-quantity/clinic-inventory-adjust-quantity.component.ts","./src/app/clinics/clinic-inventory/clinic-inventory-adjust-quantity/clinic-inventory-adjust-quantity.component.html","./src/app/clinics/clinic-inventory/clinic-inventory-adjustment-history/clinic-inventory-adjustment-history.component.ts","./src/app/clinics/clinic-inventory/clinic-inventory-adjustment-history/clinic-inventory-adjustment-history.component.html","./src/app/clinics/clinic-inventory/clinic-inventory-list/clinic-inventory-list.component.ts","./src/app/clinics/clinic-inventory/clinic-inventory-list/clinic-inventory-list.component.html","./src/app/clinics/clinic-inventory/clinic-inventory.component.ts","./src/app/clinics/clinic-inventory/clinic-inventory.component.html","./src/app/clinics/clinic-inventory/doctor-inventory-requests/doctor-inventory-requests.component.ts","./src/app/clinics/clinic-inventory/doctor-inventory-requests/doctor-inventory-requests.component.html","./src/app/clinics/clinic-laboratory-tests/clinic-laboratory-tests.component.ts","./src/app/clinics/clinic-laboratory-tests/clinic-laboratory-tests.component.html","./src/app/clinics/clinic-laboratory-tests/manage-laboratory-test/clinic-manage-laboratory-test.component.ts","./src/app/clinics/clinic-laboratory-tests/manage-laboratory-test/clinic-manage-laboratory-test.component.html","./src/app/clinics/clinic-laboratory-tests/manage-laboratory-tests-group/clinic-manage-laboratory-tests-group.component.ts","./src/app/clinics/clinic-laboratory-tests/manage-laboratory-tests-group/clinic-manage-laboratory-tests-group.component.html","./src/app/clinics/clinic-news/add-news/add-news.component.ts","./src/app/clinics/clinic-news/add-news/add-news.component.html","./src/app/clinics/clinic-news/view-news-list/view-news-list.component.ts","./src/app/clinics/clinic-news/view-news-list/view-news-list.component.html","./src/app/clinics/clinic-organizationMaster/clinic-organizationMaster.component.ts","./src/app/clinics/clinic-organizationMaster/clinic-organizationMaster.component.html","./src/app/clinics/clinic-permissions/clinic-permissions.component.ts","./src/app/clinics/clinic-permissions/clinic-permissions.component.html","./src/app/clinics/clinic-products/clinic-products.component.ts","./src/app/clinics/clinic-products/clinic-products.component.html","./src/app/clinics/clinic-purchasing/create-purchase-order/create-purchase-order.component.ts","./src/app/clinics/clinic-purchasing/create-purchase-order/create-purchase-order.component.html","./src/app/clinics/clinic-purchasing/purchase-order-list/purchase-order-list.component.ts","./src/app/clinics/clinic-purchasing/purchase-order-list/purchase-order-list.component.html","./src/app/clinics/clinic-purchasing/purchase-order-view-details/purchase-order-view-details.component.ts","./src/app/clinics/clinic-purchasing/purchase-order-view-details/purchase-order-view-details.component.html","./src/app/clinics/clinic-purchasing/receive-purchase-order/receive-purchase-order.component.ts","./src/app/clinics/clinic-purchasing/receive-purchase-order/receive-purchase-order.component.html","./src/app/clinics/clinic-radiology-tests/clinic-radiology-tests.component.ts","./src/app/clinics/clinic-radiology-tests/clinic-radiology-tests.component.html","./src/app/clinics/clinic-radiology-tests/manage-radiology-test/clinic-manage-radiology-test.component.ts","./src/app/clinics/clinic-radiology-tests/manage-radiology-test/clinic-manage-radiology-test.component.html","./src/app/clinics/clinic-radiology-tests/manage-radiology-tests-group/clinic-manage-radiology-tests-group.component.ts","./src/app/clinics/clinic-radiology-tests/manage-radiology-tests-group/clinic-manage-radiology-tests-group.component.html","./src/app/clinics/clinic-reports/clinic-reports.component.ts","./src/app/clinics/clinic-reports/clinic-reports.component.html","./src/app/clinics/clinic-service-details/clinic-service-details.component.ts","./src/app/clinics/clinic-service-details/clinic-service-details.component.html","./src/app/clinics/clinic-serviceGroup-details/clinic-serviceGroup-details.component.ts","./src/app/clinics/clinic-serviceGroup-details/clinic-serviceGroup-details.component.html","./src/app/clinics/clinic-servicePackage-details/clinic-servicePackage-details.component.ts","./src/app/clinics/clinic-servicePackage-details/clinic-servicePackage-details.component.html","./src/app/clinics/clinic-servicePackages/clinic-servicePackages.component.ts","./src/app/clinics/clinic-servicePackages/clinic-servicePackages.component.html","./src/app/clinics/clinic-services/clinic-services.component.ts","./src/app/clinics/clinic-services/clinic-services.component.html","./src/app/clinics/clinic-settings/clinic-settings.component.ts","./src/app/clinics/clinic-settings/clinic-settings.component.html","./src/app/clinics/clinic-staff/clinic-staff.component.ts","./src/app/clinics/clinic-staff/clinic-staff.component.html","./src/app/clinics/clinic-tab/clinic-tab.component.ts","./src/app/clinics/clinic-tab/clinic-tab.component.html","./src/app/clinics/clinic-templates/clinic-templates.component.ts","./src/app/clinics/clinic-templates/clinic-templates.component.html","./src/app/clinics/clinic.module.ts","./src/app/clinics/clinic.routing.ts","./src/app/clinics/shared/EMRObjectType.enum.ts","./src/app/shared/shared/time-slot.model.ts","./src/app/shared/shared/treeHelper.class.ts"],"sourcesContent":["export class AttachmentInfo {\r\n    originalName!:string;\r\n    keyName!:string;\r\n    fullPath!:string;\r\n    fileType!:string;\r\n    type!:string;\r\n    contentType!:string;\r\n}","import { AttachmentInfo } from './attachmentInfo.class';\r\n\r\nexport class ClinicNews {\r\n    id!: number;\r\n    name!:string;\r\n    description!:string;\r\n    isActive: boolean = true;\r\n    clinicId!: number;\r\n    creationDate!: Date;\r\n    modificationDateString!:string;\r\n    creationDateString!:string;\r\n    attachmentInfo: AttachmentInfo | undefined;\r\n    attachedImageDataId!: number;\r\n    imageData: any[] | undefined;\r\n}","import { Reply } from './reply.class';\r\n\r\nexport class Feedback {\r\n    clinicId!: number;\r\n    patientId!: number;\r\n    patientName!:string;\r\n    patientUniqueMRN!:string;\r\n    patientMobileNumber!:string;\r\n    dateString: Date | undefined;\r\n    date: Date | undefined;\r\n    status!:string;\r\n    message!:string;\r\n    lastReplyingDateString!:string;\r\n    lastReplyingUserName!:string;\r\n    replies: Reply[] | undefined;\r\n}","export class Reply {\r\n    feedbackId!: number;\r\n    dateString!:string;\r\n    date: Date | undefined;\r\n    repliedById!: number;\r\n    repliedByName!:string;\r\n    message !:string;\r\n    status!:string;\r\n}","import { Component, OnInit, Input, OnChanges, SimpleChanges, ViewChild, ElementRef } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\nimport { ClinicService } from '../shared/clinic.service';\r\nimport { EMRObjectType } from '../shared/EMRObjectType.enum';\r\n\r\nimport { TreeNode } from 'primeng/api';\r\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\r\nimport { TreeHelerClass } from '../../shared/shared/treeHelper.class';\r\n\r\n@Component({\r\n\r\n    selector: 'clinic-EMRMaster-diagnosis',\r\n    templateUrl: './clinic-EMRMaster-diagnosis.component.html'\r\n})\r\n\r\nexport class ClinicEMRMasterDiagnosisComponent implements OnInit, OnChanges {\r\n\r\n    filterString!:string;\r\n    leafType: string = 'Diagnose';\r\n    selectedLang = 'ar';\r\n\r\n    active: boolean = true;\r\n    selectedItem!: TreeNode;\r\n    @Input() division: any = {};\r\n    @Input() isClinicAdmin: boolean = false;\r\n    @Input() enableAddRootBtn: boolean = false;\r\n    @Input() enableEditBtn: boolean = false;\r\n    @Input() enableActivateBtn: boolean = false;\r\n    items: any[] = [];\r\n    model: any = {};\r\n    @ViewChild('AddEditDiagnoseGroup') AddEditDiagnoseGroup!: ElementRef;\r\n    selectedNode: any;\r\n    showProgress: boolean = false;\r\n    diagnosisTree: any[] = [];\r\n    selectedDiagnosis: TreeNode[] = [];\r\n    clinicId!: number;\r\n    objectType: EMRObjectType = new EMRObjectType();\r\n    lstToTranslated: string[] = [];\r\n    treeHelper: TreeHelerClass = new TreeHelerClass();\r\n\r\n    allDiagnosis: any[] = [];\r\n    selectedDiagnosisIDs: any[] = [];\r\n    groupType = 'DiagnosisGroup';\r\n\r\n    public constructor(private clinicService: ClinicService,\r\n        private storage: LocalStorageService,\r\n        private toastr: ToastrService,\r\n        private localStorage: LocalStorageService\r\n        , public translate: TranslateService) { }\r\n\r\n    ngOnInit(): void {\r\n        // load diagnoses tree \r\n        this.selectedLang = this.localStorage.retrieve(\"selectedLanguage\");\r\n        let vm = this;\r\n        vm.showProgress = true;\r\n        vm.lstToTranslated = ['label', 'labelTranslation'];\r\n        vm.clinicId = this.storage.retrieve(\"ClinicID\");\r\n\r\n        this.clinicService.getDiagnosisGroupsWithoutServicesForTreeView(vm.clinicId.toString())\r\n            .subscribe(\r\n                function (diagnosisGroups: any) {\r\n                    // vm.diagnosisTree = vm.treeHelper.getActiveNodesOnly(diagnosisGroups);\r\n                    vm.diagnosisTree = diagnosisGroups;\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                    //vm.showProgress = false;\r\n                },\r\n                function () {\r\n                    //vm.showProgress = false;\r\n                });\r\n\r\n        this.clinicService.getAllDiagnosis(vm.clinicId.toString())\r\n            .subscribe(\r\n                function (diagnosis: any) {\r\n                    vm.allDiagnosis = diagnosis;\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                    vm.showProgress = false;\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n\r\n        this.items = [];\r\n        if (this.division) {\r\n            this.items = [];\r\n            this.items.push({\r\n                'label': this.division.label,\r\n                'labelTranslation': this.division.labelTranslation,\r\n                'data': this.division.data,\r\n                'type': this.division.type,\r\n                'children': this.division.diagnosisGroups\r\n            });\r\n        }\r\n    }\r\n\r\n    displayPopup(node: TreeNode) {\r\n\r\n        this.AddEditDiagnoseGroup.nativeElement.click();\r\n\r\n        this.model = { id: 0 };\r\n        this.selectedNode = node;\r\n        this.selectedDiagnosis = [];\r\n        this.selectedDiagnosisIDs = [];\r\n    }\r\n\r\n    changeActivation(node: any, event: any) {\r\n        let vm = this;\r\n        vm.showProgress = true;\r\n        this.clinicService.toggleEMRMasterItemActivation(node.data, event.target.checked, this.objectType.Diagnosis)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    // change the activation of the node\r\n                    node.isActive = event.target.checked;\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                    vm.showProgress = false;\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n    }\r\n\r\n\r\n    saveDiagnoseGroup() {\r\n        let vm = this;\r\n        let addNew = true;\r\n        if (vm.model.id > 0)\r\n            addNew = false;\r\n        vm.showProgress = true;\r\n\r\n        if (addNew)\r\n            vm.prepareModel();\r\n\r\n        this.model.relatedObjectsIDs = this.selectedDiagnosisIDs;\r\n\r\n        //this.extractSelectedDiagnosis();\r\n\r\n        this.clinicService.saveorUpdateEMRMasterItem(vm.model)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    if (addNew) // attach new object to the selected node \r\n                        vm.selectedNode.children.push(response);\r\n                    else // update node's name in case of updating \r\n                    {\r\n                        vm.selectedNode.label = response.label;\r\n                        vm.selectedNode.nameTranslation = response.nameTranslation;\r\n                        vm.selectedNode.labelTranslation = response.labelTranslation;\r\n                        vm.selectedNode.children = [];\r\n                        vm.selectedNode.children = response.children;\r\n                    }\r\n\r\n                    vm.clear();\r\n                    let msg = vm.translate.instant(\"SavedSuccessfully\");\r\n                    vm.toastr.success(msg, '');\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                    vm.showProgress = false;\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n    }\r\n\r\n    prepareModel() {\r\n        this.model.id = 0;\r\n        this.model.objectId = 0;\r\n        this.model.divisionId = this.selectedNode.data;\r\n        this.model.clinicId = this.clinicId;\r\n        this.model.objectType = this.objectType.Diagnosis;\r\n    }\r\n\r\n    extractSelectedDiagnosis() {\r\n        let relatedObjectsIDs = [];\r\n\r\n        for (let item of this.selectedDiagnosis) {\r\n            if (item.type == 'Diagnose')\r\n                relatedObjectsIDs.push(item.data);\r\n        }\r\n\r\n        this.model.relatedObjectsIDs = relatedObjectsIDs;\r\n    }\r\n\r\n    editDiagnoseGroup(node: any) {\r\n\r\n        this.selectedNode = node;\r\n        this.selectedDiagnosis = [];\r\n        this.model = {};\r\n        this.model.id = node.data;\r\n        this.model.name = node.label;\r\n        this.model.nameTranslation = node.nameTranslation;\r\n        this.model.objectId = node.data;\r\n        this.model.divisionId = node.parent.date;\r\n        this.model.objectType = this.objectType.Diagnosis;\r\n        this.selectedDiagnosisIDs = [];\r\n\r\n        for (let diagnose of node.children) {\r\n            this.selectedDiagnosisIDs.push(diagnose.id);\r\n        }\r\n\r\n        // get diagnosis under selected diagnosis group\r\n        for (let diagnose of node.children) {\r\n            for (let treeNode of this.diagnosisTree) {\r\n                this.highLightSelectedDiagnosis(treeNode, diagnose.data, diagnose.type);\r\n            }\r\n        }\r\n\r\n        this.extractSelectedDiagnosis();\r\n\r\n        // display popup\r\n        this.AddEditDiagnoseGroup.nativeElement.click();\r\n    }\r\n\r\n    private highLightSelectedDiagnosis(node: TreeNode, id: number, nodeType: string) {\r\n        if (node.data == id && node.type == nodeType) {\r\n            this.selectedDiagnosis.push(node);\r\n            this.expandParent(node);\r\n        }\r\n        if (node.children) {\r\n            node.children.forEach(childNode => {\r\n                this.highLightSelectedDiagnosis(childNode, id, nodeType);\r\n            });\r\n        }\r\n    }\r\n\r\n    private expandParent(node: TreeNode) {\r\n        if (node.parent) {\r\n            node.parent.expanded = true;\r\n            this.expandParent(node.parent);\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.model = { id: 0 };\r\n        this.active = false;\r\n        this.selectedDiagnosis = [];\r\n        setTimeout(() => this.active = true, 0);\r\n        this.filterString = '';\r\n    }\r\n}","<div *ngIf=\"showProgress\">\r\n    <loading></loading>\r\n</div>\r\n\r\n<div class=\"row nopadding\" *ngIf=\"division\">\r\n    <div class=\"padding5\">\r\n\r\n        <div class=\"hidden\">\r\n            <button #AddEditDiagnoseGroup type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#DiagnosisPopup\"></button>\r\n        </div>\r\n\r\n        <p-tree [value]=\"items\" selectionMode=\"single\" [(selection)]=\"selectedItem\">\r\n            <ng-template let-node pTemplate=\"ClinicDivision\">\r\n                {{selectedLang === 'ar' ?  node.label : node.labelTranslation}}\r\n                &nbsp; &nbsp;\r\n                <a [class.disabled]=\"!enableAddRootBtn && !isClinicAdmin ? true : null\">\r\n                    <img src=\"assets/images/addImage.png\" (click)=\"displayPopup(node)\" title=\"Add Division\" />\r\n                </a>\r\n            </ng-template>\r\n            <ng-template let-node pTemplate=\"ClinicDepartmentDiagnosisGroup\">\r\n                <span class=\"nav-icon\"><i class=\"fa fa-cubes\"></i></span>\r\n                &nbsp; \r\n                {{selectedLang === 'ar' ?  node.label : node.labelTranslation}}\r\n                &nbsp; &nbsp;\r\n                <a [class.disabled]=\"!enableEditBtn && !isClinicAdmin ? true : null\">\r\n                    <i class=\"fa fa-pencil fa-2x\" (click)=\"editDiagnoseGroup(node)\"  title=\"Edit Diagnose Group\" style=\"color: #32bea6;\"></i>\r\n\r\n                </a>\r\n                <label>\r\n                    <input id=\"ChkIsActiveDiagnoseGroup\" name=\"ChkIsActiveDiagnoseGroup\" class=\"ace ace-switch ace-switch-6\" type=\"checkbox\"\r\n                           [checked]=\"node.isActive\" (click)=\"changeActivation(node , $event)\" disabled=\"{{ enableActivateBtn || isClinicAdmin? '' :'disabled'}}\" />\r\n                    <span class=\"lbl\"></span>\r\n                </label>\r\n            </ng-template>\r\n            <ng-template let-node pTemplate=\"Diagnose\">\r\n                <span class=\"nav-icon\"><i class=\"fa fa-cube\"></i></span>\r\n                &nbsp;\r\n                {{selectedLang === 'ar' ?  node.label : node.labelTranslation}}\r\n            </ng-template>\r\n        </p-tree>\r\n    </div>\r\n</div>\r\n\r\n<!-- Diagnose Modal -->\r\n<div id=\"DiagnosisPopup\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog width75percent\">\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">{{ 'DiagnosisGroup' | translate}}</h4>\r\n            </div>\r\n            <form *ngIf=\"active\" class=\"form-horizontal\" name=\"departmentDiagnosisGroupForm\" #departmentDiagnosisGroupForm=\"ngForm\">\r\n                <div class=\"modal-body\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"txtName\" class=\"control-label col-md-3\"> {{ 'ArabicName' | translate}}</label>\r\n                        <div class=\"col-md-9\">\r\n                            <input id=\"txtName\" name=\"txtName\" class=\"form-control\" [(ngModel)]='model.name' #txtName=\"ngModel\" required />\r\n                            <div [hidden]=\"txtName.valid || txtName.pristine\" class=\"alert alert-danger\">\r\n                                {{ 'RequiredField' | translate}}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"txtNameTranslation\" class=\"control-label col-md-3\"> {{ 'EnglishName' | translate}}</label>\r\n                        <div class=\"col-md-9\">\r\n                            <input id=\"txtNameTranslation\" name=\"txtNameTranslation\" class=\"form-control\" [(ngModel)]='model.nameTranslation' #txtNameTranslation=\"ngModel\" required />\r\n                            <div [hidden]=\"txtNameTranslation.valid || txtNameTranslation.pristine\" class=\"alert alert-danger\">\r\n                                {{ 'RequiredField' | translate}}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"txtNameTranslation\" class=\"control-label col-md-3\"> {{ 'Diagnosis' | translate}}</label>\r\n                        <div class=\"col-md-9\">\r\n                            <tree-checkboxList [treeList]=\"diagnosisTree\"\r\n                                               [items]=\"allDiagnosis\"\r\n                                               [selectedItemsIDs]=\"selectedDiagnosisIDs\"\r\n                                               [groupType]=\"groupType\"></tree-checkboxList>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                    <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" [disabled]=\"!departmentDiagnosisGroupForm.form.valid\" (click)=\"saveDiagnoseGroup()\">{{ 'Save' | translate}}</button>\r\n                    <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" (click)=\"clear()\">{{ 'Clear' | translate}}</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n","import { Component, OnInit, Input, OnChanges, SimpleChanges, ViewChild, ElementRef } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\nimport { ClinicService } from '../shared/clinic.service';\r\nimport { EMRObjectType } from '../shared/EMRObjectType.enum';\r\nimport { TreeNode } from 'primeng/api';\r\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\r\nimport { TreeHelerClass } from '../../shared/shared/treeHelper.class';\r\n\r\n@Component({\r\n\r\n    selector: 'clinic-EMRMaster-drugs',\r\n    templateUrl: './clinic-EMRMaster-drugs.component.html'\r\n})\r\n\r\nexport class ClinicEMRMasterDrugsComponent implements OnInit, OnChanges {\r\n\r\n    filterString!:string;\r\n    leafType: string = 'Drug';\r\n\r\n    active: boolean = true;\r\n    selectedItem!: TreeNode;\r\n    @Input() division: any = {};\r\n    @Input() isClinicAdmin: boolean = false;\r\n    @Input() enableAddRootBtn: boolean = false;\r\n    @Input() enableEditBtn: boolean = false;\r\n    @Input() enableActivateBtn: boolean = false;\r\n    items: any[] = [];\r\n    model: any = {};\r\n    @ViewChild('AddEditDrugGroup') AddEditDrugGroup!: ElementRef;\r\n    selectedNode: any;\r\n    showProgress: boolean = false;\r\n    drugsTree!: any[];\r\n    selectedDrugs: TreeNode[] = [];\r\n    clinicId!: number;\r\n    objectType: EMRObjectType = new EMRObjectType();\r\n    selectedLang = 'ar';\r\n    lstToTranslated: string[] = [];\r\n    treeHelper: TreeHelerClass = new TreeHelerClass();\r\n    groupType = 'DrugsGroup';\r\n    selectedDrugsIDs: any[] = [];\r\n    allDrugs: any[] = [];\r\n\r\n    public constructor(private clinicService: ClinicService,\r\n        private storage: LocalStorageService,\r\n        private toastr: ToastrService\r\n        , public translate: TranslateService) { }\r\n\r\n    ngOnInit(): void {\r\n        // load drugs tree \r\n        this.selectedLang = this.storage.retrieve(\"selectedLanguage\");\r\n        let vm = this;\r\n        vm.showProgress = true;\r\n        vm.lstToTranslated = ['label', 'labelTranslation'];\r\n        vm.clinicId = this.storage.retrieve(\"ClinicID\");\r\n\r\n        this.clinicService.getDrugsGroupsWithoutDrugsForTree(vm.clinicId)\r\n            .subscribe(\r\n                function (drugsGroups: any) {\r\n                    vm.drugsTree = drugsGroups;\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                    vm.showProgress = false;\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n\r\n        this.clinicService.getAllDrugs(vm.clinicId)\r\n            .subscribe(\r\n                function (drugs: any) {\r\n                    vm.allDrugs = drugs;\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                },\r\n                function () {\r\n                });\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        this.items = [];\r\n        if (this.division) {\r\n            this.items = [];\r\n            this.items.push({\r\n                'label': this.division.label,\r\n                'labelTranslation': this.division.labelTranslation,\r\n                'data': this.division.data,\r\n                'type': this.division.type,\r\n                'children': this.division.drugsGroups\r\n            });\r\n        }\r\n    }\r\n\r\n    displayPopup(node: TreeNode) {\r\n\r\n        this.AddEditDrugGroup.nativeElement.click();\r\n\r\n        this.model = { id: 0 };\r\n        this.selectedNode = node;\r\n        this.selectedDrugs = [];\r\n        this.selectedDrugsIDs = [];\r\n    }\r\n\r\n    changeActivation(node: any, event: any) {\r\n        let vm = this;\r\n        vm.showProgress = true;\r\n        this.clinicService.toggleEMRMasterItemActivation(node.data, event.target.checked, this.objectType.Drugs)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    // change the activation of the node\r\n                    node.isActive = event.target.checked;\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                    vm.showProgress = false;\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n    }\r\n\r\n\r\n    saveDrugGroup() {\r\n        let vm = this;\r\n        let addNew = true;\r\n        if (vm.model.id > 0)\r\n            addNew = false;\r\n        vm.showProgress = true;\r\n\r\n        if (addNew)\r\n            vm.prepareModel();\r\n\r\n        //this.extractSelectedDrugs();\r\n        this.model.relatedObjectsIDs = this.selectedDrugsIDs;\r\n\r\n        this.clinicService.saveorUpdateEMRMasterItem(vm.model)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    if (addNew) // attach new object to the selected node \r\n                        vm.selectedNode.children.push(response);\r\n                    else // update node's name in case of updating \r\n                    {\r\n                        vm.selectedNode.label = response.label;\r\n                        vm.selectedNode.labelTranslation = response.nameTranslation;\r\n                        vm.selectedNode.children = [];\r\n                        vm.selectedNode.children = response.children;\r\n                    }\r\n\r\n                    vm.clear();\r\n                    let msg = vm.translate.instant(\"SavedSuccessfully\");\r\n                    vm.toastr.success(msg, '');\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                    vm.showProgress = false;\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n    }\r\n\r\n    prepareModel() {\r\n        this.model.id = 0;\r\n        this.model.objectId = 0;\r\n        this.model.divisionId = this.selectedNode.data;\r\n        this.model.clinicId = this.clinicId;\r\n        this.model.objectType = this.objectType.Drugs;\r\n    }\r\n\r\n    extractSelectedDrugs() {\r\n        let relatedObjectsIDs = [];\r\n\r\n        for (let item of this.selectedDrugs) {\r\n            if (item.type == 'Drug')\r\n                relatedObjectsIDs.push(item.data);\r\n        }\r\n\r\n        this.model.relatedObjectsIDs = relatedObjectsIDs;\r\n    }\r\n\r\n    editDrugGroup(node: any) {\r\n\r\n        this.selectedNode = node;\r\n        this.selectedDrugs = [];\r\n        this.model = {};\r\n        this.model.id = node.data;\r\n        this.model.name = node.label;\r\n        this.model.nameTranslation = node.labelTranslation;\r\n        this.model.objectId = node.data;\r\n        this.model.divisionId = node.parent.date;\r\n        this.model.objectType = this.objectType.Drugs;\r\n        this.selectedDrugsIDs = [];\r\n\r\n        for (let drug of node.children) {\r\n            this.selectedDrugsIDs.push(drug.id);\r\n        }\r\n\r\n        // get Drugs under selected Drugs group\r\n        //for (let drug of node.children) {\r\n        //    for (let treeNode of this.drugsTree) {\r\n        //        this.highLightSelectedDrugs(treeNode, drug.data, drug.type);\r\n        //    }\r\n        //}\r\n\r\n        //this.extractSelectedDrugs();\r\n\r\n        // display popup\r\n        this.AddEditDrugGroup.nativeElement.click();\r\n    }\r\n\r\n    private highLightSelectedDrugs(node: TreeNode, id: number, nodeType: string) {\r\n        if (node.data == id && node.type == nodeType) {\r\n            this.selectedDrugs.push(node);\r\n            this.expandParent(node);\r\n        }\r\n        if (node.children) {\r\n            node.children.forEach(childNode => {\r\n                this.highLightSelectedDrugs(childNode, id, nodeType);\r\n            });\r\n        }\r\n    }\r\n\r\n    private expandParent(node: TreeNode) {\r\n        if (node.parent) {\r\n            node.parent.expanded = true;\r\n            this.expandParent(node.parent);\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.model = { id: 0 };\r\n        this.active = false;\r\n        this.selectedDrugs = [];\r\n        setTimeout(() => this.active = true, 0);\r\n        this.filterString = '';\r\n    }\r\n}","<div *ngIf=\"showProgress\">\r\n    <loading></loading>\r\n</div>\r\n\r\n<div class=\"row nopadding\" *ngIf=\"division\">\r\n    <div class=\"padding5\">\r\n\r\n        <div class=\"hidden\">\r\n            <button #AddEditDrugGroup type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#DrugsPopup\"></button>\r\n        </div>\r\n\r\n        <p-tree [value]=\"items\" selectionMode=\"single\" [(selection)]=\"selectedItem\">\r\n            <ng-template let-node pTemplate=\"ClinicDivision\">\r\n                {{selectedLang === 'ar' ?  node.label : node.labelTranslation}}\r\n                &nbsp; &nbsp;\r\n                <a [class.disabled]=\"!enableAddRootBtn && !isClinicAdmin ? true : null\">\r\n                    <img src=\"assets/images/addImage.png\" (click)=\"displayPopup(node)\" title=\"Add Division\" />\r\n                </a>\r\n            </ng-template>\r\n            <ng-template let-node pTemplate=\"ClinicDepartmentDrugsGroup\">\r\n                <span class=\"nav-icon\"><i class=\"fa fa-cubes\"></i></span>\r\n                &nbsp; \r\n                {{selectedLang === 'ar' ?  node.label : node.labelTranslation}}\r\n                &nbsp; &nbsp;\r\n                <a [class.disabled]=\"!enableEditBtn && !isClinicAdmin ? true : null\">\r\n                    <i class=\"fa fa-pencil fa-2x\" (click)=\"editDrugGroup(node)\" title=\"Edit Drug Group\" style=\"color: #32bea6;\"></i>\r\n\r\n                </a>\r\n                <label>\r\n                    <input id=\"ChkIsActiveDrugGroup\" name=\"ChkIsActiveDrugGroup\" class=\"ace ace-switch ace-switch-6\" type=\"checkbox\"\r\n                           [checked]=\"node.isActive\" (click)=\"changeActivation(node , $event)\" disabled=\"{{ enableActivateBtn || isClinicAdmin? '' :'disabled'}}\" />\r\n                    <span class=\"lbl\"></span>\r\n                </label>\r\n            </ng-template>\r\n            <ng-template let-node pTemplate=\"Drug\">\r\n                <span class=\"nav-icon\"><i class=\"fa fa-cube\"></i></span>\r\n                &nbsp;\r\n                {{selectedLang === 'ar' ?  node.label : node.labelTranslation}}\r\n            </ng-template>\r\n        </p-tree>\r\n    </div>\r\n</div>\r\n\r\n<!-- Drug Modal -->\r\n<div id=\"DrugsPopup\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog width95percent\">\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">{{ 'DrugsGroup' | translate}}</h4>\r\n            </div>\r\n            <form *ngIf=\"active\" class=\"form-horizontal\" name=\"departmentDrugsGroupForm\" #departmentDrugsGroupForm=\"ngForm\">\r\n                <div class=\"modal-body\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"txtName\" class=\"control-label col-md-2\">{{ 'ArabicName' | translate}}</label>\r\n                        <div class=\"col-md-10\">\r\n                            <input id=\"txtName\" name=\"txtName\" class=\"form-control\" [(ngModel)]='model.name' #txtName=\"ngModel\" required />\r\n                            <div [hidden]=\"txtName.valid || txtName.pristine\" class=\"alert alert-danger\">\r\n                                {{ 'RequiredField' | translate}}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"txtNameTranslation\" class=\"control-label col-md-2\">{{ 'EnglishName' | translate}}</label>\r\n                        <div class=\"col-md-10\">\r\n                            <input id=\"txtNameTranslation\" name=\"txtNameTranslation\" class=\"form-control\" [(ngModel)]='model.nameTranslation' #txtNameTranslation=\"ngModel\" required />\r\n                            <div [hidden]=\"txtNameTranslation.valid || txtNameTranslation.pristine\" class=\"alert alert-danger\">\r\n                                {{ 'RequiredField' | translate}}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"txtNameTranslation\" class=\"control-label col-md-2\"> {{ 'Drugs' | translate}}</label>\r\n                        <div class=\"col-md-10\">\r\n                            <tree-checkboxList [treeList]=\"drugsTree\"\r\n                                               [items]=\"allDrugs\"\r\n                                               [selectedItemsIDs]=\"selectedDrugsIDs\"\r\n                                               [groupType]=\"groupType\"></tree-checkboxList>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                    <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" [disabled]=\"!departmentDrugsGroupForm.form.valid\" (click)=\"saveDrugGroup()\">{{ 'Save' | translate}}</button>\r\n                    <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" (click)=\"clear()\">{{ 'Clear' | translate}}</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n","import { Component, OnInit, Input, OnChanges, SimpleChanges, ViewChild, ElementRef } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\nimport { ClinicService } from '../shared/clinic.service';\r\nimport { EMRObjectType } from '../shared/EMRObjectType.enum';\r\n\r\nimport { TreeNode } from 'primeng/api';\r\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\r\nimport { TreeHelerClass } from '../../shared/shared/treeHelper.class';\r\n\r\n@Component({\r\n\r\n    selector: 'clinic-EMRMaster-laboratoryTests',\r\n    templateUrl: './clinic-EMRMaster-laboratoryTests.component.html'\r\n})\r\n\r\n\r\nexport class ClinicEMRMasterLaboratoryTestsComponent implements OnInit, OnChanges {\r\n\r\n    filterString!:string;\r\n    leafType: string = 'LaboratoryTest';\r\n    selectedLang = 'ar';\r\n\r\n    active: boolean = true;\r\n    selectedItem!: TreeNode;\r\n    @Input() division: any = {};\r\n    @Input() isClinicAdmin: boolean = false;\r\n    @Input() enableAddRootBtn: boolean = false;\r\n    @Input() enableEditBtn: boolean = false;\r\n    @Input() enableActivateBtn: boolean = false;\r\n    items: any[] = [];\r\n    model: any = {};\r\n    @ViewChild('AddEditLaboratoryTestGroup') AddEditLaboratoryTestGroup!: ElementRef;\r\n    selectedNode: any;\r\n    showProgress: boolean = false;\r\n    laboratoryTestsTree!: any[];\r\n    selectedLaboratoryTests: TreeNode[] = [];\r\n    clinicId!: number;\r\n    objectType: EMRObjectType = new EMRObjectType();\r\n    lstToTranslated: string[] = [];\r\n    treeHelper: TreeHelerClass = new TreeHelerClass();\r\n    groupType = 'LaboratoryTestsGroup';\r\n    selectedLaboratoryTestsIDs: any[] = [];\r\n    allLaboratoryTests: any[] = [];\r\n\r\n    public constructor(private clinicService: ClinicService,\r\n        private storage: LocalStorageService,\r\n        private toastr: ToastrService,\r\n        public translate: TranslateService) { }\r\n\r\n\r\n    ngOnInit(): void {\r\n        // load laboratoryTests tree \r\n        this.selectedLang = this.storage.retrieve(\"selectedLanguage\");\r\n        let vm = this;\r\n        vm.showProgress = true;\r\n        vm.clinicId = this.storage.retrieve(\"ClinicID\");\r\n        vm.lstToTranslated = ['label', 'labelTranslation'];\r\n        this.clinicService.getLaboratoryTestsGroupsWithoutTestsForTree(vm.clinicId)\r\n            .subscribe(\r\n                function (laboratoryTestsGroups: any) {\r\n                    //vm.laboratoryTestsTree = laboratoryTestsGroups;\r\n                    vm.laboratoryTestsTree = laboratoryTestsGroups; //vm.treeHelper.getActiveNodesOnly(laboratoryTestsGroups);\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                    vm.showProgress = false;\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n\r\n        this.clinicService.getAllLaboratoryTests(vm.clinicId)\r\n            .subscribe(\r\n                function (laboratoryTests: any) {\r\n                    vm.allLaboratoryTests = laboratoryTests;\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                    vm.showProgress = false;\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        this.items = [];\r\n        if (this.division) {\r\n            this.items = [];\r\n            this.items.push({\r\n                'label': this.division.label,\r\n                'labelTranslation': this.division.labelTranslation,\r\n                'data': this.division.data,\r\n                'type': this.division.type,\r\n                'children': this.division.laboratoryTestsGroups\r\n            });\r\n        }\r\n    }\r\n\r\n    displayPopup(node: TreeNode) {\r\n\r\n        this.AddEditLaboratoryTestGroup.nativeElement.click();\r\n\r\n        this.model = { id: 0 };\r\n        this.selectedNode = node;\r\n        this.selectedLaboratoryTests = [];\r\n        this.selectedLaboratoryTestsIDs = [];\r\n    }\r\n\r\n    changeActivation(node: any, event: any) {\r\n        let vm = this;\r\n        vm.showProgress = true;\r\n        this.clinicService.toggleEMRMasterItemActivation(node.data, event.target.checked, this.objectType.LaboratoryTests)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    // change the activation of the node\r\n                    node.isActive = event.target.checked;\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                    vm.showProgress = false;\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n    }\r\n\r\n\r\n    saveLaboratoryTestGroup() {\r\n        let vm = this;\r\n        let addNew = true;\r\n        if (vm.model.id > 0)\r\n            addNew = false;\r\n        vm.showProgress = true;\r\n\r\n        if (addNew)\r\n            vm.prepareModel();\r\n\r\n        this.model.relatedObjectsIDs = this.selectedLaboratoryTestsIDs;\r\n\r\n        //this.extractSelectedLaboratoryTests();\r\n\r\n        this.clinicService.saveorUpdateEMRMasterItem(vm.model)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    if (addNew) // attach new object to the selected node \r\n                        vm.selectedNode.children.push(response);\r\n                    else // update node's name in case of updating \r\n                    {\r\n                        vm.selectedNode.label = response.label;\r\n                        vm.selectedNode.labelTranslation = response.nameTranslation;\r\n                        vm.selectedNode.children = [];\r\n                        vm.selectedNode.children = response.children;\r\n                    }\r\n\r\n                    vm.clear();\r\n                    let msg = vm.translate.instant(\"SavedSuccessfully\");\r\n                    vm.toastr.success(msg, '');\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                    vm.showProgress = false;\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n    }\r\n\r\n    prepareModel() {\r\n        this.model.id = 0;\r\n        this.model.objectId = 0;\r\n        this.model.divisionId = this.selectedNode.data;\r\n        this.model.clinicId = this.clinicId;\r\n        this.model.objectType = this.objectType.LaboratoryTests;\r\n    }\r\n\r\n    extractSelectedLaboratoryTests() {\r\n        let relatedObjectsIDs = [];\r\n\r\n        for (let item of this.selectedLaboratoryTests) {\r\n            if (item.type == 'LaboratoryTest')\r\n                relatedObjectsIDs.push(item.data);\r\n        }\r\n\r\n        this.model.relatedObjectsIDs = relatedObjectsIDs;\r\n    }\r\n\r\n    editLaboratoryTestGroup(node: any) {\r\n\r\n        this.selectedNode = node;\r\n        this.selectedLaboratoryTests = [];\r\n        this.model = {};\r\n        this.model.id = node.data;\r\n        this.model.name = node.label;\r\n        this.model.nameTranslation = node.labelTranslation;\r\n        this.model.objectId = node.data;\r\n        this.model.divisionId = node.parent.date;\r\n        this.model.objectType = this.objectType.LaboratoryTests;\r\n        this.selectedLaboratoryTestsIDs = [];\r\n\r\n        for (let test of node.children) {\r\n            this.selectedLaboratoryTestsIDs.push(test.id);\r\n        }\r\n\r\n        // get LaboratoryTests under selected LaboratoryTests group\r\n        //for (let laboratoryTest of node.children) {\r\n        //    for (let treeNode of this.laboratoryTestsTree) {\r\n        //        this.highLightSelectedLaboratoryTests(treeNode, laboratoryTest.data, laboratoryTest.type);\r\n        //    }\r\n        //}\r\n\r\n        //this.extractSelectedLaboratoryTests();\r\n\r\n        // display popup\r\n        this.AddEditLaboratoryTestGroup.nativeElement.click();\r\n    }\r\n\r\n    private highLightSelectedLaboratoryTests(node: TreeNode, id: number, nodeType: string) {\r\n        if (node.data == id && node.type == nodeType) {\r\n            this.selectedLaboratoryTests.push(node);\r\n            this.expandParent(node);\r\n        }\r\n        if (node.children) {\r\n            node.children.forEach(childNode => {\r\n                this.highLightSelectedLaboratoryTests(childNode, id, nodeType);\r\n            });\r\n        }\r\n    }\r\n\r\n    private expandParent(node: TreeNode) {\r\n        if (node.parent) {\r\n            node.parent.expanded = true;\r\n            this.expandParent(node.parent);\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.model = { id: 0 };\r\n        this.active = false;\r\n        this.selectedLaboratoryTests = [];\r\n        setTimeout(() => this.active = true, 0);\r\n        this.filterString = '';\r\n    }\r\n}","<div *ngIf=\"showProgress\">\r\n    <loading></loading>\r\n</div>\r\n\r\n<div class=\"row nopadding\" *ngIf=\"division\">\r\n    <div class=\"padding5\">\r\n\r\n        <div class=\"hidden\">\r\n            <button #AddEditLaboratoryTestGroup type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#LaboratoryTestsPopup\"></button>\r\n        </div>\r\n\r\n        <p-tree [value]=\"items\" selectionMode=\"single\" [(selection)]=\"selectedItem\">\r\n            <ng-template let-node pTemplate=\"ClinicDivision\">\r\n               {{selectedLang === 'ar' ?  node.label : node.labelTranslation}}\r\n                &nbsp; &nbsp;\r\n                <a [class.disabled]=\"!enableAddRootBtn && !isClinicAdmin ? true : null\">\r\n                    <img src=\"assets/images/addImage.png\" (click)=\"displayPopup(node)\" title=\"Add Division\" />\r\n                </a>\r\n            </ng-template>\r\n            <ng-template let-node pTemplate=\"ClinicDepartmentLaboratoryTestsGroup\">\r\n                <span class=\"nav-icon\"><i class=\"fa fa-cubes\"></i></span>\r\n                &nbsp; \r\n                {{selectedLang === 'ar' ?  node.label : node.labelTranslation}}\r\n                &nbsp; &nbsp;\r\n                <a [class.disabled]=\"!enableEditBtn && !isClinicAdmin ? true : null\">\r\n                    <i class=\"fa fa-pencil fa-2x\" (click)=\"editLaboratoryTestGroup(node)\" title=\"Edit LaboratoryTest Group\" style=\"color: #32bea6;\"></i>\r\n\r\n\r\n                </a>\r\n                <label>\r\n                    <input id=\"ChkIsActiveLaboratoryTestGroup\" name=\"ChkIsActiveLaboratoryTestGroup\" class=\"ace ace-switch ace-switch-6\" type=\"checkbox\"\r\n                           [checked]=\"node.isActive\" (click)=\"changeActivation(node , $event)\" disabled=\"{{ enableActivateBtn || isClinicAdmin? '' :'disabled'}}\" />\r\n                    <span class=\"lbl\"></span>\r\n                </label>\r\n            </ng-template>\r\n            <ng-template let-node pTemplate=\"LaboratoryTest\">\r\n                <span class=\"nav-icon\"><i class=\"fa fa-cube\"></i></span>\r\n                &nbsp;\r\n                {{selectedLang === 'ar' ?  node.label : node.labelTranslation}}\r\n            </ng-template>\r\n        </p-tree>\r\n    </div>\r\n</div>\r\n\r\n<!-- LaboratoryTest Modal -->\r\n<div id=\"LaboratoryTestsPopup\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog width95percent\">\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">{{ 'LaboratoryTests' | translate}}</h4>\r\n            </div>\r\n            <form *ngIf=\"active\" class=\"form-horizontal\" name=\"departmentLaboratoryTestsGroupForm\" #departmentLaboratoryTestsGroupForm=\"ngForm\">\r\n                <div class=\"modal-body\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"txtName\" class=\"control-label col-md-2\"> {{ 'ArabicName' | translate}}</label>\r\n                        <div class=\"col-md-10\">\r\n                            <input id=\"txtName\" name=\"txtName\" class=\"form-control\" [(ngModel)]='model.name' #txtName=\"ngModel\" required />\r\n                            <div [hidden]=\"txtName.valid || txtName.pristine\" class=\"alert alert-danger\">\r\n                                {{ 'RequiredField' | translate}}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"txtNameTranslation\" class=\"control-label col-md-2\">{{ 'EnglishName' | translate}}</label>\r\n                        <div class=\"col-md-10\">\r\n                            <input id=\"txtNameTranslation\" name=\"txtNameTranslation\" class=\"form-control\" [(ngModel)]='model.nameTranslation' #txtNameTranslation=\"ngModel\" required />\r\n                            <div [hidden]=\"txtNameTranslation.valid || txtNameTranslation.pristine\" class=\"alert alert-danger\">\r\n                                {{ 'RequiredField' | translate}}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"txtNameTranslation\" class=\"control-label col-md-2\">{{ 'LaboratoryTests' | translate}}</label>\r\n                        <div class=\"col-md-10\">\r\n                            <tree-checkboxList [treeList]=\"laboratoryTestsTree\"\r\n                                               [items]=\"allLaboratoryTests\"\r\n                                               [selectedItemsIDs]=\"selectedLaboratoryTestsIDs\"\r\n                                               [groupType]=\"groupType\"></tree-checkboxList>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                    <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" [disabled]=\"!departmentLaboratoryTestsGroupForm.form.valid\" (click)=\"saveLaboratoryTestGroup()\">{{ 'Save' | translate}}</button>\r\n                    <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" (click)=\"clear()\">{{ 'Clear' | translate}}</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n","import { Component, OnInit, Input, OnChanges, SimpleChanges, ViewChild, ElementRef } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\nimport { ClinicService } from '../shared/clinic.service';\r\nimport { EMRObjectType } from '../shared/EMRObjectType.enum';\r\n\r\nimport { TreeNode } from 'primeng/api';\r\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\r\nimport { TreeHelerClass } from '../../shared/shared/treeHelper.class';\r\n\r\n@Component({\r\n\r\n    selector: 'clinic-EMRMaster-radiologyTests',\r\n    templateUrl: './clinic-EMRMaster-radiologyTests.component.html'\r\n})\r\n\r\nexport class ClinicEMRMasterRadiologyTestsComponent implements OnInit, OnChanges {\r\n\r\n    filterString!:string;\r\n    leafType: string = 'RadiologyTest';\r\n    selectedLang = 'ar';\r\n\r\n    active: boolean = true;\r\n    selectedItem!: TreeNode;\r\n    @Input() division: any = {};\r\n    @Input() isClinicAdmin: boolean = false;\r\n    @Input() enableAddRootBtn: boolean = false;\r\n    @Input() enableEditBtn: boolean = false;\r\n    @Input() enableActivateBtn: boolean = false;\r\n    items: any[] = [];\r\n    model: any = {};\r\n    @ViewChild('AddEditRadiologyTestGroup') AddEditRadiologyTestGroup!: ElementRef;\r\n    selectedNode: any;\r\n    showProgress: boolean = false;\r\n    radiologyTestsTree!: any[];\r\n    selectedRadiologyTests: TreeNode[] = [];\r\n    clinicId!: number;\r\n    objectType: EMRObjectType = new EMRObjectType();\r\n    lstToTranslated: string[] = [];\r\n    treeHelper: TreeHelerClass = new TreeHelerClass();\r\n    groupType = 'RadiologyTestsGroup';\r\n    selectedRadiologyTestsIDs: any[] = [];\r\n    allRadiologyTests: any[] = [];\r\n\r\n    public constructor(private clinicService: ClinicService,\r\n        private storage: LocalStorageService,\r\n        private toastr: ToastrService,\r\n        public translate: TranslateService) { }\r\n\r\n\r\n    ngOnInit(): void {\r\n        // load radiologyTests tree \r\n        this.selectedLang = this.storage.retrieve(\"selectedLanguage\");\r\n        let vm = this;\r\n        vm.showProgress = true;\r\n        vm.clinicId = this.storage.retrieve(\"ClinicID\");\r\n        vm.lstToTranslated = ['label', 'labelTranslation'];\r\n        this.clinicService.getRadiologyTestsGroupsOnlyForTreeView(vm.clinicId)\r\n            .subscribe(\r\n                function (radiologyTestsGroups: any) {\r\n                    vm.radiologyTestsTree = radiologyTestsGroups; //vm.treeHelper.getActiveNodesOnly(radiologyTestsGroups);\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                    vm.showProgress = false;\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n\r\n        this.clinicService.getAllRadiologyTests(vm.clinicId)\r\n            .subscribe(\r\n                function (Tests: any) {\r\n                    vm.allRadiologyTests = Tests;\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                    vm.showProgress = false;\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        this.items = [];\r\n        if (this.division) {\r\n            this.items = [];\r\n            this.items.push({\r\n                'label': this.division.label,\r\n                'labelTranslation': this.division.labelTranslation,\r\n                'data': this.division.data,\r\n                'type': this.division.type,\r\n                'children': this.division.radiologyTestsGroups\r\n            });\r\n        }\r\n    }\r\n\r\n    displayPopup(node: TreeNode) {\r\n\r\n        this.AddEditRadiologyTestGroup.nativeElement.click();\r\n\r\n        this.model = { id: 0 };\r\n        this.selectedNode = node;\r\n        this.selectedRadiologyTests = [];\r\n        this.selectedRadiologyTestsIDs = [];\r\n    }\r\n\r\n    changeActivation(node: any, event: any) {\r\n        let vm = this;\r\n        vm.showProgress = true;\r\n        this.clinicService.toggleEMRMasterItemActivation(node.data, event.target.checked, this.objectType.RadiologyTests)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    // change the activation of the node\r\n                    node.isActive = event.target.checked;\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                    vm.showProgress = false;\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n    }\r\n\r\n\r\n    saveRadiologyTestGroup() {\r\n        let vm = this;\r\n        let addNew = true;\r\n        if (vm.model.id > 0)\r\n            addNew = false;\r\n        vm.showProgress = true;\r\n\r\n        if (addNew)\r\n            vm.prepareModel();\r\n\r\n        this.model.relatedObjectsIDs = this.selectedRadiologyTestsIDs;\r\n        //this.extractSelectedRadiologyTests();\r\n\r\n        this.clinicService.saveorUpdateEMRMasterItem(vm.model)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    if (addNew) // attach new object to the selected node \r\n                        vm.selectedNode.children.push(response);\r\n                    else // update node's name in case of updating \r\n                    {\r\n                        vm.selectedNode.label = response.label;\r\n                        vm.selectedNode.labelTranslation = response.nameTranslation;\r\n                        vm.selectedNode.children = [];\r\n                        vm.selectedNode.children = response.children;\r\n                    }\r\n\r\n                    vm.clear();\r\n                    let msg = vm.translate.instant(\"SavedSuccessfully\");\r\n                    vm.toastr.success(msg, '');\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                    vm.showProgress = false;\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n    }\r\n\r\n    prepareModel() {\r\n        this.model.id = 0;\r\n        this.model.objectId = 0;\r\n        this.model.divisionId = this.selectedNode.data;\r\n        this.model.clinicId = this.clinicId;\r\n        this.model.objectType = this.objectType.RadiologyTests;\r\n    }\r\n\r\n    extractSelectedRadiologyTests() {\r\n        let relatedObjectsIDs = [];\r\n\r\n        for (let item of this.selectedRadiologyTests) {\r\n            if (item.type == 'RadiologyTest')\r\n                relatedObjectsIDs.push(item.data);\r\n        }\r\n\r\n        this.model.relatedObjectsIDs = relatedObjectsIDs;\r\n    }\r\n\r\n    editRadiologyTestGroup(node: any) {\r\n\r\n        this.selectedNode = node;\r\n        this.selectedRadiologyTests = [];\r\n        this.model = {};\r\n        this.model.id = node.data;\r\n        this.model.name = node.label;\r\n        this.model.nameTranslation = node.labelTranslation;\r\n        this.model.objectId = node.data;\r\n        this.model.divisionId = node.parent.date;\r\n        this.model.objectType = this.objectType.RadiologyTests;\r\n        this.selectedRadiologyTestsIDs = [];\r\n\r\n        for (let test of node.children) {\r\n            this.selectedRadiologyTestsIDs.push(test.id);\r\n        }\r\n\r\n        // get RadiologyTests under selected RadiologyTests group\r\n        //for (let radiologyTest of node.children) {\r\n        //    for (let treeNode of this.radiologyTestsTree) {\r\n        //        this.highLightSelectedRadiologyTests(treeNode, radiologyTest.data, radiologyTest.type);\r\n        //    }\r\n        //}\r\n\r\n        //this.extractSelectedRadiologyTests();\r\n\r\n        // display popup\r\n        this.AddEditRadiologyTestGroup.nativeElement.click();\r\n    }\r\n\r\n    private highLightSelectedRadiologyTests(node: TreeNode, id: number, nodeType: string) {\r\n        if (node.data == id && node.type == nodeType) {\r\n            this.selectedRadiologyTests.push(node);\r\n            this.expandParent(node);\r\n        }\r\n        if (node.children) {\r\n            node.children.forEach(childNode => {\r\n                this.highLightSelectedRadiologyTests(childNode, id, nodeType);\r\n            });\r\n        }\r\n    }\r\n\r\n    private expandParent(node: TreeNode) {\r\n        if (node.parent) {\r\n            node.parent.expanded = true;\r\n            this.expandParent(node.parent);\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.model = { id: 0 };\r\n        this.active = false;\r\n        this.selectedRadiologyTests = [];\r\n        setTimeout(() => this.active = true, 0);\r\n        this.filterString = '';\r\n    }\r\n}","<div *ngIf=\"showProgress\">\r\n    <loading></loading>\r\n</div>\r\n\r\n<div class=\"row nopadding\" *ngIf=\"division\">\r\n    <div class=\"padding5\">\r\n\r\n        <div class=\"hidden\">\r\n            <button #AddEditRadiologyTestGroup type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#RadiologyTestsPopup\"></button>\r\n        </div>\r\n\r\n        <p-tree [value]=\"items\" selectionMode=\"single\" [(selection)]=\"selectedItem\">\r\n            <ng-template let-node pTemplate=\"ClinicDivision\">\r\n                {{selectedLang === 'ar' ?  node.label : node.labelTranslation}}\r\n                &nbsp; &nbsp;\r\n                <a [class.disabled]=\"!enableAddRootBtn && !isClinicAdmin ? true : null\">\r\n                    <img src=\"assets/images/addImage.png\" (click)=\"displayPopup(node)\" title=\"Add Division\" />\r\n                </a>\r\n            </ng-template>\r\n            <ng-template let-node pTemplate=\"ClinicDepartmentRadiologyTestsGroup\">\r\n                <span class=\"nav-icon\"><i class=\"fa fa-cubes\"></i></span>\r\n                &nbsp; \r\n                {{selectedLang === 'ar' ?  node.label : node.labelTranslation}}\r\n                &nbsp; &nbsp;\r\n                <a [class.disabled]=\"!enableEditBtn && !isClinicAdmin ? true : null\">\r\n                    <i class=\"fa fa-pencil fa-2x\" (click)=\"editRadiologyTestGroup(node)\" title=\"Edit RadiologyTest Group\" style=\"color: #32bea6;\"></i>\r\n\r\n                </a>\r\n                <label>\r\n                    <input id=\"ChkIsActiveRadiologyTestGroup\" name=\"ChkIsActiveRadiologyTestGroup\" class=\"ace ace-switch ace-switch-6\" type=\"checkbox\"\r\n                           [checked]=\"node.isActive\" (click)=\"changeActivation(node , $event)\" disabled=\"{{ enableActivateBtn || isClinicAdmin? '' :'disabled'}}\" />\r\n                    <span class=\"lbl\"></span>\r\n                </label>\r\n            </ng-template>\r\n            <ng-template let-node pTemplate=\"RadiologyTest\">\r\n                <span class=\"nav-icon\"><i class=\"fa fa-cube\"></i></span>\r\n                &nbsp;\r\n                {{selectedLang === 'ar' ?  node.label : node.labelTranslation}}\r\n            </ng-template>\r\n        </p-tree>\r\n    </div>\r\n</div>\r\n\r\n<!-- RadiologyTest Modal -->\r\n<div id=\"RadiologyTestsPopup\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog width95percent\">\r\n        <!-- Modal content-->\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header\">\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                    <h4 class=\"modal-title\">{{ 'RadiologyTests' | translate}}</h4>\r\n                </div>\r\n                <form *ngIf=\"active\" class=\"form-horizontal\" name=\"departmentRadiologyTestsGroupForm\" #departmentRadiologyTestsGroupForm=\"ngForm\">\r\n                    <div class=\"modal-body\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"txtName\" class=\"control-label col-md-2\"> {{ 'ArabicName' | translate}}</label>\r\n                            <div class=\"col-md-10\">\r\n                                <input id=\"txtName\" name=\"txtName\" class=\"form-control\" [(ngModel)]='model.name' #txtName=\"ngModel\" required />\r\n                                <div [hidden]=\"txtName.valid || txtName.pristine\" class=\"alert alert-danger\">\r\n                                    {{ 'RequiredField' | translate}}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label for=\"txtNameTranslation\" class=\"control-label col-md-2\"> {{ 'EnglishName' | translate}}</label>\r\n                            <div class=\"col-md-10\">\r\n                                <input id=\"txtNameTranslation\" name=\"txtNameTranslation\" class=\"form-control\" [(ngModel)]='model.nameTranslation' #txtNameTranslation=\"ngModel\" required />\r\n                                <div [hidden]=\"txtNameTranslation.valid || txtNameTranslation.pristine\" class=\"alert alert-danger\">\r\n                                    {{ 'RequiredField' | translate}}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label for=\"txtNameTranslation\" class=\"control-label col-md-2\"> {{ 'RadiologyTests' | translate}}</label>\r\n                            <div class=\"col-md-10\">\r\n                                <tree-checkboxList [treeList]=\"radiologyTestsTree\"\r\n                                                   [items]=\"allRadiologyTests\"\r\n                                                   [selectedItemsIDs]=\"selectedRadiologyTestsIDs\"\r\n                                                   [groupType]=\"groupType\"></tree-checkboxList>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"modal-footer\">\r\n                        <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" [disabled]=\"!departmentRadiologyTestsGroupForm.form.valid\" (click)=\"saveRadiologyTestGroup()\">{{ 'Save' | translate}}</button>\r\n                        <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" (click)=\"clear()\">{{ 'Clear' | translate}}</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, Input, OnChanges, SimpleChanges, ViewChild, ElementRef } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\nimport { ClinicService } from '../shared/clinic.service';\r\nimport { EMRObjectType } from '../shared/EMRObjectType.enum';\r\nimport { TreeNode } from 'primeng/api';\r\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\r\nimport { TreeHelerClass } from '../../shared/shared/treeHelper.class';\r\n\r\n@Component({\r\n\r\n    selector: 'clinic-EMRMaster-servicePackages',\r\n    templateUrl: './clinic-EMRMaster-servicePackages.component.html'\r\n})\r\n\r\nexport class ClinicEMRMasterServicePackagesComponent implements OnInit, OnChanges {\r\n\r\n    filterString!:string;\r\n    leafType: string = 'Service';\r\n    selectedLang = 'ar';\r\n\r\n    active: boolean = true;\r\n    selectedItem!: TreeNode;\r\n    @Input() division: any = {};\r\n    @Input() isClinicAdmin: boolean = false;\r\n    @Input() enableAddRootBtn: boolean = false;\r\n    @Input() enableEditBtn: boolean = false;\r\n    @Input() enableActivateBtn: boolean = false;\r\n    items: any[] = [];\r\n    model: any = {};\r\n    @ViewChild('AddEditServicPackageGroup') AddEditServicPackageGroup!: ElementRef;\r\n    selectedNode: any;\r\n    showProgress: boolean = false;\r\n    servicesTree!: any[];\r\n    selectedServices: TreeNode[] = [];\r\n    clinicId!: string;\r\n    objectType: EMRObjectType = new EMRObjectType();\r\n    lstToTranslated: string[] = [];\r\n    treeHelper: TreeHelerClass = new TreeHelerClass();\r\n    servicePackagesList: any[] = [];\r\n    public constructor(private clinicService: ClinicService,\r\n        private storage: LocalStorageService,\r\n        private toastr: ToastrService,\r\n        public translate: TranslateService) { }\r\n\r\n    ngOnInit(): void {\r\n        // load services tree \r\n        this.selectedLang = this.storage.retrieve(\"selectedLanguage\");\r\n        let vm = this;\r\n        vm.showProgress = true;\r\n        vm.clinicId = this.storage.retrieve(\"ClinicID\");\r\n        vm.lstToTranslated = ['label', 'labelTranslation'];\r\n\r\n        vm.loadServicePackages();\r\n        //this.clinicService.getServiceGroupsForTreeView(vm.clinicId.toString())\r\n        //    .subscribe(\r\n        //    function (servicesGroups) {\r\n        //        //vm.servicesTree = servicesGroups;\r\n        //        vm.servicesTree = vm.treeHelper.getActiveNodesOnly(servicesGroups);\r\n        //    },\r\n        //    function (error:any) { \r\n        //        vm.toastr.error(error, '');\r\n        //        vm.showProgress = false;\r\n        //    },\r\n        //    function () {\r\n        //        vm.showProgress = false;\r\n        //    });\r\n        vm.servicesTree = [];\r\n\r\n    }\r\n    loadServicePackages() {\r\n        let vm = this;\r\n        this.clinicService.getAllservicePackages(vm.clinicId).subscribe(\r\n            function (response: any) {\r\n                vm.servicePackagesList = response;\r\n                //vm.servicesTree.push({\r\n\r\n                //    'label': 'حزمة خدمات',\r\n                //    'labelTranslation': 'Service Packages',\r\n                //    'data': 'ServicePackageRoot',\r\n                //    'type': 'ServicePackageRoot',\r\n                //    'children': vm.servicePackagesList\r\n\r\n                //});\r\n            },\r\n            function (error: any) {\r\n                vm.toastr.error(error, '');\r\n            },\r\n            function () { // finally\r\n                vm.showProgress = false;\r\n            });\r\n\r\n    }\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        this.items = [];\r\n        if (this.division) {\r\n            this.items = [];\r\n            this.items.push({\r\n                'label': this.division.label,\r\n                'labelTranslation': this.division.labelTranslation,\r\n                'data': this.division.data,\r\n                'type': this.division.type,\r\n                'children': this.division.servicePackagesGroups\r\n            });\r\n        }\r\n    }\r\n\r\n    displayPopup(node: TreeNode) {\r\n\r\n        this.AddEditServicPackageGroup.nativeElement.click();\r\n\r\n        this.model = { id: 0 };\r\n        this.selectedNode = node;\r\n        this.selectedServices = [];\r\n    }\r\n\r\n    changeActivation(node: any, event: any) {\r\n        let vm = this;\r\n        vm.showProgress = true;\r\n        this.clinicService.toggleEMRMasterItemActivation(node.data, event.target.checked, this.objectType.ServicePackages)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    // change the activation of the node\r\n                    node.isActive = event.target.checked;\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                    vm.showProgress = false;\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n    }\r\n\r\n\r\n    saveServicPackageGroup() {\r\n        let vm = this;\r\n        let addNew = true;\r\n        if (vm.model.id > 0)\r\n            addNew = false;\r\n        vm.showProgress = true;\r\n\r\n        if (addNew)\r\n            vm.prepareModel();\r\n\r\n        this.extractSelectedServices();\r\n\r\n        this.clinicService.saveorUpdateEMRMasterItem(vm.model)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    if (addNew) // attach new object to the selected node \r\n                        vm.selectedNode.children.push(response);\r\n                    else // update node's name in case of updating \r\n                    {\r\n                        vm.selectedNode.label = response.label;\r\n                        vm.selectedNode.nameTranslation = response.nameTranslation;\r\n                        vm.selectedNode.labelTranslation = response.nameTranslation;\r\n                        vm.selectedNode.children = [];\r\n                        vm.selectedNode.children = response.children;\r\n                    }\r\n\r\n                    vm.clear();\r\n                    let msg = vm.translate.instant(\"SavedSuccessfully\");\r\n                    vm.toastr.success(msg, '');\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                    vm.showProgress = false;\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n    }\r\n\r\n    prepareModel() {\r\n        this.model.id = 0;\r\n        this.model.objectId = 0;\r\n        this.model.divisionId = this.selectedNode.data;\r\n        this.model.clinicId = this.clinicId;\r\n        this.model.objectType = this.objectType.ServicePackages;\r\n    }\r\n\r\n    extractSelectedServices() {\r\n        let relatedObjectsIDs = [];\r\n\r\n        for (let item of this.selectedServices) {\r\n            relatedObjectsIDs.push(item.data);\r\n        }\r\n\r\n        this.model.relatedObjectsIDs = relatedObjectsIDs;\r\n    }\r\n\r\n    editServicePackageGroup(node: any) {\r\n\r\n        this.selectedNode = node;\r\n        this.selectedServices = [];\r\n        this.model = {};\r\n        this.model.id = node.data;\r\n        this.model.name = node.label;\r\n        this.model.nameTranslation = node.nameTranslation;\r\n        this.model.objectId = node.data;\r\n        this.model.divisionId = node.parent.date;\r\n        this.model.objectType = this.objectType.ServicePackages;\r\n\r\n        // get Services under selected Services group\r\n        for (let service of node.children) {\r\n            for (let treeNode of this.servicePackagesList) {\r\n                this.highLightSelectedServices(treeNode, service.data, service.type);\r\n            }\r\n        }\r\n\r\n        this.extractSelectedServices();\r\n\r\n        // display popup\r\n        this.AddEditServicPackageGroup.nativeElement.click();\r\n    }\r\n\r\n    private highLightSelectedServices(node: TreeNode, id: number, nodeType: string) {\r\n        if (node.data == id && node.type == nodeType) {\r\n            this.selectedServices.push(node);\r\n            this.expandParent(node);\r\n        }\r\n        if (node.children) {\r\n            node.children.forEach(childNode => {\r\n                this.highLightSelectedServices(childNode, id, nodeType);\r\n            });\r\n        }\r\n    }\r\n\r\n    private expandParent(node: TreeNode) {\r\n        if (node.parent) {\r\n            node.parent.expanded = true;\r\n            this.expandParent(node.parent);\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.model = { id: 0 };\r\n        this.active = false;\r\n        this.selectedServices = [];\r\n        setTimeout(() => this.active = true, 0);\r\n        this.filterString = '';\r\n    }\r\n}","<div *ngIf=\"showProgress\">\r\n    <loading></loading>\r\n</div>\r\n\r\n<div class=\"row nopadding\" *ngIf=\"division\">\r\n    <div class=\"padding5\">\r\n\r\n        <div class=\"hidden\">\r\n            <button #AddEditServicPackageGroup type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#ServicePackagesPopup\"></button>\r\n        </div>\r\n\r\n        <p-tree [value]=\"items\" selectionMode=\"single\" [(selection)]=\"selectedItem\">\r\n            <ng-template let-node pTemplate=\"ClinicDivision\">\r\n               {{selectedLang === 'ar' ?  node.label : node.labelTranslation}}\r\n                &nbsp; &nbsp;\r\n                <a [class.disabled]=\"!enableAddRootBtn && !isClinicAdmin ? true : null\">\r\n                    <img src=\"assets/images/addImage.png\" (click)=\"displayPopup(node)\" title=\"Add Division\" />\r\n                </a>\r\n            </ng-template>\r\n            <ng-template let-node pTemplate=\"ClinicDepartmentServicePackagesGroup\">\r\n                <span class=\"nav-icon\"><i class=\"fa fa-cubes\"></i></span>\r\n                &nbsp; \r\n                {{selectedLang === 'ar' ?  node.label : node.labelTranslation}}\r\n                &nbsp; &nbsp;\r\n                <a [class.disabled]=\"!enableEditBtn && !isClinicAdmin ? true : null\">\r\n                    <i class=\"fa fa-pencil fa-2x\" (click)=\"editServicePackageGroup(node)\" title=\"Edit Service Group\" style=\"color: #32bea6;\"></i>\r\n\r\n                </a>\r\n                <label>\r\n                    <input id=\"ChkIsActiveServiceGroup\" name=\"ChkIsActiveServiceGroup\" class=\"ace ace-switch ace-switch-6\" type=\"checkbox\"\r\n                           [checked]=\"node.isActive\" (click)=\"changeActivation(node , $event)\" disabled=\"{{ enableActivateBtn || isClinicAdmin? '' :'disabled'}}\" />\r\n                    <span class=\"lbl\"></span>\r\n                </label>\r\n            </ng-template>\r\n            <ng-template let-node pTemplate=\"ServicePackage\">\r\n                <span class=\"nav-icon\"><i class=\"fa fa-cube\"></i></span>\r\n                &nbsp;\r\n                {{selectedLang === 'ar' ?  node.label : node.labelTranslation}}\r\n            </ng-template>\r\n        </p-tree>\r\n    </div>\r\n</div>\r\n\r\n<!-- Service Modal -->\r\n<div id=\"ServicePackagesPopup\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog width95percent\">\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">{{ 'ServicesGroup' | translate}}</h4>\r\n            </div>\r\n            <form *ngIf=\"active\" class=\"form-horizontal\" name=\"departmentServicePackagesGroupForm\" #departmentServicePackagesGroupForm=\"ngForm\">\r\n                <div class=\"modal-body\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"txtName\" class=\"control-label col-md-2\"> {{ 'ArabicName' | translate}}</label>\r\n                        <div class=\"col-md-10\">\r\n                            <input id=\"txtName\" name=\"txtName\" class=\"form-control\" [(ngModel)]='model.name' #txtName=\"ngModel\" required />\r\n                            <div [hidden]=\"txtName.valid || txtName.pristine\" class=\"alert alert-danger\">\r\n                                {{ 'RequiredField' | translate}}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"txtNameTranslation\" class=\"control-label col-md-2\"> {{ 'EnglishName' | translate}}</label>\r\n                        <div class=\"col-md-10\">\r\n                            <input id=\"txtNameTranslation\" name=\"txtNameTranslation\" class=\"form-control\" [(ngModel)]='model.nameTranslation' #txtNameTranslation=\"ngModel\" required />\r\n                            <div [hidden]=\"txtNameTranslation.valid || txtNameTranslation.pristine\" class=\"alert alert-danger\">\r\n                                {{ 'RequiredField' | translate}}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                   <div class=\"form-group\">\r\n                        <label for=\"txtNameTranslation\" class=\"control-label col-md-2\"> {{ 'ServicePackage' | translate}}</label>\r\n                        <div class=\"col-md-10\">\r\n                            <input name=\"txtSearchServices\" [placeholder]=\"'SearchByNameorCode' | translate\" class=\"form-control\" [(ngModel)]=\"filterString\" />\r\n                            <div class=\"nopadding treeBorder\" style=\"height:180px;\">\r\n                                <p-tree [value]=\"servicePackagesList   | translateObjects  : null : null : lstToTranslated | filterbynameorcode:filterString : leafType\" selectionMode=\"checkbox\" [(selection)]=\"selectedServices\">\r\n                                    <ng-template let-node pTemplate=\"ServicePackage\">\r\n                                        <span class=\"nav-icon\"><i class=\"fa fa-cube\"></i></span>\r\n                                        &nbsp;\r\n                                        {{selectedLang === 'ar' ?  node.label : node.labelTranslation}}\r\n                                    </ng-template>\r\n                                </p-tree>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                    <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" [disabled]=\"!departmentServicePackagesGroupForm.form.valid\" (click)=\"saveServicPackageGroup()\">{{ 'Save' | translate}}</button>\r\n                    <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" (click)=\"clear()\">{{ 'Clear' | translate}}</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n","import { Component, OnInit, Input, OnChanges, SimpleChanges, ViewChild, ElementRef } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\nimport { ClinicService } from '../shared/clinic.service';\r\nimport { EMRObjectType } from '../shared/EMRObjectType.enum';\r\n\r\nimport { TreeNode } from 'primeng/api';\r\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\r\nimport { TreeHelerClass } from '../../shared/shared/treeHelper.class';\r\n\r\n@Component({\r\n\r\n    selector: 'clinic-EMRMaster-services',\r\n    templateUrl: './clinic-EMRMaster-services.component.html'\r\n})\r\n\r\nexport class ClinicEMRMasterServicesComponent implements OnInit, OnChanges {\r\n\r\n    filterString!: string;\r\n    leafType: string = 'Service';\r\n    selectedLang = 'ar';\r\n\r\n    active: boolean = true;\r\n    selectedGroup!: TreeNode;\r\n    @Input() division: any = {};\r\n    @Input() isClinicAdmin: boolean = false;\r\n    @Input() enableAddRootBtn: boolean = false;\r\n    @Input() enableEditBtn: boolean = false;\r\n    @Input() enableActivateBtn: boolean = false;\r\n    items: any[] = [];\r\n    model: any = {};\r\n    @ViewChild('AddEditServiceGroup') AddEditServiceGroup!: ElementRef;\r\n    selectedNode: any;\r\n    showProgress: boolean = false;\r\n    servicesTree: any[] = [];\r\n    allservices: any[] = [];\r\n    groupServicesList: any[] = [];\r\n    selectedServices: TreeNode[] = [];\r\n    clinicId!: number;\r\n    objectType: EMRObjectType = new EMRObjectType();\r\n    lstToTranslated: string[] = [];\r\n    treeHelper: TreeHelerClass = new TreeHelerClass();\r\n    selectedServicesIDs: any[] = [];\r\n    groupType = 'ServiceGroup';\r\n    selectedItem: any;\r\n    public constructor(private clinicService: ClinicService,\r\n        private storage: LocalStorageService,\r\n        private toastr: ToastrService,\r\n        public translate: TranslateService) { }\r\n\r\n    ngOnInit(): void {\r\n        // load services tree \r\n        this.selectedLang = this.storage.retrieve(\"selectedLanguage\");\r\n        let vm = this;\r\n        vm.showProgress = true;\r\n        vm.clinicId = this.storage.retrieve(\"ClinicID\");\r\n        vm.lstToTranslated = ['label', 'labelTranslation'];\r\n\r\n        this.clinicService.getAllServiceGroupsWithoutServicesForTreeView(vm.clinicId.toString())\r\n            .subscribe(\r\n                function (servicesGroups: any) {\r\n                    vm.servicesTree = servicesGroups;\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                    //vm.showProgress = false;\r\n                },\r\n                function () {\r\n                    //vm.showProgress = false;\r\n                });\r\n\r\n        this.clinicService.getAllServices(vm.clinicId.toString())\r\n            .subscribe(\r\n                function (services: any) {\r\n                    vm.allservices = services;\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                    vm.showProgress = false;\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        this.items = [];\r\n        if (this.division) {\r\n            this.items = [];\r\n            this.items.push({\r\n                'label': this.division.label,\r\n                'labelTranslation': this.division.labelTranslation,\r\n                'data': this.division.data,\r\n                'type': this.division.type,\r\n                'children': this.division.servicesGroups\r\n            });\r\n        }\r\n    }\r\n\r\n    displayPopup(node: TreeNode) {\r\n\r\n        this.AddEditServiceGroup.nativeElement.click();\r\n\r\n        this.model = { id: 0 };\r\n        this.selectedNode = node;\r\n        this.selectedServices = [];\r\n        this.selectedServicesIDs = [];\r\n    }\r\n\r\n    changeActivation(node: any, event: any) {\r\n        let vm = this;\r\n        vm.showProgress = true;\r\n        this.clinicService.toggleEMRMasterItemActivation(node.data, event.target.checked, this.objectType.Services)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    // change the activation of the node\r\n                    node.isActive = event.target.checked;\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                    vm.showProgress = false;\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n    }\r\n\r\n\r\n    saveServiceGroup() {\r\n        let vm = this;\r\n        let addNew = true;\r\n        if (vm.model.id > 0)\r\n            addNew = false;\r\n        vm.showProgress = true;\r\n\r\n        if (addNew)\r\n            vm.prepareModel();\r\n\r\n\r\n        this.model.relatedObjectsIDs = this.selectedServicesIDs;\r\n        //this.extractSelectedServices();\r\n\r\n        this.clinicService.saveorUpdateEMRMasterItem(vm.model)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    if (addNew) // attach new object to the selected node \r\n                        vm.selectedNode.children.push(response);\r\n                    else // update node's name in case of updating \r\n                    {\r\n\r\n                        vm.selectedNode.label = response.label;\r\n                        vm.selectedNode.labelTranslation = response.nameTranslation;\r\n\r\n                        vm.selectedNode.children = [];\r\n                        vm.selectedNode.children = response.children;\r\n                    }\r\n\r\n                    vm.clear();\r\n                    let msg = vm.translate.instant(\"SavedSuccessfully\");\r\n                    vm.toastr.success(msg, '');\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                    vm.showProgress = false;\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n    }\r\n\r\n    prepareModel() {\r\n        this.model.id = 0;\r\n        this.model.objectId = 0;\r\n        this.model.divisionId = this.selectedNode.data;\r\n        this.model.clinicId = this.clinicId;\r\n        this.model.objectType = this.objectType.Services;\r\n    }\r\n\r\n    extractSelectedServices() {\r\n        let relatedObjectsIDs = [];\r\n\r\n        for (let item of this.selectedServices) {\r\n            if (item.type == 'Service')\r\n                relatedObjectsIDs.push(item.data);\r\n        }\r\n\r\n        this.model.relatedObjectsIDs = relatedObjectsIDs;\r\n    }\r\n\r\n    editServiceGroup(node: any) {\r\n\r\n        this.selectedNode = node;\r\n        this.selectedServices = [];\r\n        this.selectedServicesIDs = [];\r\n        this.model = {};\r\n        this.model.id = node.data;\r\n        this.model.name = node.label;\r\n        this.model.nameTranslation = node.labelTranslation;\r\n        this.model.objectId = node.data;\r\n        this.model.divisionId = node.parent.date;\r\n        this.model.objectType = this.objectType.Services;\r\n\r\n        for (let service of node.children) {\r\n            this.selectedServicesIDs.push(service.id);\r\n        }\r\n\r\n        //// get Services under selected Services group\r\n        //for (let service of node.children) {\r\n        //    for (let treeNode of this.servicesTree) {\r\n        //        this.highLightSelectedServices(treeNode, service.data, service.type);\r\n        //    }\r\n        //}\r\n\r\n        //this.extractSelectedServices();\r\n\r\n        // display popup\r\n        this.AddEditServiceGroup.nativeElement.click();\r\n    }\r\n\r\n    private highLightSelectedServices(node: TreeNode, id: number, nodeType: string) {\r\n        if (node.data == id && node.type == nodeType) {\r\n            this.selectedServices.push(node);\r\n            this.expandParent(node);\r\n        }\r\n        if (node.children) {\r\n            node.children.forEach(childNode => {\r\n                this.highLightSelectedServices(childNode, id, nodeType);\r\n            });\r\n        }\r\n    }\r\n\r\n    private expandParent(node: TreeNode) {\r\n        if (node.parent) {\r\n            node.parent.expanded = true;\r\n            this.expandParent(node.parent);\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.model = { id: 0 };\r\n        this.active = false;\r\n        this.selectedServices = [];\r\n        setTimeout(() => this.active = true, 0);\r\n        this.filterString = '';\r\n    }\r\n\r\n}","<div *ngIf=\"showProgress\">\r\n    <loading></loading>\r\n</div>\r\n\r\n<div class=\"row nopadding\" *ngIf=\"division\">\r\n    <div class=\"padding5\">\r\n\r\n        <div class=\"hidden\">\r\n            <button #AddEditServiceGroup type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#ServicesPopup\"></button>\r\n        </div>\r\n\r\n        <p-tree [value]=\"items\" selectionMode=\"single\" [(selection)]=\"selectedItem\">\r\n            <ng-template let-node pTemplate=\"ClinicDivision\">\r\n               {{selectedLang === 'ar' ?  node.label : node.labelTranslation}}\r\n                &nbsp; &nbsp;\r\n                <a [class.disabled]=\"!enableAddRootBtn && !isClinicAdmin ? true : null\">\r\n                    <img src=\"assets/images/addImage.png\" (click)=\"displayPopup(node)\" title=\"Add Division\" />\r\n                </a>\r\n            </ng-template>\r\n            <ng-template let-node pTemplate=\"ClinicDepartmentServicesGroup\">\r\n                <span class=\"nav-icon\"><i class=\"fa fa-cubes\"></i></span>\r\n                &nbsp; \r\n                {{selectedLang === 'ar' ?  node.label : node.labelTranslation}}\r\n                &nbsp; &nbsp;\r\n                <a [class.disabled]=\"!enableEditBtn && !isClinicAdmin ? true : null\">\r\n                    <i class=\"fa fa-pencil fa-2x\" (click)=\"editServiceGroup(node)\" title=\"Edit Service Group\" style=\"color: #32bea6;\"></i>\r\n\r\n                </a>\r\n                <label>\r\n                    <input id=\"ChkIsActiveServiceGroup\" name=\"ChkIsActiveServiceGroup\" class=\"ace ace-switch ace-switch-6\" type=\"checkbox\"\r\n                           [checked]=\"node.isActive\" (click)=\"changeActivation(node , $event)\" disabled=\"{{ enableActivateBtn || isClinicAdmin? '' :'disabled'}}\" />\r\n                    <span class=\"lbl\"></span>\r\n                </label>\r\n            </ng-template>\r\n            <ng-template let-node pTemplate=\"Service\">\r\n                <span class=\"nav-icon\"><i class=\"fa fa-cube\"></i></span>\r\n                &nbsp;\r\n                {{selectedLang === 'ar' ?  node.label : node.labelTranslation}}\r\n            </ng-template>\r\n        </p-tree>\r\n    </div>\r\n</div>\r\n\r\n<!-- Service Modal -->\r\n<div id=\"ServicesPopup\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog width75percent\">\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">{{ 'ServicesGroup' | translate}}</h4>\r\n            </div>\r\n            <form *ngIf=\"active\" class=\"form-horizontal\" name=\"departmentServicesGroupForm\" #departmentServicesGroupForm=\"ngForm\">\r\n                <div class=\"modal-body\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"txtName\" class=\"control-label col-md-3\"> {{ 'ArabicName' | translate}}</label>\r\n                        <div class=\"col-md-9\">\r\n                            <input id=\"txtName\" name=\"txtName\" class=\"form-control\" [(ngModel)]='model.name' #txtName=\"ngModel\" required />\r\n                            <div [hidden]=\"txtName.valid || txtName.pristine\" class=\"alert alert-danger\">\r\n                                {{ 'RequiredField' | translate}}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"txtNameTranslation\" class=\"control-label col-md-3\"> {{ 'EnglishName' | translate}}</label>\r\n                        <div class=\"col-md-9\">\r\n                            <input id=\"txtNameTranslation\" name=\"txtNameTranslation\" class=\"form-control\" [(ngModel)]='model.nameTranslation' #txtNameTranslation=\"ngModel\" required />\r\n                            <div [hidden]=\"txtNameTranslation.valid || txtNameTranslation.pristine\" class=\"alert alert-danger\">\r\n                                {{ 'RequiredField' | translate}}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"txtNameTranslation\" class=\"control-label col-md-2\"> {{ 'Services' | translate}}</label>\r\n                        <div class=\"col-md-10\">\r\n                            <tree-checkboxList [treeList]=\"servicesTree\"\r\n                                               [items]=\"allservices\"\r\n                                               [selectedItemsIDs]=\"selectedServicesIDs\"\r\n                                               [groupType]=\"groupType\"></tree-checkboxList>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"modal-footer\">\r\n                        <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" [disabled]=\"!departmentServicesGroupForm.form.valid\" (click)=\"saveServiceGroup()\">{{ 'Save' | translate}}</button>\r\n                        <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" (click)=\"clear()\">{{ 'Clear' | translate}}</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\n\r\nimport { ClinicService } from '../shared/clinic.service';\r\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\r\n\r\nimport { AccountService } from '../../security/shared/account.service';\r\nimport { UserPermissions } from '../../classes/user-permissions.class';\r\nimport { PermissionKeyEnum } from '../../shared/shared/permission-key.enum';\r\n@Component({\r\n\r\n    selector: 'clinic-EMRMaster',\r\n    templateUrl: './clinic-EMRMaster.component.html'\r\n})\r\n\r\nexport class ClinicEMRMasterComponent implements OnInit {\r\n    selectEMRMasterTab: boolean = true;\r\n    medicalDepartments: any[] = [];\r\n    lstDepartmentDivisions: any[] = [];\r\n    selectedDivision: any = {};\r\n    showProgress: boolean = false;\r\n    userType: string = '';\r\n    isClinicAdmin: boolean = false;\r\n    userPermisions: UserPermissions = new UserPermissions();\r\n    key: PermissionKeyEnum = new PermissionKeyEnum();\r\n    enableAddRootBtn: boolean = false;\r\n    enableEditBtn: boolean = false;\r\n    enableActivateBtn: boolean = false;\r\n    enableSaveBtn: boolean = false;\r\n    enabletabs: boolean = false;\r\n\r\n    public constructor(private clinicService: ClinicService,\r\n        private storage: LocalStorageService,\r\n        private toastr: ToastrService\r\n        , public translate: TranslateService\r\n        , public accountService: AccountService) { }\r\n\r\n    ngOnInit(): void {\r\n        let vm = this;\r\n        vm.showProgress = true;\r\n        let clinicId = this.storage.retrieve(\"ClinicId\");\r\n        this.userType = this.storage.retrieve(\"UserType\");\r\n        if (this.userType == 'ClinicAdmin')\r\n            this.isClinicAdmin = true;\r\n\r\n        this.clinicService.getAllMedicalDepartments(clinicId)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    vm.medicalDepartments = response;\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                    vm.showProgress = false;\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n\r\n        if (!this.isClinicAdmin) {\r\n            if (this.accountService.userPermision._isScalar != undefined)\r\n                this.accountService.userPermision.subscribe((item: any) => this.handleUserInterfaceViews(item));\r\n            else\r\n                this.handleUserInterfaceViews(this.accountService.userPermision);\r\n        }\r\n\r\n    }\r\n\r\n    getSelectedDivision(divisionId: any) {\r\n        if (divisionId != 'null')\r\n            this.getClinicDivisionWithEMR(divisionId);\r\n        else\r\n            this.selectedDivision = null;\r\n    }\r\n\r\n    fillDepartmentDivisions(departmentId: any) {\r\n        if (departmentId != 'null') {\r\n            let vm = this;\r\n            vm.showProgress = true;\r\n            this.clinicService.getDivisionsUnderDepartment(departmentId)\r\n                .subscribe(\r\n                    function (response: any) {\r\n                        vm.lstDepartmentDivisions = response;\r\n                    },\r\n                    function (error: any) {\r\n                        vm.toastr.error(error, '');\r\n                        vm.showProgress = false;\r\n                    },\r\n                    function () {\r\n                        vm.showProgress = false;\r\n                    });\r\n        }\r\n    }\r\n\r\n    getClinicDivisionWithEMR(divisionId: any) {\r\n        let vm = this;\r\n        vm.showProgress = true;\r\n        this.clinicService.getClinicDivisionWithEMR(divisionId)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    vm.selectedDivision = response;\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                    vm.showProgress = false;\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n    }\r\n\r\n    handleUserInterfaceViews(user: any) {\r\n        if (user.permissions != undefined) {\r\n\r\n            for (let item of user.permissions) {\r\n                if (item.permission.key == this.key.EMRMaster) {\r\n                    if (item.fullControl == true || item.add || item.edit || item.view)//\r\n                        this.enabletabs = true;\r\n                    if (item.fullControl == true || item.add)\r\n                        this.enableAddRootBtn = true;\r\n                    if (item.fullControl == true || item.edit)\r\n                        this.enableEditBtn = true;\r\n                    if (item.fullControl || item.activate)\r\n                        this.enableActivateBtn = true;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n}","<div *ngIf=\"showProgress\">\r\n    <loading></loading>\r\n</div>\r\n\r\n<div class=\"row\">\r\n\r\n    <clinic-tab [isEMRMasterSelected]='selectEMRMasterTab' *ngIf=\"isClinicAdmin\"></clinic-tab>\r\n    <shared-tabs [isEMRMasterSelected]='selectEMRMasterTab' *ngIf=\"!isClinicAdmin\"></shared-tabs>\r\n\r\n    <div class=\"row nopadding\">\r\n        <div class=\"NBbreadcrumb\">\r\n            <a>{{ 'Clinic' | translate}}</a> &nbsp;/\r\n            {{ 'EMRMaster' | translate}}\r\n        </div>\r\n\r\n       <div class=\"well\">\r\n           <form class=\"form-horizontal\">\r\n               <div class=\"form-group\">\r\n                   <label for=\"ddlMedicalDepartments\" class=\"col-md-2\"> {{ 'Department' | translate}}</label>\r\n                   <div class=\"col-md-6\">\r\n                       <select class=\"form-control\" id=\"ddlMedicalDepartments\" name=\"ddlMedicalDepartments\" #d (change)=\"fillDepartmentDivisions(d.value)\">\r\n                           <option [value]=\"null\">{{ 'Select' | translate}}</option>\r\n                           <option *ngFor=\"let department of medicalDepartments  | translateObjects \" [value]=\"department.id\">{{department.name}}</option>\r\n                       </select>\r\n                   </div>\r\n               </div>\r\n               <div class=\"form-group\">\r\n                   <label for=\"ddlDivisions\" class=\"col-md-2\"> {{ 'Division' | translate}}</label>\r\n                   <div class=\"col-md-6\">\r\n                       <select class=\"form-control\" id=\"ddlDivisions\" name=\"ddlDivisions\" #ddlDivisions (change)=\"getSelectedDivision(ddlDivisions.value)\">\r\n                           <option [value]=\"null\">{{ 'Select' | translate}}</option>\r\n                           <option *ngFor=\"let division of lstDepartmentDivisions  | translateObjects \" [value]=\"division.id\">{{division.name}}</option>\r\n                       </select>\r\n                   </div>\r\n               </div>\r\n           </form>\r\n\r\n           <div class=\"row\">\r\n               <div class=\"row\">\r\n                   <ul class=\"nav nav-pills tabStyle\">\r\n                       <li class=\"active\"><a href=\"#diagnosis\" data-toggle=\"pill\" aria-expanded=\"true\" [class.disabled]=\"!enabletabs && !isClinicAdmin ? true : null\">{{ 'Diagnosis' | translate}}</a></li>\r\n                       <li><a href=\"#drugs\" data-toggle=\"pill\" class=\"btnColor\" aria-expanded=\"true\" [class.disabled]=\"!enabletabs && !isClinicAdmin ? true : null\">{{ 'Drugs' | translate}}</a></li>\r\n                       <li><a href=\"#services\" data-toggle=\"pill\" aria-expanded=\"true\" [class.disabled]=\"!enabletabs && !isClinicAdmin ? true : null\">{{ 'Services' | translate}}</a></li>\r\n                       <li><a href=\"#laboratoryTests\" data-toggle=\"pill\" aria-expanded=\"true\" [class.disabled]=\"!enabletabs && !isClinicAdmin ? true : null\">{{ 'LaboratoryTests' | translate}}</a></li>\r\n                       <li><a href=\"#radiologyTests\" data-toggle=\"pill\" aria-expanded=\"true\" [class.disabled]=\"!enabletabs && !isClinicAdmin ? true : null\">{{ 'RadiologyTests' | translate}}</a></li>\r\n                       <li><a href=\"#servicePackages\" data-toggle=\"pill\" aria-expanded=\"true\" [class.disabled]=\"!enabletabs && !isClinicAdmin ? true : null\">{{ 'ServicePackage' | translate}}</a></li>\r\n                   </ul>\r\n               </div>\r\n               <div id=\"myTabContent\" class=\"tab-content\">\r\n                   <div class=\"tab-pane fade active in\" id=\"diagnosis\">\r\n                       <clinic-EMRMaster-diagnosis [division]=\"selectedDivision\" [isClinicAdmin]=\"isClinicAdmin\" [enableEditBtn]=\"enableEditBtn\" [enableAddRootBtn]=\"enableAddRootBtn\" [enableActivateBtn]=\"enableActivateBtn\"></clinic-EMRMaster-diagnosis>\r\n                   </div>\r\n                   <div class=\"tab-pane fade\" id=\"drugs\">\r\n                       <clinic-EMRMaster-drugs [division]=\"selectedDivision\" [isClinicAdmin]=\"isClinicAdmin\" [enableEditBtn]=\"enableEditBtn\" [enableAddRootBtn]=\"enableAddRootBtn\" [enableActivateBtn]=\"enableActivateBtn\"></clinic-EMRMaster-drugs>\r\n                   </div>\r\n                   <div class=\"tab-pane fade\" id=\"services\">\r\n                       <clinic-EMRMaster-services [division]=\"selectedDivision\" [isClinicAdmin]=\"isClinicAdmin\" [enableEditBtn]=\"enableEditBtn\" [enableAddRootBtn]=\"enableAddRootBtn\" [enableActivateBtn]=\"enableActivateBtn\"></clinic-EMRMaster-services>\r\n                   </div>\r\n                   <div class=\"tab-pane fade\" id=\"laboratoryTests\">\r\n                       <clinic-EMRMaster-laboratoryTests [division]=\"selectedDivision\" [isClinicAdmin]=\"isClinicAdmin\" [enableEditBtn]=\"enableEditBtn\" [enableAddRootBtn]=\"enableAddRootBtn\" [enableActivateBtn]=\"enableActivateBtn\"></clinic-EMRMaster-laboratoryTests>\r\n                   </div>\r\n                   <div class=\"tab-pane fade\" id=\"radiologyTests\">\r\n                       <clinic-EMRMaster-radiologyTests [division]=\"selectedDivision\" [isClinicAdmin]=\"isClinicAdmin\" [enableEditBtn]=\"enableEditBtn\" [enableAddRootBtn]=\"enableAddRootBtn\" [enableActivateBtn]=\"enableActivateBtn\"></clinic-EMRMaster-radiologyTests>\r\n                   </div>\r\n                   <div class=\"tab-pane fade\" id=\"servicePackages\">\r\n                       <clinic-EMRMaster-servicePackages [division]=\"selectedDivision\" [isClinicAdmin]=\"isClinicAdmin\" [enableEditBtn]=\"enableEditBtn\" [enableAddRootBtn]=\"enableAddRootBtn\" [enableActivateBtn]=\"enableActivateBtn\"></clinic-EMRMaster-servicePackages>\r\n                   </div>\r\n               </div>\r\n           </div>\r\n       </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AdministrationService } from '../../administration/shared/administration.service';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\r\nenum EMRWizard {\r\n    Diagnosis = 1,\r\n    Medication,\r\n    Services,\r\n    LabTests,\r\n    RadiologyTests,\r\n    Templates,\r\n    Remarks\r\n}\r\n@Component({\r\n\r\n    selector: 'clinic-EMRWizard',\r\n    templateUrl: './clinic-EMRWizard.component.html'\r\n})\r\n\r\nexport class ClinicEMRWizardComponent implements OnInit {\r\n    selectEMRWizardTab: boolean = true;\r\n    selectAccountTab: boolean = true;\r\n    clinicModel: any = { id: 0, isActive: true };\r\n    clinicId!: number;\r\n    emrValue!: any;\r\n    concatEmrValue: string = '';\r\n    selectClinicsTab: boolean = true;\r\n    showProgress = false;\r\n    active: boolean = true;\r\n    wizardItems!: EMRWizard[];\r\n\r\n    constructor(private administrationService: AdministrationService,\r\n        private localStorage: LocalStorageService,\r\n        public toastr: ToastrService,\r\n        private _route: ActivatedRoute\r\n        , public translate: TranslateService) { }\r\n\r\n\r\n    ngOnInit(): void {\r\n        this.clinicId = this._route.snapshot.params['id'];\r\n        this.initializeModel();\r\n\r\n    }\r\n\r\n    initializeModel(): void {\r\n        //Initialize the mode\r\n        //In case of Edit mode, load it from the DB\r\n        let thisComp = this;\r\n        if (this.clinicId && this.clinicId > 0) {\r\n            this.showProgress = true;\r\n            this.administrationService.getClinicById(this.clinicId)\r\n                .subscribe(\r\n                    function (response: any) {\r\n                        thisComp.clinicModel = response;\r\n                        thisComp.wizardItems = thisComp.clinicModel.emrWizardList;\r\n                        thisComp.showProgress = false;\r\n                    },\r\n                    function (error: any) {\r\n                        thisComp.toastr.error(error, '');\r\n                        thisComp.showProgress = false;\r\n                    },\r\n                    function () {\r\n                        thisComp.showProgress = false;\r\n                    });\r\n        }\r\n    }\r\n\r\n    saveEmrWizard(): void {\r\n        let thisComponent = this;\r\n        //thisComponent.emrValue = thisComponent.wizardItems[0];\r\n        //var color: EMRWizard = <EMRWizard>EMRWizard[thisComponent.emrValue];\r\n        thisComponent.GetEmrWizardOrder(thisComponent.wizardItems);\r\n        thisComponent.clinicModel.emrWizardOrder = this.concatEmrValue.substring(0, this.concatEmrValue.length - 1);\r\n        thisComponent.showProgress = true;\r\n\r\n        // update\r\n        this.administrationService.updateClinic(thisComponent.clinicModel)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    thisComponent.clinicModel = response;\r\n                    let msg = thisComponent.translate.instant(\"SavedSuccessfully\");\r\n                    thisComponent.toastr.success(msg, '');\r\n                },\r\n                function (error: any) {\r\n                    thisComponent.toastr.error(error, '');\r\n                    thisComponent.showProgress = false;\r\n                },\r\n                function () {\r\n                    thisComponent.showProgress = false;\r\n                });\r\n    }\r\n\r\n    returnToDefaultOrder(): void {\r\n\r\n        let thisComponent = this;\r\n        //thisComponent.GetEmrWizardOrder(thisComponent.wizardItems);\r\n        thisComponent.clinicModel.emrWizardOrder = \"1,2,3,4,5,6,7\";\r\n        thisComponent.showProgress = true;\r\n        // update\r\n        this.administrationService.updateClinic(thisComponent.clinicModel)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    thisComponent.clinicModel = response;\r\n                    let msg = thisComponent.translate.instant(\"SavedSuccessfully\");\r\n                    thisComponent.toastr.success(msg, '');\r\n                    thisComponent.initializeModel();\r\n                },\r\n                function (error: any) {\r\n                    thisComponent.toastr.error(error, '');\r\n                    thisComponent.showProgress = false;\r\n                },\r\n                function () {\r\n                    thisComponent.showProgress = false;\r\n                });\r\n\r\n\r\n    }\r\n\r\n    GetEmrWizardOrder(emrWizards: any): void {\r\n        this.concatEmrValue = '';\r\n        for (let emrWizard of emrWizards) {\r\n            this.emrValue = emrWizard;\r\n            var tempValue: any = EMRWizard[this.emrValue];// used to vonvert string into enum integer value\r\n            this.concatEmrValue += tempValue + ',';\r\n\r\n        }\r\n\r\n    }\r\n}","<div *ngIf=\"showProgress\">\r\n    <loading></loading>\r\n</div>\r\n\r\n<div class=\"row\">\r\n\r\n    <clinic-tab [isEMRWizardSelected]='selectEMRWizardTab'></clinic-tab>\r\n\r\n    <div class=\"row nopadding\">\r\n        <div class=\"NBbreadcrumb\">\r\n            <a>{{ 'Clinic' | translate}}</a> &nbsp;/\r\n            {{ 'EMRWizard' | translate}}\r\n        </div>\r\n\r\n        <div>\r\n            <form novalidate class=\"form-horizontal\" name=\"EMRWizardForm\" #EMRWizardForm=\"ngForm\">\r\n\r\n            <div class=\"row well\">\r\n                <div class=\"col-md-6 col-md-offset-8\">\r\n                    <button type=\"button\" class=\"btn btn-primary\" (click)=\"saveEmrWizard()\">{{ 'Save' | translate}}</button>\r\n                    <button type=\"button\" class=\"btn btn-primary\" (click)=\"returnToDefaultOrder()\">{{ 'Cancel' | translate}}</button>\r\n                </div>\r\n            </div>\r\n            <br />\r\n\r\n            <div class=\"row well\">\r\n                <div class=\"col-md-10 col-md-offset-1\">\r\n                    <p-orderList [value]=\"wizardItems\" [listStyle]=\"{'height':'300px'}\" [responsive]=\"true\" [header]=\"'EMRWizardItems' | translate\">\r\n                        <ng-template let-item pTemplate=\"default\">\r\n                            <div class=\"ui-helper-clearfix\">\r\n                     <div style=\"font-size:14px;margin:10px 5px 0 0\">{{item  | translate}}</div>\r\n                            </div>\r\n                        </ng-template>\r\n                    </p-orderList>\r\n\r\n                </div>\r\n            </div>\r\n        </form>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n","import {Component, OnInit} from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n//import { OrganizationService } from '../shared/organization.service'\r\nimport { SharedService } from '../../shared/shared/shared.service';\r\nimport {AdministrationService} from '../../administration/shared/administration.service';\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport {LocalStorageService} from 'ng2-webstorage';\r\nimport { AccountService } from '../../security/shared/account.service';\r\nimport { UserTypeEnum } from '../../security/shared/user-type.enum';\r\nimport {TranslateService, LangChangeEvent} from '@ngx-translate/core';\r\n@Component({\r\n   \r\n    selector: 'clinic-account',\r\n    templateUrl: './clinic-account.component.html'\r\n})\r\n\r\nexport class ClinicAccountComponent implements OnInit {\r\n    selectAccountTab: boolean = true;\r\n    clinicModel: any = { id: 0, isActive: true };\r\n    clinicId!: number;\r\n    selectClinicsTab: boolean = true;\r\n    showProgress = false;\r\n    modifierName: string = '';\r\n    startDateString: string = '';\r\n    endDateString: string = '';\r\n    numberOfUsers!: number;\r\n    userType: string = '';\r\n    isClinicAdmin: boolean = false;\r\n    model: any = {};\r\n    active: boolean = true;\r\n    adminType!: UserTypeEnum;\r\n    constructor(private administrationService: AdministrationService,\r\n        private localStorage: LocalStorageService,\r\n        public toastr: ToastrService,\r\n        private _route: ActivatedRoute\r\n        , public translate: TranslateService) { }\r\n\r\n    ngOnInit(): void {\r\n        this.clinicId = this._route.snapshot.params['id'];\r\n\r\n        this.userType = this.localStorage.retrieve(\"UserType\");\r\n        if (this.userType == 'ClinicAdmin')\r\n            this.isClinicAdmin = true;\r\n\r\n        this.initializeModel();\r\n        this.modifierName = this.localStorage.retrieve(\"FullUserName\");\r\n    }\r\n\r\n\r\n    initializeModel(): void {\r\n        //Initialize the mode\r\n        this.clinicModel.owner = { id: 0 };\r\n        this.clinicModel.admin = { id: 0 };\r\n        this.clinicModel.owner.reachInfo = { id: 0 };\r\n        this.clinicModel.admin.reachInfo = { id: 0 };\r\n        this.clinicModel.reachInfo = { id: 0 };\r\n        this.clinicModel.currentSubscriptions = { id: 0 };\r\n\r\n        //In case of Edit mode, load it from the DB\r\n        let thisComp = this;\r\n        if (this.clinicId && this.clinicId > 0) {\r\n            this.showProgress = true;\r\n            this.administrationService.getClinicById(this.clinicId)\r\n                .subscribe(\r\n                function (response:any) {\r\n                    thisComp.clinicModel = response;\r\n                    if (thisComp.clinicModel.admin != null) {\r\n                        thisComp.adminType = thisComp.clinicModel.admin.userType;\r\n                    } else {\r\n                        thisComp.clinicModel.admin = { id: 0 };\r\n                        thisComp.clinicModel.admin.reachInfo = { id: 0 };\r\n                    }\r\n\r\n\r\n                    if (thisComp.clinicModel.currentSubscriptions != null) {\r\n                        thisComp.startDateString = thisComp.clinicModel.currentSubscriptions.startDateString;\r\n\r\n                        thisComp.endDateString = thisComp.clinicModel.currentSubscriptions.endDateString;\r\n                        thisComp.numberOfUsers = thisComp.clinicModel.currentSubscriptions.numberOfUsers;\r\n                    }\r\n\r\n                    //thisComp.showProgress = false;\r\n                },\r\n                function (error:any) { \r\n                    thisComp.toastr.error(error, '');\r\n                    thisComp.showProgress = false;\r\n                },\r\n                function () {\r\n                    thisComp.showProgress = false;\r\n                });\r\n        }\r\n    }\r\n\r\n    imageChanged(response:any) {\r\n        let attchmentInfo: any = {};\r\n\r\n        if (response != null) {\r\n\r\n            if (response.originalName == undefined) {\r\n                this.clinicModel.attachmentInfo = null;\r\n                return;\r\n            }\r\n            this.clinicModel.attachmentInfo = attchmentInfo;\r\n            this.clinicModel.attachmentInfo.originalName = response.originalName;\r\n            this.clinicModel.attachmentInfo.keyName = response.keyName;\r\n            this.clinicModel.attachmentInfo.fullPath = response.fullPath;\r\n            this.clinicModel.attachmentInfo.fileType = response.fileType;\r\n        }\r\n        else {\r\n            this.clinicModel.attachmentInfo = null;\r\n        }\r\n\r\n    }\r\n\r\n    onSubmit(): void {\r\n        let thisComponent = this;\r\n        thisComponent.showProgress = true;\r\n        thisComponent.clinicModel.modifierName = this.modifierName;\r\n        // update\r\n        if ((this.isPasswordValid() && !this.clinicModel.ownerIsAdmin && this.clinicModel.adminId == null) || this.clinicModel.ownerIsAdmin || (this.clinicModel.adminId > 0 )) {\r\n            this.administrationService.updateClinic(thisComponent.clinicModel)\r\n                .subscribe(\r\n                function (response:any) {\r\n                    thisComponent.clinicModel = response;\r\n\r\n                    if (thisComponent.clinicModel.admin != null && thisComponent.clinicModel.admin != undefined)\r\n                        thisComponent.adminType = thisComponent.clinicModel.admin.userType;\r\n\r\n                    if (thisComponent.clinicModel.admin == null || thisComponent.clinicModel.admin == undefined)\r\n                        thisComponent.clinicModel.admin = { id: 0 };\r\n\r\n                    if (thisComponent.clinicModel.admin.reachInfo == null || thisComponent.clinicModel.admin.reachInfo == undefined)\r\n                        thisComponent.clinicModel.admin.reachInfo = { id: 0 };\r\n\r\n\r\n                    let msg = thisComponent.translate.instant(\"SavedSuccessfully\");\r\n                    thisComponent.toastr.success(msg, '');\r\n                },\r\n                function (error:any) { \r\n                    thisComponent.toastr.error(error, '');\r\n                    thisComponent.showProgress = false;\r\n                },\r\n                function () {\r\n                    thisComponent.showProgress = false;\r\n                });\r\n        }\r\n        else {\r\n            thisComponent.showProgress = false;\r\n        }\r\n\r\n    }\r\n    isPasswordValid(): boolean {\r\n        let valid: boolean = true;\r\n\r\n        //if (this.model.owner.password != this.model.ownerPasswordConfirm) {\r\n        //    this.toastr.error('Owner password and confirm password must be the same', '');\r\n        //    let msg = this.translate.instant(\"MatchedOwnerPasswordAndConfirmPassword\");\r\n        //    this.toastr.error(msg, '');\r\n        //    valid = false\r\n        //}\r\n        if (this.clinicModel.adminId == null && !this.clinicModel.ownerIsAdmin) {\r\n            if (this.clinicModel.admin.password != this.clinicModel.adminPasswordConfirm) {\r\n                //this.toastr.error('Admin password and confirm password must be the same', MatchedAdminPasswordAndConfirmPassword'');\r\n                let msg = this.translate.instant(\"MatchedAdminPasswordAndConfirmPassword\");\r\n                this.toastr.error(msg, '');\r\n                valid = false\r\n            }\r\n        }\r\n\r\n\r\n        return valid;\r\n\r\n    }\r\n\r\n}","<div *ngIf=\"showProgress\">\r\n    <loading></loading>\r\n</div>\r\n\r\n\r\n\r\n    <clinic-tab [isAccountSelected]='selectAccountTab'></clinic-tab>\r\n\r\n        <div class=\"row NBbreadcrumb\">\r\n            <a>{{ 'Clinic' | translate}}</a> &nbsp;/\r\n            {{ 'Account' | translate}}\r\n        </div>\r\n\r\n        <div class=\"row well\" style=\"padding:15px;\">\r\n\r\n            <h4>\r\n                {{ 'CurrentSubscription' | translate}}\r\n            </h4>\r\n            <br />\r\n            <div class=\"alert alert-secondary\">\r\n                <div class=\"row\">\r\n                    <div class=\"form-group\">\r\n                        <span class=\"control-label col-md-2 font-weight-bold\">{{ 'StartDate' | translate}}</span>\r\n                        <div class=\"col-md-2\">\r\n                            <span>{{startDateString}}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"form-group\">\r\n                        <span class=\"control-label col-md-2 font-weight-bold\">{{ 'EndDate' | translate}}</span>\r\n                        <div class=\"col-md-2\">\r\n                            <span>{{endDateString}}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"form-group\">\r\n                        <span class=\"control-label col-md-2 font-weight-bold\">{{ 'NoOfUsers' | translate}}</span>\r\n                        <div class=\"col-md-2\">\r\n                            <span> {{numberOfUsers}}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <h4>\r\n                {{ 'ClinicInformation' | translate}}\r\n            </h4>\r\n            <hr />\r\n\r\n            <form novalidate *ngIf=\"active\" class=\"form-horizontal\" name=\"organizationForm\" #organizationForm=\"ngForm\" (ngSubmit)=\"onSubmit()\">\r\n\r\n                <div class=\"form-row\">\r\n                    <div class=\"form-group col-md-4\">\r\n                        <label for=\"txtName\" class=\"nopadding\"> {{ 'Name' | translate}}</label>\r\n                        <input id=\"txtName\" name=\"txtName\" class=\"form-control\" [(ngModel)]='clinicModel.name' #txtName=\"ngModel\" required />\r\n                    </div>\r\n\r\n                    <div class=\"form-group col-md-4\">\r\n                        <label for=\"txtLicense\" class=\"nopadding\"> {{ 'License' | translate}}</label>\r\n                        <input id=\"txtLicense\" name=\"txtLicense\" class=\"form-control\" [(ngModel)]='clinicModel.license' #txtLicense=\"ngModel\" required />\r\n                    </div>\r\n\r\n                    <div class=\"form-group col-md-4\">\r\n                        <label for=\"txtTIN\" class=\"nopadding\"> {{ 'TIN' | translate}}</label>\r\n                        <input id=\"txtTIN\" name=\"txtTIN\" class=\"form-control\" [(ngModel)]='clinicModel.tin' #txtTIN=\"ngModel\" required />\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"form-row\">\r\n                    <div class=\"form-group col-md-12\">\r\n                        <label for=\"txtGroupRemark\" class=\"nopadding\"> {{ 'Description' | translate}}</label>\r\n                        <textarea id=\"txtGroupRemark\" name=\"txtGroupRemark\" class=\"form-control\" [(ngModel)]='clinicModel.description' #txtGroupRemark=\"ngModel\"></textarea>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"form-row\">\r\n                    <div class=\"form-group col-md-12\">\r\n                        <label for=\"fileImage\" class=\"nopadding\">{{ 'Logo' | translate}}</label>\r\n                        <image-uploader [imageId]=\"clinicModel.imageId\"  [imageData]=\"clinicModel.imageData\" (change)=\"imageChanged($event);\"></image-uploader>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"form-row\">\r\n                    <div class=\"form-group col-md-6\">\r\n                        <label for=\"modidfiedPerson\" class=\"nopadding\">{{ 'ModifiedBy' | translate}}</label>\r\n                        <input type=\"text\" class=\"form-control\" name=\"modidfiedPerson\" disabled [(ngModel)]='clinicModel.lastModifierName' />\r\n                    </div>\r\n                    <div class=\"form-group col-md-6\">\r\n                        <label for=\"dateMod\" class=\"nopadding\">{{ 'ModificationDate' | translate}}</label>\r\n                        <input type=\"text\" [(ngModel)]='clinicModel.lastModificationDateString' name=\"dateMod\" class=\"form-control\" disabled />\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"form-row\">\r\n                    <div class=\"form-group col-md-12\">\r\n                        <h4> {{ 'OwnerInforamtion' | translate}} </h4>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div class=\"form-row\">\r\n                    <div class=\"form-group col-md-6\">\r\n                        <label class=\"nopadding\" for=\"txtOwnerFirstName\">{{ 'FirstName' | translate}}</label>\r\n                        <input id=\"txtOwnerFirstName\" name=\"txtOwnerFirstName\" class=\"form-control\"\r\n                               [(ngModel)]='clinicModel.owner.firstName' #txtOwnerName=\"ngModel\" required />\r\n                    </div>\r\n                    <div class=\"form-group col-md-6\">\r\n                        <label class=\"nopadding\" for=\"txtOwnerLastName\">{{ 'LastName' | translate}}</label>\r\n                        <input id=\"txtOwnerLastName\" name=\"txtOwnerLastName\" class=\"form-control\"\r\n                               [(ngModel)]='clinicModel.owner.lastName' #txtOwnerLastName=\"ngModel\" required />\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"form-row\">\r\n                    <div class=\"form-group col-md-6\">\r\n                        <label class=\"nopadding\" for=\"txtOwnerPhone\">{{ 'Mobile' | translate}}</label>\r\n                        <input type=\"tel\" id=\"txtOwnerPhone\" name=\"txtOwnerPhone\" class=\"form-control\"\r\n                               [(ngModel)]='clinicModel.owner.reachInfo.mobile' #txtOwnerPhone=\"ngModel\" pattern=\"^(\\+?[0-9]{1,5})?([1-9][0-9]{9})$\" required />\r\n                        <div [hidden]=\"txtOwnerPhone.valid || txtOwnerPhone.pristine\" class=\"alert alert-danger\">\r\n                            {{ 'MobileValidationMsg' | translate}}\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group col-md-6\">\r\n                        <label class=\"nopadding\" for=\"txtOwnerEmail\">{{ 'Email' | translate}}</label>\r\n                        <input type=\"email\" id=\"txtOwnerEmail\" name=\"txtOwnerEmail\" class=\"form-control\" pattern=\"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{1,63}$\"\r\n                               [(ngModel)]='clinicModel.owner.email' #txtOwnerEmail=\"ngModel\" required />\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"form-row\">\r\n                    <div class=\"form-group col-md-12\">\r\n                        <a class=\"pointer\" data-toggle=\"modal\" data-target=\"#changePasswordModalAdmin\" [class.disabled]=\"!isClinicAdmin ? true : null\">{{ 'ChangePassword' | translate}}</a>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"form-row\">\r\n                    <div class=\"form-group col-md-12\">\r\n                        <label class=\"nopadding\" for=\"chkIsAdmin\">{{ 'IsAdmin' | translate}}</label>\r\n                        <label>\r\n                            <input type=\"checkbox\" class=\"ace ace-switch ace-switch-6\"\r\n                                   id=\"chkIsAdmin\" name=\"chkIsActive\"\r\n                                   [(ngModel)]=\"clinicModel.ownerIsAdmin\" #chkIsAdmin=\"ngModel\" />\r\n                            <span class=\"lbl\"></span>\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n\r\n                <div *ngIf=\"!clinicModel.ownerIsAdmin\">\r\n                    <h4>\r\n                        {{ 'AdminInformation' | translate}}\r\n                    </h4>\r\n                    <hr />\r\n                    <div class=\"form-row\">\r\n                        <div class=\"form-group col-md-6\">\r\n                            <label class=\"nopadding\" for=\"txtAdminFirstName\">{{ 'FirstName' | translate}}</label>\r\n                            <input id=\"txtAdminFirstName\" name=\"txtAdminFirstName\" class=\"form-control\"\r\n                                   [(ngModel)]='clinicModel.admin.firstName' #txtAdminFirstName=\"ngModel\" required />\r\n                        </div>\r\n                        <div class=\"form-group col-md-6\">\r\n                            <label class=\"nopadding\" for=\"txtAdminLastName\">{{ 'LastName' | translate}}</label>\r\n                            <input id=\"txtAdminLastName\" name=\"txtAdminLastName\" class=\"form-control\"\r\n                                   [(ngModel)]='clinicModel.admin.lastName' #txtAdminLastName=\"ngModel\" required />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"form-row\">\r\n                        <div class=\"form-group col-md-6\">\r\n                            <label class=\"nopadding\" for=\"txtAdminPhone\">{{ 'Mobile' | translate}}</label>\r\n                            <input type=\"tel\" id=\"txtAdminPhone\" name=\"txtAdminPhone\" class=\"form-control\"\r\n                                   [(ngModel)]='clinicModel.admin.reachInfo.mobile' #txtAdminPhone=\"ngModel\" pattern=\"^(\\+?[0-9]{1,5})?([1-9][0-9]{9})$\" required />\r\n                            <div [hidden]=\"txtAdminPhone.valid || txtAdminPhone.pristine\" class=\"alert alert-danger\">\r\n                                {{ 'MobileValidationMsg' | translate}}\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group col-md-6\">\r\n                            <label class=\"nopadding\" for=\"txtAdminEmail\">{{ 'Email' | translate}}</label>\r\n                            <input type=\"email\" pattern=\"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{1,63}$\" id=\"txtAdminEmail\" name=\"txtAdminEmail\" class=\"form-control\"\r\n                                   [(ngModel)]='clinicModel.admin.email' #txtAdminEmail=\"ngModel\" required />\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n                    <div class=\"form-row\" *ngIf=\"clinicModel.adminId == null\">\r\n                        <div class=\"form-group col-md-6\">\r\n                            <label for=\"txtAdminPassword\" class=\"nopadding\"> {{ 'Password' | translate}} </label>\r\n                            <input type=\"password\" id=\"txtAdminPassword\" name=\"txtAdminPassword\" class=\"form-control\"\r\n                                   pattern=\"(?=.*\\d)(?=.*[a-z]).{6,}\"\r\n                                   [(ngModel)]='clinicModel.admin.password' #txtAdminPassword=\"ngModel\" required />\r\n                            <div [hidden]=\"txtAdminPassword.valid || txtAdminPassword.pristine\" class=\"alert alert-danger\">\r\n                                {{ 'InvalidPassword' | translate}}\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group col-md-6\">\r\n                            <label for=\"txtAdminPasswordConfirm\" class=\"nopadding\"> {{ 'ConfirmPassword' | translate}} </label>\r\n                            <input type=\"password\" id=\"txtAdminPasswordConfirm\" name=\"txtAdminPasswordConfirm\"\r\n                                   pattern=\"(?=.*\\d)(?=.*[a-z]).{6,}\"\r\n                                   class=\"form-control\" [(ngModel)]=\"clinicModel.adminPasswordConfirm\" #txtAdminPasswordConfirm=\"ngModel\" required />\r\n                            <div [hidden]=\"txtAdminPasswordConfirm.valid || txtAdminPasswordConfirm.pristine\" class=\"alert alert-danger\">\r\n                                {{ 'InvalidPassword' | translate}}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"form-row\" *ngIf=\"clinicModel.adminId > 0\">\r\n                        <div class=\"form-group col-md-12\">\r\n                            <a class=\"pointer\" data-toggle=\"modal\" data-target=\"#changePasswordModal\" [class.disabled]=\"!isClinicAdmin ? true : null\">{{ 'ChangePassword' | translate}}</a>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div class=\"form-row\">\r\n                    <div class=\"form-group col-md-12\">\r\n                        <button class=\"btn btn-primary\" [disabled]=\"!organizationForm.form.valid || !isClinicAdmin\">{{ 'Save' | translate}}</button>\r\n                        <button type=\"button\" class=\"btn btn-primary\" disabled=\"{{ isClinicAdmin ? '' :'disabled'}}\">{{ 'Cancel' | translate}}</button>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </form>\r\n\r\n            <!-- change password Modal -->\r\n        </div>\r\n\r\n\r\n\r\n<div id=\"changePasswordModalAdmin\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n            <change-password [userId]=\"clinicModel.ownerId\" [userType]=\"clinicModel.owner.userType\"></change-password>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div id=\"changePasswordModal\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n            <change-password [userId]=\"clinicModel.adminId\" [userType]=\"adminType\"></change-password>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n","import {Component, OnInit} from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport {ClinicService} from '../shared/clinic.service';\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport {LocalStorageService} from 'ng2-webstorage';\r\nimport {TranslateService, LangChangeEvent} from '@ngx-translate/core';\r\n@Component({\r\n   \r\n    selector: 'clinic-address',\r\n    templateUrl: './clinic-address.component.html'\r\n})\r\n\r\nexport class ClinicAddressComponent implements OnInit {\r\n    selectAddressTab: boolean = true;\r\n    model: any = {};\r\n    showProgress: boolean = true;\r\n    active: boolean = true;\r\n    clinicId: number = 1;\r\n    userType: string = '';\r\n    isClinicAdmin: boolean = false;\r\n    public constructor(private clinicService: ClinicService,\r\n                       private storage: LocalStorageService,\r\n                       private toastr: ToastrService\r\n        , public translate: TranslateService) { }\r\n\r\n    ngOnInit(): void {\r\n        this.userType = this.storage.retrieve(\"UserType\");\r\n        if (this.userType == 'ClinicAdmin')\r\n            this.isClinicAdmin = true;\r\n\r\n        this.getClinicReachInformation();\r\n    }\r\n\r\n    getClinicReachInformation()\r\n    {\r\n        let vm = this;\r\n        vm.showProgress = true;\r\n        let clinicId = this.storage.retrieve(\"ClinicId\");\r\n\r\n        if (clinicId == null || clinicId == undefined)\r\n            clinicId = 1;\r\n\r\n        this.clinicService.getClinicReachInformation(clinicId)\r\n            .subscribe(\r\n            function (response:any) {\r\n                vm.model = response;\r\n            },\r\n            function (error:any) { \r\n                vm.toastr.error(error, '');\r\n                vm.showProgress = false;\r\n            },\r\n            function () {\r\n                vm.showProgress = false;\r\n            });\r\n    }\r\n\r\n    onSubmit() {\r\n        let vm = this;\r\n        vm.showProgress = true;\r\n        this.model.clinicId = this.clinicId;\r\n        this.clinicService.saveorUpdateReachInformation(this.model)\r\n            .subscribe(\r\n            function (response:any) {\r\n                vm.model = response;\r\n                let msg = vm.translate.instant(\"SavedSuccessfully\");\r\n                vm.toastr.success(msg, '');\r\n            },\r\n            function (error:any) { \r\n                vm.toastr.error(error, '');\r\n                vm.showProgress = false;\r\n            },\r\n            function () {\r\n                vm.showProgress = false;\r\n            });\r\n    }\r\n\r\n}","<div *ngIf=\"showProgress\">\r\n    <loading></loading>\r\n</div>\r\n\r\n<div class=\"row\">\r\n\r\n    <clinic-tab [isAddressSelected]='selectAddressTab'></clinic-tab>\r\n\r\n    <div class=\"row \">\r\n        <div class=\"row \" style=\"padding:13px;\">\r\n            <div class=\"NBbreadcrumb\">\r\n                <a>{{ 'Clinic' | translate}}</a> &nbsp;/\r\n                {{ 'AddressContact' | translate}}\r\n            </div>\r\n\r\n        </div>\r\n        \r\n\r\n        <form *ngIf=\"active\" class=\"form-horizontal\" name=\"organizationForm\" (ngSubmit)=\"onSubmit()\" #organizationForm>\r\n            <!--<div class=\"form-group\">\r\n                <div class=\"col-md-4 col-md-offset-2\">\r\n                    <button type=\"submit\" class=\"btn btn-primary\" disabled=\"{{ isClinicAdmin ? '' :'disabled'}}\">{{ 'Save' | translate}}</button>\r\n                    <button type=\"button\" class=\"btn btn-primary\" (click)=\"getClinicReachInformation()\" disabled=\"{{ isClinicAdmin ? '' :'disabled'}}\">{{ 'Cancel' | translate}}</button>\r\n                </div>\r\n            </div>-->\r\n\r\n            <address [reachInfo]=\"model\">\r\n                <div class=\"form-group\">\r\n                        <button type=\"submit\" class=\"btn btn-primary\" disabled=\"{{ isClinicAdmin ? '' :'disabled'}}\">{{ 'Save' | translate}}</button>\r\n                        <button type=\"button\" class=\"btn btn-primary\" (click)=\"getClinicReachInformation()\" disabled=\"{{ isClinicAdmin ? '' :'disabled'}}\">{{ 'Cancel' | translate}}</button>\r\n                    \r\n                </div>\r\n            </address>\r\n\r\n            \r\n        </form>\r\n\r\n    </div>\r\n</div>\r\n\r\n","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { ClinicService } from '../shared/clinic.service';\r\n\r\nimport { UtilityClass } from '../../shared/shared/utility.class';\r\nimport { TimeSlot } from '../../shared/shared/time-slot.model';\r\n//import {TimePicker} from 'primeng/primeng'\r\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';;\r\n\r\n@Component({\r\n\r\n    selector: 'clinic-appointment-details',\r\n    templateUrl: './clinic-appointment-details.component.html'\r\n})\r\n\r\nexport class ClinicAppointmentDetailsComponent implements OnInit {\r\n\r\n    @Input() slotDurations: any[] = [];\r\n    @Input() appointmentIdValue: string = '';\r\n    @Input() daysList: any[] = [];\r\n    @Input() doctorIdValue: string = '';\r\n    @Input() doctorNameValue: string = '';\r\n    @Input() clinicIdValue: string = '';\r\n    @Input() isClinicAdmin: boolean = false;\r\n    @Input() enableSaveBtn: boolean = false;\r\n    selectAppointmentsTab: boolean = true;\r\n    model: any = {};\r\n    sessionModel: any = {};\r\n    sessionsList!: any[];\r\n    sessionsListIfError!: any[];\r\n    items: any[] = [];\r\n    days: any[] = [];\r\n    controlsCount: number = 1;\r\n    appointmentId!: any;\r\n    doctorId!: any;\r\n    clinicId!: any;\r\n    doctorName!: any;\r\n    active: boolean = true;\r\n    strm: string = \"tttt\";\r\n    utilityClass: UtilityClass = new UtilityClass();\r\n    showProgress = false;\r\n    sessionIndex!: number;\r\n    sessionIdToDeleted: string = '';\r\n    @Output() onBack = new EventEmitter();\r\n    displayCalendarSlots: boolean = false;\r\n    calendarSlots: TimeSlot[] = [];\r\n\r\n    constructor(public toastr: ToastrService\r\n        , private clinicService: ClinicService\r\n        , public translate: TranslateService) { }\r\n    goBack() {\r\n        this.onBack.emit();\r\n    }\r\n\r\n    addNewItem() {\r\n        this.sessionModel = {};\r\n        this.sessionsList.push(this.sessionModel);\r\n        this.controlsCount++;\r\n\r\n    }\r\n    getControlNumber() {\r\n        return this.controlsCount; // GUID.newGuid();\r\n    }\r\n\r\n    updateModelWithSessions() {\r\n        let vm = this;\r\n        vm.sessionsListIfError = vm.sessionsList;\r\n        var updatedSessions = [];\r\n        for (let item of vm.sessionsList) {\r\n            item.startTime = this.utilityClass.getUtcDateTime(item.startTime);\r\n            item.endTime = this.utilityClass.getUtcDateTime(item.endTime);\r\n            // item.startTime = this.utilityClass.getISODateFormat(item.startTime);\r\n            //   item.endTime = this.utilityClass.getISODateFormat(item.endTime);\r\n            updatedSessions.push(item);\r\n        }\r\n        this.model.sessions = updatedSessions;\r\n    }\r\n\r\n    deleteItem(index: number): void {\r\n        this.sessionsList.splice(index, 1);\r\n\r\n    }\r\n    selectSessionToDelete(index: number, id: string) {\r\n        this.sessionIndex = index;\r\n        this.sessionIdToDeleted = id;\r\n    }\r\n\r\n    deleteSession(): void {\r\n        this.sessionsList.splice(this.sessionIndex, 1);\r\n\r\n        if (this.sessionIdToDeleted != null && this.sessionIdToDeleted != undefined && this.sessionIdToDeleted != '')\r\n            this.deleteSessionFromDB();\r\n\r\n    }\r\n    deleteSessionFromDB() {\r\n        let vm = this;\r\n        this.clinicService.deleteAppointmentScheduleSession(this.sessionIdToDeleted)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    let msg = vm.translate.instant('DeletedSuccessfully');\r\n                    vm.toastr.success(msg, '');\r\n\r\n                    // remove delete object from collection\r\n                    //var selectedObject = vm.sessionsList.find(o => o.id == vm.selectSessionToDelete);\r\n                    //var index = vm.appointmentsList.indexOf(selectedObject);\r\n                    //if (index > -1)\r\n                    //    vm.appointmentsList.splice(index, 1);\r\n\r\n                    // clear fields\r\n                    //  vm.clear();\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                    vm.showProgress = false;\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n\r\n    }\r\n    ngOnInit(): void {\r\n        let vm = this;\r\n        //this.getServiceGroupsForTree();\r\n        vm.appointmentId = vm.appointmentIdValue;\r\n        vm.days = vm.daysList;\r\n        vm.sessionsList = [];\r\n        vm.doctorId = vm.doctorIdValue;\r\n        vm.doctorName = vm.doctorNameValue;\r\n        vm.clinicId = vm.clinicIdValue;\r\n        //thisComponent.getServiceGroupsForTree();\r\n        // get team member to be updated \r\n\r\n        if (vm.appointmentId.toString().toLowerCase() != 'new') {\r\n\r\n            vm.loadAppointmentScheduleModel();\r\n        }\r\n    }\r\n\r\n    loadAppointmentScheduleModel() {\r\n        let thisComponent = this;\r\n        this.clinicService.getAppointmentScheduleById(thisComponent.appointmentId)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    thisComponent.model = response;\r\n\r\n                    thisComponent.calculateCalendarSlots(thisComponent.model.slotDuration)\r\n\r\n                    thisComponent.sessionsList = response.sessions;\r\n\r\n                    if (response.sessions == null) {\r\n                        thisComponent.sessionsList = [];\r\n                    } else {\r\n\r\n                        thisComponent.updateSessionsTime(thisComponent.sessionsList);\r\n                    }\r\n\r\n                    if (thisComponent.model.startDate)\r\n                        thisComponent.model.startDate = thisComponent.utilityClass.getUtcDateFromString(thisComponent.model.startDate);\r\n                    if (thisComponent.model.endDate)\r\n                        thisComponent.model.endDate = thisComponent.utilityClass.getUtcDateFromString(thisComponent.model.endDate);\r\n                },\r\n                function (error: any) {\r\n                    thisComponent.toastr.error(error, '');\r\n                },\r\n                function () {\r\n                    thisComponent.showProgress = false;\r\n                });\r\n    }\r\n\r\n    updateSessionsTime(sessions: any[]) {\r\n        let thisComponent = this;\r\n        for (let item of sessions) {\r\n            item.startTime = thisComponent.utilityClass.getDateTimeFromString(item.startTime);\r\n            item.endTime = thisComponent.utilityClass.getDateTimeFromString(item.endTime);\r\n            //thisComponent.strm = 'aaaaa';\r\n        }\r\n    }\r\n\r\n    formatTime(time: Date) {\r\n        var momentTime = time.getTime();\r\n        return momentTime.toString();\r\n    }\r\n\r\n    saveAppointment(): void {\r\n        let thisComponent = this;\r\n\r\n        let results: any[] = this.validateSessionSlotsWithCalendarSlot();\r\n\r\n        if (results[0] == false) {\r\n            thisComponent.toastr.error(results[1], '');\r\n            return;\r\n        }\r\n\r\n        thisComponent.showProgress = true;\r\n        thisComponent.updateModelWithSessions();\r\n\r\n        thisComponent.model.clinicId = thisComponent.clinicId;\r\n        if (this.model.startDate)\r\n            this.model.startDate = this.utilityClass.getUtcDate(this.model.startDate);\r\n        if (this.model.endDate)\r\n            this.model.endDate = this.utilityClass.getUtcDate(this.model.endDate);\r\n\r\n        if (isNaN(thisComponent.appointmentId) && thisComponent.appointmentId.toString().toLowerCase() == 'new') {\r\n            thisComponent.model.securityUserId = thisComponent.doctorId;\r\n            this.clinicService.createAppointmentSchedule(this.model)\r\n                .subscribe(\r\n                    function (response: any) {\r\n                        thisComponent.model = response;\r\n                        thisComponent.appointmentId = thisComponent.model.id\r\n                        thisComponent.toastr.success(thisComponent.translate.instant('SavedSuccessfully'), '');\r\n                        thisComponent.sessionsList = thisComponent.model.sessions;\r\n                        thisComponent.updateSessionsTime(thisComponent.sessionsList);\r\n\r\n                        thisComponent.model.startDate = thisComponent.utilityClass.getUtcDateFromString(thisComponent.model.startDate);\r\n                        thisComponent.model.endDate = thisComponent.utilityClass.getUtcDateFromString(thisComponent.model.endDate);\r\n\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () {\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n        }\r\n        else {\r\n            //Update\r\n            this.clinicService.updateAppointmentSchedule(this.model)\r\n                .subscribe(\r\n                    function (response: any) {\r\n\r\n                        thisComponent.model = response;\r\n                        thisComponent.toastr.success(thisComponent.translate.instant('SavedSuccessfully'), '');\r\n\r\n                        thisComponent.sessionsList = thisComponent.model.sessions;\r\n                        thisComponent.updateSessionsTime(thisComponent.sessionsList);\r\n\r\n                        thisComponent.model.startDate = thisComponent.utilityClass.getUtcDateFromString(thisComponent.model.startDate);\r\n                        thisComponent.model.endDate = thisComponent.utilityClass.getUtcDateFromString(thisComponent.model.endDate);\r\n\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () {\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n        }\r\n    }\r\n\r\n    validateSessionSlotsWithCalendarSlot(): any[] {\r\n        let msg: string = '';\r\n        let sessionsNames: any[] = [];\r\n        let valid = true;\r\n        this.calendarSlots = [];\r\n        this.calendarSlots = this.getFullDayTimeSlots(parseInt(this.model.slotDuration));\r\n\r\n        // loop for all sessions and check if first slot match calendar slot or not \r\n        for (let session of this.sessionsList) {\r\n            let timeSlotDate: Date = new Date(session.startTime.getFullYear(), session.startTime.getMonth(), session.startTime.getDate(), session.startTime.getHours(), session.startTime.getMinutes());\r\n            let timeSlot: TimeSlot = new TimeSlot(timeSlotDate);\r\n\r\n            let selectedSlot = this.calendarSlots.find(s => s.name == timeSlot.name);\r\n\r\n            if (!selectedSlot) {\r\n                valid = false;\r\n                sessionsNames.push(session.name);\r\n            }\r\n        }\r\n\r\n        if (!valid) {\r\n            msg = this.translate.instant('DoctorSlotsdontMatchCalendarSlots') + sessionsNames.toString();\r\n        }\r\n\r\n        return [valid, msg];\r\n    }\r\n\r\n    clear() {\r\n        this.model = {}\r\n        for (let i = 0; i < this.sessionsList.length; i++) {\r\n            this.deleteItem(i);\r\n        }\r\n        this.controlsCount = 1;\r\n        this.sessionsList = [];\r\n        this.appointmentId = 'new';\r\n        this.active = false;\r\n        setTimeout(() => this.active = true, 0);\r\n    }\r\n\r\n    getFullDayTimeSlots(daySlotDuration: any): TimeSlot[] {\r\n        if (daySlotDuration == null || daySlotDuration == undefined) {\r\n            daySlotDuration = 10;//Default\r\n        }\r\n\r\n        let dayTimeSlotsList: TimeSlot[] = [];\r\n\r\n        let slotsPerHour: number = 60 / daySlotDuration;\r\n        let slotsPerDay: number = 24 * slotsPerHour;\r\n\r\n        let todDay: Date = new Date();\r\n        //Day start time\r\n        let date: Date = new Date(todDay.getFullYear(), todDay.getMonth(), todDay.getDate(), 0, 0);\r\n\r\n        dayTimeSlotsList.push(new TimeSlot(date));\r\n\r\n        for (let slotNo = 1; slotNo < slotsPerDay; slotNo++) {\r\n\r\n            //Increase minutes\r\n            let minutes = date.getMinutes() + daySlotDuration;\r\n            date.setMinutes(minutes);\r\n\r\n            //Add time to the list\r\n            dayTimeSlotsList.push(new TimeSlot(date));\r\n        }\r\n\r\n        return dayTimeSlotsList;\r\n    }\r\n\r\n    calculateCalendarSlots(slotduration: any) {\r\n        this.calendarSlots = [];\r\n        if (slotduration)\r\n            this.calendarSlots = this.getFullDayTimeSlots(parseInt(slotduration));\r\n    }\r\n\r\n}\r\n\r\n","\r\n\r\n<h4 class=\"h4Deco\">\r\n    {{ 'BasicInfo' | translate}} <span class=\"text-center\">{{doctorName}}</span>\r\n</h4>\r\n<div class=\"legend well\">\r\n\r\n    <form *ngIf=\"active\" class=\"form-horizontal\" name=\"appointmentForm\" #appointmentForm=\"ngForm\">\r\n        <div class=\"form-group\">\r\n            <div class=\"col-md-4 col-md-offset-2\">\r\n                <button class=\"btn btn-primary\" [disabled]=\"!appointmentForm.valid ||(!enableSaveBtn && !isClinicAdmin)\" (click)=\"saveAppointment()\">{{ 'Save' | translate}}</button>\r\n                <button class=\"btn btn-primary\" (click)=\"clear()\" disabled=\"{{ enableSaveBtn || isClinicAdmin ? '' :'disabled'}}\">{{ 'New' | translate}}</button>\r\n                <button class=\"btn btn-primary\" type=\"button\" (click)=\"goBack()\">{{ 'Back' | translate}}</button>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n            <label for=\"txtPhysicalStartDate\" class=\"control-label col-md-2\"> {{ 'StartDate' | translate}}</label>\r\n            <div class=\"col-md-2\">\r\n                <p-calendar [(ngModel)]=\"model.startDate\" [monthNavigator]=\"true\" [yearNavigator]=\"true\" dateFormat=\"dd/mm/yy\"\r\n                            [showIcon]=\"true\" [required]=\"true\" [ngModelOptions]=\"{standalone: true}\" yearRange=\"2000:2050\"></p-calendar>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n            <label for=\"txtPhysicalEndDate\" class=\"control-label col-md-2\"> {{ 'EndDate' | translate}}</label>\r\n            <div class=\"col-md-2\">\r\n                <p-calendar [(ngModel)]=\"model.endDate\" [monthNavigator]=\"true\" [yearNavigator]=\"true\" dateFormat=\"dd/mm/yy\"\r\n                            [showIcon]=\"true\" [required]=\"true\" [ngModelOptions]=\"{standalone: true}\" yearRange=\"2000:2050\"></p-calendar>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n            <label class=\"control-label col-md-2\" for=\"ddlSlotDuration\">{{ 'SlotDuration' | translate}}</label>\r\n            <div class=\"col-md-2\">\r\n                <select class=\"form-control\" id=\"ddlSlotDuration\" name=\"ddlSlotDuration\" [(ngModel)]=\"model.slotDuration\" #ddlSlotDuration=\"ngModel\" required #d (change)=\"calculateCalendarSlots(d.value)\">\r\n                    <option class=\"emptyOption\" value=\"\" selected></option>\r\n                    <option *ngFor=\"let item of slotDurations\" [value]=\"item\">{{item}}</option>\r\n                </select>\r\n            </div>\r\n            <div class=\"col-md-2 nopadding\">\r\n                <a [title]=\"'CalendarSlots' | translate\" data-toggle=\"modal\" data-target=\"#calendarSlotsPopup\" class=\"pointer\">\r\n                    <span class=\"fa fa-calendar\"></span>\r\n                </a>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"txtName\" class=\"control-label col-md-2\">{{ 'Remarks' | translate}}</label>\r\n            <div class=\"col-md-6\">\r\n                <textarea id=\"txtDescription\" name=\"txtDescription\" class=\"form-control\" [(ngModel)]=\"model.description\"></textarea>\r\n            </div>\r\n        </div>\r\n        <h4 class=\"h4Deco\">\r\n            {{'Sessions' | translate}}\r\n        </h4>\r\n        <div class=\"row\">\r\n            <table class=\"table table-responsive table-hover\">\r\n                <thead class=\"alert alert-info\">\r\n                    <tr>\r\n                        <th>{{ 'Day' | translate}}</th>\r\n                        <th>{{ 'SessionName' | translate}}</th>\r\n                        <th>{{ 'StartTime' | translate}}</th>\r\n                        <th>{{ 'EndTime' | translate}}</th>\r\n                        <th>{{ 'Waitin' | translate}}</th>\r\n                        <th>{{ 'Remarks' | translate}}</th>\r\n                        <th class=\"text-center\">{{ 'Delete' | translate}}</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngFor=\"let session of sessionsList; let i=index\">\r\n                        <td class=\"col-md-2\">\r\n                            <select class=\"form-control\" name=\"ddlDays{{i}}{{getControlNumber()}}\" [(ngModel)]=\"session.day\" required>\r\n                                <option value=\"\">{{ 'Select' | translate}}</option>\r\n                                <option *ngFor=\"let ele of days\" [value]=\"ele.value\">{{ele.text| translate}}</option>\r\n                            </select>\r\n                        </td>\r\n                        <td class=\"col-md-2\">\r\n                            <input type=\"text\" name=\"txtName{{i}}{{getControlNumber()}}\" [(ngModel)]=\"session.name\" class=\"form-control\" required />\r\n                        </td>\r\n                        <td class=\"col-md-1\">\r\n                            <p-calendar name=\"startTime{{i}}{{getControlNumber()}}\" [(ngModel)]=\"session.startTime\"\r\n                                        [required]=\"true\" [timeOnly]=\"true\" [ngModelOptions]=\"{standalone: true}\"></p-calendar>\r\n                        </td>\r\n                        <td class=\"col-md-1\">\r\n                            <p-calendar name=\"endTime{{i}}{{getControlNumber()}}\" [(ngModel)]=\"session.endTime\"\r\n                                        [required]=\"true\" [timeOnly]=\"true\"></p-calendar>\r\n                        </td>\r\n                        <td class=\"col-md-1\">\r\n                            <input type=\"number\" min=\"0\" step=\"1\" name=\"txtWaitIn{{i}}{{getControlNumber()}}\" [(ngModel)]=\"session.waitIn\" class=\"form-control\" required />\r\n                        </td>\r\n                        <td>\r\n                            <input type=\"text\" name=\"txtRemark{{i}}{{getControlNumber()}}\" [(ngModel)]=\"session.description\" class=\"form-control\" />\r\n                        </td>\r\n                        <td class=\"text-center\">\r\n                            <a data-toggle=\"modal\" data-target=\"#deleteServiceBenficiary\" class=\"pointer\"\r\n                               (click)=\"selectSessionToDelete(i,session.id)\">\r\n                                <i class=\"glyphicon glyphicon-remove iconAd\"></i>\r\n\r\n                            </a>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n                <tfoot>\r\n                    <tr class=\"alert alert-info\">\r\n                        <th colspan=\"7\">\r\n                            <div style=\"float:left;\">\r\n                                <a class=\"pointer\" (click)=\"addNewItem()\">\r\n                                    <img src=\"assets/images/AddImage.png\" />\r\n                                    <span style=\"text-decoration:underline;\">\r\n                                        {{ 'AddNew' | translate}}\r\n                                    </span>\r\n                                </a>\r\n                            </div>\r\n                        </th>\r\n                    </tr>\r\n\r\n                </tfoot>\r\n            </table>\r\n        </div>\r\n    </form>\r\n    <div id=\"deleteServiceBenficiary\" class=\"modal fade\" role=\"dialog\">\r\n        <div class=\"modal-dialog\">\r\n            <!-- Modal content-->\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header\">\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                    <h4 class=\"modal-title\">{{ 'ConfirmDelete' | translate}}</h4>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                    <p>{{ 'AreYouSureDelete' | translate}}</p>\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                    <button type=\"button\" class=\"btn btn-danger\" (click)=\"deleteSession()\" data-dismiss=\"modal\">{{ 'Yes' | translate}}</button>\r\n                    <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\">{{ 'No' | translate}}</button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n\r\n    <div id=\"calendarSlotsPopup\" class=\"modal fade\" role=\"dialog\">\r\n        <div class=\"modal-dialog\" style=\"width:250px;\">\r\n            <!-- Modal content-->\r\n            <div class=\"modal-content\" >\r\n                <div class=\"modal-header\">\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                    <h4 class=\"modal-title\">{{ 'CalendarSlots' | translate}}</h4>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                    <div style=\"height:300px;overflow:auto;\">\r\n                        <table class=\"table table-responsive table-hover\">\r\n                            <thead class=\"alert alert-info\">\r\n                                <tr>\r\n                                    <th class=\"text-center\">{{ 'Slot' | translate}}</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr *ngFor=\"let slot of calendarSlots\">\r\n                                    <td class=\"text-center\">\r\n                                        {{slot.name}}\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                    <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\">{{ 'Close' | translate}}</button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n\r\n</div>\r\n\r\n\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\nimport { ClinicService } from '../shared/clinic.service';\r\n\r\nimport { UtilityClass } from '../../shared/shared/utility.class';\r\n//import {TableModule} from 'primeng/table';\r\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\r\n\r\nimport { AccountService } from '../../security/shared/account.service';\r\nimport { UserPermissions } from '../../classes/user-permissions.class';\r\nimport { PermissionKeyEnum } from '../../shared/shared/permission-key.enum';\r\nimport { TreeNode } from 'primeng/api';\r\nimport { Table } from 'primeng/table';\r\n@Component({\r\n\r\n    selector: 'clinic-appointments',\r\n    templateUrl: './clinic-appointments.component.html'\r\n})\r\n\r\nexport class ClinicAppointmentsComponent implements OnInit {\r\n    selectAppointmentsTab: boolean = true;\r\n    count: number = 12;\r\n    showProgress = true;\r\n    organizationStructure: any[] = [];\r\n    clinicId!: any;\r\n    doctorId: string = \"0\";\r\n    doctorName: string = \"\";\r\n    slotDurations: any[] = [];\r\n    appointmentsList!: any[];\r\n    daysList: any[] = [];\r\n    appointmentId = '';\r\n    selectedFiles!: TreeNode;\r\n    departmentId: any;\r\n    divisionId: any;\r\n    appointmentToBeDeleted: any;\r\n    isDetailsVisible: boolean = false;\r\n    isDepartmentOrDivisionSelected = false;\r\n    isDoctorSelected = false;\r\n    utilityClass: UtilityClass = new UtilityClass();\r\n    userPermisions: UserPermissions = new UserPermissions();\r\n    key: PermissionKeyEnum = new PermissionKeyEnum();\r\n    enableEditBtn: boolean = false;\r\n    enableActivateBtn: boolean = false;\r\n    enableSaveBtn: boolean = false;\r\n    userType: string = '';\r\n    isClinicAdmin: boolean = false;\r\n    enableNewBtn: boolean = false;\r\n    enableDeleteBtn: boolean = false;\r\n    lstToTranslated: string[] = [];\r\n    lstToBeTranslated: string[] = [];\r\n    loading: boolean = true;\r\n    @ViewChild('dt') table!: Table;\r\n    showDetails(id: string) {\r\n        this.isDetailsVisible = true;\r\n        this.appointmentId = id;\r\n    }\r\n\r\n    hideDetails() {\r\n        this.isDetailsVisible = false;\r\n        //in case of the doctor selected only.\r\n        this.loadAppointmentSchedules();\r\n    }\r\n\r\n    constructor(public toastr: ToastrService,\r\n        private localStorage: LocalStorageService\r\n        , private clinicService: ClinicService\r\n        , public translate: TranslateService\r\n        , public accountService: AccountService) { }\r\n\r\n\r\n    ngOnInit(): void {\r\n        let vm = this;\r\n        this.lstToTranslated = ['label', 'labelTranslation'];\r\n        this.lstToBeTranslated = ['', ''];\r\n        this.clinicId = this.localStorage.retrieve(\"ClinicID\");\r\n        this.userType = this.localStorage.retrieve(\"UserType\");\r\n        if (this.userType == 'ClinicAdmin')\r\n            this.isClinicAdmin = true;\r\n\r\n        this.loadOrganizationStructureTree();\r\n        this.clinicService.getAppointmentScheduleWrapper()\r\n            .subscribe(\r\n                function (response: any) {\r\n                    vm.daysList = response.days;\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                    //  vm.showProgress = false;\r\n                },\r\n                function () { // finally\r\n                    //  vm.showProgress = false;\r\n                });\r\n\r\n        vm.fillSlotsList(vm.count);\r\n        if (vm.doctorId.toString().toLowerCase() != \"0\")\r\n            vm.loadAppointmentSchedules();\r\n\r\n        if (!this.isClinicAdmin) {\r\n            if (this.accountService.userPermision._isScalar != undefined)\r\n                this.accountService.userPermision.subscribe((item: any) => this.handleUserInterfaceViews(item));\r\n            else\r\n                this.handleUserInterfaceViews(this.accountService.userPermision);\r\n        }\r\n    }\r\n    loadOrganizationStructureTree() {\r\n        let vm = this;\r\n        vm.showProgress = true;\r\n        //let userId = this.storage.retrieve(\"UserID\");\r\n        this.clinicService.getOrganizationStructureTreeWithDoctorsOnly(this.clinicId)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    vm.organizationStructure = response;\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                    vm.showProgress = false;\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n    }\r\n    loadAppointmentSchedules() {\r\n        let vm = this;\r\n        this.clinicService.getAllAppointmentSchedules(vm.doctorId).subscribe(\r\n            function (response: any) {\r\n                vm.appointmentsList = response;\r\n\r\n            },\r\n            function (error: any) {\r\n                vm.toastr.error(error, '');\r\n                vm.loading = false;\r\n            },\r\n            function () { // finally\r\n                vm.showProgress = false;\r\n                vm.loading = false;\r\n\r\n            });\r\n\r\n    }\r\n    getAllAppointmentSchedulesUnderClinic() {\r\n        let vm = this;\r\n        this.clinicService.getAllAppointmentSchedulesUnderClinic(vm.clinicId).subscribe(\r\n            function (response: any) {\r\n                vm.appointmentsList = response;\r\n            },\r\n            function (error: any) {\r\n                vm.toastr.error(error, '');\r\n            },\r\n            function () { // finally\r\n                vm.showProgress = false;\r\n            });\r\n\r\n    }\r\n    getAllAppointmentSchedulesUnderDepartment() {\r\n        let vm = this;\r\n        this.clinicService.getAllAppointmentSchedulesUnderDepartment(vm.departmentId).subscribe(\r\n            function (response: any) {\r\n                vm.appointmentsList = response;\r\n            },\r\n            function (error: any) {\r\n                vm.toastr.error(error, '');\r\n            },\r\n            function () { // finally\r\n                vm.showProgress = false;\r\n            });\r\n\r\n    }\r\n    getAllAppointmentSchedulesUnderDivision() {\r\n        let vm = this;\r\n        this.clinicService.getAllAppointmentSchedulesUnderDivision(vm.divisionId).subscribe(\r\n            function (response: any) {\r\n                vm.appointmentsList = response;\r\n            },\r\n            function (error: any) {\r\n                vm.toastr.error(error, '');\r\n            },\r\n            function () { // finally\r\n                vm.showProgress = false;\r\n            });\r\n\r\n    }\r\n    fillSlotsList(count: number): void {\r\n        let j = 0;\r\n        for (let i = 0; i < count; i++) {\r\n\r\n            j += 5;\r\n            this.slotDurations.push(j);\r\n        }\r\n    }\r\n    ///////////////\r\n    nodeSelect(event: any) {\r\n        if (event.node.type.toLocaleLowerCase() == \"securityuser\") {\r\n            this.doctorId = event.node.data;\r\n            this.doctorName = event.node.label;\r\n            this.isDoctorSelected = true;\r\n            this.loadAppointmentSchedules();\r\n            this.isDepartmentOrDivisionSelected = false;\r\n            // this.clear();\r\n        } else if (event.node.type.toLocaleLowerCase() == \"clinicdepartment\") {\r\n            this.departmentId = event.node.data;\r\n            this.isDepartmentOrDivisionSelected = true;\r\n            this.isDoctorSelected = false;\r\n            this.getAllAppointmentSchedulesUnderDepartment();\r\n\r\n            // this.clear();\r\n        } else if (event.node.type.toLocaleLowerCase() == \"clinicdivision\") {\r\n            this.divisionId = event.node.data;\r\n            this.isDepartmentOrDivisionSelected = true;\r\n            this.isDoctorSelected = false;\r\n            this.getAllAppointmentSchedulesUnderDivision();\r\n        }\r\n    }\r\n    nodeUnselect(event: any) {\r\n        //   this.serviceModel.serviceId = '';\r\n        this.clear();\r\n    }\r\n    clear() {\r\n        this.appointmentsList = [];\r\n    }\r\n    changeActivation(packageId: any, event: any) {\r\n        let vm = this;\r\n        vm.showProgress = true;\r\n\r\n        this.clinicService.toggleAppointmentScheduleActivation(packageId)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    // get company by Id from the companies List\r\n                    //var selectedCompany = vm.companiesList.find(comp => comp.id == id);\r\n                    //selectedCompany.isActive = response;\r\n\r\n                    // load all companies\r\n                    //   vm.loadServicePackages();\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                    vm.showProgress = false;\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n    }\r\n    selectAppointmentScheduleToDelete(id: string) {\r\n        this.appointmentToBeDeleted = id;\r\n    }\r\n    deleteSelectedItem(): void {\r\n\r\n        let vm = this;\r\n        if (this.appointmentToBeDeleted == '') {\r\n            let msg = vm.translate.instant(\"NoItemSelected\");\r\n            vm.toastr.warning(msg, '');\r\n            return;\r\n        }\r\n\r\n        vm.showProgress = true;\r\n        this.clinicService.deleteAppointmentSchedule(this.appointmentToBeDeleted)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    let msg = vm.translate.instant(\"DeletedSuccessfully\");\r\n                    vm.toastr.success(msg, '');\r\n\r\n                    // remove delete object from collection\r\n                    var selectedObject = vm.appointmentsList.find(o => o.id == vm.appointmentToBeDeleted);\r\n                    var index = vm.appointmentsList.indexOf(selectedObject);\r\n                    if (index > -1)\r\n                        vm.appointmentsList.splice(index, 1);\r\n\r\n                    // clear fields\r\n                    //  vm.clear();\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                    vm.showProgress = false;\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n    }\r\n\r\n    handleUserInterfaceViews(user: any) {\r\n        if (user.permissions != undefined) {\r\n\r\n            for (let item of user.permissions) {\r\n                if (item.permission.key == this.key.AppointmentMaster) {\r\n                    if (item.fullControl == true || item.add)\r\n                        this.enableNewBtn = true;\r\n                    if (item.fullControl == true || item.edit)\r\n                        this.enableEditBtn = true;\r\n                    if (item.fullControl == true || item.activate)\r\n                        this.enableActivateBtn = true;\r\n                    if (item.fullControl)\r\n                        this.enableDeleteBtn = true;\r\n                    if (item.fullControl || item.add || item.edit)\r\n                        this.enableSaveBtn = true;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n\r\n","<div *ngIf=\"showProgress\">\r\n    <loading></loading>\r\n</div>\r\n\r\n\r\n<clinic-tab [isAppointmentsSelected]='selectAppointmentsTab' *ngIf=\"isClinicAdmin\"></clinic-tab>\r\n<shared-tabs [isAppointmentsSelected]='selectAppointmentsTab' *ngIf=\"!isClinicAdmin\"></shared-tabs>\r\n<div class=\"row nopadding\">\r\n    <div class=\"NBbreadcrumb\">\r\n        <a>{{ 'Clinic' | translate}}</a> &nbsp;/\r\n        {{ 'AppointmentMaster' | translate}}\r\n    </div>\r\n    <div id=\"divTable\" class=\"padding5\" *ngIf=\"!isDetailsVisible\">\r\n        <!--<h4>Select Doctor</h4>-->\r\n        <div class=\"nopadding treeBorder\" style=\"height:180px;\">\r\n            <!--<p-tree [value]=\"items\" selectionMode=\"single\" [(selection)]=\"selectedFiles\"></p-tree>-->\r\n            <p-tree [value]=\"organizationStructure | translateObjects  : null : null : lstToTranslated \"\r\n                selectionMode=\"single\" [(selection)]=\"selectedFiles\" (onNodeSelect)=\"nodeSelect($event)\">\r\n                <ng-template let-node pTemplate=\"Medical\">\r\n                    {{node.label}}\r\n                </ng-template>\r\n                <ng-template let-node pTemplate=\"ClinicDepartment\">\r\n                    {{node.label}}\r\n                </ng-template>\r\n                <ng-template let-node pTemplate=\"ClinicDivision\">\r\n                    {{node.label}}\r\n                </ng-template>\r\n                <ng-template let-node pTemplate=\"SecurityUser\">\r\n                    <span class=\"glyphicon glyphicon-user\"></span> {{node.label}}\r\n                </ng-template>\r\n            </p-tree>\r\n        </div>\r\n        <h4 class=\"h4Deco\">{{ 'DoctorSchedules' | translate}}</h4>\r\n        <div class=\"row text-right\">\r\n            <button type=\"button\" class=\"btn btn-primary\" *ngIf=\"isDoctorSelected\" (click)=\"showDetails('new')\"\r\n                disabled=\"{{ enableNewBtn || isClinicAdmin ? '' :'disabled'}}\">{{ 'NewSchedule' | translate}}</button>\r\n        </div>\r\n        <br />\r\n        <div>&nbsp;</div>\r\n        <div class=\"row\">\r\n            <div class=\"inner-addon left-addon\">\r\n                <i class=\"glyphicon glyphicon-search\"></i>\r\n                <input pInputText type=\"text\" (input)=\"dt.filterGlobal($event.target.value, 'contains')\"\r\n                    [placeholder]=\"'Search' | translate\" />\r\n            </div>\r\n\r\n            <!---New Table-->\r\n            <p-table #dt [value]=\"appointmentsList\"\r\n                dataKey=\"id\" [rowHover]=\"true\" [rows]=\"10\" [showCurrentPageReport]=\"true\"\r\n                [rowsPerPageOptions]=\"[10,20,30,40,50,100]\"  [paginator]=\"true\"\r\n                currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" [filterDelay]=\"0\"\r\n                [globalFilterFields]=\"['startDateString','endDateString','slotDuration','description']\">\r\n                <ng-template pTemplate=\"header\">\r\n                    <tr>\r\n                        <th pSortableColumn=\"startDateString\">{{'StartDate' | translate}} <p-sortIcon\r\n                                field=\"startDateString\"></p-sortIcon>\r\n                        </th>\r\n                        <th pSortableColumn=\"endDateString\">{{'EndDate' | translate}} <p-sortIcon field=\"endDateString\">\r\n                            </p-sortIcon>\r\n                        </th>\r\n                        <th pSortableColumn=\"slotDuration\">{{'SlotDuration' | translate}} <p-sortIcon\r\n                                field=\"slotDuration\"></p-sortIcon>\r\n                        </th>\r\n                        <th pSortableColumn=\"description\">{{'Remarks' | translate}} <p-sortIcon field=\"description\">\r\n                            </p-sortIcon>\r\n                        </th>\r\n                        <th><span styleClass=\"text-center width70\">{{'Active' | translate}} </span>\r\n                        </th>\r\n                        <th><span styleClass=\"text-center width70\">{{'Edit' | translate}} </span>\r\n                        </th>\r\n                        <th><span styleClass=\"text-center width70\">{{'Delete' | translate}} </span>\r\n                        </th>\r\n                    </tr>\r\n\r\n                </ng-template>\r\n                <ng-template pTemplate=\"body\" let-item>\r\n                    <tr class=\"p-selectable-row\">\r\n                        <td>\r\n                            {{item.startDateString}}\r\n                        </td>\r\n                        <td>\r\n                            <span>{{item.endDateString}}</span>\r\n                        </td>\r\n                        <td>\r\n                            <span>{{item.slotDuration}}</span>\r\n                        </td>\r\n                        <td>\r\n                            <span>{{item.description}}</span>\r\n                        </td>\r\n                        <td>\r\n                            <input id=\"ChkIsActiveInGrid\" name=\"ChkIsActiveInGrid\" class=\"ace ace-switch ace-switch-6\"\r\n                                type=\"checkbox\" [checked]=\"item.isActive\" (click)=\"changeActivation(item.id , $event)\"\r\n                               />\r\n                            <span class=\"lbl\"></span>\r\n                        </td>\r\n                        <td style=\"text-align: center\">\r\n                            <a class=\"pointer\" (click)=\"showDetails(item.id)\"\r\n                                [class.disabled]=\"!enableEditBtn && !isClinicAdmin ? true : null\">\r\n                                <i class=\"fa fa-pencil fa-2x\" style=\"color: #32bea6;\"></i>\r\n                            </a>\r\n                        </td>\r\n                        <td>\r\n                            <a data-toggle=\"modal\" data-target=\"#deleteAppointmentSchedule\" class=\"pointer\"\r\n                                (click)=\"selectAppointmentScheduleToDelete(item.id)\"\r\n                                [class.disabled]=\"!enableDeleteBtn && !isClinicAdmin ? true : null\">\r\n                                <i class=\"glyphicon glyphicon-remove iconAd\"></i>\r\n                            </a>\r\n                        </td>\r\n                    </tr>\r\n                </ng-template>\r\n                <ng-template pTemplate=\"emptymessage\">\r\n                    <tr>\r\n                        <td colspan=\"8\">No data found.</td>\r\n                    </tr>\r\n                </ng-template>\r\n            </p-table>\r\n            <!--End Table-->\r\n\r\n\r\n        </div>\r\n    </div>\r\n    <div id=\"divDetails\" class=\"padding5\" *ngIf=\"isDetailsVisible\">\r\n        <clinic-appointment-details (onBack)=\"hideDetails()\" [slotDurations]=\"slotDurations\"\r\n            [appointmentIdValue]=\"appointmentId\" [daysList]=\"daysList\" [doctorIdValue]=\"doctorId\"\r\n            [clinicIdValue]=\"clinicId\" [doctorNameValue]=\"doctorName\" [isClinicAdmin]=\"isClinicAdmin\"\r\n            [enableSaveBtn]=\"enableSaveBtn\"></clinic-appointment-details>\r\n    </div>\r\n</div>\r\n<div id=\"deleteAppointmentSchedule\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\"> {{ 'ConfirmDelete' | translate}}</h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <p>{{ 'AreYouSureDelete' | translate}}</p>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-danger\" (click)=\"deleteSelectedItem()\" data-dismiss=\"modal\">{{\r\n                    'Yes' | translate}}</button>\r\n                <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\">{{ 'No' | translate}}</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\r\nimport { ClinicService } from '../shared/clinic.service';\r\n\r\n\r\n\r\n@Component({\r\n\r\n    selector: 'clinic-dashboard',\r\n    templateUrl: './clinic-dashboard.component.html'\r\n})\r\n\r\nexport class ClinicDashboardComponent implements OnInit {\r\n\r\n    selectDashboardTab: boolean = true;\r\n    model: any = {};\r\n    showProgress: boolean = false;\r\n    clinicId!: any;\r\n    userType: string = '';\r\n    isClinicAdmin: boolean = false;\r\n    options: any;\r\n    lineChartOptions: any;\r\n    barChartOptions: any;\r\n    weekAppointments: any;\r\n    feedbackDoughnutdata!: any;\r\n    visitsBarChartData: any;\r\n\r\n    //data = {\r\n    //    labels: [, , , , , , , , , , , , , ,,,,],\r\n    //    datasets: [\r\n    //        {\r\n    //            data: [10, 20, 30, 31, 22, 25, 14, 27, 25, 12, 35, 14, 14, 10, 12, 15, 22, 31],\r\n    //            fill: true,\r\n    //            backgroundColor: '#26a69a',\r\n    //            borderColor: '#26a69a',\r\n    //            radius:2\r\n    //        },\r\n    //    ]\r\n    //};\r\n\r\n    //data = {\r\n    //    labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July' , 'August' , 'September' , 'October' , 'November' , 'December'],\r\n    //    datasets: [\r\n    //        {\r\n    //            label: 'My First dataset',\r\n    //            backgroundColor: '#42A5F5',\r\n    //            borderColor: '#1E88E5',\r\n    //            data: [65, 59, 80, 81, 56, 55, 40, 59, 80, 81, 56, 59]\r\n    //        },\r\n    //        {\r\n    //            label: 'My Second dataset',\r\n    //            backgroundColor: '#9CCC65',\r\n    //            borderColor: '#7CB342',\r\n    //            data: [65, 59, 80, 80, 50, 45, 35, 30, 70, 60, 50, 55]\r\n    //        }\r\n    //    ]\r\n    //}\r\n\r\n    @ViewChild('lineChart') lineChart: any;\r\n    @ViewChild('feedbackDoughnutChart') feedbackDoughnutChart: any;\r\n    @ViewChild('visitsBarChart') visitsBarChart: any;\r\n\r\n    public constructor(private clinicService: ClinicService,\r\n        private storage: LocalStorageService,\r\n        public toastr: ToastrService,\r\n        public translate: TranslateService) {\r\n\r\n        this.options = {\r\n            title: {\r\n                display: false,\r\n                fontSize: 15\r\n            },\r\n            legend: {\r\n                display: false,\r\n            },\r\n            scales: {\r\n                yAxes: [{\r\n                    ticks: {\r\n                        beginAtZero: true,\r\n                        //yAxisMinimumInterval: 1,\r\n                        //stepSize: Math.ceil(max / 7)\r\n                    }\r\n                }],\r\n            }\r\n        };\r\n\r\n        this.barChartOptions = {\r\n            title: {\r\n                display: false,\r\n                fontSize: 15\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    display: true\r\n                }],\r\n                yAxes: [{\r\n                    ticks: {\r\n                        beginAtZero: true\r\n                    },\r\n                    display: true,\r\n                }],\r\n            }\r\n        };\r\n\r\n        this.lineChartOptions = {\r\n            title: {\r\n                display: false,\r\n                fontSize: 15\r\n            },\r\n            legend: {\r\n                display: false,\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    display: false\r\n                }],\r\n                yAxes: [{\r\n                    ticks: {\r\n                        beginAtZero: true\r\n                    },\r\n                    display: false,\r\n                }],\r\n            }\r\n        };\r\n    }\r\n\r\n    ngOnInit(): void {\r\n\r\n        let vm = this;\r\n        vm.model = {};\r\n        vm.showProgress = true;\r\n        this.clinicId = this.storage.retrieve(\"ClinicId\");\r\n\r\n        this.userType = this.storage.retrieve(\"UserType\");\r\n        if (this.userType == 'ClinicAdmin')\r\n            this.isClinicAdmin = true;\r\n\r\n        this.clinicService.getClinicDashboardWrapper(this.clinicId)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    vm.model = response;\r\n                    vm.fillAppointmentsChart(response);\r\n                    vm.fillFeedbackChart(response);\r\n                    vm.fillVisitsandPatientsChart(response);\r\n\r\n                    vm.lineChart.reinit();\r\n                    vm.feedbackDoughnutChart.reinit();\r\n                    vm.visitsBarChart.reinit();\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                    vm.showProgress = false;\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n    }\r\n\r\n    fillAppointmentsChart(response: any) {\r\n        let labels: string[] = response.weekAppoitment.labels;\r\n        let data: number[] = response.weekAppoitment.data;\r\n\r\n        this.weekAppointments = {\r\n            labels: labels,\r\n            datasets: [\r\n                {\r\n                    data: data,\r\n                    fill: false,\r\n                    borderColor: '#4bc0c0',\r\n                    backgroundColor: '#4bc0c0',\r\n                    label: '',\r\n                    radius: 5,\r\n                    hoverRadius: 5\r\n                },\r\n            ]\r\n        };\r\n\r\n        // check if the maximum value in the array is smaller than 5 make step size 1 to ignore decimals\r\n        if (Math.max.apply(null, data) < 5) {\r\n            this.options = {\r\n                title: {\r\n                    display: false,\r\n                    fontSize: 15\r\n                },\r\n                legend: {\r\n                    display: false,\r\n                },\r\n                scales: {\r\n                    yAxes: [{\r\n                        ticks: {\r\n                            beginAtZero: true,\r\n                            stepSize: 1\r\n                        }\r\n                    }],\r\n                }\r\n            };\r\n        }\r\n    }\r\n\r\n    fillFeedbackChart(response: any) {\r\n        let replied = this.translate.instant('Replied');\r\n        let pending = this.translate.instant('Pending');\r\n\r\n        this.feedbackDoughnutdata = {\r\n            labels: [replied, pending],\r\n            datasets: [\r\n                {\r\n                    data: [response.repliedFeedback, response.pendingFeedback],\r\n                    backgroundColor: [\r\n                        \"#36A2EB\",\r\n                        \"#FF6384\",\r\n                    ],\r\n                    hoverBackgroundColor: [\r\n                        \"#5db0e8\",\r\n                        \"#f198aa\",\r\n                    ]\r\n                }]\r\n        };\r\n    }\r\n\r\n    fillVisitsandPatientsChart(response: any) {\r\n        let visitsLabels: string[] = response.visitsInYear.labels;\r\n        let visitsData: number[] = response.visitsInYear.data;\r\n        let patientData: number[] = response.patientsInYear.data;\r\n\r\n        this.visitsBarChartData = {\r\n            labels: visitsLabels,\r\n            datasets: [\r\n                {\r\n                    label: this.translate.instant('NoOfVisits'),\r\n                    backgroundColor: '#42A5F5',\r\n                    borderColor: '#1E88E5',\r\n                    data: visitsData\r\n                },\r\n                {\r\n                    label: this.translate.instant('NoOfPatients'),\r\n                    backgroundColor: '#9CCC65',\r\n                    borderColor: '#7CB342',\r\n                    data: patientData\r\n                }\r\n            ]\r\n        }\r\n    }\r\n\r\n\r\n}","<div *ngIf=\"showProgress\">\r\n    <loading></loading>\r\n</div>\r\n\r\n<div class=\"row\">\r\n\r\n    <clinic-tab [isDashboardSelected]=\"selectDashboardTab\"></clinic-tab>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"row \" style=\"padding:13px;\">\r\n            <div class=\"NBbreadcrumb\">\r\n                <a>{{ 'SystemAdmin' | translate}}</a> &nbsp;/\r\n                {{ 'Dashboard' | translate}}\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-md-6\">\r\n            <div class=\"row well containerDetails\">\r\n                <div class=\"col-md-3 col-sm-3 col-xs-6\">\r\n                    <div class=\"iconOuter docIconStyle\">\r\n                        <span class=\"nav-icon\"><i class=\"fa fa-user-md iconStyle \"></i></span>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-9 col-sm-9 col-xs-6 details\">\r\n                    <div class=\"docTile\"> {{'ActiveDoctors' | translate}}</div>\r\n                    <div class=\"status\">{{model.activeDoctorsCount}}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-6\">\r\n            <div class=\"row well containerDetails\">\r\n                <div class=\"col-md-3 col-sm-3 col-xs-6\">\r\n                    <div class=\"iconOuter appointmentIconStyle\">\r\n                        <span class=\"nav-icon\"><i class=\"fa fa-phone iconStyle\"></i></span>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-9 col-sm-9 col-xs-6 details\">\r\n                    <div class=\"docTile\"> {{'TodaysAppointment' | translate}}</div>\r\n                    <div class=\"status\">{{model.todayAppointmentsCount}}</div>\r\n                    <div>\r\n                        <span class=\"w-meta-title\" style=\"text-transform: lowercase;\">{{'Seen' | translate}} : {{model.seenAppoitmentCount}}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-md-6 \">\r\n            <div class=\"row well containerDetails\">\r\n                <div class=\"col-md-3 col-sm-3 col-xs-6\">\r\n                    <div class=\"iconOuter paymentIconStyle\">\r\n                        <span class=\"nav-icon\"><i class=\"fa fa-credit-card iconStyle \"></i></span>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-9 col-sm-9 col-xs-6 details\">\r\n                    <div class=\"docTile\"> {{ 'TodaysPayments' | translate }}</div>\r\n                    <div class=\"status\">{{model.paymentsAmount}}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-6 \">\r\n            <div class=\"row well containerDetails\">\r\n                <div class=\"col-md-3 col-sm-3 col-xs-6\">\r\n                    <div class=\"iconOuter refundIconStyle\">\r\n                        <span class=\"nav-icon\"><i class=\"fa  fa-undo iconStyle\"></i></span>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-9 col-sm-9 col-xs-6 details\">\r\n                    <div class=\"docTile\"> {{'TodaysRefunds' | translate}}</div>\r\n                    <div class=\"status\">{{model.refundAmount}}</div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-md-6 col-sm-12\">\r\n            <div class=\"mini-stats-widget \">\r\n                <div class=\"mini-stats-top\">\r\n                    <span class=\"mini-stats-label activeDoc upperCase\">{{'NoOfVisitsAndPatients' | translate}}</span>\r\n                </div>\r\n                <div class=\"mini-stats-chart\">\r\n                    <p-chart #visitsBarChart type=\"bar\" [data]=\"visitsBarChartData\" [options]=\"barChartOptions\"></p-chart>\r\n                </div>\r\n                <!--<div class=\"mini-stats-bottom\">\r\n                    <span><i class=\"ico-arrow-up\"></i></span> Increase <span>20% </span>\r\n                </div>-->\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-6 col-sm-12   \">\r\n            <div class=\"mini-stats-widget full-block-mini-chart\">\r\n                <div class=\"mini-stats-top\">\r\n                    <span class=\"mini-stats-label activeDoc upperCase\">{{'Feedback' | translate }}</span>\r\n                </div>\r\n                <div class=\"mini-stats-chart\" style=\"height: 260px;max-height: 260px;\">\r\n                    <p-chart #feedbackDoughnutChart type=\"doughnut\" [data]=\"feedbackDoughnutdata\"></p-chart>\r\n                </div>\r\n                <!--<div class=\"mini-stats-bottom w_bg_teal\">\r\n                    <span><i class=\"ico-arrow-up\"></i></span> Increase <span>10% </span>\r\n                </div>-->\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-md-6 col-sm-12 \">\r\n            <div class=\"mini-stats-widget\">\r\n                <div class=\"mini-stats-top\">\r\n                    <span class=\"mini-stats-label activeDoc upperCase\">{{'WeekAppointments' | translate}}</span>\r\n                </div>\r\n                <div class=\"mini-stats-chart\">\r\n                    <p-chart #lineChart type=\"line\" [data]=\"weekAppointments\" [options]=\"options\"></p-chart>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</div>\r\n\r\n\r\n","import { Component, OnInit, OnChanges, SimpleChanges, ViewChild, ElementRef } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\n\r\nimport { TreeNode } from \"primeng/api\";\r\nimport { ClinicService } from '../shared/clinic.service';\r\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\r\nimport { AccountService } from '../../security/shared/account.service';\r\nimport { UserPermissions } from '../../classes/user-permissions.class';\r\nimport { PermissionKeyEnum } from '../../shared/shared/permission-key.enum';\r\n\r\n@Component({\r\n\r\n    selector: 'clinic-diagnosis',\r\n    templateUrl: './clinic-diagnosis.component.html'\r\n})\r\n\r\nexport class ClinicDiagnosisComponent implements OnInit {\r\n\r\n    filterString!: string;\r\n    leafType: string = 'Diagnose';\r\n    userPermisions: UserPermissions = new UserPermissions();\r\n    key: PermissionKeyEnum = new PermissionKeyEnum();\r\n    enableAddRootBtn: boolean = false;\r\n    enableEditBtn: boolean = false;\r\n    enableActivateBtn: boolean = false;\r\n    enableSaveBtn: boolean = false;\r\n    selectedLang = 'ar';\r\n\r\n    constructor(public toastr: ToastrService\r\n        , private localStorage: LocalStorageService\r\n        , private clinicService: ClinicService\r\n        , public translate: TranslateService\r\n        , public accountService: AccountService) { }\r\n\r\n    selectedClinicId!: number;\r\n    selectDiagnosisTab: boolean = true;\r\n    active: boolean = true;\r\n    showProgress = false;\r\n    selectedNode!: TreeNode;\r\n    isDiagnosisGroupSelected = true;\r\n    isDiagnoseSelected = false;\r\n    diagnosisGroup: string = '';\r\n    diagnose: string = '';\r\n    rbSelections = [{ value: 1, text: this.diagnosisGroup }, { value: 2, text: this.diagnose }];\r\n    selectedAction: any = 1;\r\n    txtHeaderModal: any = \"\";\r\n    toSaveDiagnosisGroupId: any = '';\r\n    toSaveDiagnoseId: any = '';\r\n    parentDiagnosisGroupId: any = '';\r\n    parentDiagnosisGroupName: any = '';\r\n    isRoot = false;\r\n    enableCheckBox = false;\r\n    selctedNode: any;\r\n    isNew: boolean | undefined;\r\n    toPrintDiv: string = \"print-section\";\r\n\r\n    @ViewChild('btnAddDiagnosisGroup') btnAddDiagnosisGroup!: ElementRef;\r\n    @ViewChild('btnClosePopup') btnClosePopup!: ElementRef;\r\n\r\n    treeDataSourceItems!: any[];\r\n    lstToTranslated: string[] = [];\r\n    userType: string = '';\r\n    isClinicAdmin: boolean = false;\r\n    ngOnInit(): void {\r\n        this.selectedLang = this.localStorage.retrieve(\"selectedLanguage\");\r\n        this.lstToTranslated = ['label', 'labelTranslation'];\r\n        this.diagnosisGroup = this.translate.instant(\"DiagnosisGroup\");\r\n        this.diagnose = this.translate.instant(\"Diagnose\");\r\n        this.translate.onLangChange.subscribe((event: LangChangeEvent) => {\r\n            this.diagnosisGroup = this.translate.instant(\"DiagnosisGroup\");\r\n            this.diagnose = this.translate.instant(\"Diagnose\");\r\n        });\r\n        this.rbSelections = [{ value: 1, text: this.diagnosisGroup }, { value: 2, text: this.diagnose }];\r\n        this.selectedClinicId = this.localStorage.retrieve(\"ClinicID\");\r\n\r\n        this.userType = this.localStorage.retrieve(\"UserType\");\r\n        if (this.userType == 'ClinicAdmin')\r\n            this.isClinicAdmin = true;\r\n\r\n        if (!this.isClinicAdmin) {\r\n            if (this.accountService.userPermision._isScalar != undefined)\r\n                this.accountService.userPermision.subscribe((item: any) => this.handleUserInterfaceViews(item));\r\n            else\r\n                this.handleUserInterfaceViews(this.accountService.userPermision);\r\n        }\r\n\r\n        this.getDiagnosisGroupsForTree();\r\n\r\n    }\r\n\r\n    getDiagnosisGroupsForTree() {\r\n        this.toSaveDiagnosisGroupId = '';\r\n        this.toSaveDiagnoseId = '';\r\n        let thisComponent = this;\r\n        thisComponent.showProgress = true;\r\n        this.clinicService.getDiagnosisGroupsForTree(this.selectedClinicId)\r\n            .subscribe(\r\n                function (diagnosisGroups: any) {\r\n                    thisComponent.treeDataSourceItems = diagnosisGroups;\r\n                },\r\n                function (error: any) {\r\n                    thisComponent.toastr.error(error, '');\r\n                    thisComponent.showProgress = false;\r\n                },\r\n                function () { // finally\r\n                    thisComponent.showProgress = false;\r\n                });\r\n    }\r\n\r\n    expandAll() {\r\n        this.treeDataSourceItems.forEach(node => {\r\n            this.expandRecursive(node, true);\r\n        });\r\n    }\r\n\r\n    collapseAll() {\r\n        this.treeDataSourceItems.forEach(node => {\r\n            this.expandRecursive(node, false);\r\n        });\r\n    }\r\n\r\n    private expandRecursive(node: TreeNode, isExpand: boolean) {\r\n        node.expanded = isExpand;\r\n        if (node.children) {\r\n            node.children.forEach((childNode: any) => {\r\n                this.expandRecursive(childNode, isExpand);\r\n            });\r\n        }\r\n    }\r\n\r\n    onCheckboxSelectionChange(value: any) {\r\n        this.selectedAction = value;\r\n\r\n        if (this.selectedAction == 1) {\r\n            this.isDiagnosisGroupSelected = true;\r\n            this.isDiagnoseSelected = false;\r\n            this.txtHeaderModal = this.translate.instant(\"DiagnosisGroup\");\r\n            this.translate.onLangChange.subscribe((event: LangChangeEvent) => {\r\n\r\n                this.txtHeaderModal = this.translate.instant(\"DiagnosisGroup\");\r\n                this.diagnosisGroup = this.translate.instant(\"DiagnosisGroup\");\r\n                this.diagnose = this.translate.instant(\"Diagnose\");\r\n            });\r\n        }\r\n        else if (this.selectedAction == 2) {\r\n            this.isDiagnosisGroupSelected = false;\r\n            this.isDiagnoseSelected = true\r\n            this.txtHeaderModal = this.translate.instant(\"Diagnose\");\r\n            this.translate.onLangChange.subscribe((event: LangChangeEvent) => {\r\n                this.diagnosisGroup = this.translate.instant(\"DiagnosisGroup\");\r\n                this.diagnose = this.translate.instant(\"Diagnose\");\r\n\r\n                this.txtHeaderModal = this.translate.instant(\"Diagnose\");\r\n            });\r\n        }\r\n    }\r\n\r\n    displayPopup(node: any) {\r\n        if (node.type.toLocaleLowerCase() == \"diagnose\") {\r\n            this.isDiagnosisGroupSelected = false;\r\n            this.isDiagnoseSelected = true;\r\n            this.selectedAction = 2;\r\n            this.txtHeaderModal = this.translate.instant(\"Diagnose\");\r\n            this.translate.onLangChange.subscribe((event: LangChangeEvent) => {\r\n\r\n                this.txtHeaderModal = this.translate.instant(\"Diagnose\");\r\n                this.diagnosisGroup = this.translate.instant(\"DiagnosisGroup\");\r\n                this.diagnose = this.translate.instant(\"Diagnose\");\r\n\r\n            });\r\n            this.enableCheckBox = false;\r\n            this.isRoot = false;\r\n            this.rbSelections = [{ value: 1, text: this.diagnosisGroup }, { value: 2, text: this.diagnose }];\r\n            this.toSaveDiagnoseId = node.data;\r\n            this.btnAddDiagnosisGroup.nativeElement.click();\r\n        } else if (node.type.toLocaleLowerCase() == \"diagnosisgroup\") {\r\n            this.isDiagnosisGroupSelected = true;\r\n            this.isDiagnoseSelected = false;\r\n            this.enableCheckBox = false;\r\n            this.isRoot = false;\r\n            this.selectedAction = 1;\r\n            this.txtHeaderModal = this.translate.instant(\"DiagnosisGroup\");\r\n            this.translate.onLangChange.subscribe((event: LangChangeEvent) => {\r\n\r\n                this.txtHeaderModal = this.translate.instant(\"DiagnosisGroup\");\r\n                this.diagnosisGroup = this.translate.instant(\"DiagnosisGroup\");\r\n                this.diagnose = this.translate.instant(\"Diagnose\");\r\n            });\r\n            this.rbSelections = [{ value: 1, text: this.diagnosisGroup }, { value: 2, text: this.diagnose }];\r\n            this.toSaveDiagnosisGroupId = node.data;\r\n            this.btnAddDiagnosisGroup.nativeElement.click();\r\n        }\r\n        this.selctedNode = node;\r\n    }\r\n\r\n    passParentGroupInfo(node?: any) {\r\n        this.parentDiagnosisGroupId = node.data;\r\n\r\n        if (this.selectedLang == 'ar')\r\n            this.parentDiagnosisGroupName = node.label;\r\n        else\r\n            this.parentDiagnosisGroupName = node.labelTranslation;\r\n\r\n        this.isDiagnosisGroupSelected = true;\r\n        this.isDiagnoseSelected = false;\r\n        this.selectedAction = 1;\r\n        this.txtHeaderModal = this.translate.instant(\"DiagnosisGroup\");\r\n        this.translate.onLangChange.subscribe((event: LangChangeEvent) => {\r\n\r\n            this.txtHeaderModal = this.translate.instant(\"DiagnosisGroup\");\r\n            this.diagnosisGroup = this.translate.instant(\"DiagnosisGroup\");\r\n            this.diagnose = this.translate.instant(\"Diagnose\");\r\n        });\r\n        this.rbSelections = [{ value: 1, text: this.diagnosisGroup }, { value: 2, text: this.diagnose }];\r\n        if (node.data == undefined) {// in case of root parent\r\n            this.enableCheckBox = false;\r\n            this.isRoot = true;\r\n        }\r\n        else {\r\n            this.enableCheckBox = true;\r\n            this.isRoot = false;\r\n        }\r\n        this.isDiagnosisGroupSelected = true;\r\n        this.isDiagnoseSelected = false;\r\n\r\n        this.selctedNode = node;\r\n    }\r\n\r\n    changeActivation(node: any, event: any) {\r\n        let thisComponent = this;\r\n\r\n        if (node.type == \"Diagnose\") {\r\n            thisComponent.showProgress = true;\r\n            thisComponent.clinicService.updateDiagnoseActiveState({ \"id\": node.id, \"isActive\": event.target.checked })\r\n                .subscribe(\r\n                    function (response: any) {\r\n                        // thisComponent.getDiagnosisGroupsForTree();\r\n                        if (event.target.checked) {\r\n                            thisComponent.activateParents(node);\r\n                        }\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () { // finally\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n        } else if (node.type.toLocaleLowerCase() == \"diagnosisgroup\") {\r\n            thisComponent.showProgress = true;\r\n            thisComponent.clinicService.updateDiagnosisGroupActiveState({ \"id\": node.id, \"isActive\": event.target.checked })\r\n                .subscribe(\r\n                    function (response: any) {\r\n                        node.isActive = event.target.checked;\r\n                        if (event.target.checked) {\r\n                            if (node.parent != undefined)\r\n                                thisComponent.activateParents(node.parent);\r\n                        } else {\r\n\r\n                            thisComponent.deActivateChildren(node, false);\r\n                        }\r\n\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () { // finally\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n        }\r\n    }\r\n    activateParents(node: any) {\r\n        node.isActive = true;\r\n        if (node.parent != undefined) {\r\n            this.activateParents(node.parent);\r\n        }\r\n    }\r\n    deActivateChildren(node: any, active: any) {\r\n        node.isActive = active;\r\n        if (node.children) {\r\n            node.children.forEach((childNode: any) => {\r\n                this.deActivateChildren(childNode, active);\r\n            });\r\n        }\r\n    }\r\n    closeDiagnosisAndGroupsPopup() {\r\n        this.toSaveDiagnosisGroupId = '';\r\n        this.toSaveDiagnoseId = '';\r\n        this.selectedNode = {};\r\n\r\n        this.btnClosePopup.nativeElement.click();\r\n    }\r\n    updateSelectedNode(node: any) {\r\n        let vm = this;\r\n        vm.toSaveDiagnosisGroupId = '';\r\n        vm.toSaveDiagnoseId = '';\r\n        if (node.data > 0 && vm.isNew == false) {\r\n            // vm.selctedNode = node;\r\n            vm.selctedNode.label = node.label;\r\n            vm.selctedNode.labelTranslation = node.labelTranslation;\r\n        } else {\r\n            if (vm.parentDiagnosisGroupId == undefined) {\r\n                vm.treeDataSourceItems.push(node);\r\n            } else {\r\n                vm.selctedNode.children.push(node);\r\n            }\r\n\r\n        }\r\n        //if (thisComponent.serviceGroupParentId == '') {\r\n        //    thisComponent.treeDataSourceItems.push(response:any);\r\n        //} else {\r\n        //    thisComponent.selectedNode.children.push(response:any);\r\n        //    //  thisComponent.displaySelectedParentGroupNode(thisComponent.selectedNode.data, \"servicegroup\")//type.toLocaleLowerCase() == \"servicegroup\"\r\n        //}\r\n\r\n\r\n    }\r\n    setIsNewValue(val: any) {\r\n        this.isNew = val;\r\n    }\r\n\r\n    handleUserInterfaceViews(user: any) {\r\n        if (user.permissions != undefined) {\r\n\r\n            for (let item of user.permissions) {\r\n                if (item.permission.key == this.key.Coding) {\r\n                    if (item.fullControl == true || item.add)\r\n                        this.enableAddRootBtn = true;// then any add button should be enabled\r\n                    if (item.fullControl == true || item.edit)\r\n                        this.enableEditBtn = true;\r\n                    if (item.fullControl == true || item.activate)\r\n                        this.enableActivateBtn = true;\r\n                    if (item.fullControl || item.add || item.edit)\r\n                        this.enableSaveBtn = true;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n","<div *ngIf=\"showProgress\">\r\n    <loading></loading>\r\n</div>\r\n\r\n<div class=\"row\">\r\n\r\n    <clinic-tab [isDiagnosisSelected]='selectDiagnosisTab' *ngIf=\"isClinicAdmin\"></clinic-tab>\r\n    <shared-tabs [isDiagnosisSelected]='selectDiagnosisTab' *ngIf=\"!isClinicAdmin\"></shared-tabs>\r\n    <div class=\"row \">\r\n            \r\n            <div class=\"row \" >\r\n                <div class=\"NBbreadcrumb\">\r\n                    <a>{{ 'Clinic' | translate}}</a> &nbsp;/\r\n                    {{ 'Diagnosis' | translate}}\r\n                </div>\r\n\r\n            </div>\r\n\r\n        <div>\r\n            <div class=\"row well\">\r\n                <div class=\"\">\r\n                    <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#DiagnosisAndGroupsPopup\" (click)=\"passParentGroupInfo()\" disabled=\"{{ enableAddRootBtn || isClinicAdmin ? '' :'disabled'}}\">{{ 'AddRootDiagnoseGroup' | translate}}</button>\r\n                    <button type=\"button\" class=\"hidden\" #btnAddDiagnosisGroup data-toggle=\"modal\" data-target=\"#DiagnosisAndGroupsPopup\"></button>\r\n                    <button type=\"button\" class=\"btn btn-primary\" (click)=\"expandAll()\">{{ 'ExpandAll' | translate}}</button>\r\n                    <button type=\"button\" class=\"btn btn-primary\" (click)=\"collapseAll()\">{{ 'CollapseAll' | translate}}</button>\r\n                    <print-page [section]='toPrintDiv'></print-page>\r\n\r\n                </div>\r\n                <br />\r\n                <div class=\"row nopadding\">\r\n                    <div class=\"col-md-5 nopadding\">\r\n                        <div class=\"inner-addon left-addon\">\r\n                            <i class=\"glyphicon glyphicon-search\"></i>\r\n                            <input [placeholder]=\"'SearchByNameorCode' | translate\" class=\"inputSearch form-control\" [(ngModel)]=\"filterString\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n           \r\n            </div>\r\n            <br />\r\n            <div id=\"print-section\" class=\"\">\r\n                \r\n                <div class=\"row well\">\r\n                    <p-tree [value]=\"treeDataSourceItems | filterbynameorcode:filterString : leafType\" selectionMode=\"single\" [(selection)]=\"selectedNode\">\r\n                        <ng-template let-node pTemplate=\"Diagnose\">\r\n                            <span class=\"nav-icon\"><i class=\"fa fa-cube\"></i></span>\r\n                            &nbsp;\r\n                            {{selectedLang === 'ar' ?  node.label : node.labelTranslation}}\r\n                            &nbsp; &nbsp;\r\n                            <a [class.disabled]=\"!enableEditBtn && !isClinicAdmin ? true : null\">\r\n                                <i class=\"fa fa-pencil fa-2x\" (click)=\"displayPopup(node)\" style=\"color: #32bea6;\"></i>\r\n\r\n                            </a>\r\n                            <label>\r\n                                <input id=\"ChkIsActiveInGrid\" name=\"ChkIsActiveInGrid\" class=\"ace ace-switch ace-switch-6\"\r\n                                       type=\"checkbox\" [checked]=\"node.isActive\"\r\n                                       (click)=\"changeActivation(node , $event)\" disabled=\"{{ enableActivateBtn || isClinicAdmin ? '' :'disabled'}}\" />\r\n                                <span class=\"lbl\"></span>\r\n                            </label>\r\n                        </ng-template>\r\n                        <ng-template let-node pTemplate=\"DiagnosisGroup\">\r\n                            <span class=\"nav-icon\"><i class=\"fa fa-cubes\"></i></span>\r\n                            &nbsp;\r\n                            <!--{{node.label}}-->\r\n                            {{selectedLang === 'ar' ?  node.label : node.labelTranslation}}\r\n                            &nbsp; &nbsp;\r\n                            <a #btnAddDiagnosisGroup data-toggle=\"modal\" data-target=\"#DiagnosisAndGroupsPopup\" [class.disabled]=\"!enableAddRootBtn && !isClinicAdmin ? true : null\">\r\n                                <img src=\"assets/images/addImage.png\" (click)=\"passParentGroupInfo(node)\" />\r\n                            </a>\r\n                            &nbsp; &nbsp;\r\n                            <a [class.disabled]=\"!enableEditBtn && !isClinicAdmin ? true : null\">\r\n                                <i class=\"fa fa-pencil fa-2x\" (click)=\"displayPopup(node)\" style=\"color: #32bea6;\"></i>\r\n\r\n                            </a>\r\n                            <label>\r\n                                <input id=\"ChkIsActiveInGrid\" name=\"ChkIsActiveInGrid\" class=\"ace ace-switch ace-switch-6\"\r\n                                       type=\"checkbox\" [checked]=\"node.isActive\"\r\n                                       (click)=\"changeActivation(node , $event)\" disabled=\"{{ enableActivateBtn || isClinicAdmin? '' :'disabled'}}\" />\r\n                                <span class=\"lbl\"></span>\r\n                            </label>\r\n                        </ng-template>\r\n                    </p-tree>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- Diagnose Modal -->\r\n<div id=\"DiagnosisAndGroupsPopup\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" #btnClosePopup class=\"close\" data-dismiss=\"modal\" (click)=\"closeDiagnosisAndGroupsPopup()\">&times;</button>\r\n                <h4 class=\"modal-title\">{{txtHeaderModal}}</h4>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <div class=\"col-sm-offset-3 col-md-6\">\r\n                    <table>\r\n                        <tr>\r\n                            <td *ngFor=\"let item of rbSelections; let idx = index\">\r\n                                <input type=\"radio\" name=\"radiogroup\" [value]=\"item.value\"\r\n                                       [checked]=\"item.value == selectedAction\" #checkbox (change)=\"onCheckboxSelectionChange(checkbox.value)\" disabled=\"{{ enableCheckBox ? '' :'disabled'}}\">{{item.text| translate}}\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            <div *ngIf=\"isDiagnoseSelected\">\r\n                <clinic-manage-diagnose [selectedDiagnoseId]='toSaveDiagnoseId' [selectedParentGroupId]='parentDiagnosisGroupId' [isClinicAdmin]=\"isClinicAdmin\" [enableSaveBtn]=\"enableSaveBtn\"\r\n                                        [selectedParentGroupName]='parentDiagnosisGroupName' (onDiagnoseChanged)=\"updateSelectedNode($event)\" (onIsNew)=\"setIsNewValue($event)\" (onCancel)=\"closeDiagnosisAndGroupsPopup()\"></clinic-manage-diagnose>\r\n            </div>\r\n            <div *ngIf=\"isDiagnosisGroupSelected\">\r\n                <clinic-manage-diagnosis-group [selectedDiagnosisGroupId]='toSaveDiagnosisGroupId' [selectedParentGroupId]='parentDiagnosisGroupId' [isClinicAdmin]=\"isClinicAdmin\" [enableSaveBtn]=\"enableSaveBtn\"\r\n                                               [selectedParentGroupName]='parentDiagnosisGroupName' (onDiagnosisGroupChanged)=\"updateSelectedNode($event)\" (onIsNew)=\"setIsNewValue($event)\" (onCancel)=\"closeDiagnosisAndGroupsPopup()\"></clinic-manage-diagnosis-group>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n","import {Component, OnInit, OnChanges, SimpleChanges, Input, Output, EventEmitter} from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport {LocalStorageService} from 'ng2-webstorage';\r\nimport {ClinicService} from '../../shared/clinic.service';\r\nimport {TranslateService, LangChangeEvent} from '@ngx-translate/core';\r\n@Component({\r\n   \r\n    selector: 'clinic-manage-diagnose',\r\n    templateUrl: './clinic-manage-diagnose.component.html'\r\n})\r\n\r\nexport class ClinicManageDiagnoseComponent implements OnChanges  {\r\n\r\n    @Input() selectedDiagnoseId: string = '';\r\n    @Input() selectedParentGroupId: string = '';\r\n    @Input() selectedParentGroupName: string = '';\r\n    @Input() isClinicAdmin: boolean = false;\r\n    @Input() enableSaveBtn: boolean = false;\r\n    @Output() onDiagnoseChanged: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() onIsNew: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n    @Output() onCancel = new EventEmitter();\r\n\r\n    selectDiagnosisTab: boolean = true;\r\n    active: boolean = true;\r\n    showProgress = false;\r\n    selectedDiagnose: any = { id: 0};\r\n    selectedLang = 'ar';\r\n\r\n    constructor(public toastr: ToastrService\r\n        , private clinicService: ClinicService\r\n        , public translate: TranslateService\r\n        , private localStorage: LocalStorageService) { }\r\n    \r\n    ngOnChanges(changes: SimpleChanges) {\r\n        this.selectedLang = this.localStorage.retrieve(\"selectedLanguage\");\r\n        if (this.selectedDiagnoseId && this.selectedDiagnoseId != '') {\r\n            let thisComponent = this;\r\n            thisComponent.showProgress = true;\r\n            this.clinicService.getDiagnoseById(thisComponent.selectedDiagnoseId)\r\n                .subscribe(\r\n                function (diagnose:any) {\r\n                    thisComponent.selectedDiagnose = diagnose;\r\n                    thisComponent.selectedParentGroupId = diagnose.parentGroupId;\r\n\r\n                    if (thisComponent.selectedLang == 'ar')\r\n                        thisComponent.selectedParentGroupName = diagnose.parentGroupName;\r\n                    else\r\n                        thisComponent.selectedParentGroupName = diagnose.parentGroupNameTranslation;\r\n                },\r\n                function (error:any) { \r\n                    thisComponent.toastr.error(error, '');\r\n                    thisComponent.showProgress = false;\r\n                },\r\n                function () { // finally\r\n                    thisComponent.showProgress = false;\r\n                });\r\n        }\r\n        else {\r\n            this.clearControl();\r\n        }\r\n    }\r\n\r\n    saveDiagnosis(): void {\r\n        let thisComponent = this;\r\n        thisComponent.showProgress = true;\r\n        this.selectedDiagnose.parentGroupId = this.selectedParentGroupId;\r\n\r\n        if (this.selectedDiagnose.id > 0) {\r\n            //Update\r\n            this.clinicService.updateDiagnose(this.selectedDiagnose)\r\n                .subscribe(\r\n                function (response:any) {\r\n\r\n                    //  thisComponent.selectedDiagnose = response;\r\n                    thisComponent.onIsNew.emit(false);\r\n                    thisComponent.onDiagnoseChanged.emit(response);\r\n                    let msg = thisComponent.translate.instant(\"SavedSuccessfully\");\r\n                    thisComponent.toastr.success(msg, '');\r\n                    thisComponent.clearControl();\r\n                },\r\n                function (error:any) { \r\n                    thisComponent.toastr.error(error, '');\r\n                    thisComponent.showProgress = false;\r\n                    thisComponent.clearControl();\r\n                },\r\n                function () {\r\n                    thisComponent.showProgress = false;\r\n                });\r\n\r\n        }\r\n        else {\r\n            //New\r\n            this.clinicService.createDiagnose(this.selectedDiagnose)\r\n                .subscribe(\r\n                function (response:any) {\r\n\r\n                  //  thisComponent.selectedDiagnose = response;\r\n                    thisComponent.onIsNew.emit(true);\r\n                    thisComponent.onDiagnoseChanged.emit(response);\r\n                    let msg = thisComponent.translate.instant(\"SavedSuccessfully\");\r\n                    thisComponent.toastr.success(msg, '');\r\n                    thisComponent.clearControl();\r\n                },\r\n                function (error:any) { \r\n                    thisComponent.toastr.error(error, '');\r\n                    thisComponent.showProgress = false;\r\n                },\r\n                function () {\r\n                    thisComponent.showProgress = false;\r\n                });\r\n        }\r\n    }\r\n    \r\n    clearControl(): void {\r\n        this.selectedDiagnose = { id:0};\r\n        this.active = false;\r\n        setTimeout(() => this.active = true, 0);\r\n    }\r\n\r\n    cancelDiagnose(): void {\r\n        this.clearControl();\r\n        this.onCancel.emit();\r\n    }\r\n\r\n}","<form *ngIf=\"active\" class=\"form-horizontal\" name=\"manageDiagnoseForm\" #manageDiagnoseForm=\"ngForm\">\r\n    <div class=\"modal-body\">\r\n        <div class=\"form-group\">\r\n            <label for=\"txtName\" class=\"control-label col-md-3\"> {{ 'ParentGroup' | translate}}</label>\r\n            <div class=\"col-md-6\">\r\n                {{selectedParentGroupName}}\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"txtDiagnoseCode\" class=\"control-label col-md-3\"> {{ 'Code' | translate}}</label>\r\n            <div class=\"col-md-4\">\r\n                <input id=\"txtDiagnoseCode\" name=\"txtDiagnoseCode\" class=\"form-control\" [(ngModel)]='selectedDiagnose.code' #txtDiagnoseCode=\"ngModel\" required />\r\n                <div [hidden]=\"txtDiagnoseCode.valid || txtDiagnoseCode.pristine\" class=\"alert alert-danger\">\r\n                    {{ 'RequiredField' | translate}}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"txtName\" class=\"control-label col-md-3\">{{ 'ArabicName' | translate}}</label>\r\n            <div class=\"col-md-9\">\r\n                <input id=\"txtName\" name=\"txtName\" class=\"form-control\" [(ngModel)]='selectedDiagnose.name' #txtName=\"ngModel\" required />\r\n                <div [hidden]=\"txtName.valid || txtName.pristine\" class=\"alert alert-danger\">\r\n                   {{ 'RequiredField' | translate}}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"txtNameTranslation\" class=\"control-label col-md-3\"> {{ 'EnglishName' | translate}}</label>\r\n            <div class=\"col-md-9\">\r\n                <input id=\"txtNameTranslation\" name=\"txtNameTranslation\" class=\"form-control\" [(ngModel)]='selectedDiagnose.nameTranslation' #txtNameTranslation=\"ngModel\" required />\r\n                <div [hidden]=\"txtNameTranslation.valid || txtNameTranslation.pristine\" class=\"alert alert-danger\">\r\n                  {{ 'RequiredField' | translate}}\r\n                </div>\r\n            </div>\r\n        </div>        \r\n        <div class=\"form-group\">\r\n            <label for=\"txtDiagnoseInfective\" class=\"control-label col-md-3\">{{ 'Infective' | translate}} </label>\r\n            <div class=\"col-md-3\">\r\n                <label>\r\n                    <input id=\"ChkIsInfective\" name=\"ChkIsInfective\" class=\"ace ace-switch ace-switch-6\"\r\n                           type=\"checkbox\" [(ngModel)]='selectedDiagnose.infective' #ChkIsInfective=\"ngModel\" />\r\n                    <span class=\"lbl\"></span>\r\n                </label>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"txtDiagnoseRemark\" class=\"control-label col-md-3\"> {{ 'Remark' | translate}}</label>\r\n            <div class=\"col-md-9\">\r\n                <textarea id=\"txtDiagnoseRemark\" name=\"txtDiagnoseRemark\" class=\"form-control\" [(ngModel)]='selectedDiagnose.description'></textarea>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n        <div class=\"text-center\">\r\n            <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" [disabled]=\"!manageDiagnoseForm.valid ||(!enableSaveBtn && !isClinicAdmin)\" (click)=\"saveDiagnosis()\">{{ 'Save' | translate}}</button>\r\n            <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" (click)=\"cancelDiagnose()\">{{ 'Cancel' | translate}}</button>\r\n        </div>\r\n    </div>\r\n</form>","import { Component, OnInit, OnChanges, SimpleChanges, Input, Output, EventEmitter } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\n\r\nimport { ClinicService } from '../../shared/clinic.service';\r\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\r\n@Component({\r\n\r\n    selector: 'clinic-manage-diagnosis-group',\r\n    templateUrl: './clinic-manage-diagnosis-group.component.html'\r\n})\r\n\r\nexport class ClinicManageDiagnosisGroupComponent implements OnInit, OnChanges {\r\n\r\n    @Input() selectedDiagnosisGroupId: string = '';\r\n    @Input() selectedParentGroupId: string = '';\r\n    @Input() selectedParentGroupName: string = '';\r\n    @Input() isClinicAdmin: boolean = false;\r\n    @Input() enableSaveBtn: boolean = false;\r\n    @Output() onDiagnosisGroupChanged: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() onIsNew: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n    @Output() onCancel = new EventEmitter();\r\n\r\n    selectedClinicId!: number;\r\n    selectDiagnosisTab: boolean = true;\r\n    active: boolean = true;\r\n    showProgress = false;\r\n    selectedDiagnosisGroup: any = {};\r\n    selectedLang = 'ar';\r\n\r\n    constructor(public toastr: ToastrService\r\n        , private localStorage: LocalStorageService\r\n        , private clinicService: ClinicService\r\n        , public translate: TranslateService) { }\r\n\r\n    ngOnInit(): void {\r\n        this.selectedClinicId = this.localStorage.retrieve(\"ClinicID\");\r\n    }\r\n\r\n    //get data according to selected type \r\n    ngOnChanges(changes: SimpleChanges) {\r\n        this.selectedLang = this.localStorage.retrieve(\"selectedLanguage\");\r\n        if (this.selectedDiagnosisGroupId && this.selectedDiagnosisGroupId != '') {\r\n            let thisComponent = this;\r\n            thisComponent.showProgress = true;\r\n            this.clinicService.getDiagnosisGroupById(thisComponent.selectedDiagnosisGroupId)\r\n                .subscribe(\r\n                    function (diagnosisGroup: any) {\r\n                        thisComponent.selectedDiagnosisGroup = diagnosisGroup;\r\n                        thisComponent.selectedParentGroupId = diagnosisGroup.parentGroupId;\r\n                        if (thisComponent.selectedLang == 'ar')\r\n                            thisComponent.selectedParentGroupName = diagnosisGroup.parentGroupName;\r\n                        else\r\n                            thisComponent.selectedParentGroupName = diagnosisGroup.parentGroupNameTranslation;\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () { // finally\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n        }\r\n        else {\r\n            this.clearControl();\r\n        }\r\n    }\r\n\r\n\r\n    saveDiagnosisGroup(): void {\r\n        let thisComponent = this;\r\n        thisComponent.showProgress = true;\r\n        this.selectedDiagnosisGroup.parentGroupId = this.selectedParentGroupId;\r\n        this.selectedDiagnosisGroup.clinicId = this.selectedClinicId\r\n        if (this.selectedDiagnosisGroup.id > 0) {\r\n            //Update\r\n            this.clinicService.updateDiagnosisGroup(this.selectedDiagnosisGroup)\r\n                .subscribe(\r\n                    function (response: any) {\r\n\r\n                        //  thisComponent.selectedDiagnosisGroup = response;\r\n                        thisComponent.onIsNew.emit(false);\r\n                        thisComponent.onDiagnosisGroupChanged.emit(response);\r\n                        let msg = thisComponent.translate.instant(\"SavedSuccessfully\");\r\n                        thisComponent.toastr.success(msg, '');\r\n                        thisComponent.clearControl();\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () {\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n\r\n        }\r\n        else {\r\n            //New\r\n            this.clinicService.createDiagnosisGroup(this.selectedDiagnosisGroup)\r\n                .subscribe(\r\n                    function (response: any) {\r\n\r\n                        //thisComponent.selectedDiagnosisGroup = response;\r\n                        thisComponent.onIsNew.emit(true);\r\n                        thisComponent.onDiagnosisGroupChanged.emit(response);\r\n                        let msg = thisComponent.translate.instant(\"SavedSuccessfully\");\r\n                        thisComponent.toastr.success(msg, '');\r\n                        thisComponent.clearControl();\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () {\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n        }\r\n    }\r\n\r\n    clearControl(): void {\r\n        this.selectedDiagnosisGroup = {};\r\n        this.active = false;\r\n        setTimeout(() => this.active = true, 0);\r\n    }\r\n\r\n    cancelDiagnosisGroup(): void {\r\n        this.clearControl();\r\n        this.onCancel.emit();\r\n    }\r\n}","<form *ngIf=\"active\" class=\"form-horizontal\" name=\"manageDiagnosisGroupForm\" #manageDiagnosisGroupForm=\"ngForm\">\r\n    <div class=\"modal-body\">\r\n        <div class=\"form-group\">\r\n            <label for=\"txtName\" class=\"control-label col-md-3\"> {{ 'ParentGroup' | translate}}</label>\r\n            <div class=\"col-md-6\">\r\n                {{selectedParentGroupName}}\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"txtName\" class=\"control-label col-md-3\">{{ 'ArabicName' | translate}}</label>\r\n            <div class=\"col-md-9\">\r\n                <input id=\"txtName\" name=\"txtName\" class=\"form-control\" [(ngModel)]='selectedDiagnosisGroup.name' #txtName=\"ngModel\" required />\r\n                <div [hidden]=\"txtName.valid || txtName.pristine\" class=\"alert alert-danger\">\r\n                    {{ 'RequiredField' | translate}}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"txtNameTranslation\" class=\"control-label col-md-3\">{{ 'EnglishName' | translate}}</label>\r\n            <div class=\"col-md-9\">\r\n                <input id=\"txtNameTranslation\" name=\"txtNameTranslation\" class=\"form-control\" [(ngModel)]='selectedDiagnosisGroup.nameTranslation' #txtNameTranslation=\"ngModel\" required />\r\n                <div [hidden]=\"txtNameTranslation.valid || txtNameTranslation.pristine\" class=\"alert alert-danger\">\r\n                    {{ 'RequiredField' | translate}}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"txtDiagnosisGroupRemark\" class=\"control-label col-md-3\"> {{ 'Remark' | translate}}</label>\r\n            <div class=\"col-md-9\">\r\n                <textarea id=\"txtDiagnosisGroupRemark\" name=\"txtDiagnosisGroupRemark\" class=\"form-control\" [(ngModel)]='selectedDiagnosisGroup.description'></textarea>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n        <div class=\"text-center\">\r\n            <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" [disabled]=\"!manageDiagnosisGroupForm.valid ||(!enableSaveBtn && !isClinicAdmin)\" (click)=\"saveDiagnosisGroup()\">{{ 'Save' | translate}}</button>\r\n            <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" (click)=\"cancelDiagnosisGroup()\">{{ 'Cancel' | translate}}</button>\r\n        </div>\r\n    </div>\r\n</form>","import { Component, OnInit, OnChanges, SimpleChanges, ViewChild, ElementRef } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\nimport { TreeNode } from 'primeng/api';\r\nimport { ClinicService } from '../shared/clinic.service';\r\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\r\nimport { AccountService } from '../../security/shared/account.service';\r\nimport { UserPermissions } from '../../classes/user-permissions.class';\r\nimport { PermissionKeyEnum } from '../../shared/shared/permission-key.enum';\r\n@Component({\r\n\r\n    selector: 'clinic-drugs',\r\n    templateUrl: './clinic-drugs.component.html'\r\n})\r\n\r\nexport class ClinicDrugsComponent implements OnInit {\r\n\r\n    filterString!: string;\r\n    leafType: string = 'Drug';\r\n    selectedLang = 'ar';\r\n\r\n    constructor(public toastr: ToastrService\r\n        , private localStorage: LocalStorageService\r\n        , private clinicService: ClinicService\r\n        , public translate: TranslateService\r\n        , public accountService: AccountService) { }\r\n\r\n    selectedClinicId!: number;\r\n    selectDrugsTab: boolean = true;\r\n    active: boolean = true;\r\n    showProgress = false;\r\n\r\n    selectedNode!: TreeNode;\r\n\r\n    isDrugsGroupSelected = true;\r\n    isDrugSelected = false;\r\n    groupName: string = '';\r\n    childName: string = '';\r\n    rbSelections = [{ value: 1, text: this.groupName }, { value: 2, text: this.childName }];\r\n    selectedAction = 1;\r\n    txtHeaderModal: any;\r\n    toSaveDrugsGroupId: any;\r\n    toSaveDrugId: any;\r\n    parentDrugsGroupId: any;\r\n    parentDrugsGroupName: any;\r\n    isRoot = false;\r\n    enableCheckBox = false;\r\n    selctedNode: any;\r\n    isNew: boolean | undefined;\r\n    toPrintDiv: string = \"print-section\";\r\n    userType: string = '';\r\n    isClinicAdmin: boolean = false;\r\n    userPermisions: UserPermissions = new UserPermissions();\r\n    key: PermissionKeyEnum = new PermissionKeyEnum();\r\n    enableAddRootBtn: boolean = false;\r\n    enableEditBtn: boolean = false;\r\n    enableActivateBtn: boolean = false;\r\n    enableSaveBtn: boolean = false;\r\n    @ViewChild('btnAddDrugsGroup') btnAddDrugsGroup!: ElementRef;\r\n    @ViewChild('btnClosePopup') btnClosePopup!: ElementRef;\r\n    treeDataSourceItems!: any[];\r\n    lstToTranslated: string[] = [];\r\n\r\n    ngOnInit(): void {\r\n        this.selectedLang = this.localStorage.retrieve(\"selectedLanguage\");\r\n        this.lstToTranslated = ['label', 'labelTranslation'];\r\n        this.groupName = this.translate.instant(\"DrugsGroup\");\r\n        this.childName = this.translate.instant(\"Drug\");\r\n        this.translate.onLangChange.subscribe((event: LangChangeEvent) => {\r\n            this.groupName = this.translate.instant(\"DrugsGroup\");\r\n            this.childName = this.translate.instant(\"Drug\");\r\n        });\r\n        this.rbSelections = [{ value: 1, text: this.groupName }, { value: 2, text: this.childName }];\r\n        this.selectedClinicId = this.localStorage.retrieve(\"ClinicID\");\r\n        this.userType = this.localStorage.retrieve(\"UserType\");\r\n        if (this.userType == 'ClinicAdmin')\r\n            this.isClinicAdmin = true;\r\n\r\n        if (!this.isClinicAdmin) {\r\n            if (this.accountService.userPermision._isScalar != undefined)\r\n                this.accountService.userPermision.subscribe((item: any) => this.handleUserInterfaceViews(item));\r\n            else\r\n                this.handleUserInterfaceViews(this.accountService.userPermision);\r\n        }\r\n\r\n        this.getDrugsGroupsForTree();\r\n    }\r\n\r\n    getDrugsGroupsForTree() {\r\n        this.toSaveDrugsGroupId = '';\r\n        this.toSaveDrugId = '';\r\n        let thisComponent = this;\r\n        thisComponent.showProgress = true;\r\n        this.clinicService.getDrugsGroupsForTree(this.selectedClinicId)\r\n            .subscribe(\r\n                function (drugsGroups: any) {\r\n                    thisComponent.treeDataSourceItems = drugsGroups;\r\n                },\r\n                function (error: any) {\r\n                    thisComponent.toastr.error(error, '');\r\n                    thisComponent.showProgress = false;\r\n                },\r\n                function () { // finally\r\n                    thisComponent.showProgress = false;\r\n                });\r\n    }\r\n\r\n    expandAll() {\r\n        this.treeDataSourceItems.forEach(node => {\r\n            this.expandRecursive(node, true);\r\n        });\r\n    }\r\n\r\n    collapseAll() {\r\n        this.treeDataSourceItems.forEach(node => {\r\n            this.expandRecursive(node, false);\r\n        });\r\n    }\r\n\r\n    private expandRecursive(node: TreeNode, isExpand: boolean) {\r\n        node.expanded = isExpand;\r\n        if (node.children) {\r\n            node.children.forEach(childNode => {\r\n                this.expandRecursive(childNode, isExpand);\r\n            });\r\n        }\r\n    }\r\n\r\n    onCheckboxSelectionChange(value: any) {\r\n        this.selectedAction = value;\r\n\r\n        if (this.selectedAction == 1) {\r\n            this.isDrugsGroupSelected = true;\r\n            this.isDrugSelected = false;\r\n\r\n            this.txtHeaderModal = this.translate.instant(\"DrugsGroup\");\r\n            this.translate.onLangChange.subscribe((event: LangChangeEvent) => {\r\n\r\n                this.txtHeaderModal = this.translate.instant(\"DrugsGroup\");\r\n            });\r\n\r\n        }\r\n        else if (this.selectedAction == 2) {\r\n            this.isDrugsGroupSelected = false;\r\n            this.isDrugSelected = true\r\n            this.txtHeaderModal = this.translate.instant(\"Drug\");\r\n            this.translate.onLangChange.subscribe((event: LangChangeEvent) => {\r\n\r\n                this.txtHeaderModal = this.translate.instant(\"Drug\");\r\n            });\r\n        }\r\n    }\r\n\r\n    displayPopup(node: any) {\r\n        if (node.type.toLocaleLowerCase() == \"drug\") {\r\n            this.isDrugsGroupSelected = false;\r\n            this.isDrugSelected = true;\r\n            this.selectedAction = 2;\r\n            this.txtHeaderModal = this.translate.instant(\"Drug\");\r\n            this.translate.onLangChange.subscribe((event: LangChangeEvent) => {\r\n\r\n                this.txtHeaderModal = this.translate.instant(\"Drug\");\r\n                this.groupName = this.translate.instant(\"DrugsGroup\");\r\n                this.childName = this.translate.instant(\"Drug\");\r\n            });\r\n            this.enableCheckBox = false;\r\n            this.isRoot = false;\r\n\r\n            this.toSaveDrugId = node.data;\r\n            this.btnAddDrugsGroup.nativeElement.click();\r\n        } else if (node.type.toLocaleLowerCase() == \"drugsgroup\") {\r\n            this.isDrugsGroupSelected = true;\r\n            this.isDrugSelected = false;\r\n            this.enableCheckBox = false;\r\n            this.isRoot = false;\r\n            this.selectedAction = 1;\r\n            this.txtHeaderModal = this.translate.instant(\"DrugsGroup\");\r\n            this.translate.onLangChange.subscribe((event: LangChangeEvent) => {\r\n\r\n                this.txtHeaderModal = this.translate.instant(\"DrugsGroup\");\r\n                this.groupName = this.translate.instant(\"DrugsGroup\");\r\n                this.childName = this.translate.instant(\"Drug\");\r\n            });\r\n\r\n            this.toSaveDrugsGroupId = node.data;\r\n            this.btnAddDrugsGroup.nativeElement.click();\r\n        }\r\n\r\n        this.selctedNode = node;\r\n        this.rbSelections = [{ value: 1, text: this.groupName }, { value: 2, text: this.childName }];\r\n    }\r\n\r\n    passParentGroupInfo(node: any) {\r\n        this.parentDrugsGroupId = node.data;\r\n        if (this.selectedLang == 'ar')\r\n            this.parentDrugsGroupName = node.label;\r\n        else\r\n            this.parentDrugsGroupName = node.labelTranslation;\r\n\r\n        this.isDrugsGroupSelected = true;\r\n        this.isDrugSelected = false;\r\n        this.selectedAction = 1;\r\n        this.txtHeaderModal = this.translate.instant(\"DrugsGroup\");\r\n        this.translate.onLangChange.subscribe((event: LangChangeEvent) => {\r\n\r\n            this.txtHeaderModal = this.translate.instant(\"DrugsGroup\");\r\n            this.groupName = this.translate.instant(\"DrugsGroup\");\r\n            this.childName = this.translate.instant(\"Drug\");\r\n        });\r\n        if (node.data == undefined) {\r\n            this.enableCheckBox = false;\r\n            this.isRoot = true;\r\n        }\r\n        else {\r\n            this.enableCheckBox = true;\r\n            this.isRoot = false;\r\n        }\r\n        this.isDrugsGroupSelected = true;\r\n        this.isDrugSelected = false;\r\n\r\n        this.selctedNode = node;\r\n        this.rbSelections = [{ value: 1, text: this.groupName }, { value: 2, text: this.childName }];\r\n    }\r\n\r\n    changeActivation(node: any, event: any) {\r\n        let thisComponent = this;\r\n\r\n        if (node.type == \"Drug\") {\r\n            thisComponent.showProgress = true;\r\n            thisComponent.clinicService.updateDrugActiveState({ \"id\": node.id, \"isActive\": event.target.checked })\r\n                .subscribe(\r\n                    function (response: any) {\r\n                        if (event.target.checked) {\r\n                            thisComponent.activateParents(node);\r\n                        }\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () { // finally\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n        } else if (node.type == \"DrugsGroup\") {\r\n            thisComponent.showProgress = true;\r\n            thisComponent.clinicService.updateDrugsGroupActiveState({ \"id\": node.id, \"isActive\": event.target.checked })\r\n                .subscribe(\r\n                    function (response: any) {\r\n                        node.isActive = event.target.checked;\r\n                        if (event.target.checked) {\r\n                            if (node.parent != undefined)\r\n                                thisComponent.activateParents(node.parent);\r\n                        } else {\r\n\r\n                            thisComponent.deActivateChildren(node, false);\r\n                        }\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () { // finally\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n        }\r\n    }\r\n\r\n    activateParents(node: any) {\r\n        node.isActive = true;\r\n        if (node.parent != undefined) {\r\n            this.activateParents(node.parent);\r\n        }\r\n    }\r\n    deActivateChildren(node: any, active: any) {\r\n        node.isActive = active;\r\n        if (node.children) {\r\n            node.children.forEach((childNode: any) => {\r\n                this.deActivateChildren(childNode, active);\r\n            });\r\n        }\r\n    }\r\n    updateSelectedNode(node: any) {\r\n        let vm = this;\r\n        vm.toSaveDrugsGroupId = '';\r\n        vm.toSaveDrugId = '';\r\n        if (node.data > 0 && vm.isNew == false) {\r\n            // vm.selctedNode = node;\r\n            vm.selctedNode.label = node.label;\r\n            vm.selctedNode.labelTranslation = node.labelTranslation;\r\n        } else {\r\n            if (vm.parentDrugsGroupId == undefined) {\r\n                vm.treeDataSourceItems.push(node);\r\n            } else {\r\n                vm.selctedNode.children.push(node);\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n    setIsNewValue(val: any) {\r\n        this.isNew = val;\r\n    }\r\n    closeDrugsAndGroupsPopup() {\r\n        this.toSaveDrugsGroupId = '';\r\n        this.toSaveDrugId = '';\r\n        this.selectedNode = {};\r\n\r\n        this.btnClosePopup.nativeElement.click();\r\n    }\r\n    handleUserInterfaceViews(user: any) {\r\n        if (user.permissions != undefined) {\r\n\r\n            for (let item of user.permissions) {\r\n                if (item.permission.key == this.key.Coding) {\r\n                    if (item.fullControl == true || item.add)\r\n                        this.enableAddRootBtn = true;// then any add button should be enabled\r\n                    if (item.fullControl == true || item.edit)\r\n                        this.enableEditBtn = true;\r\n                    if (item.fullControl == true || item.activate)\r\n                        this.enableActivateBtn = true;\r\n                    if (item.fullControl || item.add || item.edit)\r\n                        this.enableSaveBtn = true;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n","<div *ngIf=\"showProgress\">\r\n    <loading></loading>\r\n</div>\r\n\r\n<div class=\"row\">\r\n\r\n    <clinic-tab [isDrugsSelected]='selectDrugsTab' *ngIf=\"isClinicAdmin\"></clinic-tab>\r\n    <shared-tabs [isDrugsSelected]='selectDrugsTab' *ngIf=\"!isClinicAdmin\"></shared-tabs>\r\n    <div class=\"row \">\r\n        <div class=\"NBbreadcrumb\">\r\n            <a>{{ 'Clinic' | translate}}</a> &nbsp;/\r\n            {{ 'Drugs' | translate}}\r\n        </div>\r\n\r\n        <div>\r\n            <div class=\"row well\">\r\n                <div>\r\n                    <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#DrugsAndGroupsPopup\" (click)=\"passParentGroupInfo('')\" disabled=\"{{ enableAddRootBtn || isClinicAdmin ? '' :'disabled'}}\">{{ 'AddRootDrugsGroup' | translate}}</button>\r\n                    <button type=\"button\" class=\"hidden\" #btnAddDrugsGroup data-toggle=\"modal\" data-target=\"#DrugsAndGroupsPopup\"></button>\r\n                    <button type=\"button\" class=\"btn btn-primary\" (click)=\"expandAll()\">{{ 'ExpandAll' | translate}}</button>\r\n                    <button type=\"button\" class=\"btn btn-primary\" (click)=\"collapseAll()\">{{ 'CollapseAll' | translate}}</button>\r\n                    <print-page [section]='toPrintDiv'></print-page> \r\n                </div>\r\n                    <br />\r\n                    <div class=\"row nopadding\">\r\n                        <div class=\"col-md-5 nopadding\">\r\n                            <div class=\"inner-addon left-addon\">\r\n                                <i class=\"glyphicon glyphicon-search\"></i>\r\n                                <input [placeholder]=\"'SearchByNameorCode' | translate\" class=\"inputSearch form-control\" [(ngModel)]=\"filterString\" />\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n           \r\n            <br />\r\n            <div class=\"row well\">\r\n                <div id=\"print-section\" class=\"\">\r\n                    \r\n                    <p-tree [value]=\"treeDataSourceItems | filterbynameorcode:filterString : leafType\" selectionMode=\"single\" [(selection)]=\"selectedNode\">\r\n                        <ng-template let-node pTemplate=\"Drug\">\r\n                            <span class=\"nav-icon\"><i class=\"fa fa-cube\"></i></span>\r\n                            &nbsp;\r\n                            {{selectedLang === 'ar' ?  node.label : node.labelTranslation}}\r\n                            &nbsp; &nbsp;\r\n                            <a [class.disabled]=\"!enableEditBtn && !isClinicAdmin ? true : null\">\r\n                                <i class=\"fa fa-pencil fa-2x\" (click)=\"displayPopup(node)\" style=\"color: #32bea6;\"></i>\r\n\r\n                            </a>\r\n                            <label>\r\n                                <input id=\"ChkIsActiveInGrid\" name=\"ChkIsActiveInGrid\" class=\"ace ace-switch ace-switch-6\"\r\n                                       type=\"checkbox\" [checked]=\"node.isActive\"\r\n                                       (click)=\"changeActivation(node , $event)\" disabled=\"{{ enableActivateBtn || isClinicAdmin? '' :'disabled'}}\" />\r\n                                <span class=\"lbl\"></span>\r\n                            </label>\r\n                        </ng-template>\r\n                        <ng-template let-node pTemplate=\"DrugsGroup\">\r\n                            <span class=\"nav-icon\"><i class=\"fa fa-cubes\"></i></span>\r\n                            &nbsp;\r\n                            {{selectedLang === 'ar' ?  node.label : node.labelTranslation}}\r\n                            &nbsp; &nbsp;\r\n                            <a #btnAddDrugsGroup data-toggle=\"modal\" data-target=\"#DrugsAndGroupsPopup\" [class.disabled]=\"!enableAddRootBtn && !isClinicAdmin ? true : null\">\r\n                                <img src=\"assets/images/addImage.png\" (click)=\"passParentGroupInfo(node)\" />\r\n                            </a>\r\n                            &nbsp; &nbsp;\r\n                            <a [class.disabled]=\"!enableEditBtn && !isClinicAdmin ? true : null\">\r\n                                <i class=\"fa fa-pencil fa-2x\" (click)=\"displayPopup(node)\"  style=\"color: #32bea6;\"></i>\r\n                            </a>\r\n                            <label>\r\n                                <input id=\"ChkIsActiveInGrid\" name=\"ChkIsActiveInGrid\" class=\"ace ace-switch ace-switch-6\"\r\n                                       type=\"checkbox\" [checked]=\"node.isActive\"\r\n                                       (click)=\"changeActivation(node , $event)\" disabled=\"{{ enableActivateBtn || isClinicAdmin? '' :'disabled'}}\" />\r\n                                <span class=\"lbl\"></span>\r\n                            </label>\r\n                        </ng-template>\r\n                    </p-tree>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- Drug Modal -->\r\n<div id=\"DrugsAndGroupsPopup\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" #btnClosePopup data-dismiss=\"modal\" (click)=\"closeDrugsAndGroupsPopup()\">&times;</button>\r\n                <h4 class=\"modal-title\">{{txtHeaderModal}}</h4>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <div class=\"col-sm-offset-3 col-md-6\">\r\n                    <table>\r\n                        <tr>\r\n                            <td *ngFor=\"let item of rbSelections; let idx = index\">\r\n                                <input type=\"radio\" name=\"radiogroup\" [value]=\"item.value\"\r\n                                       [checked]=\"item.value == selectedAction\" #checkbox (change)=\"onCheckboxSelectionChange(checkbox.value)\" disabled=\"{{ enableCheckBox ? '' :'disabled'}}\">{{item.text | translate}}\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            <div *ngIf=\"isDrugSelected\">\r\n                <clinic-manage-drug [selectedDrugId]='toSaveDrugId' [selectedParentGroupId]='parentDrugsGroupId' [isClinicAdmin]=\"isClinicAdmin\" [enableSaveBtn]=\"enableSaveBtn\"\r\n                                    [selectedParentGroupName]='parentDrugsGroupName' (onDrugChanged)=\"updateSelectedNode($event)\" (onIsNew)=\"setIsNewValue($event)\" (onCancel)=\"closeDrugsAndGroupsPopup()\"></clinic-manage-drug>\r\n            </div>\r\n            <div *ngIf=\"isDrugsGroupSelected\">\r\n                <clinic-manage-drugs-group [selectedDrugsGroupId]='toSaveDrugsGroupId' [selectedParentGroupId]='parentDrugsGroupId' [isClinicAdmin]=\"isClinicAdmin\" [enableSaveBtn]=\"enableSaveBtn\"\r\n                                           [selectedParentGroupName]='parentDrugsGroupName' (onDrugsGroupChanged)=\"updateSelectedNode($event)\" (onIsNew)=\"setIsNewValue($event)\" (onCancel)=\"closeDrugsAndGroupsPopup()\"></clinic-manage-drugs-group>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n","import { Component, OnInit, OnChanges, SimpleChanges, Input, Output, EventEmitter } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\nimport { ClinicService } from '../../shared/clinic.service';\r\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\r\n@Component({\r\n\r\n    selector: 'clinic-manage-drug',\r\n    templateUrl: './clinic-manage-drug.component.html'\r\n})\r\n\r\nexport class ClinicManageDrugComponent implements OnChanges {\r\n\r\n    @Input() selectedDrugId: string = '';\r\n    @Input() selectedParentGroupId: string = '';\r\n    @Input() selectedParentGroupName: string = '';\r\n    @Input() isClinicAdmin: boolean = false;\r\n    @Input() enableSaveBtn: boolean = false;\r\n    @Output() onDrugChanged: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() onIsNew: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n    @Output() onCancel = new EventEmitter();\r\n\r\n    selectDrugsTab: boolean = true;\r\n    active: boolean = true;\r\n    showProgress = false;\r\n    selectedDrug: any = {};\r\n    selectedLang = 'ar';\r\n\r\n    constructor(public toastr: ToastrService\r\n        , private clinicService: ClinicService\r\n        , public translate: TranslateService\r\n        , private localStorage: LocalStorageService) { }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        this.selectedLang = this.localStorage.retrieve(\"selectedLanguage\");\r\n        if (this.selectedDrugId && this.selectedDrugId != '') {\r\n            let thisComponent = this;\r\n            thisComponent.showProgress = true;\r\n            this.clinicService.getDrugById(thisComponent.selectedDrugId)\r\n                .subscribe(\r\n                    function (drug: any) {\r\n                        thisComponent.selectedDrug = drug;\r\n                        thisComponent.selectedParentGroupId = drug.parentGroupId;\r\n\r\n                        if (thisComponent.selectedLang == 'ar')\r\n                            thisComponent.selectedParentGroupName = drug.parentGroupName;\r\n                        else\r\n                            thisComponent.selectedParentGroupName = drug.parentGroupNameTranslation;\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () { // finally\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n        }\r\n        else {\r\n            this.clearControl();\r\n        }\r\n    }\r\n\r\n    saveDrug(): void {\r\n        let thisComponent = this;\r\n        thisComponent.showProgress = true;\r\n        this.selectedDrug.parentGroupId = this.selectedParentGroupId;\r\n\r\n        if (this.selectedDrug.id > 0) {\r\n            //Update\r\n            this.clinicService.updateDrug(this.selectedDrug)\r\n                .subscribe(\r\n                    function (response: any) {\r\n\r\n                        // thisComponent.selectedDrug = response;\r\n                        thisComponent.onIsNew.emit(false);\r\n                        thisComponent.onDrugChanged.emit(response);\r\n                        let msg = thisComponent.translate.instant(\"SavedSuccessfully\");\r\n                        thisComponent.toastr.success(msg, '');\r\n                        thisComponent.clearControl();\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n                        thisComponent.showProgress = false;\r\n                        thisComponent.clearControl();\r\n                    },\r\n                    function () {\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n\r\n        }\r\n        else {\r\n            //New\r\n            this.clinicService.createDrug(this.selectedDrug)\r\n                .subscribe(\r\n                    function (response: any) {\r\n\r\n                        //thisComponent.selectedDrug = response;\r\n                        thisComponent.onIsNew.emit(true);\r\n                        thisComponent.onDrugChanged.emit(response);\r\n                        let msg = thisComponent.translate.instant(\"SavedSuccessfully\");\r\n                        thisComponent.toastr.success(msg, '');\r\n                        thisComponent.clearControl();\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n                        thisComponent.showProgress = false;\r\n                        thisComponent.clearControl();\r\n                    },\r\n                    function () {\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n        }\r\n    }\r\n\r\n    clearControl(): void {\r\n        this.selectedDrug = {};\r\n        this.active = false;\r\n        setTimeout(() => this.active = true, 0);\r\n    }\r\n\r\n    cancelDrug(): void {\r\n        this.clearControl();\r\n        this.onCancel.emit();\r\n    }\r\n\r\n}","<form *ngIf=\"active\" class=\"form-horizontal\" name=\"manageDrugForm\" #manageDrugForm=\"ngForm\">\r\n    <div class=\"modal-body\">\r\n        <div class=\"form-group\">\r\n            <label for=\"txtName\" class=\"control-label col-md-3\"> {{ 'ParentGroup' | translate}}</label>\r\n            <div class=\"col-md-6\">\r\n                {{selectedParentGroupName}}\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"txtDrugCode\" class=\"control-label col-md-3\"> {{ 'Code' | translate}}</label>\r\n            <div class=\"col-md-9\">\r\n                <input id=\"txtDrugCode\" name=\"txtDrugCode\" class=\"form-control\" [(ngModel)]='selectedDrug.code' #txtDrugCode=\"ngModel\" required />\r\n                <div [hidden]=\"txtDrugCode.valid || txtDrugCode.pristine\" class=\"alert alert-danger\">\r\n                    {{ 'RequiredField' | translate}}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"txtName\" class=\"control-label col-md-3\">{{ 'ArabicName' | translate}}</label>\r\n            <div class=\"col-md-9\">\r\n                <input id=\"txtName\" name=\"txtName\" class=\"form-control\" [(ngModel)]='selectedDrug.name' #txtName=\"ngModel\" required />\r\n                <div [hidden]=\"txtName.valid || txtName.pristine\" class=\"alert alert-danger\">\r\n                    {{ 'RequiredField' | translate}}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"txtNameTranslation\" class=\"control-label col-md-3\">{{ 'EnglishName' | translate}}</label>\r\n            <div class=\"col-md-9\">\r\n                <input id=\"txtNameTranslation\" name=\"txtNameTranslation\" class=\"form-control\" [(ngModel)]='selectedDrug.nameTranslation' #txtNameTranslation=\"ngModel\" required />\r\n                <div [hidden]=\"txtNameTranslation.valid || txtNameTranslation.pristine\" class=\"alert alert-danger\">\r\n                    {{ 'RequiredField' | translate}}\r\n                </div>\r\n            </div>\r\n        </div>        \r\n        <div class=\"form-group\">\r\n            <label for=\"txtDrugRemark\" class=\"control-label col-md-3\"> {{ 'Remark' | translate}}</label>\r\n            <div class=\"col-md-9\">\r\n                <textarea id=\"txtDrugRemark\" name=\"txtDrugRemark\" class=\"form-control\" [(ngModel)]='selectedDrug.description'></textarea>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n        <div class=\"text-center\">\r\n            <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" [disabled]=\"!manageDrugForm.valid ||(!enableSaveBtn && !isClinicAdmin)\" (click)=\"saveDrug()\">{{ 'Save' | translate}}</button>\r\n            <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" (click)=\"cancelDrug()\">{{ 'Cancel' | translate}}</button>\r\n        </div>\r\n    </div>\r\n</form>","import { Component, OnInit, OnChanges, SimpleChanges, Input, Output, EventEmitter } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\nimport { ClinicService } from '../../shared/clinic.service';\r\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\r\n\r\n@Component({\r\n\r\n    selector: 'clinic-manage-drugs-group',\r\n    templateUrl: './clinic-manage-drugs-group.component.html'\r\n})\r\n\r\nexport class ClinicManageDrugsGroupComponent implements OnInit, OnChanges {\r\n\r\n    @Input() selectedDrugsGroupId: string = '';\r\n    @Input() selectedParentGroupId: string = '';\r\n    @Input() selectedParentGroupName: string = '';\r\n    @Input() isClinicAdmin: boolean = false;\r\n    @Input() enableSaveBtn: boolean = false;\r\n    @Output() onDrugsGroupChanged: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() onIsNew: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n    @Output() onCancel = new EventEmitter();\r\n    selectedClinicId!: number;\r\n    selectDrugsTab: boolean = true;\r\n    active: boolean = true;\r\n    showProgress = false;\r\n    selectedDrugsGroup: any = {};\r\n    selectedLang = 'ar';\r\n\r\n    constructor(public toastr: ToastrService\r\n        , private localStorage: LocalStorageService\r\n        , private clinicService: ClinicService\r\n        , public translate: TranslateService) { }\r\n\r\n    ngOnInit(): void {\r\n        this.selectedClinicId = this.localStorage.retrieve(\"ClinicID\");\r\n    }\r\n    //get data according to selected type \r\n    ngOnChanges(changes: SimpleChanges) {\r\n        this.selectedLang = this.localStorage.retrieve(\"selectedLanguage\");\r\n        if (this.selectedDrugsGroupId && this.selectedDrugsGroupId != '') {\r\n            let thisComponent = this;\r\n            thisComponent.showProgress = true;\r\n            this.clinicService.getDrugsGroupById(thisComponent.selectedDrugsGroupId)\r\n                .subscribe(\r\n                    function (drugsGroup: any) {\r\n                        thisComponent.selectedDrugsGroup = drugsGroup;\r\n                        thisComponent.selectedParentGroupId = drugsGroup.parentGroupId;\r\n                        if (thisComponent.selectedLang == 'ar')\r\n                            thisComponent.selectedParentGroupName = drugsGroup.parentGroupName;\r\n                        else\r\n                            thisComponent.selectedParentGroupName = drugsGroup.parentGroupNameTranslation;\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () { // finally\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n        }\r\n        else {\r\n            this.clearControl();\r\n        }\r\n    }\r\n\r\n\r\n    saveDrugsGroup(): void {\r\n        let thisComponent = this;\r\n        thisComponent.showProgress = true;\r\n        this.selectedDrugsGroup.parentGroupId = this.selectedParentGroupId;\r\n        this.selectedDrugsGroup.clinicId = this.selectedClinicId\r\n        if (this.selectedDrugsGroup.id > 0) {\r\n            //Update\r\n            this.clinicService.updateDrugsGroup(this.selectedDrugsGroup)\r\n                .subscribe(\r\n                    function (response: any) {\r\n\r\n                        //thisComponent.selectedDrugsGroup = response;\r\n                        thisComponent.onIsNew.emit(false);\r\n                        thisComponent.onDrugsGroupChanged.emit(response);\r\n                        let msg = thisComponent.translate.instant(\"SavedSuccessfully\");\r\n                        thisComponent.toastr.success(msg, '');\r\n                        thisComponent.clearControl();\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n                        thisComponent.clearControl();\r\n                        thisComponent.showProgress = false;\r\n\r\n                    },\r\n                    function () {\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n\r\n        }\r\n        else {\r\n            //New\r\n            this.clinicService.createDrugsGroup(this.selectedDrugsGroup)\r\n                .subscribe(\r\n                    function (response: any) {\r\n\r\n                        //thisComponent.selectedDrugsGroup = response;\r\n                        thisComponent.onIsNew.emit(true);\r\n                        thisComponent.onDrugsGroupChanged.emit(response);\r\n                        let msg = thisComponent.translate.instant(\"SavedSuccessfully\");\r\n                        thisComponent.toastr.success(msg, '');\r\n                        thisComponent.clearControl();\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n                        thisComponent.clearControl();\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () {\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n        }\r\n    }\r\n\r\n    clearControl(): void {\r\n        this.selectedDrugsGroup = {};\r\n        this.active = false;\r\n        setTimeout(() => this.active = true, 0);\r\n    }\r\n\r\n    cancelDrugsGroup(): void {\r\n        this.clearControl();\r\n        this.onCancel.emit();\r\n    }\r\n}","<form *ngIf=\"active\" class=\"form-horizontal\" name=\"manageDrugsGroupForm\" #manageDrugsGroupForm=\"ngForm\">\r\n    <div class=\"modal-body\">\r\n        <div class=\"form-group\">\r\n            <label for=\"txtName\" class=\"control-label col-md-3\"> {{ 'ParentGroup' | translate}}</label>\r\n            <div class=\"col-md-9\">\r\n                {{selectedParentGroupName}}\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"txtName\" class=\"control-label col-md-3\">{{ 'ArabicName' | translate}}</label>\r\n            <div class=\"col-md-9\">\r\n                <input id=\"txtName\" name=\"txtName\" class=\"form-control\" [(ngModel)]='selectedDrugsGroup.name' #txtName=\"ngModel\" required />\r\n                <div [hidden]=\"txtName.valid || txtName.pristine\" class=\"alert alert-danger\">\r\n                    {{ 'RequiredField' | translate}}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"txtNameTranslation\" class=\"control-label col-md-3\"> {{ 'EnglishName' | translate}}</label>\r\n            <div class=\"col-md-9\">\r\n                <input id=\"txtNameTranslation\" name=\"txtNameTranslation\" class=\"form-control\" [(ngModel)]='selectedDrugsGroup.nameTranslation' #txtNameTranslation=\"ngModel\" required />\r\n                <div [hidden]=\"txtNameTranslation.valid || txtNameTranslation.pristine\" class=\"alert alert-danger\">\r\n                   {{ 'RequiredField' | translate}}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"txtDrugsGroupRemark\" class=\"control-label col-md-3\"> {{ 'Remark' | translate}}</label>\r\n            <div class=\"col-md-6\">\r\n                <textarea id=\"txtDrugsGroupRemark\" name=\"txtDrugsGroupRemark\" class=\"form-control\" [(ngModel)]='selectedDrugsGroup.description'></textarea>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n        <div class=\"text-center\">\r\n            <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" [disabled]=\"!manageDrugsGroupForm.valid ||(!enableSaveBtn && !isClinicAdmin)\" (click)=\"saveDrugsGroup()\">{{ 'Save' | translate}}</button>\r\n            <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" (click)=\"cancelDrugsGroup()\">{{ 'Cancel' | translate}}</button>\r\n        </div>\r\n    </div>\r\n</form>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\nimport { ClinicService } from '../../shared/clinic.service';\r\nimport { Reply } from '../../../classes/reply.class';\r\nimport { Feedback } from '../../../classes/feedback.class';\r\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\r\n\r\n@Component({\r\n\r\n    selector: 'reply-to-feedback',\r\n    templateUrl: './reply-to-feedback.component.html'\r\n})\r\n\r\nexport class ReplyToFeedbackComponent {\r\n    selectFeedbackTab: boolean = true;\r\n    recorderId!: number;\r\n    selectedFeedbackId!: number;\r\n    selectedClinicId!: number;\r\n    active: boolean = true;\r\n    showProgress = false;\r\n    selectedFeedback: Feedback = new Feedback();\r\n    toSaveReply: Reply = new Reply();\r\n    feedbackReplies: Reply[] = [];\r\n    userType: string = '';\r\n    isClinicAdmin: boolean = false;\r\n    lstToTranslated: string[] = [];\r\n    constructor(public toastr: ToastrService\r\n        , private localStorage: LocalStorageService\r\n        , private clinicService: ClinicService\r\n        , private _route: ActivatedRoute\r\n        , public translate: TranslateService) { }\r\n\r\n    ngOnInit(): void {\r\n        this.lstToTranslated = ['repliedByName', 'repliedByNameTranslation'];\r\n        this.selectedClinicId = this.localStorage.retrieve(\"ClinicID\");\r\n        this.recorderId = this.localStorage.retrieve(\"UserID\");\r\n        this.selectedFeedbackId = this._route.snapshot.params['id'];\r\n\r\n        this.userType = this.localStorage.retrieve(\"UserType\");\r\n        if (this.userType == 'ClinicAdmin')\r\n            this.isClinicAdmin = true;\r\n\r\n        if (this.selectedFeedbackId && this.selectedFeedbackId > 0) {\r\n            let thisComponent = this;\r\n            thisComponent.showProgress = true;\r\n            this.clinicService.getFeedbackById(thisComponent.selectedFeedbackId)\r\n                .subscribe(\r\n                    function (feedback: any) {\r\n                        thisComponent.selectedFeedback = feedback;\r\n                        thisComponent.feedbackReplies = feedback.replies;\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () { // finally\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n        }\r\n    }\r\n\r\n    saveReply(): void {\r\n        let thisComponent = this;\r\n        if (!this.toSaveReply.message || this.toSaveReply.message == '' || this.toSaveReply.message.trim() == '') {\r\n            //this.toastr.error('Cannot reply to a feedback with an empty reply ', '');\r\n            let msg = thisComponent.translate.instant(\"CannotReplyWithEmptyReply\");\r\n            thisComponent.toastr.error(msg, '');\r\n            return;\r\n        }\r\n        if (this.selectedFeedbackId && this.selectedFeedbackId > 0) {\r\n            thisComponent.showProgress = true;\r\n            this.toSaveReply.feedbackId = this.selectedFeedbackId;\r\n            this.toSaveReply.repliedById = this.recorderId;\r\n            if (this.selectedFeedback)\r\n                this.toSaveReply.status = this.selectedFeedback.status;\r\n\r\n            this.clinicService.saveReply(this.toSaveReply)\r\n                .subscribe(\r\n                    function (response: any) {\r\n                        thisComponent.feedbackReplies.push(response);\r\n                        thisComponent.toSaveReply = new Reply();\r\n                        if (thisComponent.selectedFeedback) {\r\n                            if (thisComponent.selectedFeedback.status && thisComponent.selectedFeedback.status != '') {\r\n                                if (thisComponent.selectedFeedback.status.toString().toLowerCase() != \"completed\") {\r\n                                    thisComponent.selectedFeedback.status = \"Replied\"\r\n                                }\r\n                            }\r\n                            else {\r\n                                thisComponent.selectedFeedback.status = \"Replied\"\r\n                            }\r\n                        }\r\n                        let msg = thisComponent.translate.instant(\"SavedAndSentSuccessfully\");\r\n                        thisComponent.toastr.success(msg, '');\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () {\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n        }\r\n    }\r\n\r\n    saveFeedback(): void {\r\n        let thisComponent = this;\r\n        if (this.selectedFeedback) {\r\n            thisComponent.showProgress = true;\r\n            this.clinicService.updateFeedback(this.selectedFeedback)\r\n                .subscribe(\r\n                    function (response: any) {\r\n                        let msg = thisComponent.translate.instant(\"SavedSuccessfully\");\r\n                        thisComponent.toastr.success(msg, '');\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () {\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n        }\r\n    }\r\n\r\n\r\n}","<div *ngIf=\"showProgress\">\r\n    <loading></loading>\r\n</div>\r\n<div class=\"row\">\r\n    <clinic-tab [isFeedbackSelected]='selectFeedbackTab'></clinic-tab>\r\n    <div class=\"row nopadding\">\r\n        <div class=\"row NBbreadcrumb\">\r\n            <a>{{ 'Clinic' | translate}}</a> &nbsp;/\r\n            {{ 'Feedback' | translate}}\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-1\"></div>\r\n            <div class=\"col-md-10\">\r\n                <div class=\"row text-center\">\r\n                    <button class=\"btn btn-primary\" (click)=\"saveFeedback()\" disabled=\"{{ isClinicAdmin ? '' :'disabled'}}\">{{ 'Save' | translate}}</button>\r\n                    <button class=\"btn btn-primary\" routerLink=\"/clinic/feedback/all/{{selectedClinicId}}\" disabled=\"{{ isClinicAdmin ? '' :'disabled'}}\">{{ 'Back' | translate}}</button>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-2\">\r\n                        <strong>\r\n                            {{ 'User' | translate}}:\r\n                        </strong>\r\n                    </div>\r\n                    <div class=\"col-md-4\">\r\n                        <span>{{selectedFeedback.patientName}}</span>\r\n                    </div>\r\n                    <div class=\"col-md-2\">\r\n                        <strong>\r\n                            User ID:\r\n                        </strong>\r\n                    </div>\r\n                    <div class=\"col-md-4\">\r\n                        <span>{{selectedFeedback.patientUniqueMRN}}</span>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-2\">\r\n                        <strong>\r\n                            {{ 'Status' | translate}}:\r\n                        </strong>\r\n                    </div>\r\n                    <div class=\"col-md-4\">\r\n                        <select class=\"form-control\" name=\"ddlFeedbackStatus\" [(ngModel)]=\"selectedFeedback.status\" #ddlFeedbackStatus=\"ngModel\">\r\n                            <option value=\"Submitted\">{{ 'Submitted' | translate}}</option>\r\n                            <option value=\"Replied\">{{ 'Replied' | translate}}</option>\r\n                            <option value=\"Completed\">{{ 'Completed' | translate}}</option>\r\n                        </select>\r\n                    </div>\r\n                    <div class=\"col-md-2\">\r\n                        <strong>\r\n                            {{ 'FeedbackDate' | translate}}:\r\n                        </strong>\r\n                    </div>\r\n                    <div class=\"col-md-4\">\r\n                        <span>{{selectedFeedback.dateString}}</span>\r\n                    </div>\r\n                </div>\r\n                <br />\r\n                <div class=\"row table-bordered\" style=\"padding: 20px;\">\r\n                    <strong>\r\n                        {{ 'FeedbackMessage' | translate}}:\r\n                    </strong>\r\n                    <br />\r\n                    {{selectedFeedback.message}}\r\n                </div>\r\n                <br />\r\n                <strong>\r\n                    {{ 'Replies' | translate}}:\r\n                </strong>\r\n                <div class=\"row table-bordered\" style=\"padding: 20px;\">\r\n                    <br />\r\n                    <div *ngFor=\"let reply of feedbackReplies | translateObjects  : null : null : lstToTranslated \">\r\n                        <strong>\r\n                            {{reply.repliedByName}}\r\n                        </strong>\r\n                        <br />\r\n                        <strong>\r\n                            {{reply.dateString}}\r\n                        </strong>\r\n                        <br />\r\n                        <strong>\r\n                            {{reply.status}}\r\n                        </strong>\r\n                        <br />\r\n                        {{reply.message}}\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <br />\r\n                <div class=\"row table-bordered\">\r\n                    <br />\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-12\">\r\n                            <textarea class=\"form-group\" style=\"width:100%;height:120px;\"\r\n                                      [(ngModel)]='toSaveReply.message'></textarea>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-10\"></div>\r\n                        <div class=\"col-md-1\">\r\n                            <button class=\"btn btn-primary\" (click)=\"saveReply()\" disabled=\"{{ isClinicAdmin ? '' :'disabled'}}\">\r\n                                <i class=\"glyphicon glyphicon-send\"></i> {{ 'Send' | translate}}\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <br />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\nimport { ClinicService } from '../../shared/clinic.service';\r\n\r\nimport { Reply } from '../../../classes/reply.class';\r\nimport { Feedback } from '../../../classes/feedback.class';\r\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\r\nimport { Table } from 'primeng/table';\r\n\r\n@Component({\r\n    selector: 'view-feedbacks-list',\r\n    templateUrl: './view-feedbacks-list.component.html'\r\n})\r\n\r\n\r\nexport class ViewfeedbacksListComponent implements OnInit {\r\n\r\n    constructor(public toastr: ToastrService\r\n        , private localStorage: LocalStorageService\r\n        , private clinicService: ClinicService\r\n        , public translate: TranslateService) { }\r\n\r\n    @ViewChild('btnReplyToFeedBack') btnReplyToFeedBack!: ElementRef;\r\n    @ViewChild('btnClosePopup') btnClosePopup!: ElementRef;\r\n\r\n    selectFeedbackTab: boolean = true;\r\n\r\n    active: boolean = true;\r\n    showProgress = false;\r\n    toReplyFeedBackId!:string;\r\n    clinicFeedbacksList: Feedback[] = [];\r\n    lstToTranslated: string[] = [];\r\n    selectedClinicId!: number;\r\n    userType: string = '';\r\n    isClinicAdmin: boolean = false;\r\n    loading: boolean = true;\r\n    @ViewChild('dt') table!: Table;\r\n    ngOnInit(): void {\r\n        this.lstToTranslated = ['patientName', 'patientNameTranslation', 'lastReplyingUserName', 'lastReplyingUserNameTranslation'];\r\n        this.selectedClinicId = this.localStorage.retrieve(\"ClinicID\");\r\n\r\n        this.userType = this.localStorage.retrieve(\"UserType\");\r\n        if (this.userType == 'ClinicAdmin')\r\n            this.isClinicAdmin = true;\r\n\r\n        let thisComponent = this;\r\n        thisComponent.showProgress = true;\r\n        this.clinicService.getClinicFeedbacks(this.selectedClinicId)\r\n            .subscribe(\r\n                function (feedbacksList: any) {\r\n                    thisComponent.clinicFeedbacksList = feedbacksList;\r\n                },\r\n                function (error: any) {\r\n                    thisComponent.toastr.error(error, '');\r\n                    thisComponent.showProgress = false;\r\n                    thisComponent.loading = false;\r\n                },\r\n                function () { // finally\r\n                    thisComponent.showProgress = false;\r\n                    thisComponent.loading = false;\r\n                });\r\n\r\n    }\r\n}","<div *ngIf=\"showProgress\">\r\n    <loading></loading>\r\n</div>\r\n<div class=\"row\">\r\n    <clinic-tab [isFeedbackSelected]='selectFeedbackTab'></clinic-tab>\r\n    <div class=\"row nopadding\">\r\n        <div class=\"row NBbreadcrumb\">\r\n            <a>{{ 'Clinic' | translate}}</a> &nbsp;/\r\n            {{ 'Feedback' | translate}}\r\n        </div>\r\n        <div class=\"row well\" style=\"background-color: #f6f7f9 !important;\">\r\n            <div class=\"inner-addon left-addon\">\r\n                <i class=\"glyphicon glyphicon-search\"></i>\r\n                <input pInputText type=\"text\" (input)=\"dt.filterGlobal($event.target.value, 'contains')\"\r\n                    [placeholder]=\"'Search' | translate\" />\r\n            </div>\r\n            <!---New Table-->\r\n            <p-table #dt [value]=\"clinicFeedbacksList\" dataKey=\"id\" [rowHover]=\"true\" [rows]=\"10\"\r\n                [showCurrentPageReport]=\"true\" [rowsPerPageOptions]=\"[10,20,30,40,50,100]\" [loading]=\"loading\"\r\n                [paginator]=\"true\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                [filterDelay]=\"0\"\r\n                [globalFilterFields]=\"['dateString','patientName','patientMobileNumber','message','status','lastReplyingUserName','lastReplyingDateString']\">\r\n\r\n                <ng-template pTemplate=\"header\">\r\n                    <tr>\r\n                        <th pSortableColumn=\"dateString\">{{'FeedbackDate' | translate}} <p-sortIcon field=\"dateString\">\r\n                            </p-sortIcon>\r\n                        </th>\r\n                        <th pSortableColumn=\"patientName\">{{'PatientName' | translate}} <p-sortIcon field=\"patientName\">\r\n                            </p-sortIcon>\r\n                        </th>\r\n                        <th pSortableColumn=\"patientMobileNumber\">{{'Contact' | translate}} <p-sortIcon\r\n                                field=\"patientMobileNumber\">\r\n                            </p-sortIcon>\r\n                        </th>\r\n                        <th pSortableColumn=\"message\">{{'Message' | translate}} <p-sortIcon field=\"message\">\r\n                            </p-sortIcon>\r\n                        </th>\r\n                        <th pSortableColumn=\"status\">{{'Status' | translate}} <p-sortIcon field=\"status\">\r\n                            </p-sortIcon>\r\n                        </th>\r\n                        <th pSortableColumn=\"lastReplyingUserName\">{{'LastReplyBy' | translate}} <p-sortIcon\r\n                                field=\"lastReplyingUserName\">\r\n                            </p-sortIcon>\r\n                        </th>\r\n                        <th pSortableColumn=\"lastReplyingDateString\">{{'LastReplyDate' | translate}} <p-sortIcon\r\n                                field=\"lastReplyingDateString\">\r\n                            </p-sortIcon>\r\n                        </th>\r\n                        <th><span styleClass=\"text-center width70\">{{'Action' | translate}} </span>\r\n                        </th>\r\n                    </tr>\r\n\r\n                </ng-template>\r\n                <ng-template pTemplate=\"body\" let-item>\r\n                    <tr class=\"p-selectable-row\">\r\n                        <td>\r\n                            {{item.dateString}}\r\n                        </td>\r\n                        <td>\r\n                            {{item.patientName}}\r\n                        </td>\r\n                        <td>\r\n                            {{item.patientMobileNumber}}\r\n                        </td>\r\n                        <td>\r\n                            {{item.message}}\r\n                        </td>\r\n                        <td>\r\n                            {{item.status}}\r\n                        </td>\r\n                        <td>\r\n                            {{item.lastReplyingUserName}}\r\n                        </td>\r\n                        <td>\r\n                            {{item.lastReplyingDateString}}\r\n                        </td>\r\n                        <td style=\"text-align: center\">\r\n                            <a class=\"pointer\" routerLink=\"/clinic/feedback/replyToFeedback/{{item.id}}\"\r\n                                [class.disabled]=\"!isClinicAdmin ? true : null\">\r\n                                <img src=\"assets/images/edit-24.png\" />\r\n                            </a>\r\n                        </td>\r\n                    </tr>\r\n                </ng-template>\r\n                <ng-template pTemplate=\"emptymessage\">\r\n                    <tr>\r\n                        <td colspan=\"8\">No data found.</td>\r\n                    </tr>\r\n                </ng-template>\r\n            </p-table>\r\n            <!--End Table-->\r\n\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, OnChanges, Input, Output, EventEmitter, ViewChild, ElementRef } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\nimport { ClinicService } from '../shared/clinic.service';\r\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\r\n@Component({\r\n\r\n    selector: 'clinic-humanResource-basic',\r\n    templateUrl: './clinic-humanResource-basic.component.html'\r\n})\r\n\r\nexport class ClinicHumanResourceBasicComponent implements OnChanges {\r\n\r\n    @Input() humanResourceWrapper: any;\r\n    @Input() departmentName = '';\r\n    @Input() divisionName = '';\r\n    @Input() divisionId = '';\r\n    @Input() isClinicAdmin: boolean = false;\r\n    @Input() enableSaveBtn: boolean = false;\r\n    @Input() selectedUserToEdit: any;\r\n    @Input() isNonMedicalDepartment: boolean = false;\r\n    @Output() onModelUpdated = new EventEmitter<any>();\r\n\r\n    selectedClinicId!:string;\r\n\r\n    active: boolean = true;\r\n    showProgress: boolean = false;\r\n    user: any = { id: 0, divisions: [], reachInfo: {} };\r\n    userTypesList: any[] = [];\r\n    gendersList: any[] = [];\r\n    nationalitiesList: any[] = [];\r\n\r\n\r\n    constructor(private clinicService: ClinicService,\r\n        public toastr: ToastrService,\r\n        public localStorage: LocalStorageService\r\n        , public translate: TranslateService) { }\r\n\r\n    ngOnChanges(): void {\r\n\r\n        this.clear();\r\n\r\n        if (this.humanResourceWrapper != undefined) {\r\n            this.userTypesList = this.humanResourceWrapper.humanResourceTypes;\r\n            this.gendersList = this.humanResourceWrapper.genders;\r\n            this.nationalitiesList = this.humanResourceWrapper.nationalities;\r\n\r\n            if (this.userTypesList == undefined)\r\n                this.userTypesList = [];\r\n\r\n            if (this.gendersList == undefined)\r\n                this.gendersList = [];\r\n\r\n            if (this.nationalitiesList == undefined)\r\n                this.nationalitiesList = [];\r\n        }\r\n\r\n        if (this.selectedUserToEdit != undefined) {\r\n            this.user = this.selectedUserToEdit;\r\n        }\r\n        this.selectedClinicId = this.localStorage.retrieve(\"ClinicID\");\r\n\r\n    }\r\n\r\n    saveHumanResource(): void {\r\n        let thisComponent = this;\r\n        thisComponent.showProgress = true;\r\n\r\n        if (this.user.id == 0)//New\r\n        {\r\n            this.user.clinicId = this.selectedClinicId;\r\n            //if (this.isPasswordValid()) {\r\n            this.user.divisions.push({ id: this.divisionId });\r\n            this.clinicService.saveHumanResource(this.user)\r\n                .subscribe(\r\n                    function (response: any) {\r\n\r\n                        thisComponent.user = response;\r\n                        //Update the tree\r\n                        thisComponent.raiseModelUpdated(response);\r\n\r\n                        let msg = thisComponent.translate.instant(\"SavedSuccessfully\");\r\n                        thisComponent.toastr.success(msg, '');\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () {\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n            //}\r\n            //else {\r\n            //    thisComponent.showProgress = false;\r\n            //}\r\n        }\r\n        else//Update\r\n        {\r\n            this.clinicService.updateHumanResource(this.user)\r\n                .subscribe(\r\n                    function (response: any) {\r\n                        thisComponent.user = response;\r\n                        thisComponent.raiseModelUpdated(response);\r\n                        let msg = thisComponent.translate.instant(\"SavedSuccessfully\");\r\n                        thisComponent.toastr.success(msg, '');\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () {\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n        }\r\n\r\n    }\r\n\r\n    clear() {\r\n        this.user = { id: 0, divisions: [], reachInfo: {} };\r\n        this.active = false;\r\n        setTimeout(() => this.active = true, 0);\r\n    }\r\n    /*\r\n    isPasswordValid(): boolean {\r\n        let valid: boolean = true;\r\n\r\n        if (this.user.password != this.user.confirmPassword) {\r\n            this.toastr.error('Password and confirm password must be the same', '');\r\n            valid = false\r\n        }\r\n\r\n        return valid;\r\n    }\r\n    */\r\n    raiseModelUpdated(updatedModel: any) {\r\n        this.onModelUpdated.emit(updatedModel);\r\n    }\r\n}","<div *ngIf=\"showProgress\">\r\n    <loading></loading>\r\n</div>\r\n\r\n\r\n<form *ngIf=\"active\" class=\"form-horizontal\" name=\"userRegistrationForm\" #userRegistrationForm=\"ngForm\">\r\n\r\n    <div class=\"form-group\">\r\n        <label for=\"txtDepartment\" class=\"col-md-2 control-label\"> {{ 'Department' | translate}}</label>\r\n        <div class=\"col-md-4\">\r\n            <input type=\"text\" class=\"form-control\" name=\"txtDepartment\" id=\"txtDepartment\" [(ngModel)]='departmentName' #txtDepartment=\"ngModel\" disabled>\r\n        </div>\r\n        <label for=\"txtDivision\" class=\"col-md-2 control-label\"> {{ 'Division' | translate}}</label>\r\n        <div class=\"col-md-4\">\r\n            <input type=\"text\" class=\"form-control\" name=\"txtDivision\" id=\"txtDivision\" [(ngModel)]='divisionName' #txtDivision=\"ngModel\" disabled>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"txtFirstName\" class=\"col-md-2 control-label\"> {{ 'FirstName_ar' | translate}}</label>\r\n        <div class=\"col-md-4\">\r\n            <input type=\"text\" class=\"form-control\" name=\"txtFirstName\" id=\"txtFirstNameAr\" [(ngModel)]='user.firstName' #txtFirstNameAr=\"ngModel\" required>\r\n            <div [hidden]=\"txtFirstNameAr.valid || txtFirstNameAr.pristine\" class=\"alert alert-danger\">\r\n                {{ 'RequiredField' | translate}}\r\n            </div>\r\n        </div>\r\n        <label for=\"txtLastName\" class=\"col-md-2 control-label\"> {{ 'LastName_ar' | translate}}</label>\r\n        <div class=\"col-md-4\">\r\n            <input type=\"text\" class=\"form-control\" name=\"txtLastNameAr\" id=\"txtLastNameAr\" [(ngModel)]='user.lastName' #txtLastNameAr=\"ngModel\" required>\r\n            <div [hidden]=\"txtLastNameAr.valid || txtLastNameAr.pristine\" class=\"alert alert-danger\">\r\n                {{ 'RequiredField' | translate}}\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"txtFirstName\" class=\"col-md-2 control-label\"> {{ 'FirstName_en' | translate}}</label>\r\n        <div class=\"col-md-4\">\r\n            <input type=\"text\" class=\"form-control\" name=\"txtFirstNameEn\" id=\"txtFirstNameEn\" [(ngModel)]='user.firstNameTranslation' #txtFirstNameEn=\"ngModel\" required>\r\n            <div [hidden]=\"txtFirstNameEn.valid || txtFirstNameEn.pristine\" class=\"alert alert-danger\">\r\n                {{ 'RequiredField' | translate}}\r\n            </div>\r\n        </div>\r\n        <label for=\"txtLastName\" class=\"col-md-2 control-label\"> {{ 'LastName_en' | translate}}</label>\r\n        <div class=\"col-md-4\">\r\n            <input type=\"text\" class=\"form-control\" name=\"txtLastNameEn\" id=\"txtLastNameEn\" [(ngModel)]='user.lastNameTranslation' #txtLastNameEn=\"ngModel\" required>\r\n            <div [hidden]=\"txtLastNameEn.valid || txtLastNameEn.pristine\" class=\"alert alert-danger\">\r\n                {{ 'RequiredField' | translate}}\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"ddlUserTypes\" class=\"col-md-2 control-label\">{{ 'Type' | translate}}</label>\r\n        <div class=\"col-md-4\">\r\n            <select class=\"form-control\" id=\"ddlUserTypes\" name=\"ddlUserTypes\" [(ngModel)]=\"user.humanResourceTypeId\" #ddlUserTypes=\"ngModel\" required>\r\n                <option *ngFor=\"let itm of userTypesList  | translateObjects\" [value]=\"itm.id\">{{itm.name}}</option>\r\n            </select>\r\n            <div [hidden]=\"ddlUserTypes.valid || ddlUserTypes.pristine\" class=\"alert alert-danger\">\r\n                {{ 'RequiredField' | translate}}\r\n            </div>\r\n        </div>\r\n        <label for=\"ddlGenders\" class=\"col-md-2 control-label\">{{ 'Gender' | translate}}</label>\r\n        <div class=\"col-md-4\">\r\n            <select class=\"form-control\" id=\"ddlGenders\" name=\"ddlGenders\" [(ngModel)]=\"user.gender\" #ddlGenders=\"ngModel\">\r\n                <option *ngFor=\"let itm of gendersList\" [value]=\"itm.value\">{{itm.text| translate}}</option>\r\n            </select>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"txtPhone\" class=\"col-md-2 control-label\">{{ 'Mobile' | translate}}</label>\r\n        <div class=\"col-md-4\">\r\n            <input type=\"tel\" class=\"form-control\" name=\"txtMobile\" id=\"txtMobile\" [(ngModel)]='user.reachInfo.mobile' #txtMobile=\"ngModel\" pattern=\"^(\\+?[0-9]{1,5})?([1-9][0-9]{9})$\" required>\r\n            <div [hidden]=\"txtMobile.valid || txtMobile.pristine\" class=\"alert alert-danger\">\r\n                {{ 'RequiredField' | translate}}\r\n            </div>\r\n        </div>\r\n        <label for=\"ddlNationality\" class=\"col-md-2 control-label\">{{ 'Nationality' | translate}}</label>\r\n        <div class=\"col-md-4\">\r\n            <select class=\"form-control\" id=\"ddlNationalities\" name=\"ddlNationalities\" [(ngModel)]=\"user.nationalityId\" #ddlNationalities=\"ngModel\">\r\n                <option *ngFor=\"let itm of nationalitiesList | translateObjects\" [value]=\"itm.id\">{{itm.name}}</option>\r\n            </select>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <!--pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$\"-->\r\n        <label for=\"txtEmail\" class=\"col-md-2 control-label\">{{ 'Email' | translate}}</label>\r\n        <div class=\"col-md-10\">\r\n            <input type=\"email\" pattern=\"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{1,63}$\" class=\"form-control\" id=\"txtEmail\" name=\"txtEmail\"\r\n                   [(ngModel)]='user.email' #txtEmail=\"ngModel\" required>\r\n            <div [hidden]=\"txtEmail.valid || txtEmail.pristine\" class=\"alert alert-danger\">\r\n                {{ 'RequiredField' | translate}}\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!--<div class=\"form-group\" *ngIf=\"user.id == 0\">\r\n        <label for=\"txtPassword\" class=\"col-md-2 control-label\">Password</label>\r\n        <div class=\"col-md-10\">\r\n            <input type=\"password\" class=\"form-control\"\r\n                    pattern=\"(?=.*\\d)(?=.*[a-z]).{6,}\"\r\n                    name=\"txtPassword\" id=\"txtPassword\"\r\n                    [(ngModel)]='user.password'\r\n                   #txtPassword=\"ngModel\" required>\r\n            <div [hidden]=\"txtPassword.valid || txtPassword.pristine\" class=\"alert alert-danger\">\r\n                Required field\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\" *ngIf=\"user.id == 0\">\r\n        <label for=\"txtConfirmPassword\" class=\"col-md-2 control-label\">Confirm Password</label>\r\n        <div class=\"col-md-10\">\r\n            <input type=\"password\" class=\"form-control\"\r\n                   pattern=\"(?=.*\\d)(?=.*[a-z]).{6,}\"\r\n                   name=\"txtConfirmPassword\" id=\"txtConfirmPassword\"\r\n                   [(ngModel)]='user.confirmPassword' #txtConfirmPassword=\"ngModel\" required>\r\n            <div [hidden]=\"txtConfirmPassword.valid || txtConfirmPassword.pristine\" class=\"alert alert-danger\">\r\n                Required field\r\n            </div>\r\n        </div>\r\n    </div>-->\r\n    <div class=\"form-group\">\r\n        <label for=\"chkActive\" class=\"col-md-2 control-label\">{{ 'Active' | translate}}</label>\r\n        <div class=\"col-md-1\">\r\n            <input type=\"checkbox\" name=\"chkActive\" id=\"chkActive\" [(ngModel)]='user.isActive'>\r\n        </div>\r\n        <label for=\"chkRevenuGenerator\" class=\"col-md-3 control-label\">{{ 'RevenueGenerator' | translate}}</label>\r\n        <div class=\"col-md-1\">\r\n            <input type=\"checkbox\" name=\"chkRevenuGenerator\" id=\"chkRevenuGenerator\" [(ngModel)]='user.isRevenueGenerator' [checked]=\"!isNonMedicalDepartment\" [disabled]=\"isNonMedicalDepartment\">\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"chkHoD\" class=\"col-md-2 control-label\"> {{ 'HoD' | translate}}</label>\r\n        <div class=\"col-md-1\">\r\n            <input type=\"checkbox\" name=\"chkHoD\" id=\"chkHoD\" [(ngModel)]='user.isDepartmentHead'>\r\n        </div>\r\n        <label for=\"txtLastName\" class=\"col-md-3 control-label\"> {{ 'PurchaseManager' | translate}}</label>\r\n        <div class=\"col-md-1\">\r\n            <input type=\"checkbox\" name=\"chkPurchaseMgr\" id=\"chkPurchaseMgr\" [(ngModel)]='user.isPurchaseManger'>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"txtEmail\" class=\"col-md-2 control-label\">{{ 'Remark' | translate}}</label>\r\n        <div class=\"col-md-10\">\r\n            <textarea name=\"txtRemark\" class=\"form-control\" [(ngModel)]='user.description'></textarea>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <div class=\"text-center\">\r\n            <button class=\"btn btn-primary\" (click)=\"saveHumanResource()\" [disabled]=\"!userRegistrationForm.form.valid ||(!enableSaveBtn && !isClinicAdmin)\">{{ 'Save' | translate}}</button>\r\n            <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\">{{ 'Cancel' | translate}}</button>\r\n        </div>\r\n    </div>\r\n\r\n</form>\r\n\r\n\r\n","import { Component, OnChanges, Input, Output, EventEmitter, ViewChild, ElementRef } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\nimport { ClinicService } from '../shared/clinic.service';\r\nimport { TreeNode } from 'primeng/api';\r\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\r\nimport { Table } from 'primeng/table';\r\n\r\n@Component({\r\n    selector: 'clinic-humanResource-serviceFees',\r\n    templateUrl: './clinic-humanResource-serviceFees.component.html'\r\n})\r\n\r\nexport class ClinicHumanResourceServiceFeesComponent implements OnChanges {\r\n\r\n    filterString!:string;\r\n    leafType: string = 'Service';\r\n\r\n    @Input() humanResourceWrapper: any;\r\n    @Input() selectedUserToEdit: any;\r\n    @Input() isClinicAdmin: boolean = false;\r\n    @Input() enableSaveBtn: boolean = false;\r\n    @Output() onModelUpdated = new EventEmitter<any>();\r\n\r\n    active: boolean = true;\r\n    showProgress: boolean = false;\r\n    servicesTree: any[] = [];\r\n    selectedNode!: TreeNode;\r\n    userServiceFees: any[] = [];\r\n    serviceFeeModel: any = { id: 0 };\r\n    isEditMode: boolean = false;\r\n    lstToTranslated: string[] = [];\r\n    lstToBeTranslated: string[] = [];\r\n    @ViewChild('dt') table!: Table;\r\n    \r\n    constructor(private clinicService: ClinicService,\r\n        public toastr: ToastrService,\r\n        public localStorage: LocalStorageService\r\n        , public translate: TranslateService) { }\r\n    ngOnInit(): void {\r\n\r\n        this.lstToTranslated = ['serviceName', 'serviceNameTranslation'];\r\n        this.lstToBeTranslated = ['label', 'labelTranslation'];\r\n    }\r\n    ngOnChanges(): void {\r\n\r\n        if (this.humanResourceWrapper != undefined) {\r\n            this.servicesTree = this.humanResourceWrapper.serviceGroups;\r\n\r\n            if (this.servicesTree == undefined)\r\n                this.servicesTree = [];\r\n\r\n        }\r\n\r\n        if (this.selectedUserToEdit != undefined) {\r\n            this.userServiceFees = this.selectedUserToEdit.serviceFees;\r\n        }\r\n\r\n    }\r\n\r\n    saveServiceFees(): void {\r\n\r\n        if (this.selectedNode != undefined && this.selectedNode.type == 'Service') {\r\n            if (!this.isServiceDuplicated(this.selectedNode.data, this.serviceFeeModel.id)) {\r\n                let thisComponent = this;\r\n                thisComponent.showProgress = true;\r\n\r\n                if (!this.isEditMode) {\r\n\r\n                    this.serviceFeeModel.securityUserId = this.selectedUserToEdit.id;\r\n                    this.selectedUserToEdit.serviceFees.push(this.serviceFeeModel);\r\n                }\r\n\r\n                this.serviceFeeModel.serviceId = this.selectedNode.data;\r\n                this.clinicService.updateHumanResource(thisComponent.selectedUserToEdit)\r\n                    .subscribe(\r\n                        function (response: any) {\r\n\r\n                            //thisComponent.selectedUserToEdit = response;\r\n                            //thisComponent.userServiceFees = response.serviceFees;\r\n                            thisComponent.raiseModelUpdated(response);\r\n                            thisComponent.clear();\r\n\r\n                            let msg = thisComponent.translate.instant(\"SavedSuccessfully\");\r\n                            thisComponent.toastr.success(msg, '');\r\n                        },\r\n                        function (error: any) {\r\n                            //console.log(\"Error happened\" + error)\r\n                            thisComponent.toastr.error(error, '');\r\n                            thisComponent.showProgress = false;\r\n                        },\r\n                        function () {\r\n                            thisComponent.showProgress = false;\r\n                        });\r\n            }\r\n            else {\r\n                let msg = this.translate.instant(\"DuplicatedService\");\r\n                this.toastr.error(msg, '');\r\n            }\r\n        }\r\n        else {\r\n            let msg = this.translate.instant(\"EmptyService\");\r\n            this.toastr.error(msg, '');\r\n        }\r\n    }\r\n\r\n    editServiceFee(id: any) {\r\n        this.isEditMode = true;\r\n        this.serviceFeeModel = this.selectedUserToEdit.serviceFees.find((itm: any) => itm.id == id);\r\n        if (this.serviceFeeModel != undefined)\r\n            this.selectServiceNode(this.serviceFeeModel.serviceId);\r\n    }\r\n\r\n    isServiceDuplicated(serviceId: any, serviceFeeId: any): boolean {\r\n        if (this.selectedUserToEdit != undefined) {\r\n            let duplicatedItem = this.selectedUserToEdit.serviceFees.find((itm: any) => itm.serviceId == serviceId && itm.id != serviceFeeId);\r\n            if (duplicatedItem != undefined)\r\n                return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    clear() {\r\n        this.serviceFeeModel = { id: 0 };\r\n        this.isEditMode = false;\r\n        this.selectedNode = {};\r\n        this.active = false;\r\n        setTimeout(() => this.active = true, 0);\r\n    }\r\n\r\n    raiseModelUpdated(updatedModel: any) {\r\n        this.onModelUpdated.emit(updatedModel);\r\n    }\r\n\r\n    private selectServiceNode(serviceId: number) {\r\n        for (let nod of this.servicesTree) {\r\n            this.checkChildNodes(nod, serviceId);\r\n        }\r\n    }\r\n\r\n    private checkChildNodes(node: TreeNode, serviceId: number) {\r\n\r\n        if (node.data == serviceId && node.type == \"Service\") {\r\n            this.selectedNode = node;\r\n\r\n            return;\r\n        }\r\n\r\n        if (node.children) {\r\n            node.children.forEach(childNode => {\r\n                this.checkChildNodes(childNode, serviceId);\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n}","<div *ngIf=\"showProgress\">\r\n    <loading></loading>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <form *ngIf=\"active\" class=\"form-horizontal\" name=\"serviceFeesForm\" #serviceFeesForm=\"ngForm\">\r\n        <div class=\"form-group\">\r\n            <label for=\"txtNameTranslation\" class=\"control-label col-md-3\"> {{ 'Services' | translate}}</label>\r\n            <div class=\"col-md-9\">\r\n                <input name=\"txtSearchServices\" [placeholder]=\"'SearchByNameorCode' | translate\" class=\"form-control\"\r\n                    [(ngModel)]=\"filterString\" />\r\n                <div class=\"nopadding treeBorder\" style=\"height:180px;\">\r\n                    <p-tree\r\n                        [value]=\"servicesTree | translateObjects  : null : null : lstToBeTranslated | filterbynameorcode:filterString : leafType\"\r\n                        selectionMode=\"single\" [(selection)]=\"selectedNode\">\r\n                        <ng-template let-node pTemplate=\"ServiceGroup\">\r\n                            <span class=\"nav-icon\"><i class=\"fa fa-cubes\"></i></span>\r\n                            &nbsp;\r\n                            {{node.label}}\r\n                        </ng-template>\r\n                        <ng-template let-node pTemplate=\"Service\">\r\n                            <span class=\"nav-icon\"><i class=\"fa fa-cube\"></i></span>\r\n                            &nbsp;\r\n                            {{node.label}}\r\n                        </ng-template>\r\n                    </p-tree>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"txtClinicalFee\" class=\"control-label col-md-3\">{{ 'ClinicalFee' | translate}}</label>\r\n            <div class=\"col-md-3\">\r\n                <input type=\"number\" min=\"0\" id=\"txtClinicalFee\" name=\"txtClinicalFee\" class=\"form-control\"\r\n                    [(ngModel)]='serviceFeeModel.clinicFee' #txtFee=\"ngModel\" required />\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"txtResourceFee\" class=\"control-label col-md-3\">{{ 'ResourceFee' | translate}}</label>\r\n            <div class=\"col-md-3\">\r\n                <input type=\"number\" min=\"0\" id=\"txtResourceFee\" name=\"txtResourceFee\" class=\"form-control\"\r\n                    [(ngModel)]='serviceFeeModel.resourceFee' #txtTimeSlot=\"ngModel\" required />\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <div class=\"col-md-8 col-md-offset-3\">\r\n                <button class=\"btn btn-primary\"\r\n                    [disabled]=\"!serviceFeesForm.form.valid ||(!enableSaveBtn && !isClinicAdmin)\"\r\n                    (click)=\"saveServiceFees()\">{{ 'Save' | translate}}</button>\r\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"clear()\"\r\n                    disabled=\"{{ enableSaveBtn || isClinicAdmin? '' :'disabled'}}\">{{ 'New' | translate}}</button>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <!---New Table-->\r\n            <p-table #dt [value]=\"userServiceFees\" dataKey=\"id\" [rowHover]=\"true\" [rows]=\"10\"\r\n                [showCurrentPageReport]=\"true\" [rowsPerPageOptions]=\"[10,20,30,40,50,100]\"\r\n                [paginator]=\"true\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                [filterDelay]=\"0\" [globalFilterFields]=\"['serviceCode','serviceName','clinicFee','resourceFee']\">\r\n\r\n                <ng-template pTemplate=\"header\">\r\n                    <tr>\r\n                        <th pSortableColumn=\"serviceCode\">{{'ServiceCode' | translate}} <p-sortIcon field=\"serviceCode\">\r\n                            </p-sortIcon>\r\n                        </th>\r\n                        <th pSortableColumn=\"serviceName\">{{'ServiceName' | translate}} <p-sortIcon field=\"serviceName\">\r\n                            </p-sortIcon>\r\n                        </th>\r\n                        <th pSortableColumn=\"clinicFee\">{{'ClinicalFee' | translate}} <p-sortIcon field=\"clinicFee\">\r\n                            </p-sortIcon>\r\n                        </th>\r\n                        <th pSortableColumn=\"resourceFee\">{{'ResourceFee' | translate}} <p-sortIcon field=\"resourceFee\">\r\n                            </p-sortIcon>\r\n                        </th>\r\n                        <th><span styleClass=\"text-center width70\">{{'Edit' | translate}} </span>\r\n                        </th>\r\n\r\n                    </tr>\r\n\r\n                </ng-template>\r\n                <ng-template pTemplate=\"body\" let-item>\r\n                    <tr class=\"p-selectable-row\">\r\n                        <td>\r\n                            {{item.serviceCode}}\r\n                        </td>\r\n                        <td>\r\n                            <span>{{item.serviceName}}</span>\r\n                        </td>\r\n                        <td>\r\n                            <span>{{item.clinicFee}}</span>\r\n                        </td>\r\n                        <td>\r\n                            <span>{{item.resourceFee}}</span>\r\n                        </td>\r\n                        <td>\r\n                            <a [class.disabled]=\"!enableSaveBtn && !isClinicAdmin ? true : null\">\r\n                                <i class=\"fa fa-pencil fa-2x\" (click)=\"editServiceFee(item.id)\" title=\"Edit Fees\"\r\n                                    style=\"color: #32bea6;\"></i>\r\n                            </a>\r\n                        </td>\r\n\r\n                    </tr>\r\n                </ng-template>\r\n                <ng-template pTemplate=\"emptymessage\">\r\n                    <tr>\r\n                        <td colspan=\"8\">No data found.</td>\r\n                    </tr>\r\n                </ng-template>\r\n            </p-table>\r\n            <!--End Table-->\r\n\r\n\r\n        </div>\r\n\r\n    </form>\r\n</div>","import { Component, OnChanges, Input, Output, EventEmitter, ViewChild, ElementRef } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\nimport { ClinicService } from '../shared/clinic.service';\r\nimport { TreeNode } from 'primeng/api';\r\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\r\nimport { Table } from 'primeng/table';\r\n\r\n@Component({\r\n    selector: 'clinic-humanResource-serviceSlots',\r\n    templateUrl: './clinic-humanResource-serviceSlots.component.html'\r\n})\r\n\r\nexport class ClinicHumanResourceServiceSlotsComponent implements OnChanges {\r\n    filterString!:string;\r\n    leafType: string = 'Service';\r\n    @Input() humanResourceWrapper: any;\r\n    @Input() selectedUserToEdit: any;\r\n    @Input() isClinicAdmin: boolean = false;\r\n    @Input() enableSaveBtn: boolean = false;\r\n    @Output() onModelUpdated = new EventEmitter<any>();\r\n    active: boolean = true;\r\n    showProgress: boolean = false;\r\n    servicesTree: any[] = [];\r\n    selectedNode!: TreeNode;\r\n    userServiceSlots: any[] = [];\r\n    serviceSlotModel: any = { id: 0 };\r\n    isEditMode: boolean = false;\r\n    lstToTranslated: string[] = [];\r\n    lstToBeTranslated: string[] = [];\r\n    loading: boolean = true;\r\n    @ViewChild('dt') table!: Table;\r\n    constructor(private clinicService: ClinicService,\r\n        public toastr: ToastrService,\r\n        public localStorage: LocalStorageService\r\n        , public translate: TranslateService) { }\r\n\r\n    ngOnInit(): void {\r\n\r\n        this.lstToTranslated = ['serviceName', 'serviceNameTranslation'];\r\n        this.lstToBeTranslated = ['label', 'labelTranslation'];\r\n    }\r\n    ngOnChanges(): void {\r\n\r\n        if (this.humanResourceWrapper != undefined) {\r\n            this.servicesTree = this.humanResourceWrapper.serviceGroups;\r\n\r\n            if (this.servicesTree == undefined)\r\n                this.servicesTree = [];\r\n\r\n        }\r\n\r\n        if (this.selectedUserToEdit != undefined) {\r\n            this.userServiceSlots = this.selectedUserToEdit.serviceTimeSlots;\r\n        }\r\n\r\n    }\r\n\r\n    saveServiceSlots(): void {\r\n\r\n        if (this.selectedNode != undefined && this.selectedNode.type == 'Service') {\r\n            if (!this.isServiceDuplicated(this.selectedNode.data, this.serviceSlotModel.id)) {\r\n                let thisComponent = this;\r\n                thisComponent.showProgress = true;\r\n\r\n                if (!this.isEditMode) {\r\n\r\n                    this.serviceSlotModel.securityUserId = this.selectedUserToEdit.id;\r\n                    this.selectedUserToEdit.serviceTimeSlots.push(this.serviceSlotModel);\r\n                }\r\n\r\n                this.serviceSlotModel.serviceId = this.selectedNode.data;\r\n                this.clinicService.updateHumanResource(thisComponent.selectedUserToEdit)\r\n                    .subscribe(\r\n                        function (response: any) {\r\n\r\n                            //thisComponent.selectedUserToEdit = response;\r\n                            //thisComponent.userServiceSlots = response.serviceTimeSlots;\r\n                            thisComponent.raiseModelUpdated(response);\r\n\r\n                            thisComponent.clear();\r\n\r\n                            let msg = thisComponent.translate.instant(\"SavedSuccessfully\");\r\n                            thisComponent.toastr.success(msg, '');\r\n                        },\r\n                        function (error: any) {\r\n                            //console.log(\"Error happened\" + error)\r\n                            thisComponent.toastr.error(error, '');\r\n                            thisComponent.showProgress = false;\r\n                        },\r\n                        function () {\r\n                            thisComponent.showProgress = false;\r\n                        });\r\n            }\r\n            else {\r\n                let msg = this.translate.instant(\"DuplicatedService\");\r\n                this.toastr.error(msg, '');\r\n            }\r\n        }\r\n        else {\r\n            let msg = this.translate.instant(\"EmptyService\");\r\n            this.toastr.error(msg, '');\r\n        }\r\n    }\r\n\r\n    editServiceSlot(id: any) {\r\n        this.isEditMode = true;\r\n        this.serviceSlotModel = this.selectedUserToEdit.serviceTimeSlots.find((itm: any) => itm.id == id);\r\n        if (this.serviceSlotModel != undefined)\r\n            this.selectServiceNode(this.serviceSlotModel.serviceId);\r\n    }\r\n\r\n    isServiceDuplicated(serviceId: any, serviceSlotId: any): boolean {\r\n        if (this.selectedUserToEdit != undefined) {\r\n            let duplicatedItem = this.selectedUserToEdit.serviceTimeSlots.find((itm: any) => itm.serviceId == serviceId && itm.id != serviceSlotId);\r\n            if (duplicatedItem != undefined)\r\n                return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    clear() {\r\n        this.serviceSlotModel = { id: 0 };\r\n        this.isEditMode = false;\r\n        this.selectedNode = {};\r\n        this.active = false;\r\n        setTimeout(() => this.active = true, 0);\r\n    }\r\n\r\n    raiseModelUpdated(updatedModel: any) {\r\n        this.onModelUpdated.emit(updatedModel);\r\n    }\r\n\r\n    private selectServiceNode(serviceId: number) {\r\n        for (let nod of this.servicesTree) {\r\n            this.checkChildNodes(nod, serviceId);\r\n        }\r\n    }\r\n\r\n    private checkChildNodes(node: TreeNode, serviceId: number) {\r\n\r\n        if (node.data == serviceId && node.type == \"Service\") {\r\n            this.selectedNode = node;\r\n\r\n            return;\r\n        }\r\n\r\n        if (node.children) {\r\n            node.children.forEach(childNode => {\r\n                this.checkChildNodes(childNode, serviceId);\r\n            });\r\n        }\r\n\r\n    }\r\n}","<div *ngIf=\"showProgress\">\r\n    <loading></loading>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <form *ngIf=\"active\" class=\"form-horizontal\" name=\"serviceSlotsForm\" #serviceSlotsForm=\"ngForm\">\r\n        <div class=\"form-group\">\r\n            <label for=\"treeServices\" class=\"control-label col-md-3\"> {{ 'Services' | translate}}</label>\r\n            <div class=\"col-md-9\">\r\n                <input name=\"txtSearchServices2\" [placeholder]=\"'SearchByNameorCode' | translate\" class=\"form-control\"\r\n                    [(ngModel)]=\"filterString\" />\r\n                <div class=\"nopadding treeBorder\" style=\"height:180px;\">\r\n                    <p-tree\r\n                        [value]=\"servicesTree | translateObjects  : null : null : lstToBeTranslated  | filterbynameorcode:filterString : leafType\"\r\n                        selectionMode=\"single\" [(selection)]=\"selectedNode\">\r\n                        <ng-template let-node pTemplate=\"ServiceGroup\">\r\n                            <span class=\"nav-icon\"><i class=\"fa fa-cubes\"></i></span>\r\n                            &nbsp;\r\n                            {{node.label}}\r\n                        </ng-template>\r\n                        <ng-template let-node pTemplate=\"Service\">\r\n                            <span class=\"nav-icon\"><i class=\"fa fa-cube\"></i></span>\r\n                            &nbsp;\r\n                            {{node.label}}\r\n                        </ng-template>\r\n                    </p-tree>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"txtNoOfTimeSlots\" class=\"control-label col-md-3\">{{ 'NoofTimeSlots' | translate}}</label>\r\n            <div class=\"col-md-3\">\r\n                <input type=\"number\" min=\"0\" id=\"txtNoOfTimeSlots\" name=\"txtNoOfTimeSlots\" class=\"form-control\"\r\n                    [(ngModel)]='serviceSlotModel.noOfTimeSlots' #txtNoOfTimeSlots=\"ngModel\" required />\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <div class=\"col-md-8 col-md-offset-3\">\r\n                <button class=\"btn btn-primary\"\r\n                    [disabled]=\"!serviceSlotsForm.form.valid ||(!enableSaveBtn && !isClinicAdmin)\"\r\n                    (click)=\"saveServiceSlots()\">{{ 'Save' | translate}}</button>\r\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"clear()\"\r\n                    disabled=\"{{ enableSaveBtn || isClinicAdmin? '' :'disabled'}}\">{{ 'New' | translate}}</button>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <!---New Table-->\r\n            <p-table #dt [value]=\"userServiceSlots\" dataKey=\"id\" [rowHover]=\"true\" [rows]=\"10\"\r\n                [showCurrentPageReport]=\"true\" [rowsPerPageOptions]=\"[10,20,30,40,50,100]\" [paginator]=\"true\"\r\n                currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" [filterDelay]=\"0\"\r\n                [globalFilterFields]=\"['serviceCode','serviceName','noOfTimeSlots']\">\r\n\r\n                <ng-template pTemplate=\"header\">\r\n                    <tr>\r\n                        <th pSortableColumn=\"serviceCode\">{{'ServiceCode' | translate}} <p-sortIcon field=\"serviceCode\">\r\n                            </p-sortIcon>\r\n                        </th>\r\n                        <th pSortableColumn=\"serviceName\">{{'ServiceName' | translate}} <p-sortIcon field=\"serviceName\">\r\n                            </p-sortIcon>\r\n                        </th>\r\n                        <th pSortableColumn=\"noOfTimeSlots\">{{'NoofTimeSlots' | translate}} <p-sortIcon\r\n                                field=\"noOfTimeSlots\"></p-sortIcon>\r\n                        </th>\r\n                        <th><span styleClass=\"text-center width70\">{{'Edit' | translate}} </span>\r\n                        </th>\r\n                    </tr>\r\n\r\n                </ng-template>\r\n                <ng-template pTemplate=\"body\" let-item>\r\n                    <tr class=\"p-selectable-row\">\r\n                        <td>\r\n                            {{item.serviceCode}}\r\n                        </td>\r\n                        <td>\r\n                            <span>{{item.serviceName}}</span>\r\n                        </td>\r\n                        <td>\r\n                            <span>{{item.noOfTimeSlots}}</span>\r\n                        </td>\r\n                        <td>\r\n                            <a [class.disabled]=\"!enableSaveBtn && !isClinicAdmin ? true : null\">\r\n                                <i class=\"fa fa-pencil fa-2x\" (click)=\"editServiceSlot(item.id)\" title=\"Edit Time Slots\"\r\n                                    style=\"color: #32bea6;\"></i>\r\n                            </a>\r\n                        </td>\r\n                    </tr>\r\n                </ng-template>\r\n                <ng-template pTemplate=\"emptymessage\">\r\n                    <tr>\r\n                        <td colspan=\"8\">No data found.</td>\r\n                    </tr>\r\n                </ng-template>\r\n            </p-table>\r\n            <!--End Table-->\r\n\r\n        </div>\r\n    </form>\r\n</div>","import { Component, OnInit, Input, Output, EventEmitter, ViewChild, ElementRef } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\n\r\nimport { ClinicService } from '../shared/clinic.service';\r\n\r\n@Component({\r\n\r\n    selector: 'clinic-humanResource',\r\n    templateUrl: './clinic-humanResource.component.html'\r\n})\r\n\r\nexport class ClinicHumanResourceComponent implements OnInit {\r\n\r\n    @Input() isEditMode: boolean = false;\r\n    @Input() selectedNode: any;\r\n    @Input() isClinicAdmin: boolean = false;\r\n    @Input() enableSaveBtn: boolean = false;\r\n    @Output() onModelUpdated = new EventEmitter<any>();\r\n    @ViewChild('basicDataLink') basicDataLink!: ElementRef;\r\n    selectedUserToEdit: any;\r\n    departmentName = '';\r\n    divisionName = '';\r\n    divisionId = '';\r\n    isNonMedicalDepartment: boolean = false;\r\n    clinicId = '';\r\n    humanResourceWrapper: any;\r\n    showProgress: boolean = false;\r\n\r\n    constructor(private clinicService: ClinicService,\r\n        public toastr: ToastrService,\r\n        public localStorage: LocalStorageService) { }\r\n\r\n    ngOnChanges(): void {\r\n\r\n        if (this.isEditMode)//Human Resource Node\r\n        {\r\n            if (this.selectedNode != undefined) {\r\n                if (this.selectedNode.parent != undefined) {\r\n                    this.divisionName = this.selectedNode.parent.label;\r\n\r\n                    if (this.selectedNode.parent.parent != undefined) {\r\n                        this.departmentName = this.selectedNode.parent.parent.label;\r\n\r\n                        if (this.selectedNode.parent.parent.parent != undefined)\r\n                            this.isNonMedicalDepartment = (this.selectedNode.parent.parent.parent.type == 'NonMedical') ? true : false;\r\n                    }\r\n\r\n                }\r\n\r\n                let userToEditId = this.selectedNode.data;\r\n                this.loadUserToEdit(userToEditId);\r\n            }\r\n        }\r\n        else//Divsion Node\r\n        {\r\n            this.selectedUserToEdit = undefined;\r\n\r\n            if (this.selectedNode != undefined) {\r\n\r\n                this.divisionId = this.selectedNode.data;\r\n                this.divisionName = this.selectedNode.label;\r\n\r\n                if (this.selectedNode.parent != undefined) {\r\n                    this.departmentName = this.selectedNode.parent.label;\r\n\r\n                    if (this.selectedNode.parent.parent != undefined)\r\n                        this.isNonMedicalDepartment = (this.selectedNode.parent.parent.type == 'NonMedical') ? true : false;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        this.basicDataLink.nativeElement.click();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.clinicId = this.localStorage.retrieve(\"ClinicID\");\r\n\r\n        this.loadHumanResourcesWrapper();\r\n\r\n\r\n    }\r\n\r\n    loadHumanResourcesWrapper() {\r\n        this.showProgress = true;\r\n        let thisComponent = this;\r\n        this.clinicService.getHumanResourcesWrapper(this.clinicId)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    thisComponent.humanResourceWrapper = response;\r\n                },\r\n                function (error: any) {\r\n                    thisComponent.toastr.error(error, '');\r\n                    thisComponent.showProgress = false;\r\n                },\r\n                function () { // finally\r\n                    thisComponent.showProgress = false;\r\n                });\r\n    }\r\n\r\n    loadUserToEdit(userToEditId: any) {\r\n        this.showProgress = true;\r\n        let thisComponent = this;\r\n        this.clinicService.getHumanResourceById(userToEditId)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    thisComponent.selectedUserToEdit = response;\r\n\r\n                    if (thisComponent.selectedUserToEdit.reachInfo == undefined)\r\n                        thisComponent.selectedUserToEdit.reachInfo = {};\r\n\r\n                },\r\n                function (error: any) {\r\n                    thisComponent.toastr.error(error, '');\r\n                    thisComponent.showProgress = false;\r\n                },\r\n                function () { // finally\r\n                    thisComponent.showProgress = false;\r\n                });\r\n    }\r\n\r\n    updateModel(updatedModel: any) {\r\n        this.selectedUserToEdit = updatedModel;\r\n\r\n        if (!this.isEditMode)//Add new node to the tree\r\n        {\r\n            let newNode = {\r\n                label: updatedModel.name,\r\n                labelTranslation: updatedModel.nameTranslation,\r\n                data: updatedModel.id,\r\n                isActive: updatedModel.isActive,\r\n                type: 'SecurityUser'\r\n            }\r\n            this.selectedNode.children.push(newNode);\r\n            //this.isEditMode = true;\r\n            this.raiseModelUpdated(newNode);\r\n        }\r\n        else//Update existing node\r\n        {\r\n            this.selectedNode.label = updatedModel.name;\r\n            this.selectedNode.labelTranslation = updatedModel.nameTranslation;\r\n        }\r\n    }\r\n\r\n    raiseModelUpdated(node: any) {\r\n        this.onModelUpdated.emit(node);\r\n    }\r\n\r\n    isDoctorEditing(): boolean {\r\n        if (this.selectedUserToEdit != undefined && this.selectedUserToEdit.type == 'Doctor')\r\n            return true;\r\n\r\n        return false;\r\n    }\r\n\r\n}","<div *ngIf=\"showProgress\">\r\n    <loading></loading>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <ul class=\"nav nav-tabs\">\r\n        <li class=\"active\" ><a href=\"#divBasicData\" #basicDataLink data-toggle=\"tab\" aria-expanded=\"true\" [class.disabled]=\"!enableSaveBtn && !isClinicAdmin ? true : null\">{{ 'BasicData' | translate}}</a></li>\r\n        <li *ngIf=\"isDoctorEditing()\"><a href=\"#divServiceFees\" data-toggle=\"tab\" aria-expanded=\"true\" [class.disabled]=\"!enableSaveBtn && !isClinicAdmin ? true : null\">{{ 'ServiceFees' | translate}}</a></li>\r\n        <li *ngIf=\"isDoctorEditing()\"><a href=\"#divServiceSlots\" data-toggle=\"tab\" aria-expanded=\"true\" [class.disabled]=\"!enableSaveBtn && !isClinicAdmin ? true : null\">{{ 'ServiceSlots' | translate}}</a></li>\r\n    </ul>\r\n    <div id=\"humanResourceTabContent\" class=\"tab-content\">\r\n        <div class=\"tab-pane fade active in\" id=\"divBasicData\">\r\n            <clinic-humanResource-basic [humanResourceWrapper]=\"humanResourceWrapper\"\r\n                                        [departmentName]=\"departmentName\"\r\n                                        [divisionName]=\"divisionName\"\r\n                                        [divisionId]=\"divisionId\"\r\n                                        [isNonMedicalDepartment]=\"isNonMedicalDepartment\"\r\n                                        [selectedUserToEdit]=\"selectedUserToEdit\"\r\n                                        (onModelUpdated)=\"updateModel($event)\" [isClinicAdmin]=\"isClinicAdmin\" [enableSaveBtn]=\"enableSaveBtn\">\r\n\r\n            </clinic-humanResource-basic>\r\n        </div>\r\n        <div *ngIf=\"isDoctorEditing()\" class=\"tab-pane fade\" id=\"divServiceFees\">\r\n            <clinic-humanResource-serviceFees [humanResourceWrapper]=\"humanResourceWrapper\"\r\n                                              [selectedUserToEdit]=\"selectedUserToEdit\"\r\n                                              (onModelUpdated)=\"updateModel($event)\" [isClinicAdmin]=\"isClinicAdmin\" [enableSaveBtn]=\"enableSaveBtn\">\r\n\r\n            </clinic-humanResource-serviceFees>\r\n\r\n        </div>\r\n        <div *ngIf=\"isDoctorEditing()\" class=\"tab-pane fade\" id=\"divServiceSlots\">\r\n            <clinic-humanResource-serviceSlots [humanResourceWrapper]=\"humanResourceWrapper\"\r\n                                               [selectedUserToEdit]=\"selectedUserToEdit\"\r\n                                               (onModelUpdated)=\"updateModel($event)\" [isClinicAdmin]=\"isClinicAdmin\" [enableSaveBtn]=\"enableSaveBtn\">\r\n            </clinic-humanResource-serviceSlots>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { TreeNode } from 'primeng/api';\r\nimport { ClinicService } from '../../../clinics/shared/clinic.service';\r\nimport { SharedService } from '../../../shared/shared/shared.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\r\nimport { TranslateObjectsPipe } from '../../../shared/pipes/translateObjects.pipe';\r\n@Component({\r\n    selector: 'clinic-inventory-add-quantity',\r\n    templateUrl: './clinic-inventory-add-quantity.component.html'\r\n})\r\n\r\nexport class ClinicInventoryAddQuantity implements OnInit {\r\n    @Input() enableSaveBtn: boolean = false;\r\n    @Input() isClinicAdmin: boolean = false;\r\n    selectInventoryTab: boolean = true;\r\n    isDetailsVisible: boolean = true;\r\n    constructor(private sharedService: SharedService\r\n        , public toastr: ToastrService\r\n        , private _route: ActivatedRoute\r\n        , public storage: LocalStorageService\r\n        , private clinicService: ClinicService\r\n        , public translate: TranslateService\r\n    ) { }\r\n\r\n    Medical: any = {\r\n        label: \"المنتجات الطبية\",\r\n        labelTranslation: \"Medical Products\",\r\n        value: \"Medical\",\r\n        type: \"Medical\",\r\n        productGroupType: \"Medical\",\r\n        parentGroupId: 1,\r\n        parentName: \"Medical Product\",\r\n        children: []\r\n    };\r\n    NonMedical: any = {\r\n        label: \"المنتجات غير الطبية\",\r\n        labelTranslation: \"NonMedical Products\",\r\n        value: \"NonMedical\",\r\n        type: \"NonMedical\",\r\n        productGroupType: \"NonMedical\",\r\n        parentGroupId: 2,\r\n        parentName: \"NonMedical Product\",\r\n        children: []\r\n    };\r\n    selectedClinicId!: string;\r\n    isSelectedGroupNode: boolean = false;\r\n    hideOnHandQuantity: boolean = true;\r\n    showOnHandQuantity: boolean = false;\r\n    model: any = {};\r\n    inventoryRequestModel: any = {};\r\n    active = true;\r\n    clinicInventoryObject: any = {};\r\n    productObject: any = {};\r\n    classifications = [];\r\n    showProgress = false;\r\n    productList: any[] = [];\r\n    treeDataSourceItems: any[] = [];\r\n    selectedGroup!: TreeNode;\r\n    doctorId!: string;\r\n    doctorName: string = \"\";\r\n    //unitName: string = \"\";\r\n    filterString!: string;\r\n    leafType: string = 'Product';\r\n    code: string = \"\";\r\n    productName: string = \"\";\r\n    lstToTranslated: string[] = [];\r\n    translateObjects = new TranslateObjectsPipe(this.storage);\r\n    ngOnInit(): void {\r\n        this.lstToTranslated = ['label', 'labelTranslation'];\r\n        this.treeDataSourceItems.push(this.Medical);\r\n        this.treeDataSourceItems.push(this.NonMedical);\r\n        this.selectedClinicId = this.storage.retrieve(\"ClinicID\");\r\n        this.getProductsGroupsForTree();\r\n        this.doctorId = this.storage.retrieve(\"UserID\");\r\n        this.clinicInventoryObject.recorderId = this.doctorId;\r\n        this.clinicInventoryObject.clinicId = this.selectedClinicId;\r\n    }\r\n\r\n    getProductsGroupsForTree() {\r\n        let thisComponent = this;\r\n        thisComponent.showProgress = true;\r\n        this.clinicService.getActiveProductsGroupsForTreeView(thisComponent.selectedClinicId)\r\n            .subscribe(\r\n                function (response: any) {\r\n\r\n                    thisComponent.Medical.children = [];\r\n                    thisComponent.NonMedical.children = [];\r\n\r\n                    for (let product of response) {\r\n                        if (product.parent == undefined && product.productGroupType == \"Medical\") {\r\n                            thisComponent.Medical.children.push(product);\r\n                        }\r\n                        else if (product.parent == undefined && product.productGroupType == \"NonMedical\") {\r\n                            thisComponent.NonMedical.children.push(product);\r\n                        }\r\n\r\n                    }\r\n                    thisComponent.translateObjects.transform(thisComponent.treeDataSourceItems, '', null, thisComponent.lstToTranslated);\r\n                    //thisComponent.treeDataSourceItems = response;\r\n\r\n                },\r\n                function (error: any) {\r\n                    thisComponent.toastr.error(error, '');\r\n                    thisComponent.showProgress = false;\r\n                },\r\n                function () { // finally\r\n                    thisComponent.showProgress = false;\r\n                });\r\n\r\n    }\r\n    onSubmit(): void {\r\n        let thisComponent = this;\r\n        if (this.clinicInventoryObject.productId > 0) {\r\n            //Update\r\n\r\n            this.clinicService.updateClinicQuantity(thisComponent.clinicInventoryObject)\r\n                .subscribe(\r\n                    function (response: any) {\r\n                        thisComponent.clinicInventoryObject = response;\r\n                        let msg = thisComponent.translate.instant(\"SavedSuccessfully\");\r\n                        thisComponent.toastr.success(msg, '');\r\n                        thisComponent.clear();\r\n                        thisComponent.getProductsGroupsForTree()\r\n                        thisComponent.hideOnHandQuantity = false;\r\n                        thisComponent.showOnHandQuantity = true;\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () {\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n        }\r\n    }\r\n\r\n    clear(): void {\r\n        this.clinicInventoryObject = {};\r\n        this.active = false;\r\n        setTimeout(() => this.active = true, 0);\r\n    }\r\n\r\n    nodeSelect(event: any) {\r\n        this.clear();\r\n        this.showOnHandQuantity = false;\r\n        this.hideOnHandQuantity = true;\r\n        if (event.node.type == \"Product\") {\r\n            if (event.node.id && event.node.onHandQuantity > 0) {\r\n                this.clinicInventoryObject.onHandQuantity = event.node.onHandQuantity;\r\n                this.hideOnHandQuantity = false;\r\n                this.showOnHandQuantity = true;\r\n                let msg = this.translate.instant(\"OnhandQuantityExist\");\r\n                this.toastr.warning(msg, event.node.name);\r\n            }\r\n\r\n            let thisComponent = this;\r\n            this.clinicInventoryObject.itemName = event.node.name;\r\n            this.clinicInventoryObject.id = event.node.id;\r\n            this.clinicInventoryObject.productId = event.node.data;\r\n            this.clinicInventoryObject.code = event.node.code;\r\n            this.clinicInventoryObject.description = event.node.description;\r\n            this.doctorName = event.node.label;\r\n            if (event.node.heightUnit != null) {\r\n                this.clinicInventoryObject.unitName = event.node.heightUnit.name;\r\n            }\r\n            else if (event.node.weightUnit != null) {\r\n\r\n                this.clinicInventoryObject.unitName = event.node.weightUnit.name;\r\n\r\n            }\r\n            else if (event.node.volumeUnit != null) {\r\n                this.clinicInventoryObject.unitName = event.node.volumeUnit.name;\r\n\r\n            }\r\n            else {\r\n                this.clinicInventoryObject.unitName = \"Number Unit\";\r\n\r\n            }\r\n            //if ()\r\n            //{\r\n\r\n            //}\r\n            // this.clear();\r\n        }\r\n    }\r\n}","\r\n<br />\r\n<div class=\"row nopadding\">\r\n    <div class=\"col-md-6\">\r\n        <div class=\"inner-addon left-addon\">\r\n            <i class=\"glyphicon glyphicon-search\"></i>\r\n            <input [placeholder]=\"'SearchByNameorCode' | translate\" class=\"inputSearch form-control\" [(ngModel)]=\"filterString\" />\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n<form novalidate *ngIf=\"active\" class=\"form-horizontal\" name=\"inventoryOrderForm\" (ngSubmit)=\"onSubmit()\" #inventoryOrderForm=\"ngForm\">\r\n\r\n    <div id=\"divTable\" class=\"paddSt\" *ngIf=\"!isDetailsVisible\">\r\n\r\n        <div class=\"nopadding treeBorder\" style=\"height:180px;\">\r\n            <!--<p-tree [value]=\"items\" selectionMode=\"single\" [(selection)]=\"selectedFiles\"></p-tree>-->\r\n            <p-tree [value]=\"treeDataSourceItems | filterbynameorcode:filterString : leafType\" selectionMode=\"single\" [(selection)]=\"selectedGroup\" (onNodeSelect)=\"nodeSelect($event)\" #tree>\r\n                <ng-template let-node pTemplate=\"Medical\">\r\n                    {{node.label}}\r\n                    &nbsp; &nbsp;\r\n                </ng-template>\r\n                <ng-template let-node pTemplate=\"NonMedical\">\r\n                    {{node.label}}\r\n                    &nbsp; &nbsp;\r\n                </ng-template>\r\n                <ng-template let-node pTemplate=\"Product\">\r\n                    <span class=\"nav-icon\"><i class=\"fa fa-cube\"></i></span>\r\n                    &nbsp;\r\n                    {{node.label}}\r\n                </ng-template>\r\n                <ng-template let-node pTemplate=\"ProductsGroup\">\r\n                    <span class=\"nav-icon {{ isSelectedGroupNode ? 'bg-danger' : '' }}\"><i class=\"fa fa-cubes\"></i></span>\r\n                    &nbsp;\r\n                    {{node.label}}\r\n                </ng-template>\r\n            </p-tree>\r\n        </div>\r\n    </div>\r\n    <div class=\"row well\">\r\n        <div class=\"form-group col-md-4\">\r\n            <div class=\"row\">\r\n                <label for=\"code\" class=\"control-label col-md-3\">{{ 'ItemCode' | translate}}</label>\r\n                <div class=\"col-md-9\">\r\n                    <input id=\"code\" name=\"code\" class=\"form-control\" [(ngModel)]='clinicInventoryObject.code' #code=\"ngModel\" required readonly />\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group col-md-4\">\r\n            <div class=\"row\">\r\n                <label for=\"unit\" class=\"control-label col-md-3\">{{ 'Unit' | translate}}</label>\r\n                <div class=\"col-md-9\">\r\n                    <input id=\"unitName\" name=\"unitName\" class=\"form-control\" [(ngModel)]='clinicInventoryObject.unitName' #unitName=\"ngModel\" required readonly />\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group col-md-4\" *ngIf=\"hideOnHandQuantity\">\r\n            <div class=\"row\">\r\n                <label for=\"onHandQuantity\" class=\"control-label col-md-3\">{{ 'OnhandQuantity' | translate}}</label>\r\n                <div class=\"col-md-9\">\r\n                    <input type=\"text\" min=\"1\" pattern=\"\\d+\" id=\"onHandQuantity\" name=\"onHandQuantity\" class=\"form-control\" [(ngModel)]='clinicInventoryObject.onHandQuantity' #onHandQuantity=\"ngModel\" required />\r\n                    <div [hidden]=\"onHandQuantity.valid || onHandQuantity.pristine\" class=\"alert alert-danger\">\r\n                        {{ 'RequiredField' | translate}}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"form-group col-md-4\" *ngIf=\"showOnHandQuantity\">\r\n            <div class=\"row\">\r\n                <label for=\"onHandQuantity\" class=\"control-label col-md-3\">{{ 'OnhandQuantity' | translate}}</label>\r\n                <div class=\"col-md-9\">\r\n                    <input type=\"text\" min=\"1\" pattern=\"\\d+\" id=\"onHandQuantity\" name=\"onHandQuantity\" class=\"form-control\" [(ngModel)]='clinicInventoryObject.onHandQuantity' #onHandQuantity=\"ngModel\" required readonly />\r\n                    <div [hidden]=\"onHandQuantity.valid || onHandQuantity.pristine\" class=\"alert alert-danger\">\r\n                        {{ 'RequiredField' | translate}}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n           <div class=\"col-md-12\">\r\n               <div class=\"form-group row\">\r\n                   <div class=\"form-group\" *ngIf=\"hideOnHandQuantity\">\r\n                       <label for=\"remark\" class=\"control-label col-md-1\"> {{ 'Remarks' | translate}}</label>\r\n                       <div class=\"col-md-11\">\r\n                           <textarea class=\"remarkStyle form-control\" rows=\"5\" id=\"txtRemarks\" name=\"txtRemarks\" [(ngModel)]='clinicInventoryObject.description' #txtRemarks=\"ngModel\"></textarea>\r\n\r\n                       </div>\r\n                   </div>\r\n                   <div class=\"form-group\" *ngIf=\"showOnHandQuantity\">\r\n                       <label for=\"remark\" class=\"control-label col-md-1\"> {{ 'Remarks' | translate}}</label>\r\n                       <div class=\"col-md-11\">\r\n                           <textarea class=\"remarkStyle form-control \" rows=\"5\" id=\"txtRemarks\" name=\"txtRemarks\" [(ngModel)]='clinicInventoryObject.description' #txtRemarks=\"ngModel\" readonly></textarea>\r\n                       </div>\r\n                   </div>\r\n               </div>\r\n           </div>\r\n        </div>\r\n\r\n     \r\n        <div class=\"form-group\" *ngIf=\"hideOnHandQuantity\">\r\n            <div class=\"col-md-4 col-md-offset-1\">\r\n                <button class=\"btn btn-primary\" [disabled]=\"!inventoryOrderForm.valid  ||(!enableSaveBtn && !isClinicAdmin)\">{{ 'Save' | translate}}</button>\r\n                <button class=\"btn btn-primary\" (click)=\"clear()\">{{ 'Cancel' | translate}}</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</form>\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { TreeNode } from 'primeng/api';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\nimport { ClinicService } from '../../../clinics/shared/clinic.service';\r\nimport { SharedService } from '../../../shared/shared/shared.service';\r\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\r\nimport { TranslateObjectsPipe } from '../../../shared/pipes/translateObjects.pipe';\r\n@Component({\r\n    selector: 'clinic-inventory-adjust-quantity',\r\n    templateUrl: './clinic-inventory-adjust-quantity.component.html'\r\n})\r\n\r\nexport class ClinicInventoryAdjustQuantity {\r\n    selectInventoryTab: boolean = true;\r\n    @Input() title: string = '';\r\n    @Output() onAmountUpdated = new EventEmitter<any>();\r\n    isDetailsVisible: boolean = true;\r\n    constructor(private sharedService: SharedService\r\n        , public toastr: ToastrService\r\n        , private _route: ActivatedRoute\r\n        , public storage: LocalStorageService\r\n        , private clinicService: ClinicService\r\n        , public translate: TranslateService\r\n    ) { }\r\n\r\n\r\n    Medical: any = {\r\n        label: \"المنتجات الطبية\",\r\n        labelTranslation: \"Medical Products\",\r\n        value: \"Medical\",\r\n        type: \"Medical\",\r\n        productGroupType: \"Medical\",\r\n        parentGroupId: 1,\r\n        parentName: \"Medical Products\",\r\n        children: []\r\n    };\r\n    NonMedical: any = {\r\n        label: \"المنتجات غير الطبية\",\r\n        labelTranslation: \"NonMedical Products\",\r\n        value: \"NonMedical\",\r\n        type: \"NonMedical\",\r\n        productGroupType: \"NonMedical\",\r\n        parentGroupId: 2,\r\n        parentName: \"NonMedical Products\",\r\n\r\n        children: []\r\n\r\n\r\n    };\r\n    selectedClinicId!: string;\r\n    isSelectedGroupNode: boolean = false;\r\n    model: any = {};\r\n    inventoryRequestModel: any = {};\r\n    active = true;\r\n    clinicInventoryObject: any = { product: {} };\r\n    productObject: any = {};\r\n    classifications = [];\r\n    showProgress = false;\r\n    productList: any[] = [];\r\n    treeDataSourceItems: any[] = [];\r\n    selectedGroup!: TreeNode;\r\n    recordedId!: string;\r\n    doctorName: string = \"\";\r\n    //unitName: string = \"\";\r\n    filterString!: string;\r\n    leafType: string = 'Product';\r\n    code: string = \"\";\r\n    productName: string = \"\";\r\n    clinicIdReq!: string;\r\n    lstToTranslated: string[] = [];\r\n    translateObjects = new TranslateObjectsPipe(this.storage);\r\n    ngOnInit(): void {\r\n        this.lstToTranslated = ['label', 'labelTranslation'];\r\n        this.selectedClinicId = this.storage.retrieve(\"ClinicID\");\r\n        this.recordedId = this.storage.retrieve(\"UserID\");\r\n        this.treeDataSourceItems.push(this.Medical);\r\n        this.treeDataSourceItems.push(this.NonMedical);\r\n        this.getProductsGroupsForTree();\r\n\r\n        if (this.clinicInventoryObject.product == null || this.clinicInventoryObject.product == undefined) {\r\n            let product: any = {};\r\n            this.clinicInventoryObject.product = product;\r\n        }\r\n\r\n    }\r\n    getProductsGroupsForTree() {\r\n        let thisComponent = this;\r\n        thisComponent.showProgress = true;\r\n        this.clinicService.getActiveProductsGroupsForTreeView(thisComponent.selectedClinicId)\r\n            .subscribe(\r\n                function (response: any) {\r\n\r\n                    thisComponent.Medical.children = [];\r\n                    thisComponent.NonMedical.children = [];\r\n\r\n                    for (let product of response) {\r\n                        if (product.parent == undefined && product.productGroupType == \"Medical\") {\r\n                            thisComponent.Medical.children.push(product);\r\n                        }\r\n                        else if (product.parent == undefined && product.productGroupType == \"NonMedical\") {\r\n                            thisComponent.NonMedical.children.push(product);\r\n                        }\r\n\r\n                    }\r\n                    thisComponent.translateObjects.transform(thisComponent.treeDataSourceItems, '', null, thisComponent.lstToTranslated);\r\n                    //thisComponent.treeDataSourceItems = response;\r\n\r\n                },\r\n                function (error: any) {\r\n                    thisComponent.toastr.error(error, '');\r\n                    thisComponent.showProgress = false;\r\n                },\r\n                function () { // finally\r\n                    thisComponent.showProgress = false;\r\n                });\r\n\r\n    }\r\n\r\n    onSubmit(): void {\r\n        let thisComponent = this;\r\n        this.clinicInventoryObject.clinicId = this.selectedClinicId;\r\n        this.clinicInventoryObject.recorderId = this.recordedId;\r\n\r\n        if (this.clinicInventoryObject.productId > 0) {\r\n            //Update\r\n            this.clinicService.CreateClinicQuantityAdjustment(this.clinicInventoryObject)\r\n                .subscribe(\r\n                    function (response: any) {\r\n                        let msg = thisComponent.translate.instant(\"SavedSuccessfully\");\r\n                        thisComponent.toastr.success(msg, '');\r\n                        thisComponent.clinicInventoryObject = response;\r\n                        thisComponent.onAmountUpdated.emit(true);\r\n                        thisComponent.clear();\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () {\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n        }\r\n    }\r\n\r\n    clear(): void {\r\n        this.clinicInventoryObject = { product: {} };\r\n        this.active = false;\r\n        setTimeout(() => this.active = true, 0);\r\n    }\r\n\r\n    nodeSelect(event: any) {\r\n        this.clear();\r\n        if (event.node.type == \"Product\") {\r\n            let thisComponent = this;\r\n\r\n            this.clinicInventoryObject.itemName = event.node.name;\r\n            this.clinicInventoryObject.id = event.node.id;\r\n            this.clinicInventoryObject.productId = event.node.data;\r\n            this.clinicInventoryObject.code = event.node.code;\r\n            this.doctorName = event.node.label;\r\n\r\n            if (this.clinicInventoryObject.id > 0) {\r\n                this.clinicService.getProductById(this.clinicInventoryObject.id)\r\n                    .subscribe(\r\n                        function (response: any) {\r\n                            thisComponent.productObject = response;\r\n                            thisComponent.clinicInventoryObject.product.onHandQuantity = thisComponent.productObject.onHandQuantity;\r\n                        });\r\n            }\r\n        }\r\n\r\n        // this.clear();\r\n\r\n    }\r\n}","\r\n<br />\r\n<div class=\"row nopadding\">\r\n    <div class=\"col-md-6\">\r\n        <div class=\"inner-addon left-addon\">\r\n            <i class=\"glyphicon glyphicon-search\"></i>\r\n            <input [placeholder]=\"'SearchByNameorCode' | translate\" class=\"inputSearch form-control\" [(ngModel)]=\"filterString\" />\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>\r\n<form novalidate *ngIf=\"active\" class=\"form-horizontal\" name=\"inventoryOrderForm\" (ngSubmit)=\"onSubmit()\" #inventoryOrderForm=\"ngForm\">\r\n\r\n\r\n        <div id=\"divTable\" class=\"paddSt\" *ngIf=\"!isDetailsVisible\">\r\n\r\n            <div class=\"nopadding treeBorder\" style=\"height:180px;\">\r\n                <!--<p-tree [value]=\"items\" selectionMode=\"single\" [(selection)]=\"selectedFiles\"></p-tree>-->\r\n                <p-tree [value]=\"treeDataSourceItems | filterbynameorcode:filterString : leafType\" selectionMode=\"single\" [(selection)]=\"selectedGroup\" (onNodeSelect)=\"nodeSelect($event)\" #tree>\r\n                    <ng-template let-node pTemplate=\"Medical\">\r\n                        {{node.label}}\r\n                        &nbsp; &nbsp;\r\n                    </ng-template>\r\n                    <ng-template let-node pTemplate=\"NonMedical\">\r\n                        {{node.label}}\r\n                        &nbsp; &nbsp;\r\n                    </ng-template>\r\n                    <ng-template let-node pTemplate=\"Product\">\r\n                        <span class=\"nav-icon\"><i class=\"fa fa-cube\"></i></span>\r\n                        &nbsp;\r\n                        {{node.label}}\r\n                    </ng-template>\r\n                    <ng-template let-node pTemplate=\"ProductsGroup\">\r\n                        <span class=\"nav-icon {{ isSelectedGroupNode ? 'bg-danger' : '' }}\"><i class=\"fa fa-cubes\"></i></span>\r\n                        &nbsp;\r\n                        {{node.label}}\r\n                    </ng-template>\r\n                </p-tree>\r\n            </div>\r\n        </div>\r\n    <div class=\"row well\">\r\n        <div class=\"form-group col-md-4\">\r\n            <div class=\"row\">\r\n                <label for=\"code\" class=\"control-label col-md-3\">{{ 'ItemCode' | translate}}</label>\r\n                <div class=\"col-md-9\">\r\n                    <input id=\"code\" name=\"code\" class=\"form-control\" [(ngModel)]='clinicInventoryObject.code' #code=\"ngModel\" required readonly />\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n        <div class=\"form-group col-md-4\">\r\n            <div class=\"row\">\r\n                <label for=\"onHandQuantity\" class=\"control-label col-md-3\">{{ 'OnhandQuantity' | translate}}</label>\r\n                <div class=\"col-md-9\">\r\n                    <input type=\"number\" id=\"onHandQuantity\" name=\"onHandQuantity\" class=\"form-control\" [(ngModel)]='clinicInventoryObject.product.onHandQuantity' #onHandQuantity=\"ngModel\" required readonly />\r\n                    <div [hidden]=\"onHandQuantity.valid || onHandQuantity.pristine\" class=\"alert alert-danger\">\r\n                        {{ 'RequiredField' | translate}}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"form-group col-md-4\">\r\n            <div class=\"row\">\r\n                <label for=\"adjustmentQuantity\" class=\"control-label col-md-4\">{{ 'AdjustmentQuantity' | translate}}</label>\r\n                <div class=\"col-md-8\">\r\n                    <input type=\"number\" min=\"0\" step=\"1\" id=\"adjustmentQuantity\" name=\"adjustmentQuantity\" class=\"form-control\" [(ngModel)]='clinicInventoryObject.adjustmentQuantity' #adjustmentQuantity=\"ngModel\" required />\r\n                    <div [hidden]=\"adjustmentQuantity.valid || adjustmentQuantity.pristine\" class=\"alert alert-danger\">\r\n                        {{ 'RequiredField' | translate}}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n                <div class=\"form-group row\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"remark\" class=\"control-label col-md-1\"> {{ 'Remarks' | translate}}</label>\r\n                        <div class=\"col-md-11\">\r\n                            <textarea class=\"remarkStyle form-control\" rows=\"5\" id=\"txtRemarks\" name=\"txtRemarks\" [(ngModel)]='clinicInventoryObject.description' #txtRemarks=\"ngModel\"></textarea>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <div class=\"col-md-4 col-md-offset-1\">\r\n                <button class=\"btn btn-primary\" [disabled]=\"!inventoryOrderForm.valid\">{{ 'Save' | translate}}</button>\r\n                <button class=\"btn btn-primary\" (click)=\"clear()\">{{ 'Cancel' | translate}}</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</form>","import { Component, OnInit, OnChanges, SimpleChanges, EventEmitter, Output, Input, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\nimport { ClinicService } from '../../shared/clinic.service';\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\r\nimport { Table } from 'primeng/table';\r\n\r\n@Component({\r\n    selector: 'clinic-inventory-adjustment-history',\r\n    templateUrl: './clinic-inventory-adjustment-history.component.html'\r\n})\r\n\r\nexport class ClinicInventoryAdjustmentHistory implements OnInit {\r\n\r\n    constructor(public toastr: ToastrService\r\n        , private localStorage: LocalStorageService\r\n        , private clinicService: ClinicService\r\n        , public translate: TranslateService) { }\r\n    clinicInventoriesHistoryList: any[] = [];\r\n    showProgress = false;\r\n    selectInventoryTab: boolean = true;\r\n    selectedClinicId!: number;\r\n    @Input() updates: string = '';\r\n    lstToTranslated: string[] = [];\r\n    loading: boolean = true;\r\n    @ViewChild('dt') table!: Table;\r\n    \r\n    ngOnInit(): void {\r\n        this.lstToTranslated = ['productName', 'productNameTranslation', 'recordedBy', 'recordedByTranslation'];\r\n        this.getAllAdjustmentHistory();\r\n    }\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        this.getAllAdjustmentHistory();\r\n    }\r\n    getAllAdjustmentHistory() {\r\n\r\n        this.selectedClinicId = this.localStorage.retrieve(\"ClinicID\");\r\n        let thisComponent = this;\r\n        thisComponent.showProgress = true;\r\n        this.clinicService.getAllQuantityAdjustment(this.selectedClinicId)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    thisComponent.clinicInventoriesHistoryList = response;\r\n                },\r\n                function (error: any) {\r\n                    thisComponent.toastr.error(error, '');\r\n                    thisComponent.showProgress = false;\r\n                    thisComponent.loading = false;\r\n                },\r\n                function () { // finally\r\n                    thisComponent.showProgress = false;\r\n                    thisComponent.loading = false;\r\n                });\r\n\r\n    }\r\n}","<br />\r\n<div class=\"row well\" style=\"background-color: #f6f7f9 !important;\">\r\n    <div class=\"inner-addon left-addon\">\r\n        <i class=\"glyphicon glyphicon-search\"></i>\r\n        <input pInputText type=\"text\" (input)=\"dt.filterGlobal($event.target.value, 'contains')\"\r\n            [placeholder]=\"'Search' | translate\" />\r\n    </div>\r\n\r\n    <!---New Table-->\r\n    <p-table #dt [value]=\"clinicInventoriesHistoryList\" dataKey=\"id\" [rowHover]=\"true\" [rows]=\"10\"\r\n        [showCurrentPageReport]=\"true\" [rowsPerPageOptions]=\"[10,20,30,40,50,100]\" [loading]=\"loading\"\r\n        [paginator]=\"true\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n        [filterDelay]=\"0\"\r\n        [globalFilterFields]=\"['id','description','productName','product.code','onHandQuantity','adjustmentQuantity','recordedBy']\">\r\n\r\n        <ng-template pTemplate=\"header\">\r\n            <tr>\r\n                <th pSortableColumn=\"id\">{{'ReferenceNo' | translate}} <p-sortIcon field=\"id\"></p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"description\">{{'AdjustmentReason' | translate}} <p-sortIcon field=\"description\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"productName\">{{'ItemName' | translate}} <p-sortIcon field=\"productName\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"product.code\">{{'ItemCode' | translate}} <p-sortIcon field=\"product.code\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"onHandQuantity\">{{'OldQuantity' | translate}} <p-sortIcon field=\"onHandQuantity\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"adjustmentQuantity\">{{'NewQuantity' | translate}} <p-sortIcon\r\n                        field=\"adjustmentQuantity\"></p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"recordedBy\">{{'AdjustedBy' | translate}} <p-sortIcon field=\"recordedBy\">\r\n                    </p-sortIcon>\r\n                </th>\r\n            </tr>\r\n\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-item>\r\n            <tr class=\"p-selectable-row\">\r\n                <td>\r\n                    {{item.id}}\r\n                </td>\r\n                <td>\r\n                    <span>{{item.description}}</span>\r\n                </td>\r\n                <td>\r\n                    {{item.productName}}\r\n                </td>\r\n                <td>\r\n                    {{item.product.code}}\r\n                </td>\r\n                <td>\r\n                    {{item.onHandQuantity}}\r\n                </td>\r\n                <td>\r\n                    {{item.adjustmentQuantity}}\r\n                </td>\r\n                <td>\r\n                    {{item.recordedBy}}\r\n                </td>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"emptymessage\">\r\n            <tr>\r\n                <td colspan=\"8\">No data found.</td>\r\n            </tr>\r\n        </ng-template>\r\n    </p-table>\r\n    <!--End Table-->\r\n\r\n</div>","import { Component, OnInit, OnChanges, Input, Output, EventEmitter, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ClinicService } from '../../shared/clinic.service';\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\r\nimport { Table } from 'primeng/table';\r\n@Component({\r\n\r\n    selector: 'clinic-inventory-list',\r\n    templateUrl: './clinic-inventory-list.component.html'\r\n})\r\n\r\nexport class ClinicInventoryList implements OnInit, OnChanges {\r\n    @Input() getUpdatedProduct: boolean = false;\r\n    @Input() updateAfterAdjust: boolean = false;\r\n    @Output() onAmountUpdatedAfterAdjust = new EventEmitter<any>();\r\n    constructor(public toastr: ToastrService\r\n        , private localStorage: LocalStorageService\r\n        , private clinicService: ClinicService\r\n        , public translate: TranslateService) { }\r\n\r\n    inventoriesListDiv: string = 'InventoriesPrintingArea';\r\n    activeProduct: any;\r\n    selectedClinicId!: number;\r\n    showProgress = false;\r\n    isActiveItem: any = null;\r\n    isNullQuantity: any = null;\r\n    clinicInventoriesList: any[] = [];\r\n    lstToTranslated: string[] = [];\r\n    loading: boolean = true;\r\n    @ViewChild('dt') table!: Table;\r\n\r\n    ngOnInit(): void {\r\n        this.getAllProducts();\r\n    }\r\n    ngOnChanges(): void {\r\n        let vm = this;\r\n        if (vm.getUpdatedProduct && vm.getUpdatedProduct == true) {\r\n            vm.getUpdatedProduct = false;\r\n\r\n            vm.getAllProducts();\r\n        }\r\n\r\n        if (vm.updateAfterAdjust && vm.updateAfterAdjust == true) {\r\n            vm.updateAfterAdjust = false;\r\n\r\n            vm.getAllProducts();\r\n        }\r\n    }\r\n    getAllProducts() {\r\n        this.lstToTranslated = ['name', 'nameTranslation', 'unitName', 'unitNameTranslation'];\r\n        this.selectedClinicId = this.localStorage.retrieve(\"ClinicID\");\r\n        let thisComponent = this;\r\n        thisComponent.showProgress = true;\r\n\r\n        this.clinicService.GetClinicProducts(this.selectedClinicId, thisComponent.isActiveItem, thisComponent.isNullQuantity)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    thisComponent.clinicInventoriesList = response;\r\n\r\n                    thisComponent.onAmountUpdatedAfterAdjust.emit(false);\r\n                },\r\n                function (error: any) {\r\n                    thisComponent.toastr.error(error, '');\r\n                    thisComponent.showProgress = false;\r\n                    thisComponent.loading = false;\r\n                },\r\n                function () { // finally\r\n                    thisComponent.showProgress = false;\r\n                    thisComponent.loading = false;\r\n                });\r\n\r\n\r\n    }\r\n    getAllActiveProducts(activeProduct: any) {\r\n        if (activeProduct.checked == false) {\r\n            this.isActiveItem = null;\r\n            this.getAllProducts();\r\n        }\r\n        else {\r\n            this.isActiveItem = true;\r\n            this.getAllProducts();\r\n        }\r\n    }\r\n    getAlluantityNulls(quantity: any) {\r\n        if (quantity.checked == false) {\r\n            this.isNullQuantity = null;\r\n            this.getAllProducts();\r\n        }\r\n        else {\r\n            this.isNullQuantity = true;\r\n            this.getAllProducts();\r\n        }\r\n    }\r\n\r\n}","<!--<button data-toggle=\"collapse\" data-target=\"#SearchForInventoryItem\">Search...</button>\r\n<div id=\"SearchForInventoryItem\" class=\"collapse row\">-->\r\n<div class=\"col-lg-offset-10\">\r\n    <print-page [section]='inventoriesListDiv'></print-page>\r\n\r\n</div>\r\n<br />\r\n\r\n<div style=\"background-color: #f6f7f9 !important;\" class=\"row well\">\r\n    <div class=\"inner-addon left-addon\">\r\n        <i class=\"glyphicon glyphicon-search\"></i>\r\n        <input #gb type=\"text\" class=\"inputSearch\" pInputText size=\"50\" [placeholder]=\"'Search' | translate\">\r\n    </div>\r\n    <br />\r\n\r\n    <!--<div class=\"col-md-2\">\r\n\r\n    </div>-->\r\n    <div class=\"col-md-3\">\r\n        <input class=\"checHeight col-md-1\" type=\"checkbox\" id=\"activeItem\" name=\"activeItem\" #activeItem\r\n            (change)=\"getAllActiveProducts(activeItem)\" />\r\n        <label class=\"txtStyle col-md-9\">{{'ShowActiveItems' | translate }}</label>\r\n    </div>\r\n    <div class=\"col-md-3\">\r\n        <input type=\"checkbox\" class=\"checHeight col-md-1\" id=\"quantityIsNull\" name=\"quantityIsNull\" #quantityIsNull\r\n            (change)=\"getAlluantityNulls(quantityIsNull)\" />\r\n        <label class=\"txtStyle col-md-9\">{{'ShowNullQuantity' | translate}}</label>\r\n    </div>\r\n\r\n    <input pInputText type=\"text\" (input)=\"dt.filterGlobal($event.target.value, 'contains')\"\r\n        [placeholder]=\"'Search' | translate\" />\r\n    <!---New Table-->\r\n    <p-table #dt [value]=\"clinicInventoriesList\" dataKey=\"id\" [rowHover]=\"true\" [rows]=\"10\"\r\n        [showCurrentPageReport]=\"true\" [rowsPerPageOptions]=\"[10,20,30,40,50,100]\" [loading]=\"loading\"\r\n        [paginator]=\"true\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n        [filterDelay]=\"0\"\r\n        [globalFilterFields]=\"['code','name','onHandQuantity','orderInQuantity','orderOutQuantity','minLevel','maxLevel','minNet','maxNet']\">\r\n\r\n        <ng-template pTemplate=\"header\">\r\n            <tr>\r\n                <th pSortableColumn=\"code\">{{'ItemCode' | translate}} <p-sortIcon field=\"code\"></p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"name\">{{'ItemName' | translate}} <p-sortIcon field=\"name\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"onHandQuantity\">{{'OnhandQuantity' | translate}} <p-sortIcon\r\n                        field=\"onHandQuantity\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"orderInQuantity\">{{'OrderIn' | translate}} <p-sortIcon field=\"orderInQuantity\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"orderOutQuantity\">{{'OrderOut' | translate}} <p-sortIcon field=\"orderOutQuantity\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"minLevel\">{{'MinLevel' | translate}} <p-sortIcon field=\"minLevel\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"maxLevel\">{{'MaxLevel' | translate}} <p-sortIcon field=\"maxLevel\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"minNet\">{{'MinNet' | translate}} <p-sortIcon field=\"minNet\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th pSortableColumn=\"maxNet\">{{'MaxNet' | translate}} <p-sortIcon field=\"minNet\">\r\n                    </p-sortIcon>\r\n                </th>\r\n                <th><span styleClass=\"text-center width70\">{{'Unit' | translate}} </span>\r\n                </th>\r\n            </tr>\r\n\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-item>\r\n            <tr class=\"p-selectable-row\">\r\n                <td>\r\n                    {{item.code}}\r\n                </td>\r\n                <td>\r\n                    <span>{{item.name}}</span>\r\n                </td>\r\n                <td>\r\n                    {{item.onHandQuantity}}\r\n                </td>\r\n                <td>\r\n                    {{item.orderInQuantity}}\r\n                </td>\r\n                <td>\r\n                    {{item.orderOutQuantity}}\r\n                </td>\r\n                <td>\r\n                    {{item.minLevel}}\r\n                </td>\r\n                <td>\r\n                    {{item.maxLevel}}\r\n                </td>\r\n                <td>\r\n                    {{item.minNet}}\r\n                </td>\r\n                <td>\r\n                    {{item.maxNet}}\r\n                </td>\r\n                <td>\r\n                    <label *ngIf=\"item.unitType === 'NumbersUnit'\">{{ item.unitName | translate}}</label>\r\n                    <label *ngIf=\"item.unitType == 'HeightsUnit' || item.unitType == 'WeightsUnit' || item.unitType == 'VolumesUnit'\">\r\n                        {{ item.unitName}}\r\n                    </label>\r\n                </td>\r\n               \r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"emptymessage\">\r\n            <tr>\r\n                <td colspan=\"8\">No data found.</td>\r\n            </tr>\r\n        </ng-template>\r\n    </p-table>\r\n    <!--End Table-->\r\n\r\n</div>\r\n\r\n<div id=\"InventoriesPrintingArea\" class=\"row hidden\">\r\n    <table class=\"table table-responsive table-bordered table-hover table-striped\">\r\n        <thead class=\"alert alert-info\">\r\n            <tr>\r\n                <th>{{ 'ItemCode' | translate}}</th>\r\n                <th>{{ 'ItemName' | translate}}</th>\r\n                <th>{{ 'OnhandQuantity' | translate}}</th>\r\n                <th>{{ 'OrderIn' | translate}}</th>\r\n                <th>{{ 'OrderOut' | translate}}</th>\r\n                <th>{{ 'MinLevel' | translate}}</th>\r\n                <th>{{ 'MaxLevel' | translate}}</th>\r\n                <th>{{ 'MinNet' | translate}}</th>\r\n                <th>{{ 'MaxNet' | translate}}</th>\r\n                <th>{{ 'Unit' | translate}}</th>\r\n                <th>{{ 'LastPurchasePrice' | translate}}</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let item of clinicInventoriesList | translateObjects  : null : null : lstToTranslated\">\r\n                <td>{{item.code}}</td>\r\n                <td>{{item.name}}</td>\r\n                <td>{{item.onHandQuantity}}</td>\r\n                <td>{{item.orderInQuantity}}</td>\r\n                <td>{{item.orderOutQuantity}}</td>\r\n                <td>{{item.minLevel}}</td>\r\n                <td>{{item.maxLevel}}</td>\r\n                <td>{{item.minNet}}</td>\r\n                <td>{{item.maxNet}}</td>\r\n                <td>{{item.unitName}}</td>\r\n                <td>{{item.lastPurchasingPrice}}</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\n\r\nimport { AccountService } from '../../security/shared/account.service';\r\nimport { UserPermissions } from '../../classes/user-permissions.class';\r\nimport { PermissionKeyEnum } from '../../shared/shared/permission-key.enum';\r\n\r\n@Component({\r\n\r\n    selector: 'clinic-inventory',\r\n    templateUrl: './clinic-inventory.component.html'\r\n})\r\n\r\nexport class ClinicInventoryComponent implements OnInit {\r\n    constructor(public toastr: ToastrService\r\n        , private localStorage: LocalStorageService\r\n        , public accountService: AccountService\r\n    ) { }\r\n    selectInventoryTab: boolean = true;\r\n    selectedClinicId!: number;\r\n    userType: string = '';\r\n    isClinicAdmin: boolean = false;\r\n    userPermisions: UserPermissions = new UserPermissions();\r\n    key: PermissionKeyEnum = new PermissionKeyEnum();\r\n    enableAddRootBtn: boolean = false;\r\n    enableEditBtn: boolean = false;\r\n    enableActivateBtn: boolean = false;\r\n    enableSaveBtn: boolean = false;\r\n    enableAddQntTab: boolean = false;\r\n    hasAccessQntPermission: boolean = false;\r\n    hasCodingPermission: boolean = false;\r\n    enableAdjustTab: boolean = false;\r\n    hasAdjustLevelPermission: boolean = false;\r\n    enableAdjustmentHistoryTab: boolean = false;\r\n    enableDoctorRequestsTab: boolean = false;\r\n    getUpdatedProduct: boolean = false;\r\n    updateAfterAdjust: boolean = false;\r\n    @Input() updates: string = '';\r\n    showProgress: boolean = true;\r\n    updateAmount(updates: any) {\r\n        this.updateAfterAdjust = updates;\r\n    }\r\n    updateAmountAfterAdjust(value: any) {\r\n        this.updateAfterAdjust = value;\r\n        this.getUpdatedProduct = value;\r\n    }\r\n    ngOnInit(): void {\r\n\r\n        this.selectedClinicId = this.localStorage.retrieve(\"ClinicID\");\r\n        this.userType = this.localStorage.retrieve(\"UserType\");\r\n        if (this.userType == 'ClinicAdmin')\r\n            this.isClinicAdmin = true;\r\n\r\n        if (!this.isClinicAdmin) {\r\n            if (this.accountService.userPermision._isScalar != undefined)\r\n                this.accountService.userPermision.subscribe((item: any) => this.handleUserInterfaceViews(item));\r\n            else\r\n                this.handleUserInterfaceViews(this.accountService.userPermision);\r\n        }\r\n    }\r\n\r\n    handleUserInterfaceViews(user: any) {\r\n        if (user.permissions != undefined) {\r\n\r\n            for (let item of user.permissions) {\r\n                if (item.permission.key == this.key.PhysicalCount) {\r\n                    if (item.fullControl == true || item.add || item.edit)\r\n                        this.enableSaveBtn = true;// then send its value to add quantity component\r\n                    if (item.fullControl || item.view)\r\n                        this.hasAccessQntPermission = true;\r\n                } else if (item.permission.key == this.key.Coding && (item.view)) {\r\n                    this.hasCodingPermission = true;\r\n                } else if (item.permission.key == this.key.AdjustInventoryLevel && (item.allow)) {\r\n                    this.hasAdjustLevelPermission = true;\r\n                } else if (item.permission.key == this.key.EndorsePhysicalCount && (item.allow)) {\r\n                    this.enableAdjustmentHistoryTab = true;\r\n                } else if (item.permission.key == this.key.TransferTransaction) {\r\n                    if (item.fullControl || item.view)\r\n                        this.enableDoctorRequestsTab = true;\r\n                }\r\n\r\n\r\n            }\r\n            if (this.hasAccessQntPermission && this.hasCodingPermission)\r\n                this.enableAddQntTab = true;\r\n\r\n            if (this.hasCodingPermission && this.hasAdjustLevelPermission)\r\n                this.enableAdjustTab = true;\r\n        }\r\n\r\n    }\r\n    updateProductsList(getProduct: any) {\r\n        this.getUpdatedProduct = getProduct;\r\n    }\r\n}","<!-- <div *ngIf=\"showProgress\">\r\n    <loading></loading>\r\n</div> -->\r\n\r\n<div class=\"row\">\r\n    <clinic-tab [isInventorySelected]='selectInventoryTab' *ngIf=\"isClinicAdmin\"></clinic-tab>\r\n    <shared-tabs [isInventorySelected]='selectInventoryTab' *ngIf=\"!isClinicAdmin\"></shared-tabs>\r\n\r\n    <div class=\"row \">\r\n        <div class=\"row \" style=\"padding:2px;\">\r\n            <div class=\"NBbreadcrumb\">\r\n                <a>{{ 'SystemAdmin' | translate}}</a> &nbsp;/\r\n                {{ 'Inventory' | translate}}\r\n            </div>\r\n\r\n        </div>\r\n        \r\n\r\n        <div class=\"row well\">\r\n            <div class=\"row\">\r\n                <div class=\"tabbable-panel\">\r\n                    <div class=\"tabbable-line\">\r\n                        <ul class=\"nav nav-tabs\">\r\n                            <li style=\"margin-right: 0px !important;\" class=\"active col-md-2 nopadding\"><a href=\"#ClinicInventoryList\" data-toggle=\"tab\" aria-expanded=\"true\">{{ 'InventoryList' | translate}}</a></li>\r\n                            <li style=\"margin-right: 0px !important;\"  class=\"col-md-2 nopadding\"><a href=\"#ClinicInventoryAddQuantity\" data-toggle=\"tab\" aria-expanded=\"true\" [class.disabled]=\"!enableAddQntTab && !isClinicAdmin ? true : null\">{{ 'AddQuantity' | translate}}</a></li>\r\n                            <li style=\"margin-right: 0px !important;\"  class=\"col-md-2 nopadding\"><a href=\"#ClinicInventoryAdjustQuantity\" data-toggle=\"tab\" aria-expanded=\"true\" [class.disabled]=\"!enableAdjustTab && !isClinicAdmin ? true : null\">{{ 'AdjustQuantity' | translate}}</a></li>\r\n                            <li style=\"margin-right: 0px !important;\" class=\"col-md-3 nopadding\"><a href=\"#ClinicInventoryAdjustmentHistory\" data-toggle=\"tab\" aria-expanded=\"true\" [class.disabled]=\"!enableAdjustmentHistoryTab && !isClinicAdmin ? true : null\">{{ 'AdjustmentHistory' | translate}}</a></li>\r\n                            <li  style=\"margin-right: 0px !important;\" class=\"col-md-3 nopadding\"><a href=\"#DoctorInventoryRequest\" data-toggle=\"tab\" aria-expanded=\"true\" [class.disabled]=\"!enableDoctorRequestsTab && !isClinicAdmin ? true : null\">{{ 'ViewDoctorInventoryRequests' | translate}}</a></li>\r\n\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div id=\"myTabContent\" class=\"tab-content\">\r\n                <div id=\"ClinicInventoryList\" class=\"tab-pane fade active in\">\r\n                    <clinic-inventory-list [getUpdatedProduct]=\"getUpdatedProduct\" [updateAfterAdjust]=\"updateAfterAdjust\" (onAmountUpdatedAfterAdjust)=\"updateAmountAfterAdjust($event)\"></clinic-inventory-list>\r\n                </div>\r\n                <div id=\"ClinicInventoryAddQuantity\" class=\"tab-pane fade\">\r\n                    <clinic-inventory-add-quantity [isClinicAdmin]=\"isClinicAdmin\" [enableSaveBtn]=\"enableSaveBtn\"></clinic-inventory-add-quantity>\r\n                </div>\r\n                <div id=\"ClinicInventoryAdjustQuantity\" class=\"tab-pane fade\">\r\n                    <clinic-inventory-adjust-quantity (onAmountUpdated)=\"updateAmount($event)\"></clinic-inventory-adjust-quantity>\r\n                </div>\r\n                <div id=\"ClinicInventoryAdjustmentHistory\" class=\"tab-pane fade\">\r\n                    <clinic-inventory-adjustment-history [updates]=\"updates\"></clinic-inventory-adjustment-history>\r\n                </div>\r\n                <div id=\"DoctorInventoryRequest\" class=\"tab-pane fade\">\r\n                    <doctor-inventory-requests (onProductSupplied)=\"updateProductsList($event)\"></doctor-inventory-requests>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n","import { Component, OnInit, Input, Output, EventEmitter, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ClinicService } from '../../shared/clinic.service';\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\r\nimport { AccountService } from '../../../security/shared/account.service';\r\nimport { UserPermissions } from '../../../classes/user-permissions.class';\r\nimport { PermissionKeyEnum } from '../../../shared/shared/permission-key.enum';\r\nimport { UtilityClass } from '../../../shared/shared/utility.class';\r\nimport { Table } from 'primeng/table';\r\n\r\n@Component({\r\n\r\n    selector: 'doctor-inventory-requests',\r\n    templateUrl: './doctor-inventory-requests.component.html'\r\n})\r\n\r\nexport class DoctorInventoryRequestsComponent implements OnInit {\r\n    @Output() onProductSupplied = new EventEmitter<any>();\r\n    constructor(public toastr: ToastrService\r\n        , private localStorage: LocalStorageService\r\n        , private clinicService: ClinicService\r\n        , public translate: TranslateService\r\n        , public accountService: AccountService) { }\r\n\r\n    utilityClass: UtilityClass = new UtilityClass();\r\n    inventoriesListDiv: string = 'incomingRequestsPrintingArea';\r\n    selectInventoryTab: boolean = true;\r\n    selectedClinicId!: number;\r\n    showProgress = false;\r\n    supplyStatus = true;\r\n    doctorsRequestsList: any[] = [];\r\n    supplidObject: any = {};\r\n    inventoryRequestId!: number;\r\n    suppliedQuantity!: number;\r\n    description: any;\r\n    userType: string = '';\r\n    isClinicAdmin: boolean = false;\r\n    userPermisions: UserPermissions = new UserPermissions();\r\n    key: PermissionKeyEnum = new PermissionKeyEnum();\r\n    enableSupplyBtn: boolean = false;\r\n    lstToTranslated: string[] = [];\r\n\r\n    doctorsList: any[] = [];\r\n    dateFiltersList: any[] = [];\r\n    requestStatusList: any[] = [];\r\n    defaultRequestStatus = 'Requested';\r\n    searchCriteria: any = { 'requestStatus': this.defaultRequestStatus };\r\n\r\n    isDurationVisible: boolean = false;\r\n    isPeriodOfTimeVisible: boolean = false;\r\n    durationLabel: string = this.translate.instant('Duration');\r\n    loading: boolean = true;\r\n    @ViewChild('dt') table!: Table;\r\n    \r\n\r\n    ngOnInit(): void {\r\n        this.lstToTranslated = ['itemName', 'itemNameTranslation', 'doctorName', 'doctorNameTranslation', 'departmentName', 'departmentNameTranslation', 'unitName', 'unitNameTranslation'];\r\n        this.userType = this.localStorage.retrieve(\"UserType\");\r\n        if (this.userType == 'ClinicAdmin')\r\n            this.isClinicAdmin = true;\r\n\r\n        if (!this.isClinicAdmin) {\r\n            if (this.accountService.userPermision._isScalar != undefined)\r\n                this.accountService.userPermision.subscribe((item: any) => this.handleUserInterfaceViews(item));\r\n            else\r\n                this.handleUserInterfaceViews(this.accountService.userPermision);\r\n        }\r\n\r\n        this.getAllDoctorsRequests();\r\n        this.loadDoctorRequestsSearchWrapper();\r\n    }\r\n\r\n    getAllDoctorsRequests() {\r\n        this.selectedClinicId = this.localStorage.retrieve(\"ClinicID\");\r\n        let thisComponent = this;\r\n        thisComponent.showProgress = true;\r\n        this.clinicService.getAllDoctorsRequests(this.selectedClinicId)\r\n            .subscribe(\r\n                function (response: any) {\r\n\r\n                    thisComponent.doctorsRequestsList = response;\r\n\r\n\r\n                },\r\n                function (error: any) {\r\n                    thisComponent.toastr.error(error, '');\r\n                    thisComponent.showProgress = false;\r\n                    thisComponent.loading = false;\r\n    \r\n                },\r\n                function () { // finally\r\n                    thisComponent.showProgress = false;\r\n                    thisComponent.loading = false;\r\n    \r\n                });\r\n\r\n\r\n    }\r\n    calculateOrderOut(): void {\r\n        let thisComponent = this;\r\n        thisComponent.supplidObject.id = thisComponent.inventoryRequestId;\r\n        this.clinicService.calculateRequestOfInventoryByDoctor(thisComponent.supplidObject)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    thisComponent.raiseProductSupplied(true);\r\n                    let msg = thisComponent.translate.instant(\"SavedSuccessfully\");\r\n                    thisComponent.toastr.success(msg, '');\r\n                    thisComponent.getAllDoctorsRequests();\r\n\r\n                },\r\n                function (error: any) {\r\n                    thisComponent.toastr.error(error, '');\r\n                    thisComponent.showProgress = false;\r\n                },\r\n                function () {\r\n                    thisComponent.showProgress = false;\r\n                });\r\n    }\r\n\r\n\r\n    raiseProductSupplied(getProducts: any) {\r\n        this.onProductSupplied.emit(getProducts);\r\n    }\r\n\r\n    passInventoryRequestId(id: any) {\r\n        this.supplidObject = {};\r\n        this.inventoryRequestId = id;\r\n    }\r\n\r\n    handleUserInterfaceViews(user: any) {\r\n        if (user.permissions != undefined) {\r\n\r\n            for (let item of user.permissions) {\r\n                if (item.permission.key == this.key.TransferTransaction) {\r\n                    if (item.fullControl == true || item.add || item.edit)\r\n                        this.enableSupplyBtn = true;\r\n                }\r\n\r\n\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    loadDoctorRequestsSearchWrapper() {\r\n        let vm = this;\r\n        vm.showProgress = true\r\n        let clinicId = this.localStorage.retrieve('clinicID');\r\n        this.clinicService.getDoctorRequestsSearchWrapper(clinicId)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    vm.requestStatusList = response.requestStatus;\r\n                    vm.dateFiltersList = response.dateFilters;\r\n                    vm.doctorsList = response.doctors;\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                    vm.showProgress = false;\r\n                },\r\n                function () { // finally\r\n                    vm.showProgress = false;\r\n                });\r\n    }\r\n\r\n    selectRequestStatus(requestStatus: any) {\r\n        this.searchCriteria.requestStatus = requestStatus;\r\n    }\r\n\r\n    selectDateFilter(dateFilter: string) {\r\n\r\n        this.searchCriteria.dateFilter = dateFilter;\r\n\r\n        if (dateFilter == \"Days\") {\r\n            this.isDurationVisible = true;\r\n            this.isPeriodOfTimeVisible = false;\r\n            this.durationLabel = this.translate.instant('NoOfDays');\r\n        }\r\n        else if (dateFilter == \"Weeks\") {\r\n            this.isDurationVisible = true;\r\n            this.isPeriodOfTimeVisible = false;\r\n            this.durationLabel = this.translate.instant('NumberofWeeks');\r\n        }\r\n        else if (dateFilter == \"Months\") {\r\n            this.isDurationVisible = true;\r\n            this.isPeriodOfTimeVisible = false;\r\n            this.durationLabel = this.translate.instant('NumberofMonths');\r\n        }\r\n        else if (dateFilter == \"Years\") {\r\n            this.isDurationVisible = true;\r\n            this.isPeriodOfTimeVisible = false;\r\n            this.durationLabel = this.translate.instant('NumberofYears');\r\n        }\r\n        else if (dateFilter == \"TimePeriod\") {\r\n            this.isDurationVisible = false;\r\n            this.isPeriodOfTimeVisible = true;\r\n        }\r\n        else {\r\n            this.isDurationVisible = false;\r\n            this.isPeriodOfTimeVisible = false;\r\n        }\r\n    }\r\n\r\n    getDoctorRequests() {\r\n\r\n        if (this.searchCriteria.dateFilter == \"TimePeriod\") {\r\n            if (this.searchCriteria.startDate == null || this.searchCriteria.endDate == null ||\r\n                this.searchCriteria.startDate == undefined || this.searchCriteria.endDate == undefined) {\r\n                this.toastr.error(this.translate.instant('YouMustSelectStartDateAndEndDate'), '');\r\n                return;\r\n            }\r\n\r\n            if (this.searchCriteria.startDate > this.searchCriteria.endDate) {\r\n                this.toastr.error(this.translate.instant('ScheduleStartDateValidation'), '');\r\n                return;\r\n            }\r\n\r\n            this.searchCriteria.startDate = this.utilityClass.getUtcDate(this.searchCriteria.startDate);\r\n            this.searchCriteria.endDate = this.utilityClass.getUtcDate(this.searchCriteria.endDate);\r\n        }\r\n\r\n        let vm = this;\r\n        vm.showProgress = true\r\n        vm.searchCriteria.clinicId = this.localStorage.retrieve(\"ClinicID\");\r\n        this.clinicService.getDoctorsRequestsAccordingtoSearchCriteria(vm.searchCriteria)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    vm.doctorsRequestsList = response;\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                    vm.showProgress = false;\r\n                },\r\n                function () { // finally\r\n                    vm.showProgress = false;\r\n                });\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n","<div *ngIf=\"showProgress\">\r\n    <loading></loading>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-md-2 nopadding\">\r\n        <clinic-tab [isInventorySelected]='selectInventoryTab' *ngIf=\"isClinicAdmin\"></clinic-tab>\r\n        <shared-tabs [isInventorySelected]='selectInventoryTab' *ngIf=\"!isClinicAdmin\"></shared-tabs>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row nopadding\">\r\n\r\n    <div class=\"col-md-offset-9\">\r\n        <button class=\"btn btn-primary\" data-toggle=\"collapse\" data-target=\"#SearchForDoctorRequests\">{{ 'Search' |\r\n            translate}}</button>\r\n        <print-page [section]='inventoriesListDiv'></print-page>\r\n    </div>\r\n    <br />\r\n\r\n    <div id=\"SearchForDoctorRequests\" class=\"collapse fa-border well\">\r\n        <div class=\"padding5 marginTop35\">\r\n            <div class=\"row form-horizontal\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"ddlsDoctorsList\" class=\"col-md-2 control-label\">{{ 'DoctorName' | translate}}</label>\r\n                    <div class=\"col-md-3\">\r\n                        <select name=\"ddlsDoctorsList\" [(ngModel)]='searchCriteria.doctorID' class=\"form-control\"\r\n                            #ddlsDoctorsList>\r\n                            <option value=\"0\" selected>{{ 'Select' | translate}}</option>\r\n                            <option *ngFor=\"let item of doctorsList | translateObjects\" [value]=\"item.id\">{{item.name}}\r\n                            </option>\r\n                        </select>\r\n                    </div>\r\n                    <label class=\"col-md-1 control-label\">{{ 'Status' | translate}}</label>\r\n                    <div class=\"col-md-6\">\r\n                        <table>\r\n                            <tr>\r\n                                <td *ngFor=\"let item of requestStatusList\">\r\n                                    <input type=\"radio\" name=\"requestStatus\" (click)=\"selectRequestStatus(item.value)\"\r\n                                        value={{item.value}}\r\n                                        [checked]=\"item.value == defaultRequestStatus\">&nbsp;{{item.text| translate}}\r\n                                    &nbsp;&nbsp;\r\n                                </td>\r\n                                <td>\r\n                                    <input type=\"radio\" name=\"requestStatus\" #radioAnyStatus\r\n                                        (click)=\"selectRequestStatus(radioAnyStatus.value)\" value=\"All\">&nbsp;{{'All'|\r\n                                    translate}}\r\n                                    &nbsp;&nbsp;\r\n                                </td>\r\n                            </tr>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"txtName\" class=\"col-md-2 control-label\">{{ 'Date' | translate}}</label>\r\n                    <div class=\"col-md-3\">\r\n                        <select id=\"ddlDateFilters\" name=\"ddlDateFilters\"\r\n                            (change)=\"selectDateFilter(ddlDateFilters.value)\" class=\"form-control\" #ddlDateFilters>\r\n                            <option>{{ 'Select' | translate}}</option>\r\n                            <option *ngFor=\"let item of dateFiltersList | translateObjects\" [value]=\"item.value\">\r\n                                {{item.text| translate}}</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\" *ngIf=\"isDurationVisible\">\r\n                    <label for=\"txtDuration\" class=\"col-md-2 control-label\">{{durationLabel}}</label>\r\n                    <div class=\"col-md-4\">\r\n                        <input type=\"text\" class=\"form-control\" [(ngModel)]='searchCriteria.duration' />\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\" *ngIf=\"isPeriodOfTimeVisible\">\r\n                    <label for=\"txtName\" class=\"col-md-2 control-label\">{{ 'From' | translate}}</label>\r\n                    <div class=\"col-md-4\">\r\n                        <p-calendar [(ngModel)]=\"searchCriteria.startDate\" [monthNavigator]=\"true\"\r\n                            [yearNavigator]=\"true\" dateFormat=\"dd/mm/yy\" [showIcon]=\"true\" [required]=\"true\"\r\n                            [ngModelOptions]=\"{standalone: true}\" yearRange=\"2000:2050\"></p-calendar>\r\n                    </div>\r\n                    <label for=\"txtName\" class=\"col-md-2 control-label\">{{ 'To' | translate}}</label>\r\n                    <div class=\"col-md-4\">\r\n                        <p-calendar [(ngModel)]=\"searchCriteria.endDate\" [monthNavigator]=\"true\" [yearNavigator]=\"true\"\r\n                            dateFormat=\"dd/mm/yy\" [showIcon]=\"true\" [required]=\"true\"\r\n                            [ngModelOptions]=\"{standalone: true}\" yearRange=\"2000:2050\"></p-calendar>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <div class=\"col-md-4 col-md-offset-2\">\r\n                        <button type=\"button\" class=\"btn btn-primary\" (click)=\"getDoctorRequests()\">{{ 'Search' |\r\n                            translate}}</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n\r\n    <div class=\"row well\" style=\"background-color: #f6f7f9 !important;\">\r\n\r\n        <div class=\"inner-addon left-addon\">\r\n            <i class=\"glyphicon glyphicon-search\"></i>\r\n            <input pInputText type=\"text\" (input)=\"dt.filterGlobal($event.target.value, 'contains')\"\r\n                [placeholder]=\"'Search' | translate\" />\r\n\r\n        </div>\r\n        <!---New Table-->\r\n        <p-table #dt [value]=\"doctorsRequestsList\" dataKey=\"id\" [rowHover]=\"true\" [rows]=\"10\"\r\n            [showCurrentPageReport]=\"true\" [rowsPerPageOptions]=\"[10,20,30,40,50,100]\" [loading]=\"loading\"\r\n            [paginator]=\"true\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n            [filterDelay]=\"0\"\r\n            [globalFilterFields]=\"['creationDateString','inventoryCode','itemName','quantity','suppliedQuantity','doctorName']\">\r\n\r\n            <ng-template pTemplate=\"header\">\r\n                <tr>\r\n                    <th pSortableColumn=\"creationDateString\">{{'RequestDate' | translate}} <p-sortIcon\r\n                            field=\"creationDateString\"></p-sortIcon>\r\n                    </th>\r\n                    <th pSortableColumn=\"inventoryCode\">{{'ItemCode' | translate}} <p-sortIcon field=\"inventoryCode\">\r\n                        </p-sortIcon>\r\n                    </th>\r\n                    <th pSortableColumn=\"itemName\">{{'ItemName' | translate}} <p-sortIcon field=\"itemName\">\r\n                        </p-sortIcon>\r\n                    </th>\r\n                    <th pSortableColumn=\"quantity\">{{'Quantity' | translate}} <p-sortIcon field=\"quantity\">\r\n                        </p-sortIcon>\r\n                    </th>\r\n                    <th pSortableColumn=\"suppliedQuantity\">{{'SuppliedQuantity' | translate}} <p-sortIcon\r\n                            field=\"suppliedQuantity\">\r\n                        </p-sortIcon>\r\n                    </th>\r\n                    <th><span>{{'Unit' | translate}} </span>\r\n                    </th>\r\n                    <th pSortableColumn=\"doctorName\">{{'Doctor' | translate}} <p-sortIcon field=\"doctorName\">\r\n                        </p-sortIcon>\r\n                    </th>\r\n                    <th pSortableColumn=\"departmentName\">{{'Department' | translate}} <p-sortIcon\r\n                            field=\"departmentName\">\r\n                        </p-sortIcon>\r\n                    </th>\r\n                    <th pSortableColumn=\"inventoryRequestStatus\">{{'Status' | translate}} <p-sortIcon\r\n                            field=\"inventoryRequestStatus\">\r\n                        </p-sortIcon>\r\n                    </th>\r\n                    <th>{{'Action' | translate}}</th>\r\n                </tr>\r\n\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-item>\r\n                <tr class=\"p-selectable-row\">\r\n                    <td>\r\n                        {{item.creationDateString}}\r\n                    </td>\r\n                    <td>\r\n                        <span>{{item.inventoryCode}}</span>\r\n                    </td>\r\n\r\n                    <td>\r\n                        <span>{{item.itemName}}</span>\r\n                    </td>\r\n                    <td>\r\n                        <span>{{item.quantity}}</span>\r\n                    </td>\r\n                    <td>\r\n                        <span>{{item.suppliedQuantity}}</span>\r\n                    </td>\r\n                    <td>\r\n                        <label *ngIf=\"item.unitType === 'NumbersUnit'\">{{ item.unitName | translate}}</label>\r\n                        <label\r\n                            *ngIf=\"item.unitType == 'HeightsUnit' || item.unitType == 'WeightsUnit' || item.unitType == 'VolumesUnit'\">\r\n                            {{ item.unitName}}\r\n                        </label>\r\n                    </td>\r\n                    <td>\r\n                        <span>{{item.doctorName}}</span>\r\n                    </td>\r\n                    <td>\r\n                        <span>{{item.departmentName}}</span>\r\n                    </td>\r\n                    <td>\r\n                        <span>{{item.inventoryRequestStatus}}</span>\r\n                    </td>\r\n                    <td>\r\n                        <a class=\"pointer underLinelinkText\" style=\"color:blue;\"\r\n                            (click)=\"passInventoryRequestId(item.id)\" *ngIf=\"!item.isSuppliedRequest\"\r\n                            data-toggle=\"modal\" data-target=\"#supplyDoctorInventoryRequests\"\r\n                            [class.disabled]=\"!enableSupplyBtn && !isClinicAdmin ? true : null\">{{ 'Supply' |\r\n                            translate}}</a>\r\n                        <a class=\"pointer\" *ngIf=\"item.isSuppliedRequest\" style=\"color:#808080;\"\r\n                            [class.disabled]=\"!enableSupplyBtn && !isClinicAdmin ? true : null\">{{ 'Supplied' |\r\n                            translate}}</a>\r\n\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"emptymessage\">\r\n                <tr>\r\n                    <td colspan=\"8\">No data found.</td>\r\n                </tr>\r\n            </ng-template>\r\n        </p-table>\r\n        <!--End Table-->\r\n\r\n    </div>\r\n\r\n    <div id=\"incomingRequestsPrintingArea\" class=\"row hidden\">\r\n        <table class=\"table table-responsive table-bordered table-hover table-striped\">\r\n            <thead class=\"alert alert-info\">\r\n                <tr>\r\n                    <th>{{ 'RequestDate' | translate}}</th>\r\n                    <th>{{ 'ItemCode' | translate}}</th>\r\n                    <th>{{ 'ItemName' | translate}}</th>\r\n                    <th>{{ 'Quantity' | translate}}</th>\r\n                    <th>{{ 'suppliedQuantity' | translate}}</th>\r\n                    <th>{{ 'Unit' | translate}}</th>\r\n                    <th>{{ 'Doctor' | translate}}</th>\r\n                    <th>{{ 'Department' | translate}}</th>\r\n                    <th>{{ 'Status' | translate}}</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let item of doctorsRequestsList | translateObjects  : null : null : lstToTranslated\">\r\n                    <td>{{item.creationDateString}}</td>\r\n                    <td>{{item.inventoryCode}}</td>\r\n                    <td>{{item.itemName}}</td>\r\n                    <td>{{item.quantity}}</td>\r\n                    <td>{{item.suppliedQuantity}}</td>\r\n                    <td>{{item.unitName}}</td>\r\n                    <td>{{item.doctorName}}</td>\r\n                    <td>{{item.departmentName}}</td>\r\n                    <td>{{item.inventoryRequestStatus}}</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n<div id=\"supplyDoctorInventoryRequests\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">{{ 'SupplyDoctorInventoryRequests' | translate}}</h4>\r\n            </div>\r\n            <form class=\"form-horizontal\" name=\"servicegroupForm\" #servicegroupForm=\"ngForm\">\r\n                <div class=\"modal-body\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"suppliedQuantity\" class=\"control-label col-md-2\">{{ 'Quantity' | translate}}</label>\r\n                        <div class=\"col-md-4\">\r\n                            <input class=\"form-control\" id=\"suppliedQuantity\" name=\"suppliedQuantity\"\r\n                                [(ngModel)]='supplidObject.suppliedQuantity' #suppliedQuantity=\"ngModel\" required />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"remark\" class=\"control-label col-md-2\">{{ 'Remark' | translate}}</label>\r\n                        <div class=\"col-md-4\">\r\n                            <textarea class=\"form-control\" id=\"remark\" name=\"remark\"\r\n                                [(ngModel)]='supplidObject.description' #remark=\"ngModel\"></textarea>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                    <div class=\"text-center\">\r\n                        <button type=\"button\" class=\"btn btn-primary\" (click)=\"calculateOrderOut()\"\r\n                            data-dismiss=\"modal\">{{ 'Supply' | translate}}</button>\r\n                        <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\">{{ 'Cancel' |\r\n                            translate}}</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, OnChanges, SimpleChanges, ViewChild, ElementRef } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\nimport { TreeNode } from 'primeng/api';\r\nimport { ClinicService } from '../shared/clinic.service';\r\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\r\nimport { AccountService } from '../../security/shared/account.service';\r\nimport { UserPermissions } from '../../classes/user-permissions.class';\r\nimport { PermissionKeyEnum } from '../../shared/shared/permission-key.enum';\r\n\r\n@Component({\r\n\r\n    selector: 'clinic-laboratory-tests',\r\n    templateUrl: './clinic-laboratory-tests.component.html'\r\n})\r\n\r\nexport class ClinicLaboratoryTestsComponent implements OnInit {\r\n\r\n    selectedLang = 'ar';\r\n    filterString!: string;\r\n    leafType: string = 'LaboratoryTest';\r\n    groupName: string = '';\r\n    childName: string = '';\r\n    userType: string = '';\r\n    isClinicAdmin: boolean = false;\r\n    userPermisions: UserPermissions = new UserPermissions();\r\n    key: PermissionKeyEnum = new PermissionKeyEnum();\r\n    enableAddRootBtn: boolean = false;\r\n    enableEditBtn: boolean = false;\r\n    enableActivateBtn: boolean = false;\r\n    enableSaveBtn: boolean = false;\r\n    constructor(public toastr: ToastrService\r\n        , private localStorage: LocalStorageService\r\n        , private clinicService: ClinicService\r\n        , public translate: TranslateService\r\n        , public accountService: AccountService) { }\r\n\r\n    selectedClinicId!: number;\r\n    selectLaboratoryTestsTab: boolean = true;\r\n    active: boolean = true;\r\n    showProgress = false;\r\n\r\n    selectedNode!: TreeNode;\r\n\r\n    isLaboratoryTestsGroupSelected = true;\r\n    isLaboratoryTestSelected = false;\r\n    rbSelections = [{ value: 1, text: this.groupName }, { value: 2, text: this.childName }];\r\n    selectedAction = 1;\r\n    txtHeaderModal = \"\";\r\n    toSaveLaboratoryTestsGroupId: any;\r\n    toSaveLaboratoryTestId: any;\r\n    parentLaboratoryTestsGroupId: any;\r\n    parentLaboratoryTestsGroupName: any;\r\n    isRoot = false;\r\n    enableCheckBox = false;\r\n    selctedNode: any;\r\n    isNew: boolean | undefined;\r\n    toPrintDiv: string = \"print-section\";\r\n\r\n    @ViewChild('btnAddLaboratoryTestsGroup') btnAddLaboratoryTestsGroup!: ElementRef;\r\n    @ViewChild('btnClosePopup') btnClosePopup!: ElementRef;\r\n    lstToTranslated: string[] = [];\r\n    treeDataSourceItems!: any[];\r\n    selectedParentGroupId: any;\r\n    ngOnInit(): void {\r\n        this.selectedLang = this.localStorage.retrieve(\"selectedLanguage\");\r\n        this.lstToTranslated = ['label', 'labelTranslation'];\r\n        this.groupName = this.translate.instant(\"LaboratoryTestsGroup\");\r\n        this.childName = this.translate.instant(\"LaboratoryTests\");\r\n        this.translate.onLangChange.subscribe((event: LangChangeEvent) => {\r\n            this.groupName = this.translate.instant(\"LaboratoryTestsGroup\");\r\n            this.childName = this.translate.instant(\"LaboratoryTests\");\r\n        });\r\n        this.rbSelections = [{ value: 1, text: this.groupName }, { value: 2, text: this.childName }];\r\n        this.selectedClinicId = this.localStorage.retrieve(\"ClinicID\");\r\n        this.userType = this.localStorage.retrieve(\"UserType\");\r\n        if (this.userType == 'ClinicAdmin')\r\n            this.isClinicAdmin = true;\r\n\r\n        if (!this.isClinicAdmin) {\r\n            if (this.accountService.userPermision._isScalar != undefined)\r\n                this.accountService.userPermision.subscribe((item: any) => this.handleUserInterfaceViews(item));\r\n            else\r\n                this.handleUserInterfaceViews(this.accountService.userPermision);\r\n        }\r\n\r\n        this.getLaboratoryTestsGroupsForTree();\r\n    }\r\n\r\n    getLaboratoryTestsGroupsForTree() {\r\n        this.toSaveLaboratoryTestsGroupId = '';\r\n        this.toSaveLaboratoryTestId = '';\r\n        let thisComponent = this;\r\n        thisComponent.showProgress = true;\r\n        this.clinicService.getLaboratoryTestsGroupsForTree(this.selectedClinicId)\r\n            .subscribe(\r\n                function (laboratoryTestsGroups: any) {\r\n                    thisComponent.treeDataSourceItems = laboratoryTestsGroups;\r\n                },\r\n                function (error: any) {\r\n                    thisComponent.toastr.error(error, '');\r\n                    thisComponent.showProgress = false;\r\n                },\r\n                function () { // finally\r\n                    thisComponent.showProgress = false;\r\n                });\r\n    }\r\n\r\n    expandAll() {\r\n        this.treeDataSourceItems.forEach(node => {\r\n            this.expandRecursive(node, true);\r\n        });\r\n    }\r\n\r\n    collapseAll() {\r\n        this.treeDataSourceItems.forEach(node => {\r\n            this.expandRecursive(node, false);\r\n        });\r\n    }\r\n\r\n    private expandRecursive(node: TreeNode, isExpand: boolean) {\r\n        node.expanded = isExpand;\r\n        if (node.children) {\r\n            node.children.forEach(childNode => {\r\n                this.expandRecursive(childNode, isExpand);\r\n            });\r\n        }\r\n    }\r\n\r\n    onCheckboxSelectionChange(value: any) {\r\n        this.selectedAction = value;\r\n\r\n        if (this.selectedAction == 1) {\r\n            this.isLaboratoryTestsGroupSelected = true;\r\n            this.isLaboratoryTestSelected = false;\r\n            this.txtHeaderModal = this.translate.instant(\"LaboratoryTestsGroup\");\r\n            this.translate.onLangChange.subscribe((event: LangChangeEvent) => {\r\n\r\n                this.txtHeaderModal = this.translate.instant(\"LaboratoryTestsGroup\");\r\n            });\r\n\r\n        }\r\n        else if (this.selectedAction == 2) {\r\n            this.isLaboratoryTestsGroupSelected = false;\r\n            this.isLaboratoryTestSelected = true\r\n            this.txtHeaderModal = this.translate.instant(\"LaboratoryTests\");\r\n            this.translate.onLangChange.subscribe((event: LangChangeEvent) => {\r\n\r\n                this.txtHeaderModal = this.translate.instant(\"LaboratoryTests\");\r\n            });\r\n        }\r\n    }\r\n\r\n    displayPopup(node: any) {\r\n        if (node.type.toLocaleLowerCase() == \"laboratorytest\") {\r\n            this.isLaboratoryTestsGroupSelected = false;\r\n            this.isLaboratoryTestSelected = true;\r\n            this.selectedAction = 2;\r\n\r\n            this.txtHeaderModal = this.translate.instant(\"LaboratoryTest\");\r\n            this.translate.onLangChange.subscribe((event: LangChangeEvent) => {\r\n\r\n                this.txtHeaderModal = this.translate.instant(\"LaboratoryTest\");\r\n                this.groupName = this.translate.instant(\"LaboratoryTestsGroup\");\r\n                this.childName = this.translate.instant(\"LaboratoryTests\");\r\n            });\r\n            this.enableCheckBox = false;\r\n            this.isRoot = false;\r\n\r\n            this.toSaveLaboratoryTestId = node.data;\r\n            this.btnAddLaboratoryTestsGroup.nativeElement.click();\r\n        } else if (node.type.toLocaleLowerCase() == \"laboratorytestsgroup\") {\r\n            this.isLaboratoryTestsGroupSelected = true;\r\n            this.isLaboratoryTestSelected = false;\r\n            this.enableCheckBox = false;\r\n            this.isRoot = false;\r\n            this.selectedAction = 1;\r\n            this.txtHeaderModal = this.translate.instant(\"LaboratoryTestsGroup\");\r\n            this.translate.onLangChange.subscribe((event: LangChangeEvent) => {\r\n\r\n                this.txtHeaderModal = this.translate.instant(\"LaboratoryTestsGroup\");\r\n                this.groupName = this.translate.instant(\"LaboratoryTestsGroup\");\r\n                this.childName = this.translate.instant(\"LaboratoryTests\");\r\n            });\r\n\r\n            this.toSaveLaboratoryTestsGroupId = node.data;\r\n            this.btnAddLaboratoryTestsGroup.nativeElement.click();\r\n        }\r\n        this.rbSelections = [{ value: 1, text: this.groupName }, { value: 2, text: this.childName }];\r\n        this.selctedNode = node;\r\n    }\r\n\r\n    passParentGroupInfo(node: any) {\r\n        this.parentLaboratoryTestsGroupId = node.data;\r\n        if (this.selectedLang == 'ar')\r\n            this.parentLaboratoryTestsGroupName = node.label;\r\n        else\r\n            this.parentLaboratoryTestsGroupName = node.labelTranslation;\r\n        this.isLaboratoryTestsGroupSelected = true;\r\n        this.isLaboratoryTestSelected = false;\r\n        this.selectedAction = 1;\r\n        // this.txtHeaderModal = \"LaboratoryTestsGroup\";\r\n        this.txtHeaderModal = this.translate.instant(\"LaboratoryTestsGroup\");\r\n        this.translate.onLangChange.subscribe((event: LangChangeEvent) => {\r\n\r\n            this.txtHeaderModal = this.translate.instant(\"LaboratoryTestsGroup\");\r\n            this.groupName = this.translate.instant(\"LaboratoryTestsGroup\");\r\n            this.childName = this.translate.instant(\"LaboratoryTests\");\r\n        });\r\n        if (node.data == undefined) {\r\n            this.enableCheckBox = false;\r\n            this.isRoot = true;\r\n        }\r\n        else {\r\n            this.enableCheckBox = true;\r\n            this.isRoot = false;\r\n        }\r\n        this.isLaboratoryTestsGroupSelected = true;\r\n        this.isLaboratoryTestSelected = false;\r\n\r\n        this.rbSelections = [{ value: 1, text: this.groupName }, { value: 2, text: this.childName }];\r\n        this.selctedNode = node;\r\n    }\r\n\r\n    changeActivation(node: any, event: any) {\r\n        let thisComponent = this;\r\n\r\n        if (node.type.toLocaleLowerCase() == \"laboratorytest\") {\r\n            thisComponent.showProgress = true;\r\n            thisComponent.clinicService.updateLaboratoryTestActiveState({ \"id\": node.id, \"isActive\": event.target.checked })\r\n                .subscribe(\r\n                    function (response: any) {\r\n                        if (event.target.checked) {\r\n                            thisComponent.activateParents(node);\r\n                        }\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () { // finally\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n        } else if (node.type.toLocaleLowerCase() == \"laboratorytestsgroup\") {\r\n            thisComponent.showProgress = true;\r\n            thisComponent.clinicService.updateLaboratoryTestsGroupActiveState({ \"id\": node.id, \"isActive\": event.target.checked })\r\n                .subscribe(\r\n                    function (response: any) {\r\n                        node.isActive = event.target.checked;\r\n                        if (event.target.checked) {\r\n                            if (node.parent != undefined)\r\n                                thisComponent.activateParents(node.parent);\r\n                        } else {\r\n                            thisComponent.deActivateChildren(node, false);\r\n                        }\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () { // finally\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n        }\r\n    }\r\n\r\n    activateParents(node: any) {\r\n        node.isActive = true;\r\n        if (node.parent != undefined) {\r\n            this.activateParents(node.parent);\r\n        }\r\n    }\r\n    deActivateChildren(node: any, active: any) {\r\n        node.isActive = active;\r\n        if (node.children) {\r\n            node.children.forEach((childNode: any) => {\r\n                this.deActivateChildren(childNode, active);\r\n            });\r\n        }\r\n    }\r\n    updateSelectedNode(node: any) {\r\n        let vm = this;\r\n        vm.toSaveLaboratoryTestsGroupId = '';\r\n        vm.toSaveLaboratoryTestId = '';\r\n        if (node.data > 0 && vm.isNew == false) {\r\n            // vm.selctedNode = node;\r\n            vm.selctedNode.label = node.label;\r\n            vm.selctedNode.labelTranslation = node.labelTranslation;\r\n        } else {\r\n            if (vm.parentLaboratoryTestsGroupId == undefined) {\r\n                vm.treeDataSourceItems.push(node);\r\n            } else {\r\n                vm.selctedNode.children.push(node);\r\n            }\r\n        }\r\n    }\r\n    setIsNewValue(val: any) {\r\n        this.isNew = val;\r\n    }\r\n    closeLaboratoryTestsAndGroupsPopup() {\r\n        this.toSaveLaboratoryTestsGroupId = '';\r\n        this.toSaveLaboratoryTestId = '';\r\n        this.selectedNode = {};\r\n\r\n        this.btnClosePopup.nativeElement.click();\r\n    }\r\n    handleUserInterfaceViews(user: any) {\r\n        if (user.permissions != undefined) {\r\n\r\n            for (let item of user.permissions) {\r\n                if (item.permission.key == this.key.Coding) {\r\n                    if (item.fullControl == true || item.add)\r\n                        this.enableAddRootBtn = true;// then any add button should be enabled\r\n                    if (item.fullControl == true || item.edit)\r\n                        this.enableEditBtn = true;\r\n                    if (item.fullControl == true || item.activate)\r\n                        this.enableActivateBtn = true;\r\n                    if (item.fullControl || item.add || item.edit)\r\n                        this.enableSaveBtn = true;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n","<div *ngIf=\"showProgress\">\r\n    <loading></loading>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <clinic-tab [isLaboratoryTestsSelected]='selectLaboratoryTestsTab' *ngIf=\"isClinicAdmin\"></clinic-tab>\r\n    <shared-tabs [isLaboratoryTestsSelected]='selectLaboratoryTestsTab' *ngIf=\"!isClinicAdmin\"></shared-tabs>\r\n\r\n    <div class=\"row \">\r\n        <div class=\"row \">\r\n            <div class=\"NBbreadcrumb\">\r\n                <a>{{ 'Clinic' | translate}}</a> &nbsp;/\r\n                {{ 'LaboratoryTests' | translate}}\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <div>\r\n            <div class=\"row well\">\r\n                <div class=\"\">\r\n                    <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#LaboratoryTestsAndGroupsPopup\" (click)=\"passParentGroupInfo('')\" disabled=\"{{ enableAddRootBtn || isClinicAdmin ? '' :'disabled'}}\">{{ 'AddRootLaboratoryTestsGroup' | translate}}</button>\r\n                    <button type=\"button\" class=\"hidden\" #btnAddLaboratoryTestsGroup data-toggle=\"modal\" data-target=\"#LaboratoryTestsAndGroupsPopup\"></button>\r\n                    <button type=\"button\" class=\"btn btn-primary\" (click)=\"expandAll()\">{{ 'ExpandAll' | translate}}</button>\r\n                    <button type=\"button\" class=\"btn btn-primary\" (click)=\"collapseAll()\">{{ 'CollapseAll' | translate}}</button>\r\n                    <print-page [section]='toPrintDiv'></print-page>\r\n\r\n                </div>\r\n                <br />\r\n                <div class=\"row nopadding\">\r\n                    <div class=\"col-md-5 nopadding\">\r\n                        <div class=\"inner-addon left-addon\">\r\n                            <i class=\"glyphicon glyphicon-search\"></i>\r\n                            <input [placeholder]=\"'SearchByNameorCode' | translate\" class=\"inputSearch form-control\" [(ngModel)]=\"filterString\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n           \r\n            <div id=\"print-section\" class=\"\">\r\n              <div class=\"row well\">\r\n                  <p-tree [value]=\"treeDataSourceItems | filterbynameorcode:filterString : leafType\" selectionMode=\"single\" [(selection)]=\"selectedNode\">\r\n                      <ng-template let-node pTemplate=\"LaboratoryTest\">\r\n                          <span class=\"nav-icon\"><i class=\"fa fa-cube\"></i></span>\r\n                          &nbsp;\r\n                          {{selectedLang === 'ar' ?  node.label : node.labelTranslation}}\r\n                          &nbsp; &nbsp;\r\n                          <a [class.disabled]=\"!enableEditBtn && !isClinicAdmin ? true : null\">\r\n                              <i class=\"fa fa-pencil fa-2x\" (click)=\"displayPopup(node)\" style=\"color: #32bea6;\"></i>\r\n\r\n                          </a>\r\n                          <label>\r\n                              <input id=\"ChkIsActiveInGrid\" name=\"ChkIsActiveInGrid\" class=\"ace ace-switch ace-switch-6\"\r\n                                     type=\"checkbox\" [checked]=\"node.isActive\"\r\n                                     (click)=\"changeActivation(node, $event)\" disabled=\"{{ enableActivateBtn || isClinicAdmin? '' :'disabled'}}\" />\r\n                              <span class=\"lbl\"></span>\r\n                          </label>\r\n                      </ng-template>\r\n                      <ng-template let-node pTemplate=\"LaboratoryTestsGroup\">\r\n                          <span class=\"nav-icon\"><i class=\"fa fa-cubes\"></i></span>\r\n                          &nbsp;\r\n                          {{selectedLang === 'ar' ?  node.label : node.labelTranslation}}\r\n                          &nbsp; &nbsp;\r\n                          <a #btnAddLaboratoryTestsGroup data-toggle=\"modal\" data-target=\"#LaboratoryTestsAndGroupsPopup\" [class.disabled]=\"!enableAddRootBtn && !isClinicAdmin ? true : null\">\r\n                              <img src=\"assets/images/addImage.png\" (click)=\"passParentGroupInfo(node)\" />\r\n                          </a>\r\n                          &nbsp; &nbsp;\r\n                          <a [class.disabled]=\"!enableEditBtn && !isClinicAdmin ? true : null\">\r\n                              <i class=\"fa fa-pencil fa-2x\" (click)=\"displayPopup(node)\" style=\"color: #32bea6;\"></i>\r\n\r\n                          </a>\r\n                          <label>\r\n                              <input id=\"ChkIsActiveInGrid\" name=\"ChkIsActiveInGrid\" class=\"ace ace-switch ace-switch-6\"\r\n                                     type=\"checkbox\" [checked]=\"node.isActive\"\r\n                                     (click)=\"changeActivation(node, $event)\" disabled=\"{{ enableActivateBtn || isClinicAdmin? '' :'disabled'}}\" />\r\n                              <span class=\"lbl\"></span>\r\n                          </label>\r\n                      </ng-template>\r\n                  </p-tree>\r\n              </div>\r\n                \r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- Laboratory Tests Modal -->\r\n<div id=\"LaboratoryTestsAndGroupsPopup\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" #btnClosePopup data-dismiss=\"modal\" (click)=\"closeLaboratoryTestsAndGroupsPopup()\">&times;</button>\r\n                <h4 class=\"modal-title\">{{txtHeaderModal}}</h4>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <div class=\"col-sm-offset-2 col-md-8\">\r\n                    <table>\r\n                        <tr>\r\n                            <td *ngFor=\"let item of rbSelections; let idx = index\">\r\n                                <input type=\"radio\" name=\"radiogroup\" [value]=\"item.value\"\r\n                                       [checked]=\"item.value == selectedAction\" #checkbox (change)=\"onCheckboxSelectionChange(checkbox.value)\" disabled=\"{{ enableCheckBox ? '' :'disabled'}}\">{{item.text | translate}}\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            <div *ngIf=\"isLaboratoryTestSelected\">\r\n                <clinic-manage-laboratory-test [selectedLaboratoryTestId]='toSaveLaboratoryTestId' [selectedParentGroupId]='parentLaboratoryTestsGroupId' [isClinicAdmin]=\"isClinicAdmin\" [enableSaveBtn]=\"enableSaveBtn\"\r\n                                         [selectedParentGroupName]='parentLaboratoryTestsGroupName' (onLaboratoryTestChanged)=\"updateSelectedNode($event)\" (onIsNew)=\"setIsNewValue($event)\" (onCancel)=\"closeLaboratoryTestsAndGroupsPopup()\"></clinic-manage-laboratory-test>\r\n            </div>\r\n            <div *ngIf=\"isLaboratoryTestsGroupSelected\">\r\n                <clinic-manage-laboratory-tests-group [selectedLaboratoryTestsGroupId]='toSaveLaboratoryTestsGroupId' [selectedParentGroupId]='parentLaboratoryTestsGroupId' [isClinicAdmin]=\"isClinicAdmin\" [enableSaveBtn]=\"enableSaveBtn\"\r\n                                                [selectedParentGroupName]='parentLaboratoryTestsGroupName' (onLaboratoryTestsGroupChanged)=\"updateSelectedNode($event)\" (onIsNew)=\"setIsNewValue($event)\" (onCancel)=\"closeLaboratoryTestsAndGroupsPopup()\"></clinic-manage-laboratory-tests-group>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n","import { Component, OnInit, OnChanges, SimpleChanges, Input, Output, EventEmitter } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\nimport { ClinicService } from '../../shared/clinic.service';\r\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\r\n@Component({\r\n\r\n    selector: 'clinic-manage-laboratory-test',\r\n    templateUrl: './clinic-manage-laboratory-test.component.html'\r\n})\r\n\r\nexport class ClinicManageLaboratoryTestComponent implements OnChanges {\r\n\r\n    @Input() selectedLaboratoryTestId: string = '';\r\n    @Input() selectedParentGroupId: string = '';\r\n    @Input() selectedParentGroupName: string = '';\r\n    @Input() isClinicAdmin: boolean = false;\r\n    @Input() enableSaveBtn: boolean = false;\r\n    @Output() onLaboratoryTestChanged: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() onIsNew: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n    @Output() onCancel = new EventEmitter();\r\n\r\n    selectLaboratoryTestsTab: boolean = true;\r\n    active: boolean = true;\r\n    showProgress = false;\r\n    selectedLaboratoryTest: any = {};\r\n    selectedLang = 'ar';\r\n\r\n    constructor(public toastr: ToastrService\r\n        , private localStorage: LocalStorageService\r\n        , private clinicService: ClinicService\r\n        , public translate: TranslateService) { }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        this.selectedLang = this.localStorage.retrieve(\"selectedLanguage\");\r\n        if (this.selectedLaboratoryTestId && this.selectedLaboratoryTestId != '') {\r\n            let thisComponent = this;\r\n            thisComponent.showProgress = true;\r\n            this.clinicService.getLaboratoryTestById(thisComponent.selectedLaboratoryTestId)\r\n                .subscribe(\r\n                    function (laboratoryTest: any) {\r\n                        thisComponent.selectedLaboratoryTest = laboratoryTest;\r\n                        thisComponent.selectedParentGroupId = laboratoryTest.parentGroupId;\r\n                        if (thisComponent.selectedLang == 'ar')\r\n                            thisComponent.selectedParentGroupName = laboratoryTest.parentGroupName;\r\n                        else\r\n                            thisComponent.selectedParentGroupName = laboratoryTest.parentGroupNameTranslation;\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () { // finally\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n        }\r\n        else {\r\n            this.clearControl();\r\n        }\r\n    }\r\n\r\n    saveLaboratoryTest(): void {\r\n        let thisComponent = this;\r\n        thisComponent.showProgress = true;\r\n        this.selectedLaboratoryTest.parentGroupId = this.selectedParentGroupId;\r\n\r\n        if (this.selectedLaboratoryTest.id > 0) {\r\n            //Update\r\n            this.clinicService.updateLaboratoryTest(this.selectedLaboratoryTest)\r\n                .subscribe(\r\n                    function (response: any) {\r\n\r\n                        //thisComponent.selectedLaboratoryTest = response;\r\n                        thisComponent.onIsNew.emit(false);\r\n                        thisComponent.onLaboratoryTestChanged.emit(response);\r\n                        let msg = thisComponent.translate.instant(\"SavedSuccessfully\");\r\n                        thisComponent.toastr.success(msg, '');\r\n                        thisComponent.clearControl();\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n                        thisComponent.clearControl();\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () {\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n\r\n        }\r\n        else {\r\n            //New\r\n            this.clinicService.createLaboratoryTest(this.selectedLaboratoryTest)\r\n                .subscribe(\r\n                    function (response: any) {\r\n\r\n                        // thisComponent.selectedLaboratoryTest = response;\r\n                        thisComponent.onIsNew.emit(true);\r\n                        thisComponent.onLaboratoryTestChanged.emit(response);\r\n                        let msg = thisComponent.translate.instant(\"SavedSuccessfully\");\r\n                        thisComponent.toastr.success(msg, '');\r\n                        thisComponent.clearControl();\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n                        thisComponent.clearControl();\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () {\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n        }\r\n    }\r\n\r\n    clearControl(): void {\r\n        this.selectedLaboratoryTest = {};\r\n        this.active = false;\r\n        setTimeout(() => this.active = true, 0);\r\n    }\r\n\r\n    cancelLaboratoryTest(): void {\r\n        this.clearControl();\r\n        this.onCancel.emit();\r\n    }\r\n\r\n}","<form *ngIf=\"active\" class=\"form-horizontal\" name=\"manageLaboratoryTestForm\" #manageLaboratoryTestForm=\"ngForm\">\r\n    <div class=\"modal-body\">\r\n        <div class=\"form-group\">\r\n            <label for=\"txtName\" class=\"control-label col-md-3\"> {{ 'ParentGroup' | translate}}</label>\r\n            <div class=\"col-md-9\">\r\n                {{selectedParentGroupName}}\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"txtLaboratoryTestCode\" class=\"control-label col-md-3\"> {{ 'Code' | translate}}</label>\r\n            <div class=\"col-md-3\">\r\n                <input id=\"txtLaboratoryTestCode\" name=\"txtLaboratoryTestCode\" class=\"form-control\" [(ngModel)]='selectedLaboratoryTest.code' #txtLaboratoryTestCode=\"ngModel\" required />\r\n                <div [hidden]=\"txtLaboratoryTestCode.valid || txtLaboratoryTestCode.pristine\" class=\"alert alert-danger\">\r\n                   {{ 'RequiredField' | translate}}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"txtName\" class=\"control-label col-md-3\"> {{ 'ArabicName' | translate}}</label>\r\n            <div class=\"col-md-9\">\r\n                <input id=\"txtName\" name=\"txtName\" class=\"form-control\" [(ngModel)]='selectedLaboratoryTest.name' #txtName=\"ngModel\" required />\r\n                <div [hidden]=\"txtName.valid || txtName.pristine\" class=\"alert alert-danger\">\r\n                   {{ 'RequiredField' | translate}}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"txtNameTranslation\" class=\"control-label col-md-3\"> {{ 'EnglishName' | translate}}</label>\r\n            <div class=\"col-md-9\">\r\n                <input id=\"txtNameTranslation\" name=\"txtNameTranslation\" class=\"form-control\" [(ngModel)]='selectedLaboratoryTest.nameTranslation' #txtNameTranslation=\"ngModel\" required />\r\n                <div [hidden]=\"txtNameTranslation.valid || txtNameTranslation.pristine\" class=\"alert alert-danger\">\r\n                    {{ 'RequiredField' | translate}}\r\n                </div>\r\n            </div>\r\n        </div>        \r\n        <div class=\"form-group\">\r\n            <label for=\"txtLaboratoryTestRemark\" class=\"control-label col-md-3\"> {{ 'Remark' | translate}}</label>\r\n            <div class=\"col-md-6\">\r\n                <textarea id=\"txtLaboratoryTestRemark\" name=\"txtLaboratoryTestRemark\" class=\"form-control\" [(ngModel)]='selectedLaboratoryTest.description'></textarea>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n        <div class=\"text-center\">\r\n            <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" [disabled]=\"!manageLaboratoryTestForm.valid ||(!enableSaveBtn && !isClinicAdmin)\" (click)=\"saveLaboratoryTest()\">{{ 'Save' | translate}}</button>\r\n            <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" (click)=\"cancelLaboratoryTest()\">{{ 'Cancel' | translate}}</button>\r\n        </div>\r\n    </div>\r\n</form>","import { Component, OnInit, OnChanges, SimpleChanges, Input, Output, EventEmitter } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\n\r\nimport { ClinicService } from '../../shared/clinic.service';\r\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\r\n@Component({\r\n\r\n    selector: 'clinic-manage-laboratory-tests-group',\r\n    templateUrl: './clinic-manage-laboratory-tests-group.component.html'\r\n})\r\n\r\nexport class ClinicManageLaboratoryTestsGroupComponent implements OnInit, OnChanges {\r\n\r\n    @Input() selectedLaboratoryTestsGroupId: string = '';\r\n    @Input() selectedParentGroupId: string = '';\r\n    @Input() selectedParentGroupName: string = '';\r\n    @Input() isClinicAdmin: boolean = false;\r\n    @Input() enableSaveBtn: boolean = false;\r\n    @Output() onLaboratoryTestsGroupChanged: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() onIsNew: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n    @Output() onCancel = new EventEmitter();\r\n\r\n    selectedClinicId!: number;\r\n    selectLaboratoryTestsTab: boolean = true;\r\n    active: boolean = true;\r\n    showProgress = false;\r\n    selectedLaboratoryTestsGroup: any = {};\r\n    selectedLang = 'ar';\r\n\r\n    constructor(public toastr: ToastrService\r\n        , private localStorage: LocalStorageService\r\n        , private clinicService: ClinicService\r\n        , public translate: TranslateService) { }\r\n\r\n    ngOnInit(): void {\r\n        this.selectedClinicId = this.localStorage.retrieve(\"ClinicID\");\r\n    }\r\n\r\n    //get data according to selected type \r\n    ngOnChanges(changes: SimpleChanges) {\r\n        this.selectedLang = this.localStorage.retrieve(\"selectedLanguage\");\r\n        if (this.selectedLaboratoryTestsGroupId && this.selectedLaboratoryTestsGroupId != '') {\r\n            let thisComponent = this;\r\n            thisComponent.showProgress = true;\r\n            this.clinicService.getLaboratoryTestsGroupById(thisComponent.selectedLaboratoryTestsGroupId)\r\n                .subscribe(\r\n                    function (laboratoryTestsGroup: any) {\r\n                        thisComponent.selectedLaboratoryTestsGroup = laboratoryTestsGroup;\r\n                        thisComponent.selectedParentGroupId = laboratoryTestsGroup.parentGroupId;\r\n                        if (thisComponent.selectedLang == 'ar')\r\n                            thisComponent.selectedParentGroupName = laboratoryTestsGroup.parentGroupName;\r\n                        else\r\n                            thisComponent.selectedParentGroupName = laboratoryTestsGroup.parentGroupNameTranslation;\r\n\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () { // finally\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n        }\r\n        else {\r\n            this.clearControl();\r\n        }\r\n    }\r\n\r\n\r\n    saveLaboratoryTestsGroup(): void {\r\n        let thisComponent = this;\r\n        thisComponent.showProgress = true;\r\n        this.selectedLaboratoryTestsGroup.parentGroupId = this.selectedParentGroupId;\r\n        this.selectedLaboratoryTestsGroup.clinicId = this.selectedClinicId\r\n        if (this.selectedLaboratoryTestsGroup.id > 0) {\r\n            //Update\r\n            this.clinicService.updateLaboratoryTestsGroup(this.selectedLaboratoryTestsGroup)\r\n                .subscribe(\r\n                    function (response: any) {\r\n\r\n                        thisComponent.onIsNew.emit(false);\r\n                        thisComponent.onLaboratoryTestsGroupChanged.emit(response);\r\n                        let msg = thisComponent.translate.instant(\"SavedSuccessfully\");\r\n                        thisComponent.toastr.success(msg, '');\r\n                        thisComponent.clearControl();\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n                        thisComponent.clearControl();\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () {\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n\r\n        }\r\n        else {\r\n            //New\r\n            this.clinicService.createLaboratoryTestsGroup(this.selectedLaboratoryTestsGroup)\r\n                .subscribe(\r\n                    function (response: any) {\r\n\r\n                        thisComponent.onIsNew.emit(true);\r\n                        thisComponent.onLaboratoryTestsGroupChanged.emit(response);\r\n                        let msg = thisComponent.translate.instant(\"SavedSuccessfully\");\r\n                        thisComponent.toastr.success(msg, '');\r\n                        thisComponent.clearControl();\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n                        thisComponent.clearControl();\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () {\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n        }\r\n    }\r\n\r\n    clearControl(): void {\r\n        this.selectedLaboratoryTestsGroup = {};\r\n        this.active = false;\r\n        setTimeout(() => this.active = true, 0);\r\n    }\r\n\r\n    cancelLaboratoryTestsGroup(): void {\r\n        this.clearControl();\r\n        this.onCancel.emit();\r\n    }\r\n}","<form *ngIf=\"active\" class=\"form-horizontal\" name=\"manageLaboratoryTestsGroupForm\" #manageLaboratoryTestsGroupForm=\"ngForm\">\r\n    <div class=\"modal-body\">\r\n        <div class=\"form-group\">\r\n            <label for=\"txtName\" class=\"control-label col-md-3\"> {{ 'ParentGroup' | translate}}</label>\r\n            <div class=\"col-md-9\">\r\n                {{selectedParentGroupName}}\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"txtName\" class=\"control-label col-md-3\"> {{ 'ArabicName' | translate}}</label>\r\n            <div class=\"col-md-9\">\r\n                <input id=\"txtName\" name=\"txtName\" class=\"form-control\" [(ngModel)]='selectedLaboratoryTestsGroup.name' #txtName=\"ngModel\" required />\r\n                <div [hidden]=\"txtName.valid || txtName.pristine\" class=\"alert alert-danger\">\r\n                    {{ 'RequiredField' | translate}}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"txtNameTranslation\" class=\"control-label col-md-3\">{{ 'EnglishName' | translate}}</label>\r\n            <div class=\"col-md-9\">\r\n                <input id=\"txtNameTranslation\" name=\"txtNameTranslation\" class=\"form-control\" [(ngModel)]='selectedLaboratoryTestsGroup.nameTranslation' #txtNameTranslation=\"ngModel\" required />\r\n                <div [hidden]=\"txtNameTranslation.valid || txtNameTranslation.pristine\" class=\"alert alert-danger\">\r\n                    {{ 'RequiredField' | translate}}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"txtLaboratoryTestsGroupRemark\" class=\"control-label col-md-3\"> {{ 'Remark' | translate}}</label>\r\n            <div class=\"col-md-6\">\r\n                <textarea id=\"txtLaboratoryTestsGroupRemark\" name=\"txtLaboratoryTestsGroupRemark\" class=\"form-control\" [(ngModel)]='selectedLaboratoryTestsGroup.description'></textarea>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n        <div class=\"text-center\">\r\n            <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" [disabled]=\"!manageLaboratoryTestsGroupForm.valid ||(!enableSaveBtn && !isClinicAdmin)\" (click)=\"saveLaboratoryTestsGroup()\">{{ 'Save' | translate}}</button>\r\n            <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" (click)=\"cancelLaboratoryTestsGroup()\">{{ 'Cancel' | translate}}</button>\r\n        </div>\r\n    </div>\r\n</form>","import { Component, OnInit, ViewChild, EventEmitter, Input, Output } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\nimport { SharedService } from '../../../shared/shared/shared.service';\r\nimport { UtilityClass } from '../../../shared/shared/utility.class';\r\nimport { ClinicService } from '../../shared/clinic.service';\r\nimport { ClinicNews } from '../../../classes/clinicNews.class';\r\nimport { AttachmentInfo } from '../../../classes/attachmentInfo.class';\r\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\r\n\r\n\r\n@Component({\r\n\r\n    selector: 'clinic-add-news',\r\n    templateUrl: './add-news.component.html'\r\n})\r\n\r\nexport class AddNewsComponent {\r\n\r\n    constructor(public toastr: ToastrService\r\n        , private localStorage: LocalStorageService\r\n        , private clinicService: ClinicService\r\n        , private sharedService: SharedService\r\n        , private _route: ActivatedRoute\r\n        , public translate: TranslateService) { }\r\n\r\n    @ViewChild(\"fileInput\") fileInput: any;\r\n    @ViewChild(\"newsImage\") newsImage: any;\r\n\r\n    utilityClass: UtilityClass = new UtilityClass();\r\n    @Input() selectedClinicNewsId!: number;\r\n    @Output() onBack = new EventEmitter<any>();\r\n    selectedClinicNews: ClinicNews = new ClinicNews();\r\n    selectNewsTab: boolean = true;\r\n    recorderId!: number;\r\n    selectedClinicId!: number;\r\n    active: boolean = true;\r\n    showProgress = false;\r\n    imageSource: string = '';\r\n    userType: string = '';\r\n    isClinicAdmin: boolean = false;\r\n\r\n\r\n\r\n    ngOnInit(): void {\r\n        this.selectedClinicId = this.localStorage.retrieve(\"ClinicID\");\r\n        this.recorderId = this.localStorage.retrieve(\"UserID\");\r\n\r\n        this.userType = this.localStorage.retrieve(\"UserType\");\r\n        if (this.userType == 'ClinicAdmin')\r\n            this.isClinicAdmin = true;\r\n\r\n        if (this.selectedClinicNewsId && this.selectedClinicNewsId > 0) {\r\n            let thisComponent = this;\r\n            thisComponent.showProgress = true;\r\n            this.clinicService.getClinicNewsById(thisComponent.selectedClinicNewsId)\r\n                .subscribe(\r\n                    function (clinicNews: any) {\r\n                        thisComponent.selectedClinicNews = clinicNews;\r\n\r\n                        if (thisComponent.selectedClinicNews.creationDate)\r\n                            thisComponent.selectedClinicNews.creationDate = thisComponent.utilityClass.getDateTimeFromString(thisComponent.selectedClinicNews.creationDate.toString());\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () { // finally\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n        }\r\n    }\r\n\r\n    saveClinicNews(): void {\r\n        let thisComponent = this;\r\n        let fi = thisComponent.fileInput.nativeElement;\r\n        this.selectedClinicNews.clinicId = this.selectedClinicId;\r\n\r\n        if (this.selectedClinicNews.creationDate)\r\n            this.selectedClinicNews.creationDate = this.utilityClass.getUtcDateTime(this.selectedClinicNews.creationDate);\r\n\r\n        let dtNow: Date = new Date();\r\n\r\n        if (this.selectedClinicNews.creationDate > dtNow) {\r\n            //this.toastr.error('Clinic news date cannot be later than the current date', '');\r\n            let msg = thisComponent.translate.instant(\"NewsDateValidation\");\r\n            thisComponent.toastr.error(msg, '');\r\n            return;\r\n        }\r\n        thisComponent.showProgress = true;\r\n        if (this.selectedClinicNews.id > 0) {\r\n            //Update\r\n            this.clinicService.updateClinicNews(this.selectedClinicNews)\r\n                .subscribe(\r\n                    function (response: any) {\r\n                        thisComponent.selectedClinicNews = response;\r\n                        if (thisComponent.selectedClinicNews && thisComponent.selectedClinicNews.creationDate)\r\n                            thisComponent.selectedClinicNews.creationDate = thisComponent.utilityClass.getDateTimeFromString(thisComponent.selectedClinicNews.creationDate.toString());\r\n                        fi.value = '';\r\n                        thisComponent.onBack.emit(thisComponent.selectedClinicNews);\r\n                        let msg = thisComponent.translate.instant(\"SavedSuccessfully\");\r\n                        thisComponent.toastr.success(msg, '');\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () {\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n\r\n        }\r\n        else {\r\n            //New\r\n            this.clinicService.createClinicNews(this.selectedClinicNews)\r\n                .subscribe(\r\n                    function (response: any) {\r\n                        thisComponent.selectedClinicNews = response;\r\n                        if (thisComponent.selectedClinicNews && thisComponent.selectedClinicNews.creationDate)\r\n                            thisComponent.selectedClinicNews.creationDate = thisComponent.utilityClass.getDateTimeFromString(thisComponent.selectedClinicNews.creationDate.toString());\r\n                        fi.value = '';\r\n                        thisComponent.onBack.emit(thisComponent.selectedClinicNews);\r\n                        let msg = thisComponent.translate.instant(\"SavedSuccessfully\");\r\n                        thisComponent.toastr.success(msg, '');\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () {\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n        }\r\n    }\r\n\r\n    addFile(fileName: string): void {\r\n\r\n        let vm = this;\r\n        let attchmentInfo: AttachmentInfo = new AttachmentInfo();\r\n        let fi = this.fileInput.nativeElement;\r\n        if (fi.files && fi.files[0]) {\r\n            let fileToUpload = fi.files[0];\r\n\r\n            if (!fileToUpload.type.startsWith(\"image/\")) {\r\n                // vm.toastr.error('Clinic image file must be of type images only.');\r\n                let msg = vm.translate.instant(\"FileTypeValidation\");\r\n                vm.toastr.error(msg, '');\r\n                fi.value = '';\r\n                return;\r\n            }\r\n\r\n\r\n            if (fileToUpload.size > 5242880) {\r\n                let msg = vm.translate.instant(\"FileSizeMsg\");\r\n                vm.toastr.error(msg, '');\r\n                return;\r\n            }\r\n\r\n            let reader = new FileReader();\r\n            reader.onload = (e: any) => {\r\n                vm.newsImage.nativeElement.src = e.target.result;\r\n            };\r\n            reader.readAsDataURL(fileToUpload);\r\n\r\n            this.sharedService.uploadFile(fileToUpload)\r\n                .subscribe(\r\n                    function (response: any) {\r\n                        if (response != null) {\r\n                            vm.selectedClinicNews.attachmentInfo = attchmentInfo;\r\n                            vm.selectedClinicNews.attachmentInfo.originalName = response.originalName;\r\n                            vm.selectedClinicNews.attachmentInfo.keyName = response.keyName;\r\n                            vm.selectedClinicNews.attachmentInfo.fullPath = response.fullPath;\r\n                            vm.selectedClinicNews.attachmentInfo.fileType = response.fileType;\r\n                        }\r\n                    },\r\n                    function (error: any) {\r\n                        vm.toastr.error(error, '');\r\n                    },\r\n                    function () {\r\n\r\n                    });\r\n        }\r\n    }\r\n    goBack() {\r\n        this.clearControl();\r\n        this.onBack.emit();\r\n    }\r\n\r\n    clearControl(): void {\r\n        this.selectedClinicNews = new ClinicNews();\r\n        let fi = this.fileInput.nativeElement;\r\n        fi.value = '';\r\n        this.active = false;\r\n        setTimeout(() => this.active = true, 0);\r\n    }\r\n\r\n}","<div *ngIf=\"showProgress\">\r\n    <loading></loading>\r\n</div>\r\n<div class=\"row\">\r\n    <clinic-tab [isNewsSelected]='selectNewsTab'></clinic-tab>\r\n    <div class=\"row nopadding\">\r\n\r\n        <div class=\"row NBbreadcrumb\">\r\n            <a>{{ 'Clinic' | translate}}</a> &nbsp;/\r\n            {{ 'News' | translate}}\r\n        </div>\r\n\r\n        <div class=\"row well\">\r\n            <form *ngIf=\"active\" class=\"form-horizontal\" name=\"newsForm\" #newsForm=\"ngForm\">\r\n                <div class=\"form-group text-center\">\r\n                    <button class=\"btn btn-primary\" (click)=\"saveClinicNews()\" [disabled]=\"!newsForm.form.valid ||  !isClinicAdmin\">{{ 'Save' | translate}}</button>\r\n                    <button class=\"btn btn-primary\" (click)=\"goBack()\" disabled=\"{{ isClinicAdmin ? '' :'disabled'}}\">{{ 'Back' | translate}}</button>\r\n                </div>\r\n                <br />\r\n                <div class=\"form-group\">\r\n                    <div class=\"col-md-4 text-center\">\r\n                        <div class=\"row\">\r\n                            <img [src]=\"selectedClinicNews.imageData ? 'data:image/JPG;base64,' + selectedClinicNews.imageData : ''\"\r\n                                 width=\"100\" height=\"100\" style=\"cursor: default;\" #newsImage>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <button class=\"btn btn-primary\" data-toggle=\"collapse\" data-target=\"#divUploadNewsImage\" disabled=\"{{ isClinicAdmin ? '' :'disabled'}}\"> Upload new image</button>\r\n                        </div>\r\n                        <br />\r\n                        <div id=\"divUploadNewsImage\" class=\"row collapse\">\r\n                            <input type=\"file\" class=\"form-control\" #fileInput\r\n                                   accept=\"image/*\" (change)=\"addFile(fileInput.value)\">\r\n                            <span>{{ 'FileSizeMsg' | translate}}</span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-8\">\r\n                        <div class=\"form-group\">\r\n                            <label class=\"control-label col-md-4\">{{ 'Active' | translate}}</label>\r\n                            <div class=\"col-md-6\">\r\n                                <label>\r\n                                    <input id=\"chkIsActive\" name=\"chkIsActive\" class=\"ace ace-switch ace-switch-6\"\r\n                                           type=\"checkbox\" [(ngModel)]='selectedClinicNews.isActive' #chkIsActive=\"ngModel\" />\r\n                                    <span class=\"lbl\"></span>\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label class=\"control-label col-md-4\">{{ 'Date' | translate}}</label>\r\n                            <div class=\"col-md-6\">\r\n                                <p-calendar [(ngModel)]=\"selectedClinicNews.creationDate\"\r\n                                            [monthNavigator]=\"true\"\r\n                                            [yearNavigator]=\"true\"\r\n                                            dateFormat=\"dd/mm/yy\"\r\n                                            [showIcon]=\"true\" [required]=\"true\"\r\n                                            [ngModelOptions]=\"{standalone: true}\"\r\n                                            yearRange=\"2000:2050\"></p-calendar>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label class=\"control-label col-md-4\">{{ 'Title' | translate}}</label>\r\n                            <div class=\"col-md-6\">\r\n                                <input id=\"txtClinicNewsTitle\" name=\"txtClinicNewsTitle\" class=\"form-control\"\r\n                                       [(ngModel)]='selectedClinicNews.name' #txtClinicNewsTitle=\"ngModel\" required />\r\n                                <div [hidden]=\"txtClinicNewsTitle.valid || txtClinicNewsTitle.pristine\" class=\"alert alert-danger\">\r\n                                    {{ 'RequiredField' | translate}}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label class=\"control-label col-md-4\">{{ 'Description' | translate}}</label>\r\n                            <div class=\"col-md-6\">\r\n                                <textarea id=\"txtClinicNewsRemark\" name=\"txtClinicNewsRemark\" class=\"form-control\"\r\n                                          [(ngModel)]='selectedClinicNews.description' style=\"width:100%;height:100px;\"></textarea>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>    </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\n\r\nimport { ClinicService } from '../../shared/clinic.service';\r\n\r\nimport { ClinicNews } from '../../../classes/clinicNews.class';\r\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\r\nimport { Table } from 'primeng/table';\r\n\r\n@Component({\r\n\r\n    selector: 'view-news-list',\r\n    templateUrl: './view-news-list.component.html'\r\n})\r\n\r\nexport class ViewNewsListComponent implements OnInit {\r\n    constructor(public toastr: ToastrService\r\n        , private router: Router\r\n        , private localStorage: LocalStorageService\r\n        , private clinicService: ClinicService\r\n        , public translate: TranslateService) { }\r\n\r\n    @ViewChild('btnReplyToFeedBack') btnReplyToFeedBack!: ElementRef;\r\n    @ViewChild('btnClosePopup') btnClosePopup!: ElementRef;\r\n    selectNewsTab: boolean = true;\r\n    selectedClinicId!: number;\r\n    selectedClinicNewsId!: any;\r\n    active: boolean = true;\r\n    showProgress = false;\r\n    clinicNewsList: ClinicNews[] = [];\r\n    lstToTranslated: string[] = [];\r\n    isDetailsVisible: boolean = false;\r\n    userType: string = '';\r\n    isClinicAdmin: boolean = false;\r\n    loading: boolean = true;\r\n    @ViewChild('dt') table!: Table;\r\n\r\n\r\n    ngOnInit(): void {\r\n        this.lstToTranslated = ['name', 'nameTranslation'];\r\n        this.selectedClinicId = this.localStorage.retrieve(\"ClinicID\");\r\n\r\n        this.userType = this.localStorage.retrieve(\"UserType\");\r\n        if (this.userType == 'ClinicAdmin')\r\n            this.isClinicAdmin = true;\r\n\r\n        let thisComponent = this;\r\n        thisComponent.showProgress = true;\r\n        this.clinicService.getClinicNews(this.selectedClinicId)\r\n            .subscribe(\r\n                function (newsList: any) {\r\n                    thisComponent.clinicNewsList = newsList;\r\n                },\r\n                function (error: any) {\r\n                    thisComponent.toastr.error(error, '');\r\n                    thisComponent.showProgress = false;\r\n                    thisComponent.loading = false;\r\n                },\r\n                function () { // finally\r\n                    thisComponent.showProgress = false;\r\n                    thisComponent.loading = false;\r\n                });\r\n\r\n    }\r\n\r\n    changeClinicNewsActivationState(id: any, event: any) {\r\n        let thisComponent = this;\r\n\r\n        thisComponent.showProgress = true;\r\n        thisComponent.clinicService.changeClinicNewsActivationState({ \"id\": id, \"isActive\": event.target.checked })\r\n            .subscribe(\r\n                function (response: any) {\r\n                    let msg = thisComponent.translate.instant(\"SavedSuccessfully\");\r\n                    thisComponent.toastr.success(msg, '');\r\n                },\r\n                function (error: any) {\r\n                    thisComponent.toastr.error(error, '');\r\n                    thisComponent.showProgress = false;\r\n                },\r\n                function () { // finally\r\n                    thisComponent.showProgress = false;\r\n                });\r\n    }\r\n\r\n    showNewsDetails(clinicNewsId: any) {\r\n        this.selectedClinicNewsId = clinicNewsId;\r\n        this.isDetailsVisible = true;\r\n    }\r\n\r\n    getNewsImage(clinicNewsImageData: any): string {\r\n        if (clinicNewsImageData && clinicNewsImageData != null)\r\n            return 'data:image/JPG;base64,' + clinicNewsImageData;\r\n        return '';\r\n    }\r\n\r\n    addNewClinicNews() {\r\n        this.selectedClinicNewsId = 'new';\r\n        this.isDetailsVisible = true;\r\n    }\r\n\r\n    hideDetails(updatedClinicNews: any) {\r\n        if (updatedClinicNews) {\r\n            let thisComponent = this;\r\n            thisComponent.clinicNewsList.forEach(clinicNews => {\r\n                if (clinicNews.id == updatedClinicNews.id)\r\n                    thisComponent.clinicNewsList.splice(thisComponent.clinicNewsList.indexOf(clinicNews), 1);\r\n            });\r\n\r\n            this.clinicNewsList.push(updatedClinicNews);\r\n        }\r\n\r\n        this.isDetailsVisible = false;\r\n    }\r\n}","<div *ngIf=\"showProgress\">\r\n    <loading></loading>\r\n</div>\r\n<div class=\"row\">\r\n    <clinic-tab [isNewsSelected]='selectNewsTab'></clinic-tab>\r\n    <div class=\"row nopadding\">\r\n        <div class=\"row NBbreadcrumb\">\r\n            <a>{{ 'Clinic' | translate}}</a> &nbsp;/\r\n            {{ 'News' | translate}}\r\n        </div>\r\n\r\n        <div class=\"row well\">\r\n            <div class=\"padding5\" *ngIf=\"!isDetailsVisible\">\r\n                <div class=\"col-md-offset-10\">\r\n                    <button class=\"btn btn-primary\" (click)=\"addNewClinicNews()\"\r\n                        disabled=\"{{ isClinicAdmin ? '' :'disabled'}}\">\r\n                        {{ 'Addnews' | translate}}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n        <div class=\"row well\" style=\"background-color: #f6f7f9 !important;\">\r\n            <div class=\"inner-addon left-addon\">\r\n                <i class=\"glyphicon glyphicon-search\"></i>\r\n                <input pInputText type=\"text\" (input)=\"dt.filterGlobal($event.target.value, 'contains')\"\r\n                    [placeholder]=\"'Search' | translate\" />\r\n\r\n            </div>\r\n\r\n            <!---New Table-->\r\n            <p-table #dt [value]=\"clinicNewsList\" dataKey=\"id\" [rowHover]=\"true\" [rows]=\"10\"\r\n                [showCurrentPageReport]=\"true\" [rowsPerPageOptions]=\"[10,20,30,40,50,100]\" [loading]=\"loading\"\r\n                [paginator]=\"true\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                [filterDelay]=\"0\" [globalFilterFields]=\"['creationDateString','name','nameTranslation']\">\r\n\r\n                <ng-template pTemplate=\"header\">\r\n                    <tr>\r\n                        <th pSortableColumn=\"creationDateString\">{{'CreationDate' | translate}} <p-sortIcon\r\n                                field=\"creationDateString\"></p-sortIcon>\r\n                        </th>\r\n                        <th pSortableColumn=\"name\">{{'Title' | translate}} <p-sortIcon field=\"name\"></p-sortIcon>\r\n                        </th>\r\n                        <th><span styleClass=\"text-center width70\">{{'image' | translate}} </span>\r\n                        </th>\r\n                        <th pSortableColumn=\"description\">{{'Description' | translate}} <p-sortIcon field=\"description\">\r\n                            </p-sortIcon>\r\n                        </th>\r\n                        <th pSortableColumn=\"modificationDateString\">{{'LastModificationDate' | translate}} <p-sortIcon\r\n                                field=\"modificationDateString\"></p-sortIcon>\r\n                        </th>\r\n                        <th><span styleClass=\"text-center width70\">{{'Active' | translate}} </span>\r\n                        </th>\r\n                        <th><span styleClass=\"text-center width70\">{{'Edit' | translate}} </span>\r\n                        </th>\r\n                    </tr>\r\n\r\n                </ng-template>\r\n                <ng-template pTemplate=\"body\" let-item>\r\n                    <tr class=\"p-selectable-row\">\r\n                        <td>\r\n                            {{item.creationDateString}}\r\n                        </td>\r\n                        <td>\r\n                            {{item.name}}\r\n                        </td>\r\n                        <td>\r\n                            <img *ngIf=\"item.imageData\" [src]=\"getNewsImage(item.imageData)\" width=\"100\"\r\n                                height=\"100\" style=\"cursor: default;\">\r\n                        </td>\r\n                        <td>\r\n                            {{item.description}}\r\n                        </td>\r\n                        <td>\r\n                            {{item.modificationDateString}}\r\n                        </td>\r\n                        <td>\r\n                            <input id=\"chkIsActiveInGrid\" name=\"chkIsActiveInGrid\" class=\"ace ace-switch ace-switch-6\"\r\n                                type=\"checkbox\" [checked]=\"item.isActive\"\r\n                                (click)=\"changeClinicNewsActivationState(item.id, $event)\" />\r\n                            <span class=\"lbl\"></span>\r\n                        </td>\r\n                        <td style=\"text-align: center\">\r\n                            <a class=\"pointer\" (click)=\"showNewsDetails(item.id)\">\r\n                                <i class=\"fa fa-pencil fa-2x\" style=\"color: #32bea6;\"></i>\r\n                            </a>\r\n                        </td>\r\n                    </tr>\r\n                </ng-template>\r\n                <ng-template pTemplate=\"emptymessage\">\r\n                    <tr>\r\n                        <td colspan=\"8\">No data found.</td>\r\n                    </tr>\r\n                </ng-template>\r\n            </p-table>\r\n            <!--End Table-->\r\n        </div>\r\n        <div class=\"padding5\" *ngIf=\"isDetailsVisible\">\r\n            <clinic-add-news [selectedClinicNewsId]=\"selectedClinicNewsId\" (onBack)=\"hideDetails($event)\">\r\n            </clinic-add-news>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { ClinicService } from '../shared/clinic.service';\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\n\r\nimport { UtilityClass } from '../../shared/shared/utility.class';\r\nimport { TreeNode } from 'primeng/api';\r\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\r\n\r\nimport { AccountService } from '../../security/shared/account.service';\r\nimport { UserPermissions } from '../../classes/user-permissions.class';\r\nimport { PermissionKeyEnum } from '../../shared/shared/permission-key.enum';\r\n@Component({\r\n\r\n    selector: 'clinic-organizationMaster',\r\n    templateUrl: './clinic-organizationMaster.component.html'\r\n})\r\n\r\nexport class ClinicOrganizationMasterComponent implements OnInit {\r\n    selectedLang = 'ar';\r\n    SelectedPersonName: string = '';\r\n    selectOrganizationMasterTab: boolean = true;\r\n    active: boolean = true;\r\n    model: any = { id: 0 };\r\n    showProgress: boolean = false;\r\n    userPermisions: UserPermissions = new UserPermissions();\r\n    key: PermissionKeyEnum = new PermissionKeyEnum();\r\n    enableAddBtn: boolean = false;\r\n    enableEditBtn: boolean = false;\r\n    enableActivateBtn: boolean = false;\r\n    enableSaveBtn: boolean = false;\r\n    @ViewChild('AddNonMedicalDepartment') AddNonMedicalDepartment!: ElementRef;\r\n    @ViewChild('AddMedicalDepartment') AddMedicalDepartment!: ElementRef;\r\n    @ViewChild('AddDivision') AddDivision!: ElementRef;\r\n    @ViewChild('AddPhysicalResource') AddPhysicalResource!: ElementRef;\r\n    @ViewChild('AddHumanResource') AddHumanResource!: ElementRef;\r\n    //@ViewChild('btnResetPassword') btnResetPassword: ElementRef;\r\n\r\n    organizationStructure: any[] = [];\r\n    clinicId!: number;\r\n    departments: any[] = [];\r\n    PhysicalResourceTypes: any[] = [];\r\n    utilityClass: UtilityClass = new UtilityClass();\r\n\r\n    selectedFile2!: TreeNode;\r\n    selectedDepartmentsandDivisions: TreeNode[] = [];\r\n    selectedNode: any;\r\n\r\n    isEditMode: boolean = false;\r\n\r\n    userIdToResetPassword = '';\r\n    userType: string = '';\r\n    isClinicAdmin: boolean = false;\r\n    lstToTranslated: string[] = [];\r\n    constructor(public router: Router,\r\n        private clinicService: ClinicService,\r\n        private storage: LocalStorageService,\r\n        private toastr: ToastrService,\r\n        private _route: ActivatedRoute\r\n        , public translate: TranslateService\r\n        , public accountService: AccountService) { }\r\n\r\n    ngOnInit(): void {\r\n        this.selectedLang = this.storage.retrieve(\"selectedLanguage\");\r\n        this.lstToTranslated = ['label', 'labelTranslation'];\r\n        //this.clinicId = this._route.snapshot.params['id'];\r\n        this.clinicId = this.storage.retrieve(\"ClinicID\");\r\n        this.userType = this.storage.retrieve(\"UserType\");\r\n        if (this.userType == 'ClinicAdmin')\r\n            this.isClinicAdmin = true;\r\n        // load organization structure\r\n        this.loadOrganizationStructureTree();\r\n\r\n        //load master departments and divisions\r\n        this.loadOrganizationStructureWrapper();\r\n\r\n        if (!this.isClinicAdmin) {\r\n            if (this.accountService.userPermision._isScalar != undefined)\r\n                this.accountService.userPermision.subscribe((item: any) => this.handleUserInterfaceViews(item));\r\n            else\r\n                this.handleUserInterfaceViews(this.accountService.userPermision);\r\n        }\r\n    }\r\n\r\n    loadOrganizationStructureTree() {\r\n        let vm = this;\r\n        vm.showProgress = true;\r\n        //let userId = this.storage.retrieve(\"UserID\");\r\n        this.clinicService.getOrganizationStructureTree(this.clinicId)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    vm.organizationStructure = response;\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                    vm.showProgress = false;\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n    }\r\n\r\n    loadOrganizationStructureWrapper() {\r\n        let vm = this;\r\n        vm.showProgress = true;\r\n        this.clinicService.getOrganizationStructureWrapper()\r\n            .subscribe(\r\n                function (response: any) {\r\n                    vm.departments = response.departments;\r\n                    vm.PhysicalResourceTypes = response.physicalResourceTypes;\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                    vm.showProgress = false;\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n    }\r\n\r\n    SaveDepartmentsandDivisions() {\r\n        // extract selected departments and divisions\r\n        let selectedDepartments: any[] = [];\r\n        this.model.divisionsIDs = [];\r\n        this.model.clinicId = this.clinicId;\r\n        let vm = this;\r\n\r\n        this.selectedDepartmentsandDivisions.forEach(node => {\r\n            if (node.type == \"Division\")\r\n                vm.model.divisionsIDs.push(node.data);\r\n        });\r\n\r\n        vm.showProgress = true;\r\n        this.clinicService.saveMedicalDepartmentsandDivisions(vm.model)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    vm.organizationStructure = response;\r\n                    vm.model = { id: 0 };\r\n                    let msg = vm.translate.instant(\"SavedSuccessfully\");\r\n                    vm.toastr.success(msg, '');\r\n                    vm.organizationStructure[0].expand;\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                    vm.showProgress = false;\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n    }\r\n\r\n    expandAll() {\r\n        this.organizationStructure.forEach(node => {\r\n            this.expandRecursive(node, true);\r\n        });\r\n    }\r\n\r\n    collapseAll() {\r\n        this.organizationStructure.forEach(node => {\r\n            this.expandRecursive(node, false);\r\n        });\r\n    }\r\n\r\n    private expandRecursive(node: TreeNode, isExpand: boolean) {\r\n        node.expanded = isExpand;\r\n        if (node.children) {\r\n            node.children.forEach(childNode => {\r\n                this.expandRecursive(childNode, isExpand);\r\n            });\r\n        }\r\n    }\r\n\r\n    displayPopup(node: any) {\r\n        this.model = { id: 0 };\r\n\r\n        if (node.type.toString() == \"Medical\") {\r\n            this.AddMedicalDepartment.nativeElement.click();\r\n            this.displaySelectedDivisions();\r\n        }\r\n        else if (node.type.toString() == \"NonMedical\") {\r\n            this.AddNonMedicalDepartment.nativeElement.click();\r\n            this.model.departmentCategoryId = node.data;\r\n            this.model.clinicId = this.clinicId;\r\n        }\r\n        else if (node.type == \"ClinicDepartment\") {\r\n            this.AddDivision.nativeElement.click();\r\n            this.model = { id: 0 };\r\n            this.model.departmentName = node.label;\r\n            this.model.clinicDepartmentId = node.data;\r\n        }\r\n        else if (node.type.includes(\"Human\")) {\r\n            this.router.navigateByUrl(\"/humanResource/1\");\r\n        }\r\n\r\n        this.selectedNode = node;\r\n    }\r\n\r\n    displaySelectedDivisions() {\r\n        this.selectedDepartmentsandDivisions = [];\r\n\r\n        for (let orgStructure of this.organizationStructure) {\r\n            if (orgStructure.type == \"Medical\") {\r\n                for (let department of orgStructure.children) {\r\n                    this.departments.forEach(node => {\r\n                        this.highLightSelectedNodes(node, department.masterDepartmentId, 'Department');\r\n                    });\r\n\r\n                    for (let division of department.children) {\r\n                        this.departments.forEach(node => {\r\n                            this.highLightSelectedNodes(node, division.masterDivisionId, 'Division');\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private highLightSelectedNodes(node: TreeNode, id: number, nodeType: string) {\r\n        if (node.data == id && node.type == nodeType)\r\n            this.selectedDepartmentsandDivisions.push(node);\r\n        if (node.children) {\r\n            node.children.forEach(childNode => {\r\n                this.highLightSelectedNodes(childNode, id, nodeType);\r\n            });\r\n        }\r\n    }\r\n\r\n    displayPhysicalResourcePopup(node: any) {\r\n        this.AddPhysicalResource.nativeElement.click();\r\n        this.model = { id: 0 };\r\n        this.model.departmentName = node.parent.label;\r\n        this.model.divisionName = node.label;\r\n        this.model.clinicDivisionId = node.data;\r\n\r\n        this.selectedNode = node;\r\n    }\r\n\r\n    clear() {\r\n        this.model = { id: 0 };\r\n        this.active = false;\r\n        setTimeout(() => this.active = true, 0);\r\n    }\r\n\r\n    // Non Medical Department \r\n    saveNonMedicalDepartment() {\r\n        let vm = this;\r\n        let addNew = true;\r\n        if (vm.model.id > 0)\r\n            addNew = false;\r\n        vm.showProgress = true;\r\n        this.clinicService.saveNonMedicalDepartment(vm.model)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    if (addNew) // attach new object to the selected node \r\n                        vm.selectedNode.children.push(response);\r\n                    else // update node's name in case of updating \r\n                    {\r\n                        vm.selectedNode.label = response.label;\r\n                        vm.selectedNode.labelTranslation = response.labelTranslation;\r\n                    }\r\n                    vm.clear();\r\n                    let msg = vm.translate.instant(\"SavedSuccessfully\");\r\n                    vm.toastr.success(msg, '');\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                    vm.showProgress = false;\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n    }\r\n\r\n    editDepartment(node: TreeNode) {\r\n        let vm = this;\r\n        vm.showProgress = true;\r\n        vm.selectedNode = node;\r\n        this.clinicService.getNonMedicalDepartmentById(node.data)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    vm.model = response;\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                    vm.showProgress = false;\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n\r\n        // display popup\r\n        this.AddNonMedicalDepartment.nativeElement.click();\r\n    }\r\n\r\n    // Non Medical Division\r\n    saveNonMedicalDivision() {\r\n        let vm = this;\r\n        let addNew = true;\r\n        if (vm.model.id > 0)\r\n            addNew = false;\r\n        vm.showProgress = true;\r\n        this.clinicService.saveNonMedicalDivision(vm.model)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    if (addNew) // attach new object to the selected node \r\n                        vm.selectedNode.children.push(response);\r\n                    else // update node's name in case of updating \r\n                    {\r\n                        vm.selectedNode.label = response.label;\r\n                        vm.selectedNode.labelTranslation = response.labelTranslation;\r\n                    }\r\n                    //vm.loadOrganizationStructureTree();\r\n                    vm.clear();\r\n                    let msg = vm.translate.instant(\"SavedSuccessfully\");\r\n                    vm.toastr.success(msg, '');\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                    vm.showProgress = false;\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n    }\r\n\r\n    editDivision(node: any) {\r\n        let vm = this;\r\n        vm.showProgress = true;\r\n        vm.selectedNode = node;\r\n        this.clinicService.getNonMedicalDivisionById(node.data)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    vm.model = response;\r\n                    vm.model.departmentName = node.parent.label;\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                    vm.showProgress = false;\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n\r\n        // display popup\r\n        this.AddDivision.nativeElement.click();\r\n    }\r\n\r\n    // Physical Resource \r\n    savePhysicalResource() {\r\n        let vm = this;\r\n        let addNew = true;\r\n        if (vm.model.id > 0)\r\n            addNew = false;\r\n        vm.showProgress = true;\r\n        if (this.model.startDate)\r\n            this.model.startDate = this.utilityClass.getUtcDate(this.model.startDate);\r\n        if (this.model.endDate)\r\n            this.model.endDate = this.utilityClass.getUtcDate(this.model.endDate);\r\n\r\n        this.clinicService.savePhysicalResource(vm.model)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    if (addNew) // attach new object to the selected node \r\n                        vm.selectedNode.children.push(response);\r\n                    else // update node's name in case of updating \r\n                    {\r\n                        vm.selectedNode.label = response.label;\r\n                        vm.selectedNode.labelTranslation = response.labelTranslation;\r\n                    }\r\n\r\n                    vm.clear();\r\n                    let msg = vm.translate.instant(\"SavedSuccessfully\");\r\n                    vm.toastr.success(msg, '');\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                    vm.showProgress = false;\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n    }\r\n\r\n    editPhysicalResource(node: any) {\r\n        let vm = this;\r\n        vm.showProgress = true;\r\n        vm.selectedNode = node;\r\n        this.clinicService.getPhysicalResourceById(node.data)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    vm.model = response;\r\n\r\n                    if (vm.model.startDate)\r\n                        vm.model.startDate = vm.utilityClass.getUtcDateFromString(vm.model.startDate);\r\n                    if (vm.model.endDate)\r\n                        vm.model.endDate = vm.utilityClass.getUtcDateFromString(vm.model.endDate);\r\n\r\n                    vm.model.departmentName = node.parent.parent.label;\r\n                    vm.model.divisionName = node.parent.label;\r\n\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                    vm.showProgress = false;\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n\r\n        // display popup\r\n        this.AddPhysicalResource.nativeElement.click();\r\n    }\r\n\r\n    changeActivation(node: any, event: any) {\r\n        let vm = this;\r\n        vm.showProgress = true;\r\n        this.clinicService.toggleOrganizationStructureActivation(node.data, event.target.checked, node.type)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    //change the activation of the node and all of it's children \r\n                    vm.toggleActivationForNodeandSubs(node, event.target.checked);\r\n\r\n                    // activate parents \r\n                    if (node.type == 'PhysicalResource' && event.target.checked) {\r\n                        node.parent.isActive = true;\r\n                        node.parent.parent.isActive = true;\r\n                    }\r\n                    if (node.type == 'ClinicDivision' && event.target.checked) {\r\n                        node.parent.isActive = true;\r\n                    }\r\n                    if (node.type == 'SecurityUser' && event.target.checked) {\r\n                        node.parent.isActive = true;\r\n                        node.parent.parent.isActive = true;\r\n                    }\r\n\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                    vm.showProgress = false;\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n    }\r\n\r\n    private toggleActivationForNodeandSubs(node: any, active: boolean) {\r\n        node.isActive = active;\r\n\r\n        if (active == false) {\r\n            if (node.children) {\r\n                node.children.forEach((childNode: any) => {\r\n                    this.toggleActivationForNodeandSubs(childNode, active);\r\n                });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    addNewHumanResource(node: TreeNode) {\r\n        this.isEditMode = false;\r\n        this.selectedNode = node;\r\n        this.SelectedPersonName = '';\r\n\r\n        this.AddHumanResource.nativeElement.click();\r\n    }\r\n\r\n    editHumanResource(node: any) {\r\n        this.isEditMode = true;\r\n        this.selectedNode = node;\r\n        if (this.selectedLang == 'ar')\r\n            this.SelectedPersonName = '- ' + node.label;\r\n        else\r\n            this.SelectedPersonName = '- ' + node.labelTranslation;\r\n\r\n        this.AddHumanResource.nativeElement.click();\r\n    }\r\n\r\n    updateModel(newNode: any) {\r\n        this.isEditMode = true;\r\n        this.selectedNode = newNode;\r\n\r\n        if (this.selectedLang == 'ar')\r\n            this.SelectedPersonName = '- ' + this.selectedNode.label;\r\n        else\r\n            this.SelectedPersonName = '- ' + this.selectedNode.labelTranslation;\r\n    }\r\n\r\n    handleUserInterfaceViews(user: any) {\r\n        if (user.permissions != undefined) {\r\n\r\n            for (let item of user.permissions) {\r\n                if (item.permission.key == this.key.OrganizationStructure) {\r\n                    if (item.fullControl == true || item.add)\r\n                        this.enableAddBtn = true;// then any add button should be enabled\r\n                    if (item.fullControl == true || item.edit)\r\n                        this.enableEditBtn = true;\r\n                    if (item.fullControl == true || item.activate)\r\n                        this.enableActivateBtn = true;\r\n                    //if (item.fullControl || item.add || item.edit)\r\n                    //    this.enableSaveBtn = true;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n    //openResetPasswordModal(node: TreeNode) {        \r\n    //    this.userIdToResetPassword = node.data;\r\n\r\n    //    this.btnResetPassword.nativeElement.click();\r\n    //}\r\n}","<div *ngIf=\"showProgress\">\r\n    <loading></loading>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <clinic-tab [isOrgMasterSelected]='selectOrganizationMasterTab' *ngIf=\"isClinicAdmin\"></clinic-tab>\r\n    <shared-tabs [isOrgMasterSelected]='selectOrganizationMasterTab' *ngIf=\"!isClinicAdmin\"></shared-tabs>\r\n    <div class=\"row nopadding\">\r\n        \r\n        <div class=\"row\">\r\n            <div class=\"row \" style=\"padding:13px;\">\r\n                <div class=\"NBbreadcrumb\">\r\n                    <a>{{ 'Clinic' | translate}}</a> &nbsp;/\r\n                    {{ 'OrganizationStructure' | translate}}\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"row  \" style=\"display:none;\">\r\n            &nbsp;\r\n            <button #AddMedicalDepartment type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#MedicalDepartmentPopup\">{{ 'AddMedicalDepartment' | translate}}</button>\r\n            <button #AddNonMedicalDepartment type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#NonMedicalDepartmentPopup\">{{ 'AddNonMedicalDepartment' | translate}}</button>\r\n            <button #AddDivision type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#DivisionPopup\">{{ 'AddDivision' | translate}}</button>\r\n            <button #AddPhysicalResource type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#PhysicalResourcePopup\">{{ 'AddPhysicalResource' | translate}}</button>\r\n            <button #AddHumanResource type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#humanResourcePopup\">{{ 'AddHumanResource' | translate}}</button>\r\n        </div>\r\n        <div class=\"row well\">\r\n            <button type=\"button\" class=\"btn btn-primary\" (click)=\"expandAll()\">{{ 'ExpandAll' | translate}}</button>\r\n            <button type=\"button\" class=\"btn btn-primary\" (click)=\"collapseAll()\">{{ 'CollapseAll' | translate}}</button>\r\n        </div>\r\n       \r\n\r\n        <br />\r\n        <div class=\"row well\">\r\n            <p-tree [value]=\"organizationStructure\" selectionMode=\"single\" [(selection)]=\"selectedFile2\">\r\n                <ng-template let-node pTemplate=\"Medical\">\r\n                    {{selectedLang === 'ar' ?  node.label : node.labelTranslation}}\r\n                    &nbsp; &nbsp;\r\n                    <a [class.disabled]=\"!enableAddBtn && !isClinicAdmin ? true : null\">\r\n                        <img src=\"assets/images/addImage.png\" (click)=\"displayPopup(node)\" />\r\n                    </a>\r\n                </ng-template>\r\n                <ng-template let-node pTemplate=\"NonMedical\">\r\n                    {{selectedLang === 'ar' ?  node.label : node.labelTranslation}}\r\n                    &nbsp; &nbsp;\r\n                    <a [class.disabled]=\"!enableAddBtn && !isClinicAdmin ? true : null\">\r\n                        <img src=\"assets/images/addImage.png\" (click)=\"displayPopup(node)\" />\r\n                    </a>\r\n                </ng-template>\r\n                <ng-template let-node pTemplate=\"ClinicDepartment\">\r\n                    {{selectedLang === 'ar' ?  node.label : node.labelTranslation}}\r\n                    <span *ngIf=\"node.parent.type != 'Medical' \">\r\n                        &nbsp; &nbsp;\r\n                        <a [class.disabled]=\"!enableAddBtn && !isClinicAdmin ? true : null\">\r\n                            <img src=\"assets/images/addImage.png\" (click)=\"displayPopup(node)\" title=\"Add Division\" />\r\n                        </a>\r\n                        <a [class.disabled]=\"!enableEditBtn && !isClinicAdmin ? true : null\">\r\n                            <i class=\"fa fa-pencil fa-2x\" (click)=\"editDepartment(node)\" title=\"Edit Department\" style=\"color: #32bea6;\"></i>\r\n\r\n                        </a>\r\n                    </span>\r\n                    <label>\r\n                        <input id=\"ChkIsActiveDepartment\" name=\"ChkIsActiveDepartment\" class=\"ace ace-switch ace-switch-6\" type=\"checkbox\"\r\n                               [checked]=\"node.isActive\" (click)=\"changeActivation(node , $event)\" disabled=\"{{ enableActivateBtn || isClinicAdmin ? '' :'disabled'}}\" />\r\n                        <span class=\"lbl\"></span>\r\n                    </label>\r\n                </ng-template>\r\n                <ng-template let-node pTemplate=\"ClinicDivision\">\r\n                    {{selectedLang === 'ar' ?  node.label : node.labelTranslation}}\r\n                    &nbsp; &nbsp;\r\n                    <span *ngIf=\"node.parent.parent.type != 'Medical' \">\r\n                        <a [class.disabled]=\"!enableEditBtn && !isClinicAdmin ? true : null\">\r\n                            <i class=\"fa fa-pencil fa-2x\"(click)=\"editDivision(node)\" title=\"Edit Division\"  style=\"color: #32bea6;\"></i>\r\n\r\n                        </a>\r\n                    </span>\r\n                    <a [class.disabled]=\"!enableAddBtn && !isClinicAdmin ? true : null\">\r\n                        <img src=\"assets/images/addImage.png\" (click)=\"displayPhysicalResourcePopup(node)\" title=\"Add Physical Resouce\" />\r\n                    </a>\r\n                    <a [class.disabled]=\"!enableAddBtn && !isClinicAdmin ? true : null\">\r\n                        <img src=\"images/add-user.png\" (click)=\"addNewHumanResource(node)\" title=\"Add Human Resouce\" />\r\n                    </a>\r\n                    <label>\r\n                        <input id=\"ChkIsActiveDivision\" name=\"ChkIsActiveDivision\" class=\"ace ace-switch ace-switch-6\" type=\"checkbox\"\r\n                               [checked]=\"node.isActive\" (click)=\"changeActivation(node , $event)\" disabled=\"{{ enableActivateBtn || isClinicAdmin? '' :'disabled'}}\" />\r\n                        <span class=\"lbl\"></span>\r\n                    </label>\r\n                </ng-template>\r\n                <ng-template let-node pTemplate=\"PhysicalResource\">\r\n                    <span class=\"glyphicon glyphicon-hdd\"></span>\r\n                    {{selectedLang === 'ar' ?  node.label : node.labelTranslation}}\r\n                    &nbsp; &nbsp;\r\n                    <a [class.disabled]=\"!enableEditBtn && !isClinicAdmin ? true : null\">\r\n                        <i class=\"fa fa-pencil fa-2x\" (click)=\"editPhysicalResource(node)\" title=\"Edit Physical Resource\"  style=\"color: #32bea6;\"></i>\r\n\r\n                    </a>\r\n                    <label>\r\n                        <input id=\"ChkIsActivePhysicalResource\" name=\"ChkIsActivePhysicalResource\" class=\"ace ace-switch ace-switch-6\" type=\"checkbox\"\r\n                               [checked]=\"node.isActive\" (click)=\"changeActivation(node , $event)\" disabled=\"{{ enableActivateBtn || isClinicAdmin? '' :'disabled'}}\" />\r\n                        <span class=\"lbl\"></span>\r\n                    </label>\r\n                </ng-template>\r\n                <ng-template let-node pTemplate=\"SecurityUser\">\r\n                    <span class=\"glyphicon glyphicon-user\"></span>\r\n                    {{selectedLang === 'ar' ?  node.label : node.labelTranslation}}\r\n\r\n                    &nbsp; &nbsp;\r\n                    <a [class.disabled]=\"!enableEditBtn && !isClinicAdmin ? true : null\">\r\n                        <!--<img src=\"images/Pencil-icon.png\" />-->\r\n                        <i class=\"fa fa-pencil fa-2x\"  (click)=\"editHumanResource(node)\" title=\"Edit Human Resource\" style=\"color: #32bea6;\"></i>\r\n                    </a>\r\n                    <!--<img src=\"images/resetPassword.png\" (click)=\"openResetPasswordModal(node)\" title=\"Reset Password\" />-->\r\n                    <label>\r\n                        <input id=\"chkIsActiveHumanResource\" name=\"chkIsActiveHumanResource\" class=\"ace ace-switch ace-switch-6\" type=\"checkbox\"\r\n                               [checked]=\"node.isActive\" (click)=\"changeActivation(node , $event)\" disabled=\"{{ enableActivateBtn || isClinicAdmin? '' :'disabled'}}\" />\r\n                        <span class=\"lbl\"></span>\r\n                    </label>\r\n                </ng-template>\r\n            </p-tree>\r\n        </div>\r\n        \r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n<!-- MedicalDepartment Modal -->\r\n<div id=\"MedicalDepartmentPopup\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">{{ 'AddMedicalDepartment' | translate}}</h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <div class=\"nopadding \" style=\"max-height:250px;min-height: 150px; overflow: auto;border: 1px solid grey;\">\r\n                    <p-tree [value]=\"departments | translateObjects  : null : null : lstToTranslated\" selectionMode=\"checkbox\" [(selection)]=\"selectedDepartmentsandDivisions\">\r\n                    </p-tree>\r\n                </div>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" (click)=\"SaveDepartmentsandDivisions()\" disabled=\"{{ enableSaveBtn || isClinicAdmin ? '' :'disabled'}}\">{{ 'Save' | translate}}</button>\r\n                <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\">{{ 'Cancel' | translate}}</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- Non Medical department Modal -->\r\n<div id=\"NonMedicalDepartmentPopup\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">{{ 'NonMedicalDepartment' | translate}}</h4>\r\n            </div>\r\n            <form *ngIf=\"active\" class=\"form-horizontal\" name=\"nonMedicalDepartmentForm\" #nonMedicalDepartmentForm=\"ngForm\">\r\n                <div class=\"modal-body\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"txtDepartmentCode\" class=\"control-label col-md-3\"> {{ 'Code' | translate}}</label>\r\n                        <div class=\"col-md-3\">\r\n                            <input id=\"txtDepartmentCode\" name=\"txtDepartmentCode\" class=\"form-control\" [(ngModel)]='model.code' #txtDepartmentCode=\"ngModel\" required />\r\n                            <div [hidden]=\"txtDepartmentCode.valid || txtDepartmentCode.pristine\" class=\"alert alert-danger\">\r\n                                {{ 'RequiredField' | translate}}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"txtDepartmentName\" class=\"control-label col-md-3\"> {{ 'ArabicName' | translate}}</label>\r\n                        <div class=\"col-md-6\">\r\n                            <input id=\"txtDepartmentName\" name=\"txtDepartmentName\" class=\"form-control\" [(ngModel)]='model.name' #txtDepartmentName=\"ngModel\" required />\r\n                            <div [hidden]=\"txtDepartmentName.valid || txtDepartmentName.pristine\" class=\"alert alert-danger\">\r\n                                {{ 'RequiredField' | translate}}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"txtDepartmentNameTranslation\" class=\"control-label col-md-3\"> {{ 'EnglishName' | translate}}</label>\r\n                        <div class=\"col-md-6\">\r\n                            <input id=\"txtDepartmentNameTranslation\" name=\"txtDepartmentNameTranslation\" class=\"form-control\" [(ngModel)]='model.nameTranslation' #txtDepartmentNameTranslation=\"ngModel\" required />\r\n                            <div [hidden]=\"txtDepartmentNameTranslation.valid || txtDepartmentNameTranslation.pristine\" class=\"alert alert-danger\">\r\n                                {{ 'RequiredField' | translate}}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"form-group\">\r\n                        <label for=\"txtDepartmentRemark\" class=\"control-label col-md-3\"> {{ 'Remark' | translate}}</label>\r\n                        <div class=\"col-md-6\">\r\n                            <textarea id=\"txtDepartmentRemark\" name=\"txtDepartmentRemark\" class=\"form-control\" [(ngModel)]='model.description' #txtDepartmentRemark=\"ngModel\"></textarea>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                    <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" [disabled]=\"!nonMedicalDepartmentForm.form.valid ||(!enableSaveBtn && !isClinicAdmin)\" (click)=\"saveNonMedicalDepartment()\">{{ 'Save' | translate}}</button>\r\n                    <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\">{{ 'Cancel' | translate}}</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- division Modal -->\r\n<div id=\"DivisionPopup\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">{{ 'Division' | translate}}</h4>\r\n            </div>\r\n            <form *ngIf=\"active\" class=\"form-horizontal\" name=\"divisionForm\" #divisionForm=\"ngForm\">\r\n                <div class=\"modal-body\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"txtDivisionCode\" class=\"control-label col-md-3\"> {{ 'Code' | translate}}</label>\r\n                        <div class=\"col-md-3\">\r\n                            <input id=\"txtDivisionCode\" name=\"txtDivisionCode\" class=\"form-control\" [(ngModel)]='model.code' #txtDivisionCode=\"ngModel\" required />\r\n                            <div [hidden]=\"txtDivisionCode.valid || txtDivisionCode.pristine\" class=\"alert alert-danger\">\r\n                                {{ 'RequiredField' | translate}}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"txtDepartmentName\" class=\"control-label col-md-3\"> {{ 'Department' | translate}}</label>\r\n                        <div class=\"col-md-6\">\r\n                            <input id=\"txtDepartmentName\" name=\"txtDepartmentName\" class=\"form-control\" [(ngModel)]='model.departmentName' #txtDepartmentName=\"ngModel\" disabled />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"txtDivisionName\" class=\"control-label col-md-3\"> {{ 'ArabicName' | translate}}</label>\r\n                        <div class=\"col-md-6\">\r\n                            <input id=\"txtDivisionName\" name=\"txtDivisionName\" class=\"form-control\" [(ngModel)]='model.name' #txtDivisionName=\"ngModel\" required />\r\n                            <div [hidden]=\"txtDivisionName.valid || txtDivisionName.pristine\" class=\"alert alert-danger\">\r\n                                {{ 'RequiredField' | translate}}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"txtDivisionNameTranslation\" class=\"control-label col-md-3\"> {{ 'EnglishName' | translate}}</label>\r\n                        <div class=\"col-md-6\">\r\n                            <input id=\"txtDivisionNameTranslation\" name=\"txtDivisionNameTranslation\" class=\"form-control\" [(ngModel)]='model.nameTranslation' #txtDivisionNameTranslation=\"ngModel\" required />\r\n                            <div [hidden]=\"txtDivisionNameTranslation.valid || txtDivisionNameTranslation.pristine\" class=\"alert alert-danger\">\r\n                                {{ 'RequiredField' | translate}}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"txtDivisionRemark\" class=\"control-label col-md-3\">{{ 'Remark' | translate}}</label>\r\n                        <div class=\"col-md-6\">\r\n                            <textarea id=\"txtDivisionRemark\" name=\"txtDivisionRemark\" class=\"form-control\" [(ngModel)]='model.description' #txtDivisionRemark=\"ngModel\"></textarea>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                    <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" [disabled]=\"!divisionForm.form.valid ||(!enableSaveBtn && !isClinicAdmin)\" (click)=\"saveNonMedicalDivision()\">{{ 'Save' | translate}}</button>\r\n                    <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\">{{ 'Cancel' | translate}}</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- Physical Resource Modal -->\r\n<div id=\"PhysicalResourcePopup\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">{{ 'PhysicalResource' | translate}}</h4>\r\n            </div>\r\n            <form *ngIf=\"active\" class=\"form-horizontal\" name=\"physicalResourceForm\" #physicalResourceForm=\"ngForm\">\r\n                <div class=\"modal-body\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"txtDepartmentName\" class=\"control-label col-md-3\"> {{ 'Department' | translate}}</label>\r\n                        <div class=\"col-md-6\">\r\n                            <input id=\"txtDepartmentName\" name=\"txtDepartmentName\" class=\"form-control\" [(ngModel)]='model.departmentName' #txtDepartmentName=\"ngModel\" disabled />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"txtDivisionName\" class=\"control-label col-md-3\"> {{ 'Division' | translate}}</label>\r\n                        <div class=\"col-md-6\">\r\n                            <input id=\"txtDivisionName\" name=\"txtDivisionName\" class=\"form-control\" [(ngModel)]='model.divisionName' #txtDivisionName=\"ngModel\" disabled />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"txtName\" class=\"control-label col-md-3\"> {{ 'ArabicName' | translate}}</label>\r\n                        <div class=\"col-md-6\">\r\n                            <input id=\"txtPhysicalResourceName\" name=\"txtPhysicalResourceName\" class=\"form-control\" [(ngModel)]='model.name' #txtPhysicalResourceName=\"ngModel\" required />\r\n                            <div [hidden]=\"txtPhysicalResourceName.valid || txtPhysicalResourceName.pristine\" class=\"alert alert-danger\">\r\n                                {{ 'RequiredField' | translate}}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"txtPhysicalResouceNameTranslation\" class=\"control-label col-md-3\"> {{ 'EnglishName' | translate}}</label>\r\n                        <div class=\"col-md-6\">\r\n                            <input id=\"txtPhysicalResouceNameTranslation\" name=\"txtPhysicalResouceNameTranslation\" class=\"form-control\" [(ngModel)]='model.nameTranslation' #txtPhysicalResouceNameTranslation=\"ngModel\" required />\r\n                            <div [hidden]=\"txtPhysicalResouceNameTranslation.valid || txtPhysicalResouceNameTranslation.pristine\" class=\"alert alert-danger\">\r\n                                {{ 'RequiredField' | translate}}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"ddlTypes\" class=\"control-label col-md-3\">{{ 'Type' | translate}}</label>\r\n                        <div class=\"col-md-6\">\r\n                            <select class=\"form-control\" id=\"ddlTypes\" name=\"ddlTypes\" [(ngModel)]=\"model.physicalResourceTypeId\" #ddlTypes=\"ngModel\">\r\n                                <option>{{ 'Select' | translate}}</option>\r\n                                <option *ngFor=\"let resourceType of PhysicalResourceTypes | translateObjects\" [value]=\"resourceType.id\">{{resourceType.name}}</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"txtPhysicalStartDate\" class=\"control-label col-md-3\"> {{ 'StartDate' | translate}}</label>\r\n                        <div class=\"col-md-4\">\r\n                            <p-calendar [(ngModel)]=\"model.startDate\" [monthNavigator]=\"true\" [yearNavigator]=\"true\" dateFormat=\"dd/mm/yy\"\r\n                                        [showIcon]=\"true\" [required]=\"false\" [ngModelOptions]=\"{standalone: true}\" yearRange=\"2000:2050\"></p-calendar>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"txtPhysicalEndDate\" class=\"control-label col-md-3\"> {{ 'EndDate' | translate}}</label>\r\n                        <div class=\"col-md-4\">\r\n                            <p-calendar [(ngModel)]=\"model.endDate\" [monthNavigator]=\"true\" [yearNavigator]=\"true\" dateFormat=\"dd/mm/yy\"\r\n                                        [showIcon]=\"true\" [required]=\"false\" [ngModelOptions]=\"{standalone: true}\" yearRange=\"2000:2050\"></p-calendar>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"txtPhysicalRemark\" class=\"control-label col-md-3\"> {{ 'Remark' | translate}}</label>\r\n                        <div class=\"col-md-6\">\r\n                            <textarea id=\"txtPhysicalRemark\" name=\"txtPhysicalRemark\" class=\"form-control\" [(ngModel)]='model.description' #txtPhysicalRemark=\"ngModel\"></textarea>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                    <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" [disabled]=\"!physicalResourceForm.form.valid ||(!enableSaveBtn && !isClinicAdmin)\" (click)=\"savePhysicalResource()\">{{ 'Save' | translate}}</button>\r\n                    <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\">{{ 'Cancel' | translate}}</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- Human Resource Modal -->\r\n<div id=\"humanResourcePopup\" class=\"modal fade\" role=\"dialog\" data-backdrop=\"static\">\r\n    <div class=\"modal-dialog width75percent\">\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">{{ 'HumanResource' | translate}} &nbsp; {{SelectedPersonName}}</h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <clinic-humanResource [selectedNode]=\"selectedNode\"\r\n                                      [isEditMode]=\"isEditMode\" [isClinicAdmin]=\"isClinicAdmin\" [enableSaveBtn]=\"enableSaveBtn\"\r\n                                      (onModelUpdated)=\"updateModel($event)\"></clinic-humanResource>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!--<button type=\"button\" data-toggle=\"modal\" class=\"hidden\" data-target=\"#resetPasswordModal\" id=\"btnResetPassword\" #btnResetPassword></button>\r\n<div id=\"resetPasswordModal\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n\r\n        <div class=\"modal-content\">\r\n            <reset-password [userId]=\"userIdToResetPassword\"></reset-password>\r\n        </div>\r\n    </div>\r\n</div>-->\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\n\r\n@Component({\r\n\r\n    selector: 'clinic-permissions',\r\n    templateUrl: './clinic-permissions.component.html'\r\n})\r\n\r\nexport class ClinicPermissionsComponent {\r\n    showProgress!: boolean;\r\n    selectPermissionsTab: boolean = true;\r\n\r\n}","<div *ngIf=\"showProgress\">\r\n    <loading></loading>\r\n</div>\r\n\r\n<div class=\"row\">\r\n        <clinic-tab [isPermissionsSelected]='selectPermissionsTab'></clinic-tab>\r\n    <div class=\"row nopadding\">\r\n            <div class=\"row \" style=\"padding:13px;\">\r\n                <div class=\"NBbreadcrumb\">\r\n                    <a>{{ 'Clinic' | translate}}</a> &nbsp;/\r\n                    {{ 'AccessRights' | translate}}\r\n                </div>\r\n\r\n        </div>\r\n\r\n\r\n        <security></security>\r\n\r\n    </div>\r\n</div>\r\n\r\n","import { Component, OnInit, ViewChild, ElementRef, OnChanges, SimpleChanges, Output, EventEmitter } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { UtilityClass } from '../../shared/shared/utility.class';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\n\r\nimport { TreeNode } from 'primeng/api';\r\nimport { ClinicService } from '../shared/clinic.service';\r\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\r\n\r\nimport { AccountService } from '../../security/shared/account.service';\r\nimport { UserPermissions } from '../../classes/user-permissions.class';\r\nimport { PermissionKeyEnum } from '../../shared/shared/permission-key.enum';\r\nimport { TranslateObjectsPipe } from '../../shared/pipes/translateObjects.pipe';\r\n@Component({\r\n\r\n    selector: 'clinic-products',\r\n    templateUrl: './clinic-products.component.html'\r\n})\r\n\r\nexport class ClinicProductsComponent implements OnInit {\r\n    constructor(public toastr: ToastrService,\r\n        private localStorage: LocalStorageService\r\n        , private clinicService: ClinicService\r\n        , public translate: TranslateService\r\n        , public accountService: AccountService\r\n        //, private translateObjects: TranslateObjectsPipe\r\n    ) { }\r\n\r\n    selectedLang = 'ar';\r\n    filterString!:string;\r\n    leafType: string = 'Product';\r\n    userPermisions: UserPermissions = new UserPermissions();\r\n    key: PermissionKeyEnum = new PermissionKeyEnum();\r\n    enableAddRootBtn: boolean = false;\r\n    enableEditBtn: boolean = false;\r\n    enableActivateBtn: boolean = false;\r\n    enableSaveBtn: boolean = false;\r\n\r\n    @Output() onCancel = new EventEmitter();\r\n\r\n    selectProductstTab: boolean = true;\r\n    selectedClinicId: string = \"0\";\r\n    hideUnit: boolean = true;\r\n    active: boolean = true;\r\n    showProgress = false;\r\n    isSelectedGroupNode = false;\r\n    isProductGroupSeleced = true;\r\n    isProductSeleced = false;\r\n    //rbSelections = [{ value: 1, text: 'ProductsGroup' }, { value: 2, text: 'Product' }];\r\n    groupName: string = '';\r\n    childName: string = '';\r\n    rbSelections = [{ value: 1, text: this.groupName }, { value: 2, text: this.childName }];\r\n    selectedAction = 1;\r\n    txtHeaderModal = \"\";\r\n    productGroupId = 'new';\r\n    productId = 'new';\r\n    @ViewChild('btnServicesGroup') btnServicesGroup!: ElementRef;\r\n    @ViewChild('btnCloseProductsGroup') btnCloseProductsGroup!: ElementRef;\r\n\r\n    @ViewChild('btnCloseProduct') btnCloseProduct!: ElementRef;\r\n    @ViewChild('btnServices') btnServices!: ElementRef;\r\n    @ViewChild('tree') tree: any;\r\n    utilityClass: UtilityClass = new UtilityClass();\r\n\r\n    @ViewChild('i') rbselection!: ElementRef;\r\n    @ViewChild('d') selection!: ElementRef;\r\n\r\n\r\n    selectedFile2!: TreeNode;\r\n    selectedGroup!: TreeNode;\r\n\r\n    selectedGroupNode!: TreeNode;\r\n    titl: string = '';\r\n    model: any = {};\r\n    productGroupModel: any = {};\r\n    hideModal = false;\r\n\r\n    treeDataSourceItems: any[] = [];\r\n    groupsOnlyTreeDataSourceItems: any[] = [];\r\n    productGroupParentId = '';\r\n    productType = \"\";\r\n\r\n    productGroupParentlabel = '';\r\n    isRoot = false;\r\n    checkParentChildren = true;\r\n    totalFees!: number;\r\n    isEdit = false;\r\n    selctedNode: any;\r\n    toPrintDiv: string = \"print-section\";\r\n\r\n    heightList: any[] = [];\r\n    weightList: any[] = [];\r\n    volumeList: any[] = [];\r\n\r\n    measuringId!: any;\r\n\r\n    unitList: any[] = [];\r\n    vendors: any[] = [];\r\n\r\n    csList: any[] = [];\r\n\r\n\r\n    Medical: any = {\r\n        label: \"المنتجات الطبية\",\r\n        labelTranslation: \"Medical Products\",\r\n        value: \"Medical\",\r\n        type: \"Medical\",\r\n        productGroupType: \"Medical\",\r\n        parentGroupId: 1,\r\n        parentName: \"Medical Product\",\r\n        children: []\r\n    };\r\n    NonMedical: any = {\r\n        label: \"المنتجات غير الطبية\",\r\n        labelTranslation: \"Non Medical Products\",\r\n        value: \"NonMedical\",\r\n        type: \"NonMedical\",\r\n        productGroupType: \"NonMedical\",\r\n        parentGroupId: 2,\r\n        parentName: \"NonMedical Product\",\r\n\r\n        children: []\r\n\r\n    };\r\n    userType: string = '';\r\n    isClinicAdmin: boolean = false;\r\n    lstToTranslated: string[] = [];\r\n    //pip =new  TranslateObjectsPipe(); \r\n    translateObjects = new TranslateObjectsPipe(this.localStorage);\r\n\r\n    ngOnInit(): void {\r\n        this.selectedLang = this.localStorage.retrieve(\"selectedLanguage\");\r\n        this.lstToTranslated = ['label', 'labelTranslation'];\r\n        this.groupName = this.translate.instant(\"ProductsGroup\");\r\n        this.childName = this.translate.instant(\"Product\");\r\n        this.translate.onLangChange.subscribe((event: LangChangeEvent) => {\r\n            this.groupName = this.translate.instant(\"ProductsGroup\");\r\n            this.childName = this.translate.instant(\"Product\");\r\n        });\r\n        this.rbSelections = [{ value: 1, text: this.groupName }, { value: 2, text: this.childName }];\r\n        this.selectedClinicId = this.localStorage.retrieve(\"ClinicID\");\r\n        this.userType = this.localStorage.retrieve(\"UserType\");\r\n        if (this.userType == 'ClinicAdmin')\r\n            this.isClinicAdmin = true;\r\n\r\n\r\n        this.getProductsGroupsForTree();\r\n        this.loadProductWrapper();\r\n        if (!this.isClinicAdmin) {\r\n            if (this.accountService.userPermision._isScalar != undefined)\r\n                this.accountService.userPermision.subscribe((item: any) => this.handleUserInterfaceViews(item));\r\n            else\r\n                this.handleUserInterfaceViews(this.accountService.userPermision);\r\n        }\r\n\r\n    }\r\n\r\n    loadProductWrapper() {\r\n        let thisComponent = this;\r\n        this.clinicService.getProductUnits()\r\n            .subscribe(\r\n                function (wrapper: any) {\r\n                    thisComponent.heightList = wrapper.heights;\r\n                    thisComponent.weightList = wrapper.weights;\r\n                    thisComponent.volumeList = wrapper.volumes;\r\n                    thisComponent.unitList = wrapper.unites;\r\n                    thisComponent.vendors = wrapper.vendors;\r\n\r\n                },\r\n                function (error: any) {\r\n                    thisComponent.toastr.error(error, '');\r\n                    thisComponent.showProgress = false;\r\n                },\r\n                function () { // finally\r\n                    thisComponent.showProgress = false;\r\n                });\r\n\r\n    }\r\n    fillUnits(erd: string) {\r\n        if (erd == \"HeightsUnit\") {\r\n            this.csList = this.heightList;\r\n            this.hideUnit = true;\r\n\r\n        }\r\n        else if (erd == \"WeightsUnit\") {\r\n            this.csList = this.weightList;\r\n            this.hideUnit = true;\r\n\r\n        }\r\n        else if (erd == \"VolumesUnit\") {\r\n            this.csList = this.volumeList;\r\n            this.hideUnit = true;\r\n\r\n        }\r\n        else if (erd == \"NumbersUnit\") {\r\n            this.hideUnit = false;\r\n        }\r\n\r\n    }\r\n    fillMesauringUnits(response: any, meunit: any) {\r\n        if (response == \"HeightsUnit\") {\r\n            this.csList = this.heightList;\r\n            this.measuringId = meunit.heightUnitId;\r\n        }\r\n        else if (response == \"WeightsUnit\") {\r\n            this.csList = this.weightList;\r\n            this.measuringId = meunit.weightUnitId;\r\n        }\r\n\r\n        else {\r\n            this.csList = this.volumeList;\r\n            this.measuringId = meunit.volumeUnitId;\r\n        }\r\n\r\n    }\r\n    updateModelWithMeasuringID(): void {\r\n        if (this.model.unitType == \"VolumesUnit\") {\r\n            this.model.volumeUnitId = this.measuringId;\r\n        }\r\n        else if (this.model.unitType == \"HeightsUnit\") {\r\n            this.model.heightUnitId = this.measuringId;\r\n\r\n        }\r\n        else {\r\n            this.model.weightUnitId = this.measuringId;\r\n        }\r\n\r\n\r\n    }\r\n    getModelWithMeasuringID(): any {\r\n        if (this.model.unitType == \"VolumesUnit\") {\r\n            this.model.volumeUnitId = this.measuringId;\r\n            return this.model.volumeUnitId;\r\n        }\r\n        else if (this.model.unitType == \"HeightsUnit\") {\r\n            this.model.heightUnitId = this.measuringId;\r\n            return this.model.heightUnitId;\r\n        }\r\n        else {\r\n            this.model.weightUnitId = this.measuringId;\r\n            return this.model.weightUnitId;\r\n        }\r\n    }\r\n\r\n    getProductsGroupsForTree() {\r\n        let thisComponent = this;\r\n        thisComponent.showProgress = true;\r\n        this.clinicService.getProductsGroupsForTreeView(thisComponent.selectedClinicId)\r\n            .subscribe(\r\n                function (response: any) {\r\n\r\n                    thisComponent.Medical.children = [];\r\n                    thisComponent.NonMedical.children = [];\r\n\r\n                    for (let product of response) {\r\n                        if (product.parent == undefined && product.productGroupType == \"Medical\") {\r\n                            thisComponent.Medical.children.push(product);\r\n                        }\r\n                        else if (product.parent == undefined && product.productGroupType == \"NonMedical\") {\r\n                            thisComponent.NonMedical.children.push(product);\r\n                        }\r\n\r\n                    }\r\n                    thisComponent.treeDataSourceItems.push(thisComponent.Medical);\r\n                    thisComponent.treeDataSourceItems.push(thisComponent.NonMedical);\r\n                    thisComponent.translateObjects.transform(thisComponent.treeDataSourceItems, '', null, thisComponent.lstToTranslated);\r\n\r\n                },\r\n                function (error: any) {\r\n                    thisComponent.toastr.error(error, '');\r\n                    thisComponent.showProgress = false;\r\n                },\r\n                function () { // finally\r\n                    thisComponent.showProgress = false;\r\n                });\r\n\r\n    }\r\n\r\n    expandAll() {\r\n        this.treeDataSourceItems.forEach(node => {\r\n            this.expandRecursive(node, true);\r\n        });\r\n    }\r\n\r\n    collapseAll() {\r\n        this.treeDataSourceItems.forEach(node => {\r\n            this.expandRecursive(node, false);\r\n        });\r\n    }\r\n\r\n    private expandRecursive(node: TreeNode, isExpand: boolean) {\r\n        node.expanded = isExpand;\r\n        if (node.children) {\r\n            node.children.forEach(childNode => {\r\n                this.expandRecursive(childNode, isExpand);\r\n            });\r\n        }\r\n    }\r\n\r\n    nodeSelect(event?: any) {\r\n        event.node.label;\r\n    }\r\n\r\n    nodeUnselect(event: any) {\r\n    }\r\n    displayPopup(node: any) {\r\n        let thisComponent = this;\r\n        if (node.type.toLocaleLowerCase() == \"productsgroup\") {\r\n            this.productGroupId = node.data;\r\n            this.isProductGroupSeleced = true;\r\n            this.isProductSeleced = false;\r\n            this.isRoot = true;\r\n            this.isEdit = true;\r\n            thisComponent.selectedAction = 1;\r\n            // thisComponent.txtHeaderModal = \"ProductGroup\";\r\n            this.txtHeaderModal = this.translate.instant(\"ProductGroup\");\r\n            this.translate.onLangChange.subscribe((event: LangChangeEvent) => {\r\n\r\n                this.txtHeaderModal = this.translate.instant(\"ProductGroup\");\r\n                this.groupName = this.translate.instant(\"ProductsGroup\");\r\n                this.childName = this.translate.instant(\"Product\")\r\n            });\r\n            this.btnServicesGroup.nativeElement.click();\r\n            if (this.productGroupId.toString().toLowerCase() != 'new') {\r\n                this.clinicService.getProductGroupById(this.productGroupId, this.checkParentChildren)\r\n                    .subscribe(\r\n                        function (response: any) {\r\n                            thisComponent.productGroupModel = response;\r\n                            thisComponent.productGroupParentId = thisComponent.productGroupModel.parentGroupId;\r\n                            if (thisComponent.productGroupModel.parentName == \"undefined\") {\r\n                                thisComponent.productGroupParentlabel = thisComponent.productGroupModel.productGroupType;\r\n                            }\r\n                            else if (thisComponent.productGroupModel.parentName != null) {\r\n                                if (thisComponent.selectedLang == 'ar')\r\n                                    thisComponent.productGroupParentlabel = thisComponent.productGroupModel.parentName;\r\n                                else\r\n                                    thisComponent.productGroupParentlabel = thisComponent.productGroupModel.parentNameTranslation;\r\n\r\n                            }\r\n                        },\r\n                        function (error: any) {\r\n                            thisComponent.toastr.error(error, '');\r\n                        },\r\n                        function () {\r\n                            thisComponent.showProgress = false;\r\n                        });\r\n            }\r\n\r\n        } else if (node.type.toLocaleLowerCase() == \"product\") {\r\n            this.isProductGroupSeleced = false;\r\n            this.isProductSeleced = true;\r\n            this.productId = node.data;\r\n            thisComponent.selectedAction = 2;\r\n            //thisComponent.txtHeaderModal = \"Product\";\r\n            this.txtHeaderModal = this.translate.instant(\"Product\");\r\n            this.translate.onLangChange.subscribe((event: LangChangeEvent) => {\r\n\r\n                this.txtHeaderModal = this.translate.instant(\"Product\");\r\n                this.groupName = this.translate.instant(\"ProductsGroup\");\r\n                this.childName = this.translate.instant(\"Product\");\r\n            });\r\n            this.isRoot = true;\r\n            this.isEdit = true;\r\n            this.btnServicesGroup.nativeElement.click();\r\n            ////////////////get service by id\r\n            if (this.productId.toString().toLowerCase() != 'new') {\r\n                this.clinicService.getProductById(this.productId)\r\n                    .subscribe(\r\n                        function (response: any) {\r\n                            thisComponent.model = response;\r\n                            thisComponent.model.unitName == \"NumbersUnit\" ? thisComponent.hideUnit = false : thisComponent.hideUnit = true;\r\n                            if (thisComponent.model.expiryDate)\r\n                                thisComponent.model.expiryDate = thisComponent.utilityClass.getUtcDateFromString(thisComponent.model.expiryDate);\r\n                            if (thisComponent.model.manufacturingDate)\r\n                                thisComponent.model.manufacturingDate = thisComponent.utilityClass.getUtcDateFromString(thisComponent.model.manufacturingDate);\r\n\r\n                            thisComponent.productGroupParentId = thisComponent.model.parentGroupId;\r\n                            thisComponent.fillMesauringUnits(response.unitType, response);\r\n\r\n                            if (thisComponent.selectedLang == 'ar')\r\n                                thisComponent.productGroupParentlabel = thisComponent.model.parentGroupName;\r\n                            else\r\n                                thisComponent.productGroupParentlabel = thisComponent.model.parentGroupNameTranslation;\r\n                        },\r\n                        function (error: any) {\r\n                            thisComponent.toastr.error(error, '');\r\n                        },\r\n                        function () {\r\n                            thisComponent.showProgress = false;\r\n                        });\r\n            }\r\n\r\n\r\n        }\r\n        this.rbSelections = [{ value: 1, text: this.groupName }, { value: 2, text: this.childName }];\r\n        thisComponent.selctedNode = node;\r\n    }\r\n\r\n    passServiceGroupValue(node: any) {\r\n\r\n        let thisComp = this;\r\n        thisComp.clearProductGroupWithParent();\r\n        this.productGroupModel.productGroupType = node.productGroupType;\r\n        this.productType = node.productGroupType;\r\n        thisComp.productGroupParentId = node.data;\r\n        thisComp.productGroupParentlabel = node.label;\r\n        this.selectedAction = 1;\r\n        // thisComp.txtHeaderModal = \"Product Group\";\r\n        this.txtHeaderModal = this.translate.instant(\"ProductGroup\");\r\n        this.translate.onLangChange.subscribe((event: LangChangeEvent) => {\r\n\r\n            this.txtHeaderModal = this.translate.instant(\"ProductGroup\");\r\n            this.groupName = this.translate.instant(\"ProductsGroup\");\r\n            this.childName = this.translate.instant(\"Product\");\r\n        });\r\n        thisComp.isRoot = false;\r\n        this.isProductGroupSeleced = true;\r\n        this.isProductSeleced = false;\r\n\r\n        thisComp.selctedNode = node;\r\n        this.rbSelections = [{ value: 1, text: this.groupName }, { value: 2, text: this.childName }];\r\n    }\r\n    passInitialServiceGroupValue(node: any) {\r\n        let thisComp = this;\r\n        thisComp.clearProductGroupWithParent()\r\n        this.productGroupModel.productGroupType = node.productGroupType;\r\n        this.productType = node.productGroupType;\r\n\r\n        thisComp.productGroupParentId = node.data;\r\n        thisComp.productGroupParentlabel = node.label;\r\n        this.selectedAction = 1;\r\n        //thisComp.txtHeaderModal = \"Product Group\";\r\n        this.txtHeaderModal = this.translate.instant(\"ProductGroup\");\r\n        this.translate.onLangChange.subscribe((event: LangChangeEvent) => {\r\n\r\n            this.txtHeaderModal = this.translate.instant(\"ProductGroup\");\r\n            this.groupName = this.translate.instant(\"ProductsGroup\");\r\n            this.childName = this.translate.instant(\"Product\");\r\n        });\r\n        thisComp.isRoot = true;\r\n        this.isProductGroupSeleced = true;\r\n        this.isProductSeleced = false;\r\n\r\n        thisComp.selctedNode = node;\r\n        this.rbSelections = [{ value: 1, text: this.groupName }, { value: 2, text: this.childName }];\r\n    }\r\n\r\n    changeActivation(node: any, event: any) {\r\n        let thisComponent = this;\r\n\r\n        if (node.type.toLocaleLowerCase() == \"product\") {\r\n            thisComponent.showProgress = true;\r\n            thisComponent.clinicService.updateProductActiveState({ \"id\": node.id, \"isActive\": event.target.checked })\r\n                .subscribe(\r\n                    function (response: any) {\r\n                        if (event.target.checked) {\r\n                            thisComponent.activateParents(node);\r\n                        }\r\n\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () { // finally\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n        } else if (node.type.toLocaleLowerCase() == \"productsgroup\") {\r\n            thisComponent.showProgress = true;\r\n            thisComponent.clinicService.updateProductsGroupActiveState({ \"id\": node.id, \"isActive\": event.target.checked }, thisComponent.checkParentChildren)\r\n                .subscribe(\r\n                    function (response: any) {\r\n                        node.isActive = event.target.checked;\r\n                        if (event.target.checked) {\r\n                            if (node.parent != undefined)\r\n                                thisComponent.activateParents(node.parent);\r\n                        } else {\r\n\r\n                            thisComponent.deActivateChildren(node, false);\r\n                        }\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () { // finally\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n        }\r\n    }\r\n    activateParents(node: any) {\r\n        node.isActive = true;\r\n        if (node.parent != undefined) {\r\n            this.activateParents(node.parent);\r\n        }\r\n    }\r\n    deActivateChildren(node: any, active: any) {\r\n        node.isActive = active;\r\n        if (node.children) {\r\n            node.children.forEach((childNode: any) => {\r\n                this.deActivateChildren(childNode, active);\r\n            });\r\n        }\r\n    }\r\n    onproductGroupIdValue(value: string): void {\r\n        //this.productGroupId = value;\r\n    }\r\n    onproductIdValue(value: string): void {\r\n        this.productId = value;\r\n    }\r\n    onSelectionChange(value: any) {\r\n        this.selectedAction = value;\r\n        if (this.selectedAction == 1) {\r\n            this.isProductGroupSeleced = true;\r\n            this.isProductSeleced = false;\r\n            this.txtHeaderModal = this.translate.instant(\"ProductGroup\");\r\n            this.translate.onLangChange.subscribe((event: LangChangeEvent) => {\r\n\r\n                this.txtHeaderModal = this.translate.instant(\"ProductGroup\");\r\n            });\r\n        }\r\n        else if (this.selectedAction == 2) {\r\n            this.isProductGroupSeleced = false;\r\n            this.isProductSeleced = true\r\n            //this.txtHeaderModal = \" Product\";\r\n            this.txtHeaderModal = this.translate.instant(\"Product\");\r\n            this.translate.onLangChange.subscribe((event: LangChangeEvent) => {\r\n\r\n                this.txtHeaderModal = this.translate.instant(\"Product\");\r\n            });\r\n        }\r\n    }\r\n\r\n    saveProductGroup(): void {\r\n        let thisComponent = this;\r\n        thisComponent.productGroupModel.parentGroupId = thisComponent.productGroupParentId;\r\n        thisComponent.productGroupModel.clinicId = thisComponent.selectedClinicId;\r\n        if (this.productGroupModel.id > 0) {\r\n            //Update\r\n            this.clinicService.updateProductGroup(this.productGroupModel)\r\n                .subscribe(\r\n                    function (response: any) {\r\n                        //  thisComponent.productGroupModel = response;\r\n                        thisComponent.selctedNode.label = response.name;\r\n                        thisComponent.selctedNode.labelTranslation = response.nameTranslation;\r\n                        let msg = thisComponent.translate.instant(\"SavedSuccessfully\");\r\n                        thisComponent.toastr.success(msg, '');\r\n                        thisComponent.clearProductGroupWithParent();\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () {\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n        }\r\n        else {\r\n            this.clinicService.createProductGroup(this.productGroupModel)\r\n                .subscribe(\r\n                    function (response: any) {\r\n                        // thisComponent.productGroupModel = response;\r\n                        if (thisComponent.productGroupParentId == '') {\r\n                            thisComponent.treeDataSourceItems.push(response);\r\n                        } else {\r\n                            thisComponent.selctedNode.children.push(response);\r\n                        }\r\n                        let msg = thisComponent.translate.instant(\"SavedSuccessfully\");\r\n                        thisComponent.toastr.success(msg, '');\r\n                        thisComponent.clearProductGroupWithParent();\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n\r\n                        thisComponent.clearProductGroupWithParent();\r\n\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () {\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n        }\r\n    }\r\n    clearProductGroupWithParent() {\r\n        this.productGroupModel = {};\r\n        this.productGroupId = 'new';\r\n        this.productGroupParentId = '';\r\n        this.productGroupParentlabel = '';\r\n        this.active = false;\r\n        setTimeout(() => this.active = true, 0);\r\n    }\r\n\r\n    ///////////////////////////////////////////////////Product\r\n    saveProduct(): void {\r\n        let thisComponent = this;\r\n        thisComponent.model.parentGroupId = thisComponent.productGroupParentId;\r\n        if (this.model.expiryDate)\r\n            this.model.expiryDate = this.utilityClass.getUtcDate(this.model.expiryDate);\r\n        if (this.model.manufacturingDate)\r\n            this.model.manufacturingDate = this.utilityClass.getUtcDate(this.model.manufacturingDate);\r\n        if (this.model.id > 0) {\r\n            //Update\r\n            this.updateModelWithMeasuringID();\r\n\r\n            this.clinicService.updateProduct(this.model)\r\n                .subscribe(\r\n                    function (response: any) {\r\n                        thisComponent.model = response;\r\n                        thisComponent.selctedNode.label = response.name;\r\n                        thisComponent.selctedNode.labelTranslation = response.nameTranslation;\r\n                        thisComponent.model.expiryDate = thisComponent.utilityClass.getUtcDateFromString(thisComponent.model.expiryDate)\r\n\r\n                        thisComponent.model.manufacturingDate = thisComponent.utilityClass.getUtcDateFromString(thisComponent.model.manufacturingDate)\r\n                        let msg = thisComponent.translate.instant(\"SavedSuccessfully\");\r\n                        thisComponent.toastr.success(msg, '');\r\n                        thisComponent.clearWithParent();\r\n                        thisComponent.btnCloseProduct.nativeElement.click();\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n                        thisComponent.showProgress = false;\r\n                        thisComponent.clearWithParent();\r\n                        thisComponent.btnCloseProduct.nativeElement.click();\r\n                    },\r\n                    function () {\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n        }\r\n        else {\r\n            //if return for edit so it will be reurn measureId\r\n            this.updateModelWithMeasuringID();\r\n            this.clinicService.createProduct(this.model)\r\n                .subscribe(\r\n                    function (response: any) {\r\n                        thisComponent.selctedNode.children.push(response);\r\n                        let msg = thisComponent.translate.instant(\"SavedSuccessfully\");\r\n                        thisComponent.toastr.success(msg, '');\r\n                        thisComponent.clearWithParent();\r\n                        thisComponent.btnCloseProduct.nativeElement.click();\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n                        thisComponent.showProgress = false;\r\n                        thisComponent.clearWithParent();\r\n                        thisComponent.btnCloseProduct.nativeElement.click();\r\n                    },\r\n                    function () {\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n        }\r\n    }\r\n\r\n    clearWithParent() {\r\n        this.model = {};\r\n        this.csList = [];\r\n        this.measuringId = '';\r\n        this.productType = 'new';\r\n        this.productGroupParentId = '';\r\n        this.productGroupParentlabel = '';\r\n        setTimeout(() => this.active = true, 0);\r\n        //this.btnCloseProduct.nativeElement.click();\r\n    }\r\n    cancelProductGroup(): void {\r\n        this.clearProductGroupWithParent();\r\n        this.btnCloseProductsGroup.nativeElement.click();\r\n    }\r\n    cancelProduct(): void {\r\n        this.clearWithParent();\r\n        this.btnCloseProduct.nativeElement.click();\r\n\r\n    }\r\n    close() {\r\n        this.clearProductGroupWithParent();\r\n        this.clearWithParent();\r\n    }\r\n    handleUserInterfaceViews(user: any) {\r\n        if (user.permissions != undefined) {\r\n\r\n            for (let item of user.permissions) {\r\n                if (item.permission.key == this.key.Coding) {\r\n                    if (item.fullControl == true || item.add)\r\n                        this.enableAddRootBtn = true;// then any add button should be enabled\r\n                    if (item.fullControl == true || item.edit)\r\n                        this.enableEditBtn = true;\r\n                    if (item.fullControl == true || item.activate)\r\n                        this.enableActivateBtn = true;\r\n                    if (item.fullControl || item.add || item.edit)\r\n                        this.enableSaveBtn = true;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n}","\r\n<div *ngIf=\"showProgress\">\r\n    <loading></loading>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <clinic-tab [isProductsSelected]='selectProductstTab' *ngIf=\"isClinicAdmin\"></clinic-tab>\r\n    <shared-tabs [isProductsSelected]='selectProductstTab' *ngIf=\"!isClinicAdmin\"></shared-tabs>\r\n    <div class=\"row nopadding\">\r\n        <div class=\"row \">\r\n            <div class=\"NBbreadcrumb\">\r\n                <a>{{ 'Clinic' | translate}}</a> &nbsp;/\r\n                {{ 'Products' | translate}}\r\n            </div>\r\n\r\n        </div>\r\n\r\n\r\n\r\n        <div class=\"\">\r\n            &nbsp;\r\n            <div class=\"row well\">\r\n               <div>\r\n                   <button type=\"button\" class=\"btn btn-primary\" (click)=\"expandAll()\">{{ 'ExpandAll' | translate}}</button>\r\n                   <button type=\"button\" class=\"btn btn-primary\" (click)=\"collapseAll()\">{{ 'CollapseAll' | translate}}</button>\r\n                   <print-page [section]='toPrintDiv'></print-page>\r\n               </div>\r\n                <br />\r\n                <div class=\"row nopadding\">\r\n                    <div class=\"col-md-5 nopadding\">\r\n                        <div class=\"inner-addon left-addon\">\r\n                            <i class=\"glyphicon glyphicon-search\"></i>\r\n                            <input [placeholder]=\"'SearchByNameorCode' | translate\" class=\"inputSearch form-control\" [(ngModel)]=\"filterString\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n           \r\n        </div>\r\n\r\n        <div id=\"print-section\" class=\"\">\r\n            \r\n           <div class=\"row well\">\r\n               <p-tree [value]=\"treeDataSourceItems | filterbynameorcode:filterString : leafType\" selectionMode=\"single\" [(selection)]=\"selectedGroup\" (onSelect)=\"nodeSelect()\" (onNodeSelect)=\"nodeSelect($event)\" #tree>\r\n                   <ng-template let-node pTemplate=\"Medical\">\r\n                       {{selectedLang === 'ar' ?  node.label : node.labelTranslation}}\r\n                       &nbsp; &nbsp;\r\n                       <a #AddServiceGroup data-toggle=\"modal\" data-target=\"#ServicesGroupPopup\" [class.disabled]=\"!enableAddRootBtn && !isClinicAdmin ? true : null\">\r\n                           <img src=\"assets/images/addImage.png\" (click)=\"passInitialServiceGroupValue(node)\" />\r\n                       </a>\r\n                   </ng-template>\r\n                   <ng-template let-node pTemplate=\"NonMedical\">\r\n                       {{selectedLang === 'ar' ?  node.label : node.labelTranslation}}\r\n                       &nbsp; &nbsp;\r\n                       <a #AddServiceGroup data-toggle=\"modal\" data-target=\"#ServicesGroupPopup\" [class.disabled]=\"!enableAddRootBtn && !isClinicAdmin ? true : null\">\r\n                           <img src=\"assets/images/addImage.png\" (click)=\"passInitialServiceGroupValue(node)\" />\r\n                       </a>\r\n                   </ng-template>\r\n                   <ng-template let-node pTemplate=\"Product\">\r\n                       <span class=\"nav-icon\"><i class=\"fa fa-cube\"></i></span>\r\n                       &nbsp;\r\n                       {{selectedLang === 'ar' ?  node.label : node.labelTranslation}}\r\n                       &nbsp; &nbsp;\r\n                       <a [class.disabled]=\"!enableEditBtn && !isClinicAdmin ? true : null\">\r\n                           <i class=\"fa fa-pencil fa-2x\"  (click)=\"displayPopup(node)\"  style=\"color: #32bea6;\"></i>\r\n                       </a>\r\n                       <label>\r\n                           <input id=\"ChkIsActiveInGrid\" name=\"ChkIsActiveInGrid\" class=\"ace ace-switch ace-switch-6\"\r\n                                  type=\"checkbox\" [checked]=\"node.isActive\"\r\n                                  (click)=\"changeActivation(node, $event)\" disabled=\"{{ enableActivateBtn || isClinicAdmin ? '' :'disabled'}}\" />\r\n                           <span class=\"lbl\"></span>\r\n                       </label>\r\n                   </ng-template>\r\n                   <ng-template let-node pTemplate=\"ProductsGroup\">\r\n                       <span class=\"nav-icon\"><i class=\"fa fa-cubes\"></i></span>\r\n                       &nbsp;\r\n                       <span class=\"{{ isSelectedGroupNode ? 'bg-danger' : '' }}\">\r\n                           {{selectedLang === 'ar' ?  node.label : node.labelTranslation}}\r\n                       </span>\r\n                       &nbsp; &nbsp;\r\n                       <a #AddServiceGroup data-toggle=\"modal\" data-target=\"#ServicesGroupPopup\" [class.disabled]=\"!enableAddRootBtn && !isClinicAdmin ? true : null\">\r\n                           <img src=\"assets/images/addImage.png\" (click)=\"passServiceGroupValue(node)\" />\r\n                       </a>\r\n                       &nbsp; &nbsp;\r\n                       <a [class.disabled]=\"!enableEditBtn && !isClinicAdmin ? true : null\">\r\n                           <i class=\"fa fa-pencil fa-2x\" (click)=\"displayPopup(node)\" style=\"color: #32bea6;\"></i>\r\n\r\n                       </a>\r\n                       <label>\r\n                           <input id=\"ChkIsActiveInGrid\" name=\"ChkIsActiveInGrid\" class=\"ace ace-switch ace-switch-6\"\r\n                                  type=\"checkbox\" [checked]=\"node.isActive\"\r\n                                  (click)=\"changeActivation(node, $event)\" disabled=\"{{ enableActivateBtn || isClinicAdmin ? '' :'disabled'}}\" />\r\n                           <span class=\"lbl\"></span>\r\n                       </label>\r\n                   </ng-template>\r\n               </p-tree>\r\n\r\n           </div>\r\n        </div>\r\n        {{titl}}\r\n\r\n    </div>\r\n</div>\r\n\r\n<!-- Products group Modal -->\r\n<button type=\"button\" data-toggle=\"modal\" data-target=\"#ServicesGroupPopup\" style=\"display:none\" #btnServicesGroup></button>\r\n<div id=\"ServicesGroupPopup\" #ServicesGroupPopup [hidden]=\"hideModal\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog width75percent\">\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n            <!-- Products group Modal -->\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" #btnCloseProductsGroup data-dismiss=\"modal\" *ngIf=\"isProductGroupSeleced\" (click)=\"close()\">&times;</button>\r\n                <button type=\"button\" #btnCloseProduct class=\"close\" data-dismiss=\"modal\" *ngIf=\"isProductSeleced\" (click)=\"close()\">&times;</button>\r\n                <h4 class=\"modal-title\">{{txtHeaderModal}}</h4>\r\n            </div>\r\n\r\n            <form *ngIf=\"active\" class=\"form-horizontal\" name=\"servicegroupForm\" #servicegroupForm=\"ngForm\">\r\n                <div class=\"form-group\">\r\n                    <div class=\"col-sm-offset-4 col-md-6\" *ngIf=\"!isRoot\">\r\n                        <table>\r\n                            <tr>\r\n                                <td *ngFor=\"let item of rbSelections; let idx = index\">\r\n                                    <input type=\"radio\" name=\"radiogroup\" [value]=\"item.value\"\r\n                                           [checked]=\"item.value == selectedAction\" #i (change)=\"onSelectionChange(i.value)\">{{item.text| translate}}\r\n                                </td>\r\n                            </tr>\r\n                        </table>\r\n                    </div>\r\n                    <div class=\"col-sm-offset-3 col-md-6\" *ngIf=\"isRoot\">\r\n                        <table>\r\n                            <tr>\r\n                                <td *ngFor=\"let item of rbSelections; let idx = index\">\r\n                                    <input type=\"radio\" name=\"radiogroup\" [value]=\"item.value\"\r\n                                           [checked]=\"item.value == selectedAction\" #i (change)=\"onSelectionChange(i.value)\" disabled>{{item.text| translate}}\r\n                                </td>\r\n                            </tr>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                    <div *ngIf=\"isProductGroupSeleced\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"txtServiceGroupParentName\" class=\"control-label col-md-3\">{{ 'ParentGroup' | translate}}</label>\r\n                            <div class=\"col-md-9\">\r\n                                <input id=\"txtServiceGroupParentName\" name=\"txtServiceGroupParentName\" class=\"form-control\" value=\"{{productGroupParentlabel}}\" disabled />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label for=\"txtServiceGroupName\" class=\"control-label col-md-3\"> {{ 'ArabicName' | translate}}</label>\r\n                            <div class=\"col-md-9\">\r\n                                <input id=\"txtServiceGroupName\" name=\"txtServiceGroupName\" class=\"form-control\" [(ngModel)]='productGroupModel.name' #txtServiceGroupName=\"ngModel\" required />\r\n                                <div [hidden]=\"txtServiceGroupName.valid || txtServiceGroupName.pristine\" class=\"alert alert-danger\">\r\n                                    {{ 'RequiredField' | translate}}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label for=\"txtServiceGroupNameTranslation\" class=\"control-label col-md-3\"> {{ 'EnglishName' | translate}}</label>\r\n                            <div class=\"col-md-9\">\r\n                                <input id=\"txtServiceGroupNameTranslation\" name=\"txtServiceGroupNameTranslation\" class=\"form-control\" [(ngModel)]='productGroupModel.nameTranslation' #txtServiceGroupNameTranslation=\"ngModel\" required />\r\n                                <div [hidden]=\"txtServiceGroupNameTranslation.valid || txtServiceGroupNameTranslation.pristine\" class=\"alert alert-danger\">\r\n                                    {{ 'RequiredField' | translate}}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div class=\"form-group\">\r\n                            <label for=\"txtRemark\" class=\"control-label col-md-3\"> {{ 'Remark' | translate}}</label>\r\n                            <div class=\"col-md-6\">\r\n                                <textarea id=\"txtRemark\" name=\"txtRemark\" class=\"form-control\" [(ngModel)]='productGroupModel.description' #txtRemark=\"ngModel\"></textarea>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div *ngIf=\"isProductSeleced\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"txtServiceParentName\" class=\"control-label col-md-2\">{{ 'ParentGroup' | translate}}</label>\r\n                            <div class=\"col-md-10\">\r\n                                <input id=\"txtServiceParentName\" name=\"txtServiceParentName\" class=\"form-control\" [ngModel]='productGroupParentlabel' disabled />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label for=\"txtServiceCode\" class=\"control-label col-md-2\"> {{ 'Code' | translate}}</label>\r\n                            <div class=\"col-md-4\">\r\n                                <input id=\"txtServiceCode\" name=\"txtServiceCode\" class=\"form-control\" [(ngModel)]='model.code' #txtServiceCode=\"ngModel\" required />\r\n                                <div [hidden]=\"txtServiceCode.valid || txtServiceCode.pristine\" class=\"alert alert-danger\">\r\n                                    {{ 'RequiredField' | translate}}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label for=\"txProductControlled\" class=\"control-label col-md-2\"> {{ 'Controlled' | translate}}</label>\r\n                            <div class=\"col-md-4\">\r\n                                <label>\r\n                                    <input id=\"txProductControlled\" name=\"txProductControlled\" class=\"ace ace-switch ace-switch-6\"\r\n                                           type=\"checkbox\" [(ngModel)]='model.controlled' #txProductControlled=\"ngModel\" />\r\n                                    <span class=\"lbl\"></span>\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label for=\"txtName\" class=\"control-label col-md-2\"> {{ 'ArabicName' | translate}}</label>\r\n                            <div class=\"col-md-10\">\r\n                                <input id=\"txtName\" name=\"txtName\" class=\"form-control\" [(ngModel)]='model.name' #txtName=\"ngModel\" required />\r\n                                <div [hidden]=\"txtName.valid || txtName.pristine\" class=\"alert alert-danger\">\r\n                                    {{ 'RequiredField' | translate}}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label for=\"txtNameTranslation\" class=\"control-label col-md-2\">{{ 'EnglishName' | translate}}</label>\r\n                            <div class=\"col-md-10\">\r\n                                <input id=\"txtNameTranslation\" name=\"txtNameTranslation\" class=\"form-control\" [(ngModel)]='model.nameTranslation'\r\n                                       #txtNameTranslation=\"ngModel\" required />\r\n                                <div [hidden]=\"txtNameTranslation.valid || txtNameTranslation.pristine\" class=\"alert alert-danger\">\r\n                                    {{ 'RequiredField' | translate}}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label for=\"minLevel\" class=\"control-label col-md-2\"> {{ 'MinLevel' | translate}}</label>\r\n                            <div class=\"col-md-2\">\r\n                                <input type=\"text\" required min=\"1\" step=\"1\" pattern=\"\\d+\" id=\"minLevel\" name=\"minLevel\" class=\"form-control\" [(ngModel)]='model.minLevel' #minLevel=\"ngModel\" />\r\n                                <div [hidden]=\"minLevel.valid || minLevel.pristine\" class=\"alert alert-danger\">\r\n                                    {{ 'RequiredField' | translate}}\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-2\"></div>\r\n                            <label for=\"maxLevel\" class=\"control-label col-md-2\"> {{ 'MaxLevel' | translate}}</label>\r\n                            <div class=\"col-md-2\">\r\n                                <input type=\"text\" min=\"1\" required step=\"1\" pattern=\"\\d+\" id=\"maxLevel\" name=\"maxLevel\" class=\"form-control\" [(ngModel)]='model.maxLevel' #maxLevel=\"ngModel\" />\r\n                                <div [hidden]=\"maxLevel.valid || maxLevel.pristine\" class=\"alert alert-danger\">\r\n                                    {{ 'RequiredField' | translate}}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n\r\n                            <label for=\"expiryDate\" class=\"control-label col-md-2\">  {{ 'ExpiryDate' | translate}}</label>\r\n                            <div class=\"col-md-4\">\r\n                                <p-calendar [(ngModel)]=\"model.expiryDate\" [monthNavigator]=\"true\" [yearNavigator]=\"true\" dateFormat=\"dd/mm/yy\"\r\n                                            [showIcon]=\"true\" [ngModelOptions]=\"{standalone: true}\" yearRange=\"2000:2050\"></p-calendar>\r\n                            </div>\r\n\r\n                            <label for=\"expiryDate\" class=\"control-label col-md-2\"> {{ 'ManufacturingDate' | translate}} </label>\r\n                            <div class=\"col-md-4\">\r\n                                <p-calendar [(ngModel)]=\"model.manufacturingDate\" [monthNavigator]=\"true\" [yearNavigator]=\"true\" dateFormat=\"dd/mm/yy\"\r\n                                            [showIcon]=\"true\" [ngModelOptions]=\"{standalone: true}\" yearRange=\"2000:2050\"></p-calendar>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label for=\"ddlUnitType\" class=\"control-label col-md-2\">{{ 'Units' | translate}} </label>\r\n                            <div class=\"col-md-4\">\r\n                                <select class=\"form-control\" #dMeasureType=\"ngModel\" #ddlUnitType (change)=\"fillUnits(ddlUnitType.value)\" id=\"ddlUnitType\" name=\"ddlUnitType\" [(ngModel)]=\"model.unitType\" required>\r\n                                    <option *ngFor=\"let item of unitList  | translateObjects\" [value]=\"item.value\">{{item.text| translate}}</option>\r\n                                </select>\r\n                                <div [hidden]=\"dMeasureType.valid || dMeasureType.pristine\" class=\"alert alert-danger\">\r\n                                    {{ 'Select' | translate}}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group\" *ngIf=\"hideUnit\">\r\n                            <label for=\"ddlMeasureType\" class=\"control-label col-md-2 \">{{ 'MeasuringUnit' | translate}} </label>\r\n                            <div class=\"col-md-4\">\r\n\r\n                                <select class=\"form-control\" #ddlMeasureType=\"ngModel\" [(ngModel)]=\"measuringId\" id=\"ddlMeasureType\" name=\"ddlMeasureType\">\r\n                                    <option *ngFor=\"let item of csList  | translateObjects\" [value]=\"item.id\">{{item.name}}</option>\r\n                                </select>\r\n                                <div [hidden]=\"ddlMeasureType.valid || ddlMeasureType.pristine\" class=\"alert alert-danger\">\r\n                                    {{ 'Select' | translate}}\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label for=\"ddlVendor\" class=\"control-label col-md-2\"> {{ 'Vendor' | translate}} </label>\r\n                            <div class=\"col-md-4\">\r\n                                <select class=\"form-control\" #ddlVendor=\"ngModel\" [(ngModel)]=\"model.vendorId\" name=\"ddlVendor\" id=\"ddlVendor\">\r\n                                    <option *ngFor=\"let item of vendors  | translateObjects\" [value]=\"item.id\">{{item.name}}</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label for=\"prodRemark\" class=\"control-label col-md-2\"> {{ 'Remark' | translate}} </label>\r\n                            <div class=\"col-md-6\">\r\n                                <textarea id=\"prodRemark\" name=\"prodRemark\" class=\"form-control\" [(ngModel)]='model.description' #prodRemark=\"ngModel\"></textarea>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div class=\"modal-footer\">\r\n                    <div class=\"text-center\">\r\n                        <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" (click)=\"saveProductGroup()\" *ngIf=\"isProductGroupSeleced\" [disabled]=\"!servicegroupForm.valid  ||(!enableSaveBtn && !isClinicAdmin)\">{{ 'Save' | translate}} </button>\r\n                        <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" *ngIf=\"isProductGroupSeleced\" (click)=\"cancelProductGroup()\">{{ 'Cancel' | translate}} </button>\r\n                        <button type=\"button\" class=\"btn btn-primary\" (click)=\"saveProduct()\" *ngIf=\"isProductSeleced\" [disabled]=\"!servicegroupForm.valid  ||(!enableSaveBtn && !isClinicAdmin)\">{{ 'Save' | translate}} </button>\r\n                        <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" *ngIf=\"isProductSeleced\" (click)=\"cancelProduct()\">{{ 'Cancel' | translate}}</button>\r\n\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\nimport { ClinicService } from '../../shared/clinic.service';\r\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\r\n\r\nimport { AccountService } from '../../../security/shared/account.service';\r\nimport { UserPermissions } from '../../../classes/user-permissions.class';\r\nimport { PermissionKeyEnum } from '../../../shared/shared/permission-key.enum';\r\n@Component({\r\n\r\n    selector: 'create-purchase-order',\r\n    templateUrl: './create-purchase-order.component.html'\r\n})\r\n\r\n\r\n\r\nexport class CreatePurchaseOrder implements OnInit {\r\n\r\n    lang: string = 'ar';\r\n    selectPurchasingTab: boolean = true;\r\n    purchaseOrderList: any[] = [];\r\n    showProgress = false;\r\n    controlsCount: number = 1;\r\n    model: any = {};\r\n    productsList: any = [];\r\n    vendorsList = [];\r\n    clinicId!: any;\r\n    clinicAdminId!: any;\r\n    active = true;\r\n    purchaseItem: any = {};\r\n    orderId!: any;\r\n    useCurrent!: any;\r\n    isCurrent = false;\r\n    productId!: any;\r\n    product: any;\r\n    userType: string = '';\r\n    isClinicAdmin: boolean = false;\r\n    userPermisions: UserPermissions = new UserPermissions();\r\n    key: PermissionKeyEnum = new PermissionKeyEnum();\r\n    enableSaveBtn: boolean = false;\r\n    enableSaveAndSendBtn: boolean = false;\r\n    constructor(public toastr: ToastrService\r\n        , private localStorage: LocalStorageService\r\n        , private clinicService: ClinicService\r\n        , private router: Router\r\n        , private _route: ActivatedRoute\r\n        , public translate: TranslateService\r\n        , public accountService: AccountService\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n\r\n        this.lang = this.localStorage.retrieve('selectedlanguage');\r\n\r\n        let thisComponent = this;\r\n        this.purchaseOrderList = [];\r\n        let id = this._route.snapshot.params['id'];\r\n        thisComponent.orderId = `${id}`;\r\n        let current = this._route.snapshot.params['bool'];\r\n        let proId = this._route.snapshot.params['proId'];\r\n        thisComponent.productId = proId;\r\n        thisComponent.useCurrent = current;\r\n        thisComponent.clinicId = thisComponent.localStorage.retrieve(\"ClinicID\");\r\n        thisComponent.clinicAdminId = thisComponent.localStorage.retrieve(\"UserID\");\r\n        this.userType = this.localStorage.retrieve(\"UserType\");\r\n        if (this.userType == 'ClinicAdmin')\r\n            this.isClinicAdmin = true;\r\n\r\n        thisComponent.getPurchasingOrderWrapper();\r\n        thisComponent.getProductsUnderClinic();\r\n        //   thisComponent.getProductById();\r\n        if (thisComponent.orderId.toLowerCase() != 'new') {\r\n            thisComponent.loadPurchasingOrderModel();\r\n        }\r\n\r\n        if (!this.isClinicAdmin) {\r\n            if (this.accountService.userPermision._isScalar != undefined)\r\n                this.accountService.userPermision.subscribe((item: any) => this.handleUserInterfaceViews(item));\r\n            else\r\n                this.handleUserInterfaceViews(this.accountService.userPermision);\r\n        }\r\n        //this.getProductsUnderClinic();\r\n    }\r\n    loadPurchasingOrderModel() {\r\n        let thisComponent = this;\r\n        this.clinicService.getPurchasingOrderById(thisComponent.orderId)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    thisComponent.model = response;\r\n                    thisComponent.purchaseOrderList = thisComponent.model.purchaseItems;\r\n                    if (thisComponent.useCurrent == 1) {\r\n                        thisComponent.updateOrderdQuantitywithCurrent();\r\n                    }\r\n                },\r\n                function (error: any) {\r\n                    thisComponent.toastr.error(error, '');\r\n                },\r\n                function () {\r\n                    thisComponent.showProgress = false;\r\n                });\r\n    }\r\n\r\n    updateOrderdQuantitywithCurrent() {\r\n        let vm = this;\r\n\r\n        for (let item of vm.purchaseOrderList) {\r\n            item.onHandQuantity = item.currentOnHandQuantity;\r\n            item.orderedQuantity = item.currentOrderedQuantity;\r\n            if (item.orderedQuantity < 0)\r\n                item.orderedQuantity = 0;\r\n\r\n            item.maxLevel = item.currentMaxLevel;\r\n            item.orderOutQuantity = item.currentOrderOutQuantity;\r\n\r\n        }\r\n    }\r\n\r\n    getPurchasingOrderWrapper() {\r\n        let thisComponent = this;\r\n        thisComponent.showProgress = true;\r\n        this.clinicService.getPurchasingOrderWrapper(thisComponent.clinicId)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    thisComponent.vendorsList = response.vendors;\r\n                    // thisComponent.productsList = response.products;\r\n\r\n                },\r\n                function (error: any) {\r\n                    thisComponent.toastr.error(error, '');\r\n                    thisComponent.showProgress = false;\r\n                },\r\n                function () { // finally\r\n                    thisComponent.showProgress = false;\r\n                });\r\n    }\r\n\r\n    getProductsUnderClinic() {\r\n        let thisComponent = this;\r\n        thisComponent.showProgress = true;\r\n        this.clinicService.getProductsUnderClinic(thisComponent.clinicId)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    thisComponent.productsList = response;\r\n                    if (thisComponent.productId > 0) {\r\n                        var product = thisComponent.productsList.find((p: any) => p.id == thisComponent.productId)\r\n                        if (thisComponent.model != undefined) {\r\n                            thisComponent.model.vendorId = product.vendorId;\r\n                            thisComponent.purchaseItem.productId = product.id;\r\n                            thisComponent.purchaseItem.onHandQuantity = product.onHandQuantity;\r\n                            thisComponent.purchaseItem.unit = thisComponent.getProductUnitType(product);//check unit val unitName\r\n                            thisComponent.purchaseItem.orderedQuantity = product.orderedQuantity;\r\n                            thisComponent.purchaseOrderList.push(thisComponent.purchaseItem);\r\n                        }\r\n\r\n                    }\r\n\r\n                },\r\n                function (error: any) {\r\n                    thisComponent.toastr.error(error, '');\r\n                    thisComponent.showProgress = false;\r\n                },\r\n                function () { // finally\r\n                    thisComponent.showProgress = false;\r\n                });\r\n    }\r\n    addPurchaseOrder() {\r\n        this.purchaseItem = {};\r\n        this.purchaseOrderList.push(this.purchaseItem);\r\n        this.controlsCount++;\r\n    }\r\n    getControlNumber() {\r\n        return this.controlsCount; // GUID.newGuid();\r\n    }\r\n    deleteServiceBeneficiary(index: number, itemId: string): void {\r\n        this.purchaseOrderList.splice(index, 1);\r\n\r\n        if (itemId != null && itemId != undefined && itemId != '')\r\n            this.deletePurchaseItemFromDB(itemId);\r\n\r\n    }\r\n    deletePurchaseItemFromDB(itemId: string) {\r\n        let vm = this;\r\n        this.clinicService.deletePurchaseItem(itemId)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    let msg = vm.translate.instant(\"DeletedSuccessfully\");\r\n                    vm.toastr.success(msg, '');\r\n\r\n                    // remove delete object from collection\r\n                    //var selectedObject = vm.sessionsList.find(o => o.id == vm.selectSessionToDelete);\r\n                    //var index = vm.appointmentsList.indexOf(selectedObject);\r\n                    //if (index > -1)\r\n                    //    vm.appointmentsList.splice(index, 1);\r\n\r\n                    // clear fields\r\n                    //  vm.clear();\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                    vm.showProgress = false;\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n\r\n    }\r\n    updatePurchasingOrderWithUser(source: any[]) {\r\n        let vm = this;\r\n        let total = 0;\r\n        for (let item of source) {\r\n            item.securityUserId = vm.clinicAdminId;\r\n            item.net = item.purchasingPrice * item.orderedQuantity;\r\n            //item.product = null;\r\n            total += item.net\r\n        }\r\n        vm.model.totalPrice = total;\r\n\r\n    }\r\n    setOldOrderdQuantity(item: any) {\r\n        if (this.orderId.toLowerCase() == 'new')\r\n            item.oldOrderedQuantity = item.orderedQuantity;\r\n    }\r\n    createOrder(): void {\r\n        let thisComponent = this;\r\n        thisComponent.showProgress = true;\r\n        // thisComponent.model.securityUserId = thisComponent.clinicAdminId;\r\n        thisComponent.updatePurchasingOrderWithUser(thisComponent.purchaseOrderList);\r\n        thisComponent.model.purchaseItems = thisComponent.purchaseOrderList;\r\n        thisComponent.model.securityUserId = thisComponent.clinicAdminId;\r\n        thisComponent.model.clinicId = thisComponent.clinicId;\r\n        if (thisComponent.purchaseOrderList.length > 0 &&\r\n            isNaN(thisComponent.orderId) && thisComponent.orderId.toLowerCase() == 'new') {\r\n\r\n            this.clinicService.createPurchasingOrder(thisComponent.model)\r\n                .subscribe(\r\n                    function (response: any) {\r\n\r\n                        thisComponent.model = response;\r\n                        thisComponent.purchaseOrderList = thisComponent.model.purchaseItems;\r\n                        let msg = thisComponent.translate.instant(\"SavedSuccessfully\");\r\n                        thisComponent.toastr.success(msg, '');\r\n                        thisComponent.navigateToOrdersList();\r\n\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () {\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n\r\n        }\r\n        else {\r\n\r\n            //Update\r\n\r\n            this.clinicService.editPurchasingOrder(thisComponent.model)\r\n                .subscribe(\r\n                    function (response: any) {\r\n                        let msg = thisComponent.translate.instant(\"SavedSuccessfully\");\r\n                        thisComponent.toastr.success(msg, '');\r\n                        thisComponent.model = response;\r\n                        thisComponent.purchaseOrderList = thisComponent.model.purchaseItems;\r\n                        thisComponent.navigateToOrdersList();\r\n\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () {\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n        }\r\n    }\r\n    createAndSendOrder(): void {\r\n        let thisComponent = this;\r\n        thisComponent.showProgress = true;\r\n        // thisComponent.model.securityUserId = thisComponent.clinicAdminId;\r\n        thisComponent.updatePurchasingOrderWithUser(thisComponent.purchaseOrderList);\r\n        thisComponent.model.purchaseItems = thisComponent.purchaseOrderList;\r\n        thisComponent.model.securityUserId = thisComponent.clinicAdminId;\r\n        thisComponent.model.clinicId = thisComponent.clinicId;\r\n        if (thisComponent.purchaseOrderList.length > 0 &&\r\n            isNaN(thisComponent.orderId) && thisComponent.orderId.toLowerCase() == 'new') {\r\n\r\n            this.clinicService.createAndSendPurchasingOrder(thisComponent.model)\r\n                .subscribe(\r\n                    function (response: any) {\r\n\r\n                        thisComponent.model = response;\r\n                        thisComponent.purchaseOrderList = thisComponent.model.purchaseItems;\r\n                        let msg = thisComponent.translate.instant(\"SavedSuccessfully\");\r\n                        thisComponent.toastr.success(msg, '');\r\n                        thisComponent.navigateToOrdersList();\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () {\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n\r\n        }\r\n        else {\r\n\r\n            //Update\r\n            this.clinicService.editAndSendPurchasingOrder(thisComponent.model)\r\n                .subscribe(\r\n                    function (response: any) {\r\n                        let msg = thisComponent.translate.instant(\"SavedSuccessfully\");\r\n                        thisComponent.toastr.success(msg, '');\r\n                        thisComponent.model = response;\r\n                        thisComponent.purchaseOrderList = thisComponent.model.purchaseItems;\r\n                        thisComponent.navigateToOrdersList();\r\n\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () {\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n        }\r\n    }\r\n\r\n    getProductUnitType(product: any): string {\r\n        let unitType = '';\r\n        if (product) {\r\n            if (product.unitName || product.unitNameTranslation) {\r\n                if (this.lang == 'ar')\r\n                    unitType = product.unitName;\r\n                else\r\n                    unitType = product.unitNameTranslation;\r\n            }\r\n            else {\r\n                unitType = this.translate.instant(product.unitType);\r\n            }\r\n        }\r\n        return unitType;\r\n    }\r\n\r\n    setOtherAttribute(value: any, index: any) {\r\n        let vm = this;\r\n        var product = vm.productsList.find((p: any) => p.id == value);\r\n        vm.purchaseOrderList[index].onHandQuantity = product.onHandQuantity;\r\n\r\n        vm.purchaseOrderList[index].unit = this.getProductUnitType(product);\r\n        vm.purchaseOrderList[index].orderedQuantity = product.orderedQuantity;\r\n        vm.purchaseOrderList[index].orderOutQuantity = product.orderOutQuantity;\r\n        vm.purchaseOrderList[index].maxLevel = product.maxLevel;\r\n    }\r\n\r\n    navigateToOrdersList() {\r\n        this.router.navigate(['/clinic/purchasing/all', this.clinicId]);\r\n    }\r\n\r\n    calculateNet(index: any) {\r\n        let vm = this;\r\n        if (vm.purchaseOrderList[index].orderedQuantity > 0)\r\n            vm.purchaseOrderList[index].net = vm.purchaseOrderList[index].orderedQuantity * vm.purchaseOrderList[index].purchasingPrice;\r\n    }\r\n\r\n    handleUserInterfaceViews(user: any) {\r\n        if (user.permissions != undefined) {\r\n\r\n            for (let item of user.permissions) {\r\n                if ((item.permission.key == this.key.InternalPurchaseRequest\r\n                    || item.permission.key == this.key.ExternalPurchaseRequest)\r\n                    && (item.fullControl || item.add || item.edit))\r\n                    this.enableSaveBtn = true;\r\n\r\n                if (item.permission.key == this.key.ExternalPurchaseRequest && (item.fullControl || item.add || item.edit))\r\n                    this.enableSaveAndSendBtn = true;\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n\r\n","<div *ngIf=\"showProgress\">\r\n    <loading></loading>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <clinic-tab [isPurchasingSelected]='selectPurchasingTab' *ngIf=\"isClinicAdmin\"></clinic-tab>\r\n    <shared-tabs [isPurchasingSelected]='selectPurchasingTab' *ngIf=\"!isClinicAdmin\"></shared-tabs>\r\n    <div class=\"row nopadding\">\r\n        <div class=\"row NBbreadcrumb\">\r\n            <a>{{ 'Clinic' | translate}}</a> &nbsp;/\r\n            {{ 'PurchaseOrders' | translate}}\r\n        </div>\r\n        <div class=\"row well\">\r\n            <form *ngIf=\"active\" class=\"form-horizontal\" name=\"orderForm\" #orderForm=\"ngForm\">\r\n                <div class=\"row text-center\">\r\n                    <button class=\"btn btn-primary\" [disabled]=\"!orderForm.valid ||(!enableSaveBtn && !isClinicAdmin)\" (click)=\"createOrder()\">{{ 'Save' | translate}}</button>\r\n                    <button class=\"btn btn-primary\" [disabled]=\"!orderForm.valid ||(!enableSaveAndSendBtn && !isClinicAdmin)\" (click)=\"createAndSendOrder()\">{{ 'SaveandSend' | translate}}</button>\r\n                    <button class=\"btn btn-primary\" (click)=\"navigateToOrdersList()\">{{ 'Back' | translate}}</button>\r\n                </div>\r\n                <br />\r\n                <div class=\"form-group\">\r\n                    <label for=\"ddlVendors\" class=\"control-label col-md-4\"> {{ 'Vendor' | translate}}</label>\r\n                    <div class=\"col-md-4\">\r\n                        <select class=\"form-control\" name=\"ddlVendors\" [(ngModel)]=\"model.vendorId\" required>\r\n                            <option value=\"\">{{ 'Select' | translate}}</option>\r\n                            <option *ngFor=\"let vendor of vendorsList | translateObjects\" [value]=\"vendor.id\">{{vendor.name}}</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <table class=\"table table-responsive table-hover table-bordered\">\r\n                    <thead class=\"alert alert-info\">\r\n                        <tr>\r\n                            <th class=\"text-center\" width=\"25%\">{{ 'Item' | translate}}</th>\r\n                            <th class=\"text-center\">{{ 'OnhandQuantity' | translate}}</th>\r\n                            <th class=\"text-center\">{{ 'Unit' | translate}}</th>\r\n                            <th class=\"text-center\">{{ 'PurchasePrice' | translate}}</th>\r\n                            <th class=\"text-center\">{{ 'OrderdQuant' | translate}}</th>\r\n                            <th class=\"text-center\">{{ 'Net' | translate}}</th>\r\n                            <th class=\"text-center\">{{ 'Remark' | translate}}</th>\r\n                            <th class=\"text-center\">{{ 'Delete' | translate}}</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor=\"let order of purchaseOrderList; let i=index\">\r\n                            <td width=\"25%\">\r\n                                <select class=\"form-control\" name=\"ddlProducts{{i}}{{getControlNumber()}}\" [(ngModel)]=\"order.productId\" (change)=\"setOtherAttribute(p.value,i)\" #p required>\r\n                                    <option *ngFor=\"let product of productsList | translateObjects\" [value]=\"product.id\">{{product.name}}</option>\r\n                                </select>\r\n\r\n                            </td>\r\n\r\n                            <td>\r\n                                <input type=\"text\" class=\"form-control\" name=\"txtOnHandQuantity{{i}}{{getControlNumber()}}\" [(ngModel)]=\"order.onHandQuantity\" disabled=\"disabled\" />\r\n                            </td>\r\n\r\n                            <td>\r\n                                <input type=\"text\" class=\"form-control\" name=\"txtUnit{{i}}{{getControlNumber()}}\" value=\"{{ order.unit}}\" disabled=\"disabled\" />\r\n                            </td>\r\n                            <td>\r\n                                <input type=\"number\" min=\"1\" step=\"1\" class=\"form-control\" name=\"txtPurchasingPrice{{i}}{{getControlNumber()}}\" [(ngModel)]=\"order.purchasingPrice\" on-keyup=\"calculateNet(i)\" />\r\n                            </td>\r\n                            <td>\r\n                                <input type=\"number\" min=\"1\" step=\"1\" class=\"form-control\" name=\"txtOrderedQuantity{{i}}{{getControlNumber()}}\" [(ngModel)]=\"order.orderedQuantity\" on-keyup=\"calculateNet(i)\" title=\"current is{{order.currentOrderedQuantity}}\" />\r\n                            </td>\r\n\r\n                            <td>\r\n                                <input type=\"text\" class=\"form-control\" name=\"txtTotalPrice{{i}}{{getControlNumber()}}\" [(ngModel)]=\"order.net\" disabled=\"disabled\" />\r\n                            </td>\r\n                            <td>\r\n                                <textarea class=\"form-control\" name=\"txtRemark{{i}}{{getControlNumber()}}\" [(ngModel)]=\"order.description\"></textarea>\r\n                            </td>\r\n                            <td class=\"text-center\">\r\n                                <a class=\"pointer\"\r\n                                   (click)=\"deleteServiceBeneficiary(i,order.id)\">\r\n                                    <img src=\"assets/images/DeleteRed.png\" />\r\n                                </a>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                    <tfoot>\r\n                        <tr class=\"alert alert-info\">\r\n                            <th colspan=\"9\">\r\n                                <div style=\"float:left;\">\r\n                                    <a class=\"pointer\" (click)=\"addPurchaseOrder()\">\r\n                                        <img src=\"assets/images/addImage.png\" />\r\n                                        <span style=\"text-decoration:underline;\">\r\n                                            {{ 'AddNew' | translate}}\r\n                                        </span>\r\n                                    </a>\r\n                                </div>\r\n                            </th>\r\n                        </tr>\r\n\r\n                    </tfoot>\r\n                </table>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\nimport { ClinicService } from '../../shared/clinic.service';\r\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\r\n\r\nimport { AccountService } from '../../../security/shared/account.service';\r\nimport { UserPermissions } from '../../../classes/user-permissions.class';\r\nimport { PermissionKeyEnum } from '../../../shared/shared/permission-key.enum';\r\nimport { Table } from 'primeng/table';\r\n@Component({\r\n\r\n    selector: 'purchase-order-list',\r\n    templateUrl: './purchase-order-list.component.html'\r\n})\r\n\r\nexport class PurchaseOrderList {\r\n    purchasingOrderListDiv: string = 'purchasingOrderListPrintDiv'\r\n    selectPurchasingTab: boolean = true;\r\n    filterString!: string;\r\n    clinicId = \"0\";\r\n    ordersList!: any[];\r\n    showProgress = false;\r\n    userType: string = '';\r\n    isClinicAdmin: boolean = false;\r\n    userPermisions: UserPermissions = new UserPermissions();\r\n    key: PermissionKeyEnum = new PermissionKeyEnum();\r\n    enableNewBtn: boolean = false;\r\n    enableDetailsLink: boolean = false;\r\n    enableResendLink: boolean = false;\r\n    enableReceiveLink: boolean = false;\r\n    lstToTranslated: string[] = [];\r\n    itemsMsge = '';\r\n    isEqualed: boolean | undefined;\r\n    model: any = {};\r\n    @ViewChild('btnConfirm') btnConfirm!: ElementRef;\r\n    display: boolean = false;\r\n    @ViewChild('dt') table!: Table;\r\n    constructor(public toastr: ToastrService\r\n        , private storage: LocalStorageService\r\n        , private router: Router\r\n        , private clinicService: ClinicService\r\n        , public translate: TranslateService\r\n        , public accountService: AccountService\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        this.lstToTranslated = ['vendorName', 'vendorNameTranslation', 'userName', 'userNameTranslation'];\r\n        let vm = this;\r\n        this.clinicId = this.storage.retrieve(\"ClinicID\");\r\n        this.userType = this.storage.retrieve(\"UserType\");\r\n        if (this.userType == 'ClinicAdmin')\r\n            this.isClinicAdmin = true;\r\n        vm.showProgress = true;\r\n        vm.loadOrdersList();\r\n\r\n        if (!this.isClinicAdmin) {\r\n            if (this.accountService.userPermision._isScalar != undefined)\r\n                this.accountService.userPermision.subscribe((item: any) => this.handleUserInterfaceViews(item));\r\n            else\r\n                this.handleUserInterfaceViews(this.accountService.userPermision);\r\n        }\r\n    }\r\n\r\n    viewOrderDetails(id: string): void {\r\n\r\n        // store selected company ID\r\n        this.storage.store(\"OrderId\", id);\r\n\r\n        //navigate to current URL routerLink=\"/clinicPurchasing/orderDetails/1\"\r\n        this.router.navigate(['/clinic/purchasing/orderDetails', id]);\r\n    }\r\n\r\n    //addServicePackage(): void {\r\n    //     store selected company ID\r\n    //    this.storage.store(\"ServicePackageID\", 'new');\r\n\r\n    //    navigate to current URL\r\n    //    this.router.navigate(['/clinicServicePackageDetails', 'new']);\r\n    //}\r\n\r\n    loadOrdersList() {\r\n        let vm = this;\r\n        this.clinicService.getAllPurchasingOrders(vm.clinicId).subscribe(\r\n            function (response: any) {\r\n                vm.ordersList = response;\r\n            },\r\n            function (error: any) {\r\n                vm.toastr.error(error, '');\r\n            },\r\n            function () { // finally\r\n                vm.showProgress = false;\r\n            });\r\n\r\n    }\r\n    resend(order: any) {\r\n        let vm = this;\r\n        vm.showProgress = true;\r\n        this.clinicService.sendOrderToVendor(order).subscribe(\r\n            function (response: any) {\r\n                if (response == \"True\") {\r\n                    let msg = vm.translate.instant(\"SentSuccessfully\");\r\n                    vm.toastr.success(msg, '');\r\n\r\n                } else {\r\n                    //vm.toastr.warning('Order status should be pending.', '');\r\n                    let msg = vm.translate.instant(\"OrderStatusValidation\");\r\n                    vm.toastr.warning(msg, '');\r\n                }\r\n\r\n            },\r\n            function (error: any) {\r\n                vm.toastr.error(error, '');\r\n                vm.showProgress = false;\r\n            },\r\n            function () { // finally\r\n                vm.showProgress = false;\r\n            });\r\n    }\r\n\r\n    handleUserInterfaceViews(user: any) {\r\n        if (user.permissions != undefined) {\r\n\r\n            for (let item of user.permissions) {\r\n                if ((item.permission.key == this.key.InternalPurchaseRequest\r\n                    || item.permission.key == this.key.ExternalPurchaseRequest)\r\n                    && (item.fullControl || item.add))\r\n                    this.enableNewBtn = true;\r\n\r\n                if ((item.permission.key == this.key.InternalPurchaseRequest\r\n                    || item.permission.key == this.key.ExternalPurchaseRequest)\r\n                    && (item.fullControl || item.view))\r\n                    this.enableDetailsLink = true;\r\n\r\n                if (item.permission.key == this.key.ExternalPurchaseRequest && (item.fullControl))\r\n                    this.enableResendLink = true;\r\n\r\n                if (item.permission.key == this.key.ReceiveExternalPurchaseRequest && (item.allow))\r\n                    this.enableReceiveLink = true;\r\n\r\n\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    selectOrderToDelete(id: string) {\r\n        this.deleteSelectedItem(id);\r\n    }\r\n    deleteSelectedItem(id: string): void {\r\n\r\n        let vm = this;\r\n        if (id == '') {\r\n            let msg = vm.translate.instant(\"NoItemSelected\");\r\n            vm.toastr.warning(msg, '');\r\n            return;\r\n        }\r\n\r\n        vm.showProgress = true;\r\n        this.clinicService.deletePurchaseOrder(id)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    let msg = vm.translate.instant(\"DeletedSuccessfully\");\r\n                    vm.toastr.success(msg, '');\r\n\r\n                    // remove delete object from collection\r\n                    var selectedObject = vm.ordersList.find(o => o.id == id);\r\n                    var index = vm.ordersList.indexOf(selectedObject);\r\n                    if (index > -1)\r\n                        vm.ordersList.splice(index, 1);\r\n\r\n                    // clear fields\r\n                    //  vm.clear();\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                    vm.showProgress = false;\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n    }\r\n\r\n    ///\r\n    checkProductsInItemsList(id: any) {\r\n        let vm = this;\r\n        let itemsList = [];\r\n        let order = vm.ordersList.find(o => o.id == id);\r\n        if (order != undefined) {\r\n            vm.model = order;\r\n            itemsList = order.purchaseItems;\r\n        }\r\n\r\n        for (let item of itemsList) {\r\n            vm.checkItem(item);\r\n\r\n        }\r\n        if (vm.itemsMsge != '') {\r\n            vm.itemsMsge += \"Do you want to use the desired orderd quantities instead these orderd quantities that the order has. \";\r\n            //this.btnConfirm.nativeElement.click();\r\n            this.display = true;\r\n        }\r\n\r\n    }\r\n\r\n    checkItem(purchaseItem: any) {\r\n        let vm = this;\r\n        if (purchaseItem.currentOrderedQuantity == purchaseItem.orderedQuantity) {\r\n            vm.isEqualed = true;\r\n            //vm.router.navigate(['/clinic/purchasing/createOrder', vm.model.id, 0, 0]);\r\n            // there are items that have equaled values in item ordered quantity and current product ordered quantity .\r\n            vm.itemsMsge += purchaseItem.productName + \" , \";\r\n        } else {\r\n\r\n            if (purchaseItem.currentOrderedQuantity > purchaseItem.orderedQuantity) {\r\n                vm.isEqualed = false;\r\n                // \" has orderd quantity that less than the current order quantity\"\r\n                vm.itemsMsge += purchaseItem.productName + \" , \";\r\n            } else if (purchaseItem.currentOrderedQuantity < purchaseItem.orderedQuantity) {\r\n                vm.isEqualed = false;\r\n                vm.itemsMsge += purchaseItem.productName + \" , \";\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    useCurrentOrderdQuantity() {\r\n        this.model.useCurrent = true;\r\n        this.display = false;\r\n        this.router.navigate(['/clinic/purchasing/createOrder', this.model.id, 1, 0]);\r\n\r\n    }\r\n    useItemOrderdQuantity() {\r\n        this.display = false;\r\n        this.router.navigate(['/clinic/purchasing/createOrder', this.model.id, 0, 0]);\r\n    }\r\n    closeOrder(orderId: string) {\r\n        let vm = this;\r\n        vm.showProgress = true;\r\n        this.clinicService.closeOrder(orderId).subscribe(\r\n            function (response: any) {\r\n                let order = vm.ordersList.find(o => o.id == response.id);\r\n                order.orderStatus = response.orderStatus;\r\n\r\n            },\r\n            function (error: any) {\r\n                vm.toastr.error(error, '');\r\n                vm.showProgress = false;\r\n            },\r\n            function () { // finally\r\n                vm.showProgress = false;\r\n            });\r\n    }\r\n\r\n    clearMsg() {\r\n        this.itemsMsge = '';\r\n        this.display = false;\r\n    }\r\n}","<div *ngIf=\"showProgress\">\r\n    <loading></loading>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <clinic-tab [isPurchasingSelected]='selectPurchasingTab' *ngIf=\"isClinicAdmin\"></clinic-tab>\r\n    <shared-tabs [isPurchasingSelected]='selectPurchasingTab' *ngIf=\"!isClinicAdmin\"></shared-tabs>\r\n    <div class=\"row nopadding\">\r\n\r\n        <div class=\"row NBbreadcrumb\">\r\n            <a>{{ 'Clinic' | translate}}</a> &nbsp;/\r\n            {{ 'PurchaseOrders' | translate}}\r\n        </div>\r\n        <div class=\"row well\">\r\n            <div class=\"col-md-offset-8  text-right\">\r\n                <button class=\"btn btn-primary \" routerLink=\"/clinic/purchasing/createOrder/new/0/0\"\r\n                    disabled=\"{{ enableNewBtn || isClinicAdmin ? '' :'disabled'}}\">{{ 'CreateNewOrder' |\r\n                    translate}}</button>\r\n                <print-page [section]='purchasingOrderListDiv'></print-page>\r\n            </div>\r\n        </div>\r\n        <br />\r\n\r\n        <div class=\"row well\" style=\"background-color: #f6f7f9 !important;\">\r\n            <div class=\"inner-addon left-addon\">\r\n                <i class=\"glyphicon glyphicon-search\"></i>\r\n                <input pInputText type=\"text\" (input)=\"dt.filterGlobal($event.target.value, 'contains')\"\r\n                    [placeholder]=\"'Search' | translate\" />\r\n            </div>\r\n            <!---New Table-->\r\n            <p-table #dt [value]=\"ordersList\" dataKey=\"id\" [rowHover]=\"true\" [rows]=\"10\" [showCurrentPageReport]=\"true\"\r\n                [rowsPerPageOptions]=\"[10,20,30,40,50,100]\" [paginator]=\"true\"\r\n                currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" [filterDelay]=\"0\"\r\n                [globalFilterFields]=\"['refNo','nameTranslation']\">\r\n\r\n                <ng-template pTemplate=\"header\">\r\n                    <tr>\r\n                        <th pSortableColumn=\"refNo\">{{'RerNo' | translate}} <p-sortIcon field=\"refNo\"></p-sortIcon>\r\n                        </th>\r\n                        <th pSortableColumn=\"dateString\">{{'OrderDate' | translate}} <p-sortIcon field=\"dateString\">\r\n                            </p-sortIcon>\r\n                        </th>\r\n                        <th pSortableColumn=\"vendorName\">{{'Vendor' | translate}} <p-sortIcon field=\"vendorName\">\r\n                            </p-sortIcon>\r\n                        </th>\r\n                        <th pSortableColumn=\"orderStatus\">{{'Status' | translate}} <p-sortIcon field=\"orderStatus\">\r\n                            </p-sortIcon>\r\n                        </th>\r\n                        <th pSortableColumn=\"totalPrice\">{{'Total' | translate}} <p-sortIcon field=\"totalPrice\">\r\n                            </p-sortIcon>\r\n                        </th>\r\n                        <th pSortableColumn=\"description\">{{'Remark' | translate}} <p-sortIcon field=\"description\">\r\n                            </p-sortIcon>\r\n                        </th>\r\n                        <th pSortableColumn=\"lastModificationDateString\">{{'LastModificationDate' | translate}}\r\n                            <p-sortIcon field=\"lastModificationDateString\">\r\n                            </p-sortIcon>\r\n                        </th>\r\n                        <th pSortableColumn=\"userName\">{{'LastModifierUser' | translate}} <p-sortIcon field=\"userName\">\r\n                            </p-sortIcon>\r\n                        </th>\r\n                        <th><span styleClass=\"text-center width70\">{{'ViewDetails' | translate}} </span>\r\n                        </th>\r\n                        <th><span styleClass=\"text-center width70\">{{'Edit' | translate}} </span>\r\n                        </th>\r\n                        <th><span styleClass=\"text-center width70\">{{'ReSend' | translate}} </span>\r\n                        </th>\r\n                        <th><span styleClass=\"text-center width70\">{{'ReceiveQuantity' | translate}} </span>\r\n                        </th>\r\n                        <th><span styleClass=\"text-center width70\">{{'CloseOrder' | translate}} </span>\r\n                        </th>\r\n\r\n                    </tr>\r\n\r\n                </ng-template>\r\n                <ng-template pTemplate=\"body\" let-item>\r\n                    <tr class=\"p-selectable-row\">\r\n                        <td>\r\n                            {{item.refNo}}\r\n                        </td>\r\n                        <td>\r\n                            <span>{{item.dateString}}</span>\r\n                        </td>\r\n                        <td>\r\n                            <span>{{item.vendorName}}</span>\r\n                        </td>\r\n                        <td>\r\n                            <span>{{item.orderStatus}}</span>\r\n                        </td>\r\n                        <td>\r\n                            <span>{{item.totalPrice}}</span>\r\n                        </td>\r\n                        <td><span>{{item.description}}</span></td>\r\n\r\n                        <td>\r\n                            <span>{{item.lastModificationDateString}}</span>\r\n                        </td>\r\n                        <td>\r\n                            <span>{{item.userName}}</span>\r\n                        </td>\r\n                        <td>\r\n                            <a class=\"underLinelinkText\" (click)=\"viewOrderDetails(item.id)\"\r\n                                [class.disabled]=\"!enableDetailsLink && !isClinicAdmin ? true : null\">{{ 'ViewDetails' |\r\n                                translate}}</a>\r\n                        </td>\r\n                        <td style=\"text-align: center\">\r\n                            <a class=\"underLinelinkText\" (click)=\"checkProductsInItemsList(item.id)\"\r\n                                *ngIf=\"isClinicAdmin && item.orderStatus == 'Prepared'\">{{ 'Edit' | translate}}</a>\r\n                            <a class=\"disabled\" *ngIf=\"isClinicAdmin && item.orderStatus != 'Prepared'\" disabled>{{\r\n                                'Edit' | translate}}</a>\r\n                            <a class=\"underLinelinkText\" (click)=\"checkProductsInItemsList(item.id)\"\r\n                                *ngIf=\"enableDetailsLink && item.orderStatus == 'Prepared'\">{{ 'Edit' | translate}}</a>\r\n                            <a class=\"disabled\" *ngIf=\"enableDetailsLink && item.orderStatus != 'Prepared'\" disabled>{{\r\n                                'Edit' | translate}}</a>\r\n                        </td>\r\n                        <td>\r\n                            <a class=\"underLinelinkText\" (click)=\"resend(item)\"\r\n                                [class.disabled]=\"!enableResendLink && !isClinicAdmin ? true : null\">{{ 'ReSend' |\r\n                                translate}}</a>\r\n                        </td>\r\n                        <td>\r\n                            <a class=\"underLinelinkText\" routerLink=\"/clinic/purchasing/receiveOrder/{{item.id}}\"\r\n                                *ngIf=\"isClinicAdmin || enableReceiveLink\">{{ 'ReceiveQuantity' | translate}}</a>\r\n                            <a class=\"disabled\" *ngIf=\"!isClinicAdmin && !enableReceiveLink\" disabled>{{\r\n                                'ReceiveQuantity' | translate}}</a>\r\n                        </td>\r\n                        <td>\r\n                            <a class=\"underLinelinkText\" (click)=\"closeOrder(item.id)\"\r\n                                [class.disabled]=\"!enableDetailsLink && !isClinicAdmin ? true : null\">{{ 'Close' |\r\n                                translate}}</a>\r\n                        </td>\r\n                    </tr>\r\n                </ng-template>\r\n                <ng-template pTemplate=\"emptymessage\">\r\n                    <tr>\r\n                        <td colspan=\"8\">No data found.</td>\r\n                    </tr>\r\n                </ng-template>\r\n            </p-table>\r\n            <!--End Table-->\r\n        </div>\r\n\r\n\r\n        <div id=\"purchasingOrderListPrintDiv\" class=\"row hidden\">\r\n            <table class=\"table table-responsive table-bordered table-hover table-striped\">\r\n                <thead class=\"alert alert-info\">\r\n                    <tr>\r\n                        <th>{{ 'RerNo' | translate}}</th>\r\n                        <th>{{ 'OrderDate' | translate}}</th>\r\n                        <th>{{ 'Vendor' | translate}}</th>\r\n                        <th>{{ 'Status' | translate}}</th>\r\n                        <th>{{ 'Total' | translate}}</th>\r\n                        <th>{{ 'Remark' | translate}}</th>\r\n                        <th>{{ 'LastModificationDate' | translate}}</th>\r\n                        <th>{{ 'LastModifierUser' | translate}}</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngFor=\"let item of ordersList | translateObjects  : null : null : lstToTranslated\">\r\n                        <td>{{item.refNo}}</td>\r\n                        <td>{{item.dateString}}</td>\r\n                        <td>{{item.vendorName}}</td>\r\n                        <td>{{item.orderStatus}}</td>\r\n                        <td>{{item.totalPrice}}</td>\r\n                        <td>{{item.description}}</td>\r\n                        <td>{{item.lastModificationDateString}}</td>\r\n                        <td>{{item.userName}}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n</div>\r\n<button data-toggle=\"modal\" data-target=\"#confirm\" type=\"button\" style=\"display:none\" #btnConfirm></button>\r\n<!--<div id=\"confirm\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" (click)=\"clearMsg()\">&times;</button>\r\n                <h4 class=\"modal-title\">{{ 'ItemsListConfirmation' | translate}}</h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <p>{{itemsMsge}}</p>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-danger\" (click)=\"useCurrentOrderdQuantity()\" data-dismiss=\"modal\">{{ 'Yes' | translate}}</button>\r\n                <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" (click)=\"useItemOrderdQuantity()\">{{ 'No' | translate}}</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>-->\r\n<!-- <p-dialog id=\"confirme\" [header]=\"'ItemsListConfirmation' | translate\" [(visible)]=\"display\" [width]=\"600\" modal=\"modal\" responsive=\"true\" (click)=\"clearMsg()\">\r\n\r\n    <div>\r\n        <p>{{itemsMsge}}</p>\r\n    </div>\r\n    <div>\r\n        <button type=\"button\" class=\"btn btn-danger\" (click)=\"useCurrentOrderdQuantity()\" data-dismiss=\"modal\">{{ 'Yes' | translate}}</button>\r\n        <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" (click)=\"useItemOrderdQuantity()\">{{ 'No' | translate}}</button>\r\n    </div>\r\n</p-dialog> -->","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\nimport { ClinicService } from '../../shared/clinic.service';\r\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\r\n\r\nimport { AccountService } from '../../../security/shared/account.service';\r\nimport { UserPermissions } from '../../../classes/user-permissions.class';\r\nimport { PermissionKeyEnum } from '../../../shared/shared/permission-key.enum';\r\nimport { Table } from 'primeng/table';\r\n@Component({\r\n\r\n    selector: 'purchase-order-view-details',\r\n    templateUrl: './purchase-order-view-details.component.html'\r\n})\r\n\r\nexport class PurchaseOrderViewDetails {\r\n    selectPurchasingTab: boolean = true;\r\n    orderId!: any;\r\n    showProgress = false;\r\n    itemsList: any[] = [];\r\n    model: any = {};\r\n    isSent = true;\r\n    isClosed = false;\r\n    isEqualed: boolean | undefined;\r\n    itemsMsge: string = '';\r\n    @ViewChild('btnConfirm') btnConfirm!: ElementRef;\r\n    userType: string = '';\r\n    isClinicAdmin: boolean = false;\r\n    userPermisions: UserPermissions = new UserPermissions();\r\n    key: PermissionKeyEnum = new PermissionKeyEnum();\r\n    enableEditBtn: boolean = false;\r\n    enableReceiveLink: boolean = false;\r\n    lstToTranslated: string[] = [];\r\n    @ViewChild('dt') table!: Table;\r\n    constructor(public toastr: ToastrService\r\n        , private storage: LocalStorageService\r\n        , private router: Router\r\n        , private _route: ActivatedRoute\r\n        , private clinicService: ClinicService\r\n        , public translate: TranslateService\r\n        , public accountService: AccountService\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        let vm = this;\r\n        this.lstToTranslated = ['productName', 'productNameTranslation', 'userName', 'userNameTranslation', 'unit', 'unitTranslation'];\r\n        vm.showProgress = true;\r\n        let id = this._route.snapshot.params['id'];\r\n        this.orderId = `${id}`;\r\n        this.userType = this.storage.retrieve(\"UserType\");\r\n        if (this.userType == 'ClinicAdmin')\r\n            this.isClinicAdmin = true;\r\n\r\n        vm.loadPurchasingOrder();\r\n\r\n        if (!this.isClinicAdmin) {\r\n            if (this.accountService.userPermision._isScalar != undefined)\r\n                this.accountService.userPermision.subscribe((item: any) => this.handleUserInterfaceViews(item));\r\n            else\r\n                this.handleUserInterfaceViews(this.accountService.userPermision);\r\n        }\r\n    }\r\n\r\n    navigateToOrdersList() {\r\n        this.router.navigate(['/clinic/purchasing/all', this.storage.retrieve('ClinicId')]);\r\n    }\r\n\r\n    loadPurchasingOrder() {\r\n        let vm = this;\r\n        this.clinicService.getPurchasingOrderById(vm.orderId).subscribe(\r\n            function (response: any) {\r\n                vm.model = response;\r\n                vm.itemsList = vm.model.purchaseItems;\r\n                //vm.checkProductsInItemsList();\r\n                if (vm.model.orderStatus == \"Prepared\") {\r\n                    vm.isSent = false;\r\n                } else if (vm.model.orderStatus == \"Closed\") {\r\n                    vm.isClosed = true;\r\n                }\r\n            },\r\n            function (error: any) {\r\n                vm.toastr.error(error, '');\r\n            },\r\n            function () { // finally\r\n                vm.showProgress = false;\r\n            });\r\n\r\n    }\r\n    viewOrderDetails(id: string): void {\r\n\r\n        // store selected company ID\r\n        this.storage.store(\"OrderId\", id);\r\n        //routerLink=\"/clinicPurchasing/receiveOrder/1\"\r\n        //navigate to current URL routerLink=\"/clinicPurchasing/orderDetails/1\"\r\n        this.router.navigate(['/clinic/purchasing/receiveOrder', id]);\r\n    }\r\n    checkProductsInItemsList(id: any) {\r\n        let vm = this;\r\n        for (let item of vm.itemsList) {\r\n            vm.checkItem(item);\r\n\r\n        }\r\n        if (vm.itemsMsge != '') {\r\n            vm.itemsMsge += \"Do you want to usethe desired orderd quantities instead these orderd quantities that the order has. \";\r\n            this.btnConfirm.nativeElement.click();\r\n        }\r\n\r\n    }\r\n    checkItem(purchaseItem: any) {\r\n        let vm = this;\r\n        if (purchaseItem.currentOrderedQuantity == purchaseItem.orderedQuantity) {\r\n            vm.isEqualed = true;\r\n            //vm.router.navigate(['/clinic/purchasing/createOrder', vm.model.id, 0, 0]);\r\n            vm.itemsMsge += purchaseItem.productName + \" , \";\r\n        } else {\r\n\r\n            if (purchaseItem.currentOrderedQuantity > purchaseItem.orderedQuantity) {\r\n                vm.isEqualed = false;\r\n                // \" has orderd quantity that less than the current order quantity\"\r\n                vm.itemsMsge += purchaseItem.productName + \" , \";\r\n            } else if (purchaseItem.currentOrderedQuantity < purchaseItem.orderedQuantity) {\r\n                vm.isEqualed = false;\r\n                vm.itemsMsge += purchaseItem.productName + \" , \";\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    useCurrentOrderdQuantity() {\r\n        this.model.useCurrent = true;\r\n        this.router.navigate(['/clinic/purchasing/createOrder', this.model.id, 1, 0]);\r\n    }\r\n    useItemOrderdQuantity() {\r\n        this.router.navigate(['/clinic/purchasing/createOrder', this.model.id, 0, 0]);\r\n    }\r\n\r\n    handleUserInterfaceViews(user: any) {\r\n        if (user.permissions != undefined) {\r\n\r\n            for (let item of user.permissions) {\r\n                if ((item.permission.key == this.key.InternalPurchaseRequest\r\n                    || item.permission.key == this.key.ExternalPurchaseRequest)\r\n                    && (item.fullControl || item.edit))\r\n                    this.enableEditBtn = true;\r\n\r\n                if (item.permission.key == this.key.ReceiveExternalPurchaseRequest && (item.allow))\r\n                    this.enableReceiveLink = true;\r\n\r\n\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n}","<div *ngIf=\"showProgress\">\r\n    <loading></loading>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <clinic-tab [isPurchasingSelected]='selectPurchasingTab' *ngIf=\"isClinicAdmin\"></clinic-tab>\r\n    <shared-tabs [isPurchasingSelected]='selectPurchasingTab' *ngIf=\"!isClinicAdmin\"></shared-tabs>\r\n    <div class=\"row nopadding\">\r\n        <div class=\"page-breadcrumb\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-7\">\r\n                    <div class=\"page-breadcrumb-wrap\">\r\n                        <div class=\"page-breadcrumb-info\">\r\n                            <ul class=\"list-page-breadcrumb\">\r\n                                <li>\r\n                                    {{ 'Clinic' | translate}}\r\n                                </li>\r\n                                <li class=\"active-page\">{{ 'PurchaseOrders' | translate}} > {{ 'PurchaseOrderDetails' |\r\n                                    translate}}</li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-5\">\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n        <div class=\"row\">\r\n            <label class=\"control-label col-md-2\">{{ 'RerNo' | translate}}:</label>\r\n            <label class=\"control-label col-md-4\">{{model.refNo}}</label>\r\n            <label class=\"control-label col-md-2\">{{ 'OrderDate' | translate}}:</label>\r\n            <label class=\"control-label col-md-4\">{{model.dateString}}</label>\r\n        </div>\r\n        <div class=\"row\">\r\n            <label class=\"control-label col-md-2\">{{ 'Vendor' | translate}}:</label>\r\n            <label class=\"control-label col-md-4\">{{(model | translateObjects : 'vendorName' :\r\n                'vendorNameTranslation').vendorName}}</label>\r\n            <label class=\"control-label col-md-2\">{{ 'Status' | translate}}:</label>\r\n            <label class=\"control-label col-md-4\">{{model.orderStatus | translate}}</label>\r\n        </div>\r\n        <div class=\"row\">\r\n            <label class=\"control-label col-md-2\">{{ 'Total' | translate}}:</label>\r\n            <label class=\"control-label col-md-4\">{{model.totalPrice}}</label>\r\n            <label class=\"control-label col-md-2\">{{ 'Remark' | translate}}:</label>\r\n            <label class=\"control-label col-md-4\">{{model.description}}</label>\r\n        </div>\r\n        <div class=\"row text-right\">\r\n            <button class=\"btn btn-primary\" *ngIf=\"!isClosed\" (click)=\"viewOrderDetails(model.id)\"\r\n                disabled=\"{{ enableReceiveLink || isClinicAdmin ? '' :'disabled'}}\">{{ 'ReceiveQuantity' |\r\n                translate}}</button>\r\n            <button class=\"btn btn-primary\" *ngIf=\"!isSent\" (click)=\"checkProductsInItemsList(model.id)\"\r\n                disabled=\"{{ enableEditBtn || isClinicAdmin ? '' :'disabled'}}\">{{ 'EditOrder' | translate}}</button>\r\n            <button class=\"btn btn-primary\" (click)=\"navigateToOrdersList()\">{{ 'Back' | translate}}</button>\r\n        </div>\r\n        <br />\r\n        <br />\r\n        <div class=\"ui-widget-header searchWidget\">\r\n            <i class=\"fa fa-search searchIcon\"></i>\r\n            <input #gb type=\"text\" pInputText size=\"50\" [placeholder]=\"'Search' | translate\">\r\n        </div>\r\n\r\n\r\n        <!---New Table-->\r\n        <p-table #dt [value]=\"itemsList\" dataKey=\"id\" [rowHover]=\"true\" [rows]=\"10\" [showCurrentPageReport]=\"true\"\r\n            [rowsPerPageOptions]=\"[10,20,30,40,50,100]\" [paginator]=\"true\"\r\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" [filterDelay]=\"0\"\r\n            [globalFilterFields]=\"['name','nameTranslation']\">\r\n\r\n            <ng-template pTemplate=\"header\">\r\n                <tr>\r\n                    <th pSortableColumn=\"productName\">{{'Item' | translate}} <p-sortIcon field=\"productName\">\r\n                        </p-sortIcon>\r\n                    </th>\r\n                    <th pSortableColumn=\"onHandQuantity\">{{'OnhandQuantity' | translate}} <p-sortIcon\r\n                            field=\"onHandQuantity\"></p-sortIcon>\r\n                    </th>\r\n                    <th>{{'Unit' | translate}}\r\n                    </th>\r\n                    <th pSortableColumn=\"purchasingPrice\">{{'PurchasePrice' | translate}} <p-sortIcon\r\n                            field=\"purchasingPrice\"></p-sortIcon>\r\n                    </th>\r\n                    <th pSortableColumn=\"orderedQuantity\">{{'OrderdQuant' | translate}} <p-sortIcon\r\n                            field=\"orderedQuantity\"></p-sortIcon>\r\n                    </th>\r\n                    <th pSortableColumn=\"net\">{{'Net' | translate}} <p-sortIcon field=\"net\"></p-sortIcon>\r\n                    </th>\r\n                    <th pSortableColumn=\"description\">{{'Remark' | translate}} <p-sortIcon field=\"description\">\r\n                        </p-sortIcon>\r\n                    </th>\r\n                    <th pSortableColumn=\"net\">{{'LastModifierUser' | translate}} <p-sortIcon field=\"net\"></p-sortIcon>\r\n                    </th>\r\n                </tr>\r\n\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-item>\r\n                <tr class=\"p-selectable-row\">\r\n                    <td>\r\n                        {{item.productName}}\r\n                    </td>\r\n                    <td>\r\n                        <span>{{item.onHandQuantity}}</span>\r\n                    </td>\r\n                    <td>\r\n                        <span *ngIf=\"item.unitType === 'NumbersUnit'\">{{ item.unit | translate}}</span>\r\n                        <span\r\n                            *ngIf=\"item.unitType == 'HeightsUnit' || item.unitType == 'WeightsUnit' || item.unitType == 'VolumesUnit'\">\r\n                            {{ item.unit}}</span>\r\n                    </td>\r\n                    <td>\r\n                        <span>{{item.purchasingPrice}}</span>\r\n                    </td>\r\n                    <td>\r\n                        <span>{{item.net}}</span>\r\n                    </td>\r\n                    <td>\r\n                        <span>{{item.description}}</span>\r\n                    </td>\r\n                    <td>\r\n                        <span>{{item.userName}}</span>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"emptymessage\">\r\n                <tr>\r\n                    <td colspan=\"8\">No data found.</td>\r\n                </tr>\r\n            </ng-template>\r\n        </p-table>\r\n        <!--End Table-->\r\n\r\n    </div>\r\n</div>\r\n<button data-toggle=\"modal\" data-target=\"#confirm\" type=\"button\" style=\"display:none\" #btnConfirm>\r\n\r\n</button>\r\n<div id=\"confirm\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">{{ 'ItemsListConfirmation' | translate}}</h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <p>{{itemsMsge}}</p>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-danger\" (click)=\"useCurrentOrderdQuantity()\"\r\n                    data-dismiss=\"modal\">{{ 'Yes' | translate}}</button>\r\n                <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" (click)=\"useItemOrderdQuantity()\">{{\r\n                    'No' | translate}}</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\nimport { ClinicService } from '../../shared/clinic.service';\r\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\r\n\r\nimport { AccountService } from '../../../security/shared/account.service';\r\nimport { UserPermissions } from '../../../classes/user-permissions.class';\r\nimport { PermissionKeyEnum } from '../../../shared/shared/permission-key.enum';\r\nimport { Table } from 'primeng/table';\r\n@Component({\r\n\r\n    selector: 'receive-purchase-order',\r\n    templateUrl: './receive-purchase-order.component.html'\r\n})\r\n\r\nexport class ReceivePurchaseOrder {\r\n    selectPurchasingTab: boolean = true;\r\n    orderId!: any;\r\n    showProgress = false;\r\n    itemsList: any[] = [];\r\n    model: any = {};\r\n    isSent = true;\r\n    clinicAdminId!: any;\r\n    active = true;\r\n    clinicId!: any;\r\n    isReceived = false;\r\n    userType: string = '';\r\n    isClinicAdmin: boolean = false;\r\n    userPermisions: UserPermissions = new UserPermissions();\r\n    key: PermissionKeyEnum = new PermissionKeyEnum();\r\n    enableReceiveLink: boolean = false;\r\n    lstToTranslated: string[] = [];\r\n    isClosed = false;\r\n    @ViewChild('dt') table!: Table;\r\n    constructor(public toastr: ToastrService\r\n        , private storage: LocalStorageService\r\n        , private router: Router\r\n        , private _route: ActivatedRoute\r\n        , private localStorage: LocalStorageService\r\n        , private clinicService: ClinicService\r\n        , public translate: TranslateService\r\n        , public accountService: AccountService\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        let vm = this;\r\n        this.lstToTranslated = ['productName', 'productNameTranslation'];\r\n        vm.showProgress = true;\r\n        let id = this._route.snapshot.params['id'];\r\n        vm.orderId = `${id}`;\r\n        vm.clinicAdminId = vm.localStorage.retrieve(\"UserID\");\r\n        vm.clinicId = vm.localStorage.retrieve(\"ClinicID\");\r\n        this.userType = this.storage.retrieve(\"UserType\");\r\n        if (this.userType == 'ClinicAdmin')\r\n            this.isClinicAdmin = true;\r\n\r\n        vm.loadPurchasingOrder();\r\n\r\n        if (!this.isClinicAdmin) {\r\n            if (this.accountService.userPermision._isScalar != undefined)\r\n                this.accountService.userPermision.subscribe((item: any) => this.handleUserInterfaceViews(item));\r\n            else\r\n                this.handleUserInterfaceViews(this.accountService.userPermision);\r\n        }\r\n\r\n    }\r\n\r\n    navigateToOrderdetails() {\r\n        this.router.navigate(['/clinic/purchasing/orderDetails', this.orderId]);\r\n    }\r\n\r\n    loadPurchasingOrder() {\r\n        let vm = this;\r\n        this.clinicService.getPurchasingOrderById(vm.orderId).subscribe(\r\n            function (response: any) {\r\n                vm.model = response;\r\n                vm.itemsList = vm.model.purchaseItems;\r\n                if (vm.model.orderStatus == \"Received\") {\r\n                    vm.isReceived = true;\r\n                } else if (vm.model.orderStatus == \"Closed\") {\r\n                    vm.isClosed = true;\r\n                }\r\n            },\r\n            function (error: any) {\r\n                vm.toastr.error(error, '');\r\n            },\r\n            function () { // finally\r\n                vm.showProgress = false;\r\n            });\r\n\r\n    }\r\n    updatePurchasingOrderWithUser(source: any[]) {\r\n        let vm = this;\r\n        for (let item of source) {\r\n            item.securityUserId = vm.clinicAdminId;\r\n        }\r\n    }\r\n    onSubmit(): void {\r\n        let thisComponent = this;\r\n        thisComponent.showProgress = true;\r\n        // thisComponent.model.securityUserId = thisComponent.clinicAdminId;\r\n        thisComponent.updatePurchasingOrderWithUser(thisComponent.itemsList);\r\n        thisComponent.model.purchaseItems = thisComponent.itemsList;\r\n        if (thisComponent.itemsList.length > 0) {\r\n\r\n\r\n            this.clinicService.receivePurchasingOrder(thisComponent.model)\r\n                .subscribe(\r\n                    function (response: any) {\r\n\r\n                        thisComponent.model = response;\r\n                        thisComponent.itemsList = thisComponent.model.purchaseItems;\r\n                        let msg = thisComponent.translate.instant(\"SavedSuccessfully\");\r\n                        thisComponent.toastr.success(msg, '');\r\n                        thisComponent.navigateToOrdersList();\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () {\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n\r\n        }\r\n        else {\r\n\r\n            ////Update\r\n            //this.clinicService.updateAppointmentSchedule(this.model)\r\n            //    .subscribe(\r\n            //    function (response:any) {\r\n\r\n            //        thisComponent.model = response;\r\n            //        thisComponent.toastr.success('Saved successfully', '');\r\n\r\n            //        thisComponent.sessionsList = thisComponent.model.sessions;\r\n            //        thisComponent.updateSessionsTime(thisComponent.sessionsList);\r\n\r\n            //        thisComponent.model.startDate = thisComponent.utilityClass.getUtcDateFromString(thisComponent.model.startDate);\r\n            //        thisComponent.model.endDate = thisComponent.utilityClass.getUtcDateFromString(thisComponent.model.endDate);\r\n\r\n            //    },\r\n            //    function (error:any) { \r\n            //        thisComponent.toastr.error('Error occured during saving ' + error, '');\r\n\r\n            //        thisComponent.showProgress = false;\r\n            //    },\r\n            //    function () {\r\n            //        thisComponent.showProgress = false;\r\n            //    });\r\n        }\r\n    }\r\n    navigateToOrdersList() {\r\n        this.router.navigate(['/clinic/purchasing/all', this.clinicId]);\r\n    }\r\n\r\n    handleUserInterfaceViews(user: any) {\r\n        if (user.permissions != undefined) {\r\n\r\n            for (let item of user.permissions) {\r\n\r\n                if (item.permission.key == this.key.ReceiveExternalPurchaseRequest && (item.allow))\r\n                    this.enableReceiveLink = true;\r\n\r\n\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n}","<div *ngIf=\"showProgress\">\r\n    <loading></loading>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <clinic-tab [isPurchasingSelected]='selectPurchasingTab' *ngIf=\"isClinicAdmin\"></clinic-tab>\r\n    <shared-tabs [isPurchasingSelected]='selectPurchasingTab' *ngIf=\"!isClinicAdmin\"></shared-tabs>\r\n    <div class=\"row nopadding\">\r\n        <div class=\"page-breadcrumb\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-7\">\r\n                    <div class=\"page-breadcrumb-wrap\">\r\n                        <div class=\"page-breadcrumb-info\">\r\n                            <ul class=\"list-page-breadcrumb\">\r\n                                <li>\r\n                                    {{ 'Clinic' | translate}}\r\n                                </li>\r\n                                <li class=\"active-page\">{{ 'PurchaseOrders' | translate}} > {{ 'ReceivePurchaseOrder' |\r\n                                    translate}}</li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-5\">\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n        <div class=\"row\">\r\n            <label class=\"control-label col-md-2\">{{ 'RerNo' | translate}}:</label>\r\n            <label class=\"control-label col-md-4\">{{model.refNo}}</label>\r\n        </div>\r\n        <div class=\"row\">\r\n            <label class=\"control-label col-md-2\">{{ 'OrderDate' | translate}}:</label>\r\n            <label class=\"control-label col-md-4\">{{model.dateString}}</label>\r\n        </div>\r\n        <div class=\"row\">\r\n            <label class=\"control-label col-md-2\">{{ 'Vendor' | translate}}:</label>\r\n            <label class=\"control-label col-md-4\">{{model.vendorName}}</label>\r\n        </div>\r\n        <br />\r\n        <form *ngIf=\"active\" class=\"form-horizontal\" name=\"orderForm\" #orderForm=\"ngForm\" (ngSubmit)=\"onSubmit()\">\r\n\r\n            <div class=\"row text-right\">\r\n                <button class=\"btn btn-primary\" *ngIf=\"!isClosed\"\r\n                    disabled=\"{{ enableReceiveLink || isClinicAdmin ? '' :'disabled'}}\">{{ 'Receive' |\r\n                    translate}}</button>\r\n                <button class=\"btn btn-primary\" (click)=\"navigateToOrderdetails()\">{{ 'Back' | translate}}</button>\r\n            </div>\r\n            <br />\r\n            <br />\r\n            <div class=\"form-group\">\r\n                <div class=\"ui-widget-header searchWidget\">\r\n                    <i class=\"fa fa-search searchIcon\"></i>\r\n                    <input pInputText type=\"text\" (input)=\"dt.filterGlobal($event.target.value, 'contains')\"\r\n                        [placeholder]=\"'Search' | translate\" />\r\n                </div>\r\n\r\n\r\n                <!---New Table-->\r\n                <p-table #dt [value]=\"itemsList\" dataKey=\"id\" [rowHover]=\"true\" [rows]=\"10\"\r\n                    [showCurrentPageReport]=\"true\" [rowsPerPageOptions]=\"[10,20,30,40,50,100]\" [paginator]=\"true\"\r\n                    currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" [filterDelay]=\"0\"\r\n                    [globalFilterFields]=\"['productName','productCode']\">\r\n\r\n                    <ng-template pTemplate=\"header\">\r\n                        <tr>\r\n                            <th pSortableColumn=\"productName\">{{'Item' | translate}} <p-sortIcon field=\"productName\">\r\n                                </p-sortIcon>\r\n                            </th>\r\n                            <th pSortableColumn=\"productCode\">{{'Code' | translate}} <p-sortIcon field=\"productCode\">\r\n                                </p-sortIcon>\r\n                            </th>\r\n                            <th pSortableColumn=\"onHandQuantity\">{{'OnhandQuantity' | translate}} <p-sortIcon\r\n                                    field=\"onHandQuantity\">\r\n                                </p-sortIcon>\r\n                            </th>\r\n                            <th pSortableColumn=\"unit\">{{'Unit' | translate}} <p-sortIcon field=\"unit\">\r\n                                </p-sortIcon>\r\n                            </th>\r\n                            <th pSortableColumn=\"purchasingPrice\">{{'Price' | translate}} <p-sortIcon\r\n                                    field=\"purchasingPrice\">\r\n                                </p-sortIcon>\r\n                            </th>\r\n                            <th pSortableColumn=\"net\">{{'Net' | translate}} <p-sortIcon field=\"net\">\r\n                                </p-sortIcon>\r\n                            </th>\r\n                            <th pSortableColumn=\"orderedQuantity\">{{'OrderdQuant' | translate}} <p-sortIcon\r\n                                    field=\"orderedQuantity\">\r\n                                </p-sortIcon>\r\n                            </th>\r\n                            <th>{{'ReceivedQuantity' | translate}}\r\n                            </th>\r\n                            <th><span styleClass=\"text-center width70\">{{'Remark' | translate}} </span>\r\n                            </th>\r\n                        </tr>\r\n\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"body\" let-item>\r\n                        <tr class=\"p-selectable-row\">\r\n                            <td>\r\n                                {{item.productName}}\r\n                            </td>\r\n                            <td>\r\n                                <span>{{item.productCode}}</span>\r\n                            </td>\r\n                            <td>\r\n                                <span>{{item.onHandQuantity}}</span>\r\n                            </td>\r\n                            <td>\r\n                                <span>{{item.unit}}</span>\r\n                            </td>\r\n                            <td>\r\n                                <span>{{item.purchasingPrice}}</span>\r\n                            </td>\r\n                            <td>\r\n                                <span>{{item.net}}</span>\r\n                            </td>\r\n                            <td>\r\n                                <span>{{item.orderedQuantity}}</span>\r\n                            </td>\r\n                            <td>\r\n                                <input type=\"number\" class=\"form-control\" name=\"txtReceivedQuantity{{item.id}}\"\r\n                                    [(ngModel)]=\"item.receivedQuantity\" />\r\n                            </td>\r\n                            <td>\r\n                                <textarea class=\"form-control\" name=\"txtRemark{{item.id}}\"\r\n                                    [(ngModel)]=\"item.description\"></textarea>\r\n                            </td>\r\n\r\n                        </tr>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"emptymessage\">\r\n                        <tr>\r\n                            <td colspan=\"8\">No data found.</td>\r\n                        </tr>\r\n                    </ng-template>\r\n                </p-table>\r\n                <!--End Table-->\r\n\r\n            </div>\r\n\r\n        </form>\r\n    </div>\r\n</div>","import { Component, OnInit, OnChanges, SimpleChanges, ViewChild, ElementRef } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\nimport { TreeNode } from 'primeng/api';\r\nimport { ClinicService } from '../shared/clinic.service';\r\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\r\nimport { AccountService } from '../../security/shared/account.service';\r\nimport { UserPermissions } from '../../classes/user-permissions.class';\r\nimport { PermissionKeyEnum } from '../../shared/shared/permission-key.enum';\r\n\r\n@Component({\r\n    selector: 'clinic-radiology-tests',\r\n    templateUrl: './clinic-radiology-tests.component.html'\r\n})\r\n\r\nexport class ClinicRadiologyTestsComponent implements OnInit {\r\n    selectedLang = 'ar';\r\n    filterString!:string;\r\n    leafType: string = 'RadiologyTest';\r\n    userType: string = '';\r\n    isClinicAdmin: boolean = false;\r\n    userPermisions: UserPermissions = new UserPermissions();\r\n    key: PermissionKeyEnum = new PermissionKeyEnum();\r\n    enableAddRootBtn: boolean = false;\r\n    enableEditBtn: boolean = false;\r\n    enableActivateBtn: boolean = false;\r\n    enableSaveBtn: boolean = false;\r\n    constructor(public toastr: ToastrService\r\n        , private localStorage: LocalStorageService\r\n        , private clinicService: ClinicService\r\n        , public translate: TranslateService\r\n        , public accountService: AccountService) { }\r\n\r\n    selectedClinicId!: number;\r\n    selectRadiologyTestsTab: boolean = true;\r\n    active: boolean = true;\r\n    showProgress = false;\r\n\r\n    selectedNode!: TreeNode;\r\n\r\n    isRadiologyTestsGroupSelected = true;\r\n    isRadiologyTestSelected = false;\r\n    // rbSelections = [{ value: 1, text: 'RadiologyTestsGroup' }, { value: 2, text: 'RadiologyTest' }];\r\n    groupName: string = '';\r\n    childName: string = '';\r\n    rbSelections = [{ value: 1, text: this.groupName }, { value: 2, text: this.childName }];\r\n    selectedAction = 1;\r\n    txtHeaderModal = \"\";\r\n    toSaveRadiologyTestsGroupId:any ;\r\n    toSaveRadiologyTestId:any;\r\n    parentRadiologyTestsGroupId:any;\r\n    parentRadiologyTestsGroupName :any;\r\n    isRoot = false;\r\n    enableCheckBox = false;\r\n    selctedNode: any;\r\n    isNew: boolean | undefined;\r\n    toPrintDiv: string = \"print-section\";\r\n    @ViewChild('btnAddRadiologyTestsGroup') btnAddRadiologyTestsGroup!: ElementRef;\r\n    @ViewChild('btnClosePopup') btnClosePopup!: ElementRef;\r\n    treeDataSourceItems!: any[];\r\n    lstToTranslated: string[] = [];\r\n\r\n    ngOnInit(): void {\r\n        this.selectedLang = this.localStorage.retrieve(\"selectedLanguage\");\r\n        this.lstToTranslated = ['label', 'labelTranslation'];\r\n        this.groupName = this.translate.instant(\"RadiologyTestsGroup\");\r\n        this.childName = this.translate.instant(\"RadiologyTest\");\r\n        this.translate.onLangChange.subscribe((event: LangChangeEvent) => {\r\n            this.groupName = this.translate.instant(\"RadiologyTestsGroup\");\r\n            this.childName = this.translate.instant(\"RadiologyTest\");\r\n        });\r\n        this.rbSelections = [{ value: 1, text: this.groupName }, { value: 2, text: this.childName }];\r\n        this.selectedClinicId = this.localStorage.retrieve(\"ClinicID\");\r\n        this.userType = this.localStorage.retrieve(\"UserType\");\r\n        if (this.userType == 'ClinicAdmin')\r\n            this.isClinicAdmin = true;\r\n\r\n        if (!this.isClinicAdmin) {\r\n            if (this.accountService.userPermision._isScalar != undefined)\r\n                this.accountService.userPermision.subscribe((item: any) => this.handleUserInterfaceViews(item));\r\n            else\r\n                this.handleUserInterfaceViews(this.accountService.userPermision);\r\n        }\r\n\r\n        this.getRadiologyTestsGroupsForTree();\r\n    }\r\n\r\n    getRadiologyTestsGroupsForTree() {\r\n        this.toSaveRadiologyTestsGroupId = '';\r\n        this.toSaveRadiologyTestId = '';\r\n        let thisComponent = this;\r\n        thisComponent.showProgress = true;\r\n        this.clinicService.getRadiologyTestsGroupsForTree(this.selectedClinicId)\r\n            .subscribe(\r\n                function (radiologyTestsGroups: any) {\r\n                    thisComponent.treeDataSourceItems = radiologyTestsGroups;\r\n                },\r\n                function (error: any) {\r\n                    thisComponent.toastr.error(error, '');\r\n                    thisComponent.showProgress = false;\r\n                },\r\n                function () { // finally\r\n                    thisComponent.showProgress = false;\r\n                });\r\n    }\r\n\r\n    expandAll() {\r\n        this.treeDataSourceItems.forEach(node => {\r\n            this.expandRecursive(node, true);\r\n        });\r\n    }\r\n\r\n    collapseAll() {\r\n        this.treeDataSourceItems.forEach(node => {\r\n            this.expandRecursive(node, false);\r\n        });\r\n    }\r\n\r\n    private expandRecursive(node: TreeNode, isExpand: boolean) {\r\n        node.expanded = isExpand;\r\n        if (node.children) {\r\n            node.children.forEach(childNode => {\r\n                this.expandRecursive(childNode, isExpand);\r\n            });\r\n        }\r\n    }\r\n\r\n    onCheckboxSelectionChange(value: any) {\r\n        this.selectedAction = value;\r\n\r\n        if (this.selectedAction == 1) {\r\n            this.isRadiologyTestsGroupSelected = true;\r\n            this.isRadiologyTestSelected = false;\r\n            // this.txtHeaderModal = \" RadiologyTestsGroup\";\r\n            this.txtHeaderModal = this.translate.instant(\"RadiologyTestsGroup\");\r\n            this.translate.onLangChange.subscribe((event: LangChangeEvent) => {\r\n\r\n                this.txtHeaderModal = this.translate.instant(\"RadiologyTestsGroup\");\r\n\r\n            });\r\n\r\n        }\r\n        else if (this.selectedAction == 2) {\r\n            this.isRadiologyTestsGroupSelected = false;\r\n            this.isRadiologyTestSelected = true\r\n            // this.txtHeaderModal = \"RadiologyTest\";\r\n            this.txtHeaderModal = this.translate.instant(\"RadiologyTest\");\r\n            this.translate.onLangChange.subscribe((event: LangChangeEvent) => {\r\n\r\n                this.txtHeaderModal = this.translate.instant(\"RadiologyTest\");\r\n            });\r\n        }\r\n    }\r\n\r\n    displayPopup(node: any) {\r\n        if (node.type.toLocaleLowerCase() == \"radiologytest\") {\r\n            this.isRadiologyTestsGroupSelected = false;\r\n            this.isRadiologyTestSelected = true;\r\n            this.selectedAction = 2;\r\n            this.txtHeaderModal = this.translate.instant(\"RadiologyTest\");\r\n            this.translate.onLangChange.subscribe((event: LangChangeEvent) => {\r\n\r\n                this.txtHeaderModal = this.translate.instant(\"RadiologyTest\");\r\n                this.groupName = this.translate.instant(\"RadiologyTestsGroup\");\r\n                this.childName = this.translate.instant(\"RadiologyTest\");\r\n            });\r\n            this.enableCheckBox = false;\r\n            this.isRoot = false;\r\n\r\n            this.toSaveRadiologyTestId = node.data;\r\n            this.btnAddRadiologyTestsGroup.nativeElement.click();\r\n        } else if (node.type.toLocaleLowerCase() == \"radiologytestsgroup\") {\r\n            this.isRadiologyTestsGroupSelected = true;\r\n            this.isRadiologyTestSelected = false;\r\n            this.enableCheckBox = false;\r\n            this.isRoot = false;\r\n            this.selectedAction = 1;\r\n            this.txtHeaderModal = this.translate.instant(\"RadiologyTestsGroup\");\r\n            this.translate.onLangChange.subscribe((event: LangChangeEvent) => {\r\n\r\n                this.txtHeaderModal = this.translate.instant(\"RadiologyTestsGroup\");\r\n                this.groupName = this.translate.instant(\"RadiologyTestsGroup\");\r\n                this.childName = this.translate.instant(\"RadiologyTest\");\r\n            });\r\n\r\n            this.toSaveRadiologyTestsGroupId = node.data;\r\n            this.btnAddRadiologyTestsGroup.nativeElement.click();\r\n        }\r\n        this.rbSelections = [{ value: 1, text: this.groupName }, { value: 2, text: this.childName }];\r\n        this.selctedNode = node;\r\n    }\r\n\r\n    passParentGroupInfo(node: any) {\r\n        this.parentRadiologyTestsGroupId = node.data;\r\n        if (this.selectedLang == 'ar')\r\n            this.parentRadiologyTestsGroupName = node.label;\r\n        else\r\n            this.parentRadiologyTestsGroupName = node.labelTranslation;\r\n        this.isRadiologyTestsGroupSelected = true;\r\n        this.isRadiologyTestSelected = false;\r\n        this.selectedAction = 1;\r\n        this.txtHeaderModal = this.translate.instant(\"RadiologyTestsGroup\");\r\n        this.translate.onLangChange.subscribe((event: LangChangeEvent) => {\r\n\r\n            this.txtHeaderModal = this.translate.instant(\"RadiologyTestsGroup\");\r\n            this.groupName = this.translate.instant(\"RadiologyTestsGroup\");\r\n            this.childName = this.translate.instant(\"RadiologyTest\");\r\n        });\r\n        if (node.data == undefined) {\r\n            this.enableCheckBox = false;\r\n            this.isRoot = true;\r\n        }\r\n        else {\r\n            this.enableCheckBox = true;\r\n            this.isRoot = false;\r\n        }\r\n        this.isRadiologyTestsGroupSelected = true;\r\n        this.isRadiologyTestSelected = false;\r\n\r\n        this.selctedNode = node;\r\n        this.rbSelections = [{ value: 1, text: this.groupName }, { value: 2, text: this.childName }];\r\n    }\r\n\r\n    changeActivation(node: any, event: any) {\r\n        let thisComponent = this;\r\n\r\n        if (node.type.toLocaleLowerCase() == \"radiologytest\") {\r\n            thisComponent.showProgress = true;\r\n            thisComponent.clinicService.updateRadiologyTestActiveState({ \"id\": node.id, \"isActive\": event.target.checked })\r\n                .subscribe(\r\n                    function (response: any) {\r\n                        if (event.target.checked) {\r\n                            thisComponent.activateParents(node);\r\n                        }\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () { // finally\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n        } else if (node.type.toLocaleLowerCase() == \"radiologytestsgroup\") {\r\n            thisComponent.showProgress = true;\r\n            thisComponent.clinicService.updateRadiologyTestsGroupActiveState({ \"id\": node.id, \"isActive\": event.target.checked })\r\n                .subscribe(\r\n                    function (response: any) {\r\n                        node.isActive = event.target.checked;\r\n                        if (event.target.checked) {\r\n                            if (node.parent != undefined)\r\n                                thisComponent.activateParents(node.parent);\r\n                        } else {\r\n                            thisComponent.deActivateChildren(node, false);\r\n                        }\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () { // finally\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n        }\r\n    }\r\n\r\n    activateParents(node: any) {\r\n        node.isActive = true;\r\n        if (node.parent != undefined) {\r\n            this.activateParents(node.parent);\r\n        }\r\n    }\r\n    deActivateChildren(node: any, active: any) {\r\n        node.isActive = active;\r\n        if (node.children) {\r\n            node.children.forEach((childNode: any) => {\r\n                this.deActivateChildren(childNode, active);\r\n            });\r\n        }\r\n    }\r\n    updateSelectedNode(node: any) {\r\n        let vm = this;\r\n        vm.toSaveRadiologyTestsGroupId = '';\r\n        vm.toSaveRadiologyTestId = '';\r\n        if (node.data > 0 && vm.isNew == false) {\r\n            // vm.selctedNode = node;\r\n            vm.selctedNode.label = node.label;\r\n            vm.selctedNode.labelTranslation = node.labelTranslation;\r\n        } else {\r\n            if (vm.parentRadiologyTestsGroupId == undefined) {\r\n                vm.treeDataSourceItems.push(node);\r\n            } else {\r\n                vm.selctedNode.children.push(node);\r\n            }\r\n        }\r\n    }\r\n    setIsNewValue(val: any) {\r\n        this.isNew = val;\r\n    }\r\n    closeRadiologyTestsAndGroupsPopup() {\r\n        this.toSaveRadiologyTestsGroupId = '';\r\n        this.toSaveRadiologyTestId = '';\r\n        this.selectedNode = {};\r\n        this.btnClosePopup.nativeElement.click();\r\n    }\r\n\r\n    handleUserInterfaceViews(user: any) {\r\n        if (user.permissions != undefined) {\r\n\r\n            for (let item of user.permissions) {\r\n                if (item.permission.key == this.key.Coding) {\r\n                    if (item.fullControl == true || item.add)\r\n                        this.enableAddRootBtn = true;// then any add button should be enabled\r\n                    if (item.fullControl == true || item.edit)\r\n                        this.enableEditBtn = true;\r\n                    if (item.fullControl == true || item.activate)\r\n                        this.enableActivateBtn = true;\r\n                    if (item.fullControl || item.add || item.edit)\r\n                        this.enableSaveBtn = true;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n","<div *ngIf=\"showProgress\">\r\n    <loading></loading>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <clinic-tab [isRadiologyTestsSelected]='selectRadiologyTestsTab' *ngIf=\"isClinicAdmin\"></clinic-tab>\r\n    <shared-tabs [isRadiologyTestsSelected]='selectRadiologyTestsTab' *ngIf=\"!isClinicAdmin\"></shared-tabs>\r\n    <div class=\"row \">\r\n        <div class=\"row \">\r\n            <div class=\"NBbreadcrumb\">\r\n                <a>{{ 'Clinic' | translate}}</a> &nbsp;/\r\n                {{ 'RadiologyTests' | translate}}\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <div>\r\n            <div class=\"row well\">\r\n                <div class=\"\">\r\n                    <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#RadiologyTestsAndGroupsPopup\" (click)=\"passParentGroupInfo('')\" disabled=\"{{ enableAddRootBtn || isClinicAdmin ? '' :'disabled'}}\">{{ 'AddRootRadiologyTestsGroup' | translate}}</button>\r\n                    <button type=\"button\" class=\"hidden\" #btnAddRadiologyTestsGroup data-toggle=\"modal\" data-target=\"#RadiologyTestsAndGroupsPopup\"></button>\r\n                    <button type=\"button\" class=\"btn btn-primary\" (click)=\"expandAll()\">{{ 'ExpandAll' | translate}}</button>\r\n                    <button type=\"button\" class=\"btn btn-primary\" (click)=\"collapseAll()\">{{ 'CollapseAll' | translate}}</button>\r\n                    <print-page [section]='toPrintDiv'></print-page>\r\n                </div>\r\n                <br />\r\n                <div class=\"row nopadding\">\r\n                    <div class=\"col-md-5 nopadding\">\r\n                        <div class=\"inner-addon left-addon\">\r\n                            <i class=\"glyphicon glyphicon-search\"></i>\r\n                            <input [placeholder]=\"'SearchByNameorCode' | translate\" class=\"inputSearch form-control\" [(ngModel)]=\"filterString\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <br />\r\n            <div id=\"print-section\" class=\"\">\r\n                \r\n                <div class=\"row well\">\r\n                    <p-tree [value]=\"treeDataSourceItems | filterbynameorcode:filterString : leafType\" selectionMode=\"single\" [(selection)]=\"selectedNode\">\r\n                        <ng-template let-node pTemplate=\"RadiologyTest\">\r\n                            <span class=\"nav-icon\"><i class=\"fa fa-cube\"></i></span>\r\n                            &nbsp;\r\n                            {{selectedLang === 'ar' ?  node.label : node.labelTranslation}}\r\n                            &nbsp; &nbsp;\r\n                            <a [class.disabled]=\"!enableEditBtn && !isClinicAdmin ? true : null\">\r\n                                <i class=\"fa fa-pencil fa-2x\" (click)=\"displayPopup(node)\" style=\"color: #32bea6;\"></i>\r\n\r\n                            </a>\r\n                            <label>\r\n                                <input id=\"ChkIsActiveInGrid\" name=\"ChkIsActiveInGrid\" class=\"ace ace-switch ace-switch-6\"\r\n                                       type=\"checkbox\" [checked]=\"node.isActive\"\r\n                                       (click)=\"changeActivation(node, $event)\" disabled=\"{{ enableActivateBtn || isClinicAdmin? '' :'disabled'}}\" />\r\n                                <span class=\"lbl\"></span>\r\n                            </label>\r\n                        </ng-template>\r\n                        <ng-template let-node pTemplate=\"RadiologyTestsGroup\">\r\n                            <span class=\"nav-icon\"><i class=\"fa fa-cubes\"></i></span>\r\n                            &nbsp;\r\n                            {{selectedLang === 'ar' ?  node.label : node.labelTranslation}}\r\n                            &nbsp; &nbsp;\r\n                            <a #btnAddRadiologyTestsGroup data-toggle=\"modal\" data-target=\"#RadiologyTestsAndGroupsPopup\" [class.disabled]=\"!enableAddRootBtn && !isClinicAdmin ? true : null\">\r\n                                <img src=\"assets/images/addImage.png\" (click)=\"passParentGroupInfo(node)\" />\r\n                            </a>\r\n                            &nbsp; &nbsp;\r\n                            <a [class.disabled]=\"!enableEditBtn && !isClinicAdmin ? true : null\">\r\n                                <i class=\"fa fa-pencil fa-2x\" (click)=\"displayPopup(node)\" style=\"color: #32bea6;\"></i>\r\n\r\n                            </a>\r\n                            <label>\r\n                                <input id=\"ChkIsActiveInGrid\" name=\"ChkIsActiveInGrid\" class=\"ace ace-switch ace-switch-6\"\r\n                                       type=\"checkbox\" [checked]=\"node.isActive\"\r\n                                       (click)=\"changeActivation(node, $event)\" disabled=\"{{ enableActivateBtn || isClinicAdmin? '' :'disabled'}}\" />\r\n                                <span class=\"lbl\"></span>\r\n                            </label>\r\n                        </ng-template>\r\n                    </p-tree>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- Radiology Tests Modal -->\r\n<div id=\"RadiologyTestsAndGroupsPopup\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" #btnClosePopup data-dismiss=\"modal\" (click)=\"closeRadiologyTestsAndGroupsPopup()\">&times;</button>\r\n                <h4 class=\"modal-title\">{{txtHeaderModal}}</h4>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <div class=\"col-sm-offset-2 col-md-8\">\r\n                    <table>\r\n                        <tr>\r\n                            <td *ngFor=\"let item of rbSelections; let idx = index\">\r\n                                <input type=\"radio\" name=\"radiogroup\" [value]=\"item.value\"\r\n                                       [checked]=\"item.value == selectedAction\" #checkbox (change)=\"onCheckboxSelectionChange(checkbox.value)\" disabled=\"{{ enableCheckBox ? '' :'disabled'}}\">{{item.text| translate}}\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            <div *ngIf=\"isRadiologyTestSelected\">\r\n                <clinic-manage-radiology-test [selectedRadiologyTestId]='toSaveRadiologyTestId' [selectedParentGroupId]='parentRadiologyTestsGroupId' [isClinicAdmin]=\"isClinicAdmin\" [enableSaveBtn]=\"enableSaveBtn\"\r\n                                              [selectedParentGroupName]='parentRadiologyTestsGroupName' (onRadiologyTestChanged)=\"updateSelectedNode($event)\" (onIsNew)=\"setIsNewValue($event)\" (onCancel)=\"closeRadiologyTestsAndGroupsPopup()\"></clinic-manage-radiology-test>\r\n            </div>\r\n            <div *ngIf=\"isRadiologyTestsGroupSelected\">\r\n                <clinic-manage-radiology-tests-group [selectedRadiologyTestsGroupId]='toSaveRadiologyTestsGroupId' [selectedParentGroupId]='parentRadiologyTestsGroupId' [isClinicAdmin]=\"isClinicAdmin\" [enableSaveBtn]=\"enableSaveBtn\"\r\n                                                     [selectedParentGroupName]='parentRadiologyTestsGroupName' (onRadiologyTestsGroupChanged)=\"updateSelectedNode($event)\" (onIsNew)=\"setIsNewValue($event)\" (onCancel)=\"closeRadiologyTestsAndGroupsPopup()\"></clinic-manage-radiology-tests-group>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n","import { Component, OnInit, OnChanges, SimpleChanges, Input, Output, EventEmitter } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\nimport { ClinicService } from '../../shared/clinic.service';\r\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\r\n@Component({\r\n\r\n    selector: 'clinic-manage-radiology-test',\r\n    templateUrl: './clinic-manage-radiology-test.component.html'\r\n})\r\n\r\nexport class ClinicManageRadiologyTestComponent implements OnChanges {\r\n\r\n    @Input() selectedRadiologyTestId: string = '';\r\n    @Input() selectedParentGroupId: string = '';\r\n    @Input() selectedParentGroupName: string = '';\r\n    @Input() isClinicAdmin: boolean = false;\r\n    @Input() enableSaveBtn: boolean = false;\r\n    @Output() onRadiologyTestChanged: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() onIsNew: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n    @Output() onCancel = new EventEmitter();\r\n\r\n    selectRadiologyTestsTab: boolean = true;\r\n    active: boolean = true;\r\n    showProgress = false;\r\n    selectedRadiologyTest: any = {};\r\n    selectedLang = 'ar';\r\n\r\n    constructor(public toastr: ToastrService\r\n        , private clinicService: ClinicService\r\n        , private localStorage: LocalStorageService\r\n        , public translate: TranslateService) { }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        this.selectedLang = this.localStorage.retrieve(\"selectedLanguage\");\r\n        if (this.selectedRadiologyTestId && this.selectedRadiologyTestId != '') {\r\n            let thisComponent = this;\r\n            thisComponent.showProgress = true;\r\n            this.clinicService.getRadiologyTestById(thisComponent.selectedRadiologyTestId)\r\n                .subscribe(\r\n                    function (radiologyTest: any) {\r\n                        thisComponent.selectedRadiologyTest = radiologyTest;\r\n                        thisComponent.selectedParentGroupId = radiologyTest.parentGroupId;\r\n                        if (thisComponent.selectedLang == 'ar')\r\n                            thisComponent.selectedParentGroupName = radiologyTest.parentGroupName;\r\n                        else\r\n                            thisComponent.selectedParentGroupName = radiologyTest.parentGroupNameTranslation;\r\n\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () { // finally\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n        }\r\n        else {\r\n            this.clearControl();\r\n        }\r\n    }\r\n\r\n    saveRadiologyTest(): void {\r\n        let thisComponent = this;\r\n        thisComponent.showProgress = true;\r\n        this.selectedRadiologyTest.parentGroupId = this.selectedParentGroupId;\r\n\r\n        if (this.selectedRadiologyTest.id > 0) {\r\n            //Update\r\n            this.clinicService.updateRadiologyTest(this.selectedRadiologyTest)\r\n                .subscribe(\r\n                    function (response: any) {\r\n\r\n                        //thisComponent.selectedRadiologyTest = response;\r\n                        thisComponent.onIsNew.emit(false);\r\n                        thisComponent.onRadiologyTestChanged.emit(response);\r\n                        let msg = thisComponent.translate.instant(\"SavedSuccessfully\");\r\n                        thisComponent.toastr.success(msg, '');\r\n                        thisComponent.clearControl();\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n                        thisComponent.clearControl();\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () {\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n\r\n        }\r\n        else {\r\n            //New\r\n            this.clinicService.createRadiologyTest(this.selectedRadiologyTest)\r\n                .subscribe(\r\n                    function (response: any) {\r\n\r\n                        // thisComponent.selectedRadiologyTest = response;\r\n                        thisComponent.onIsNew.emit(true);\r\n                        thisComponent.onRadiologyTestChanged.emit(response);\r\n                        let msg = thisComponent.translate.instant(\"SavedSuccessfully\");\r\n                        thisComponent.toastr.success(msg, '');\r\n                        thisComponent.clearControl();\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n                        thisComponent.clearControl();\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () {\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n        }\r\n    }\r\n\r\n    clearControl(): void {\r\n        this.selectedRadiologyTest = {};\r\n        this.active = false;\r\n        setTimeout(() => this.active = true, 0);\r\n    }\r\n\r\n    cancelRadiologyTest(): void {\r\n        this.clearControl();\r\n        this.onCancel.emit();\r\n    }\r\n\r\n}","<form *ngIf=\"active\" class=\"form-horizontal\" name=\"manageRadiologyTestForm\" #manageRadiologyTestForm=\"ngForm\">\r\n    <div class=\"modal-body\">\r\n        <div class=\"form-group\">\r\n            <label for=\"txtName\" class=\"control-label col-md-3\"> {{ 'ParentGroup' | translate}}</label>\r\n            <div class=\"col-md-9\">\r\n                {{selectedParentGroupName}}\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"txtRadiologyTestCode\" class=\"control-label col-md-3\"> {{ 'Code' | translate}}</label>\r\n            <div class=\"col-md-3\">\r\n                <input id=\"txtRadiologyTestCode\" name=\"txtRadiologyTestCode\" class=\"form-control\" [(ngModel)]='selectedRadiologyTest.code' #txtRadiologyTestCode=\"ngModel\" required />\r\n                <div [hidden]=\"txtRadiologyTestCode.valid || txtRadiologyTestCode.pristine\" class=\"alert alert-danger\">\r\n                    {{ 'RequiredField' | translate}}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"txtName\" class=\"control-label col-md-3\"> {{ 'ArabicName' | translate}}</label>\r\n            <div class=\"col-md-9\">\r\n                <input id=\"txtName\" name=\"txtName\" class=\"form-control\" [(ngModel)]='selectedRadiologyTest.name' #txtName=\"ngModel\" required />\r\n                <div [hidden]=\"txtName.valid || txtName.pristine\" class=\"alert alert-danger\">\r\n                    {{ 'RequiredField' | translate}}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"txtNameTranslation\" class=\"control-label col-md-3\"> {{ 'EnglishName' | translate}}</label>\r\n            <div class=\"col-md-9\">\r\n                <input id=\"txtNameTranslation\" name=\"txtNameTranslation\" class=\"form-control\" [(ngModel)]='selectedRadiologyTest.nameTranslation' #txtNameTranslation=\"ngModel\" required />\r\n                <div [hidden]=\"txtNameTranslation.valid || txtNameTranslation.pristine\" class=\"alert alert-danger\">\r\n                    {{ 'RequiredField' | translate}}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"txtRadiologyTestRemark\" class=\"control-label col-md-3\"> {{ 'Remark' | translate}}</label>\r\n            <div class=\"col-md-6\">\r\n                <textarea id=\"txtRadiologyTestRemark\" name=\"txtRadiologyTestRemark\" class=\"form-control\" [(ngModel)]='selectedRadiologyTest.description'></textarea>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n        <div class=\"text-center\">\r\n            <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" [disabled]=\"!manageRadiologyTestForm.valid ||(!enableSaveBtn && !isClinicAdmin)\" (click)=\"saveRadiologyTest()\">{{ 'Save' | translate}}</button>\r\n            <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" (click)=\"cancelRadiologyTest()\">{{ 'Cancel' | translate}}</button>\r\n        </div>\r\n    </div>\r\n</form>","import { Component, OnInit, OnChanges, SimpleChanges, Input, Output, EventEmitter } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\n\r\nimport { ClinicService } from '../../shared/clinic.service';\r\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\r\n@Component({\r\n    selector: 'clinic-manage-radiology-tests-group',\r\n    templateUrl: './clinic-manage-radiology-tests-group.component.html'\r\n})\r\n\r\nexport class ClinicManageRadiologyTestsGroupComponent implements OnInit, OnChanges {\r\n\r\n    @Input() selectedRadiologyTestsGroupId: string = '';\r\n    @Input() selectedParentGroupId: string = '';\r\n    @Input() selectedParentGroupName: string = '';\r\n    @Input() isClinicAdmin: boolean = false;\r\n    @Input() enableSaveBtn: boolean = false;\r\n    @Output() onRadiologyTestsGroupChanged: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() onIsNew: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n    @Output() onCancel = new EventEmitter();\r\n\r\n    selectedClinicId!: number;\r\n    selectRadiologyTestsTab: boolean = true;\r\n    active: boolean = true;\r\n    showProgress = false;\r\n    selectedRadiologyTestsGroup: any = {};\r\n    selectedLang = 'ar';\r\n\r\n    constructor(public toastr: ToastrService\r\n        , private localStorage: LocalStorageService\r\n        , private clinicService: ClinicService\r\n        , public translate: TranslateService) { }\r\n\r\n    ngOnInit(): void {\r\n        this.selectedClinicId = this.localStorage.retrieve(\"ClinicID\");\r\n    }\r\n\r\n    //get data according to selected type \r\n    ngOnChanges(changes: SimpleChanges) {\r\n        this.selectedLang = this.localStorage.retrieve(\"selectedLanguage\");\r\n        if (this.selectedRadiologyTestsGroupId && this.selectedRadiologyTestsGroupId != '') {\r\n            let thisComponent = this;\r\n            thisComponent.showProgress = true;\r\n            this.clinicService.getRadiologyTestsGroupById(thisComponent.selectedRadiologyTestsGroupId)\r\n                .subscribe(\r\n                    function (radiologyTestsGroup: any) {\r\n                        thisComponent.selectedRadiologyTestsGroup = radiologyTestsGroup;\r\n                        thisComponent.selectedParentGroupId = radiologyTestsGroup.parentGroupId;\r\n                        if (thisComponent.selectedLang == 'ar')\r\n                            thisComponent.selectedParentGroupName = radiologyTestsGroup.parentGroupName;\r\n                        else\r\n                            thisComponent.selectedParentGroupName = radiologyTestsGroup.parentGroupNameTranslation;\r\n\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () { // finally\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n        }\r\n        else {\r\n            this.clearControl();\r\n        }\r\n    }\r\n\r\n\r\n    saveRadiologyTestsGroup(): void {\r\n        let thisComponent = this;\r\n        thisComponent.showProgress = true;\r\n        this.selectedRadiologyTestsGroup.parentGroupId = this.selectedParentGroupId;\r\n        this.selectedRadiologyTestsGroup.clinicId = this.selectedClinicId\r\n        if (this.selectedRadiologyTestsGroup.id > 0) {\r\n            //Update\r\n            this.clinicService.updateRadiologyTestsGroup(this.selectedRadiologyTestsGroup)\r\n                .subscribe(\r\n                    function (response: any) {\r\n\r\n                        thisComponent.onIsNew.emit(false);\r\n                        thisComponent.onRadiologyTestsGroupChanged.emit(response);\r\n                        let msg = thisComponent.translate.instant(\"SavedSuccessfully\");\r\n                        thisComponent.toastr.success(msg, '');\r\n                        thisComponent.clearControl();\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n                        thisComponent.clearControl();\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () {\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n\r\n        }\r\n        else {\r\n            //New\r\n            this.clinicService.createRadiologyTestsGroup(this.selectedRadiologyTestsGroup)\r\n                .subscribe(\r\n                    function (response: any) {\r\n\r\n                        thisComponent.onIsNew.emit(true);\r\n                        thisComponent.onRadiologyTestsGroupChanged.emit(response);\r\n                        let msg = thisComponent.translate.instant(\"SavedSuccessfully\");\r\n                        thisComponent.toastr.success(msg, '');\r\n                        thisComponent.clearControl();\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n                        thisComponent.clearControl();\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () {\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n        }\r\n    }\r\n\r\n    clearControl(): void {\r\n        this.selectedRadiologyTestsGroup = {};\r\n        this.active = false;\r\n        setTimeout(() => this.active = true, 0);\r\n    }\r\n\r\n    cancelRadiologyTestsGroup(): void {\r\n        this.clearControl();\r\n        this.onCancel.emit();\r\n    }\r\n}","<form *ngIf=\"active\" class=\"form-horizontal\" name=\"manageRadiologyTestsGroupForm\" #manageRadiologyTestsGroupForm=\"ngForm\">\r\n    <div class=\"modal-body\">\r\n        <div class=\"form-group\">\r\n            <label for=\"txtName\" class=\"control-label col-md-3\"> {{ 'ParentGroup' | translate}}</label>\r\n            <div class=\"col-md-9\">\r\n                {{selectedParentGroupName}}\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"txtName\" class=\"control-label col-md-3\">{{ 'ArabicName' | translate}}</label>\r\n            <div class=\"col-md-9\">\r\n                <input id=\"txtName\" name=\"txtName\" class=\"form-control\" [(ngModel)]='selectedRadiologyTestsGroup.name' #txtName=\"ngModel\" required />\r\n                <div [hidden]=\"txtName.valid || txtName.pristine\" class=\"alert alert-danger\">\r\n                    {{ 'RequiredField' | translate}}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"txtNameTranslation\" class=\"control-label col-md-3\"> {{ 'EnglishName' | translate}}</label>\r\n            <div class=\"col-md-9\">\r\n                <input id=\"txtNameTranslation\" name=\"txtNameTranslation\" class=\"form-control\" [(ngModel)]='selectedRadiologyTestsGroup.nameTranslation' #txtNameTranslation=\"ngModel\" required />\r\n                <div [hidden]=\"txtNameTranslation.valid || txtNameTranslation.pristine\" class=\"alert alert-danger\">\r\n                    {{ 'RequiredField' | translate}}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"txtRadiologyTestsGroupRemark\" class=\"control-label col-md-3\"> {{ 'Remark' | translate}}</label>\r\n            <div class=\"col-md-6\">\r\n                <textarea id=\"txtRadiologyTestsGroupRemark\" name=\"txtRadiologyTestsGroupRemark\" class=\"form-control\" [(ngModel)]='selectedRadiologyTestsGroup.description'></textarea>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n        <div class=\"text-center\">\r\n            <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" [disabled]=\"!manageRadiologyTestsGroupForm.valid ||(!enableSaveBtn && !isClinicAdmin)\" (click)=\"saveRadiologyTestsGroup()\">{{ 'Save' | translate}}</button>\r\n            <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" (click)=\"cancelRadiologyTestsGroup()\">{{ 'Cancel' | translate}}</button>\r\n        </div>\r\n    </div>\r\n</form>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\n\r\n@Component({\r\n\r\n    selector: 'clinic-reports',\r\n    templateUrl: './clinic-reports.component.html'\r\n})\r\n\r\nexport class ClinicReportsComponent {\r\n    selectReportsTab: boolean = true;\r\n    showProgress!: boolean;\r\n\r\n    clinicId = '';\r\n\r\n    constructor(private _route: ActivatedRoute\r\n        , public storage: LocalStorageService) { }\r\n\r\n\r\n\r\n\r\n\r\n    ngOnInit(): void {\r\n\r\n        this.clinicId = this.storage.retrieve(\"ClinicID\");\r\n\r\n    }\r\n\r\n    openReport(reportName: string) {\r\n\r\n        let lang = this.storage.retrieve(\"SelectedLanguage\");\r\n\r\n        if (lang == null || lang == undefined)\r\n            lang = 'ar';\r\n\r\n        let url = 'reports/' + reportName + \"/\" + \"ReportViewer.aspx?lang=\" + lang + \"&id=\" + this.clinicId;\r\n\r\n        window.open(url);\r\n    }\r\n\r\n}","<div *ngIf=\"showProgress\">\r\n    <loading></loading>\r\n</div>\r\n\r\n<div class=\"row well\">\r\n\r\n    <clinic-tab [isReportsSelected]='selectReportsTab'></clinic-tab>\r\n    <div class=\"row nopadding\">\r\n        <div class=\"row NBbreadcrumb\">\r\n            <a>{{ 'Clinic' | translate}}</a> &nbsp;/\r\n            {{ 'Reports' | translate}}\r\n        </div>\r\n\r\n        <div class=\"col-md-6\">\r\n            <br />\r\n            <h4 class=\"applyReportStyle h4Deco \">\r\n                <a (click)=\"openReport('ResourcesRevenueDetailsReport')\" class=\"linkColorForReport pointer\">\r\n                    {{ 'ResourcesRevenueDetailsReport' | translate}}\r\n                    <i class=\"iconReportStyle fa fa-file ml-2\"></i>\r\n                </a>\r\n            </h4>\r\n        </div>\r\n        <br /> <br />\r\n        <div class=\"col-md-6\">\r\n            <br />\r\n            <h4 class=\"applyReportStyle h4Deco \">\r\n                <a (click)=\"openReport('PatientsVisitsInPeriodReport')\" class=\"linkColorForReport pointer\">\r\n                    {{ 'PatientsVisitsInPeriodReport' | translate}}\r\n                    <i class=\"iconReportStyle fa fa-file ml-2\"></i>\r\n                </a>\r\n            </h4>\r\n\r\n        </div>\r\n        <div class=\"col-md-6\">\r\n            <br />\r\n            <h4 class=\"applyReportStyle h4Deco \">\r\n                <a (click)=\"openReport('UpcomingAppointmentsReport')\" class=\"linkColorForReport pointer\">\r\n                    {{ 'UpcomingAppointmentsReport' | translate}}\r\n                    <i class=\"iconReportStyle fa fa-file ml-2\"></i>\r\n                </a>\r\n            </h4>\r\n\r\n\r\n        </div>\r\n        <br /> <br />\r\n        <div class=\"col-md-6\">\r\n            <br />\r\n            <h4 class=\"applyReportStyle h4Deco \">\r\n                <a (click)=\"openReport('PatientTransactionsHistoryReport')\" class=\"linkColorForReport pointer\">\r\n                    {{ 'PatientTransactionsHistoryReport' | translate}}\r\n                    <i class=\"iconReportStyle fa fa-file ml-2\"></i>\r\n                </a>\r\n            </h4>\r\n\r\n        </div>\r\n        <div class=\"col-md-6\">\r\n            <br />\r\n            <h4 class=\"applyReportStyle h4Deco \">\r\n                <a (click)=\"openReport('ResourceCollectionDetailsReport')\" class=\"linkColorForReport pointer\">\r\n                    {{ 'ResourceCollectionDetailsReport' | translate}}\r\n                    <i class=\"iconReportStyle fa fa-file ml-2\"></i>\r\n                </a>\r\n            </h4>\r\n\r\n        </div>\r\n        <br /><br />\r\n        <div class=\"col-md-6\">\r\n            <br />\r\n            <h4 class=\"applyReportStyle h4Deco \">\r\n                <a (click)=\"openReport('CashierReport')\" class=\"linkColorForReport pointer\">\r\n                    {{ 'CashierReport' | translate}}\r\n                    <i class=\"iconReportStyle fa fa-file ml-2\"></i>\r\n                </a>\r\n            </h4>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n","import { Component, OnInit, ViewChild, ElementRef, Input, OnChanges, SimpleChanges, Output, EventEmitter } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\n\r\nimport { TreeNode } from 'primeng/api';\r\nimport { ClinicService } from '../shared/clinic.service';\r\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\r\n@Component({\r\n\r\n    selector: 'clinic-service-details',\r\n    templateUrl: './clinic-service-details.component.html'\r\n})\r\n\r\nexport class ClinicServiceDetailsComponent implements OnChanges {\r\n    @Input() serviceId: string = '';\r\n    @Input() treeDataSourceItems: any[] = [];\r\n    @Output() onServiceChanged = new EventEmitter();\r\n    @Output() serviceIdValue: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n    selectServicesTab: boolean = true;\r\n    active: boolean = true;\r\n    model: any = {};\r\n    showProgress = false;\r\n    selectedGroupNode!: TreeNode;\r\n    parentId!: any;\r\n    @ViewChild('btnAddDiagnoseGroup') btnAddDiagnoseGroup!: ElementRef;\r\n    @ViewChild('btnAddDiagnose') btnAddDiagnose!: ElementRef;\r\n\r\n    constructor(public toastr: ToastrService\r\n        , private clinicService: ClinicService\r\n        , public translate: TranslateService) { }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        let thisComponent = this;\r\n        // thisComponent.showProgress = true;\r\n        if (this.serviceId.toString().toLowerCase() != 'new') {\r\n            this.clinicService.getServiceById(this.serviceId)\r\n                .subscribe(\r\n                    function (response: any) {\r\n                        thisComponent.model = response;\r\n                        thisComponent.parentId = thisComponent.model.parentId;\r\n                        if (thisComponent.parentId > 0)\r\n                            thisComponent.displaySelectedParentGroupNode(thisComponent.parentId);\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n                    },\r\n                    function () {\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n        }\r\n    }\r\n\r\n    //private\r\n    displaySelectedParentGroupNode(parentGroupId: string) {\r\n        let vm = this\r\n        vm.treeDataSourceItems.forEach(node => {\r\n            vm.displaySelectedNodeRecursive(node, parentGroupId);\r\n\r\n            if (node.data == parentGroupId)\r\n                vm.selectedGroupNode = node;\r\n        });\r\n    }\r\n\r\n    private displaySelectedNodeRecursive(node: TreeNode, parentGroupId: string) {\r\n        if (node.children) {\r\n            node.children.forEach(childNode => {\r\n                this.displaySelectedNodeRecursive(childNode, parentGroupId);\r\n\r\n                if (childNode.data == parentGroupId)\r\n                    this.selectedGroupNode = childNode;\r\n\r\n            });\r\n        }\r\n    }\r\n    saveService(): void {\r\n        let thisComponent = this;\r\n\r\n        if (this.model.id > 0) {\r\n            //Update\r\n            this.clinicService.updateService(this.model)\r\n                .subscribe(\r\n                    function (response: any) {\r\n\r\n                        thisComponent.model = response;\r\n                        let msg = thisComponent.translate.instant(\"SavedSuccessfully\");\r\n                        thisComponent.toastr.success(msg, '');\r\n                        thisComponent.onServiceChanged.emit();\r\n                        thisComponent.serviceIdValue.emit(thisComponent.serviceId);\r\n                        thisComponent.clear();\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () {\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n\r\n        }\r\n        else {\r\n            this.clinicService.createService(this.model)\r\n                .subscribe(\r\n                    function (response: any) {\r\n\r\n                        thisComponent.model = response;\r\n                        let msg = thisComponent.translate.instant(\"SavedSuccessfully\");\r\n                        thisComponent.toastr.success(msg, '');\r\n                        thisComponent.onServiceChanged.emit();\r\n                        thisComponent.serviceIdValue.emit(thisComponent.serviceId);\r\n                        thisComponent.clear();\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () {\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n        }\r\n    }\r\n\r\n    nodeSelect(event: any) {\r\n        this.model.parentId = event.node.data;\r\n    }\r\n    nodeUnselect(event: any) {\r\n        this.model.parentId = '';\r\n    }\r\n\r\n    clear() {\r\n        this.model = {};\r\n        this.serviceId = 'new';\r\n        this.selectedGroupNode = {};\r\n        this.serviceIdValue.emit(this.serviceId);\r\n        this.active = false;\r\n        setTimeout(() => this.active = true, 0);\r\n    }\r\n}","<!-- Service  Modal -->\r\n<div class=\"modal-header\">\r\n    <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n    <h4 class=\"modal-title\">Service</h4>\r\n</div>\r\n<form *ngIf=\"active\" class=\"form-horizontal\" name=\"divisionForm\" #divisionForm=\"ngForm\">\r\n    <div class=\"modal-body\">\r\n        <div class=\"form-group\">\r\n            <label for=\"txtName\" class=\"control-label col-md-3\"> Parent Group</label>\r\n            <div class=\"col-md-6\">\r\n                <div class=\"nopadding treeBorder\">\r\n                    <p-tree [value]=\"treeDataSourceItems\" selectionMode=\"single\" [(selection)]=\"selectedGroupNode\" class=\"height100\" (onNodeSelect)=\"nodeSelect($event)\" (onNodeUnselect)=\"nodeUnselect($event)\">\r\n                    </p-tree>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"txtName\" class=\"control-label col-md-3\"> Name (Arabic)</label>\r\n            <div class=\"col-md-6\">\r\n                <input id=\"txtName\" name=\"txtName\" class=\"form-control\" [(ngModel)]='model.name' #txtName=\"ngModel\" required />\r\n                <div [hidden]=\"txtName.valid || txtName.pristine\" class=\"alert alert-danger\">\r\n                    Arabic Name is required\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"txtNameTranslation\" class=\"control-label col-md-3\"> Name (English)</label>\r\n            <div class=\"col-md-6\">\r\n                <input id=\"txtNameTranslation\" name=\"txtNameTranslation\" class=\"form-control\" [(ngModel)]='model.nameTranslation' #txtNameTranslation=\"ngModel\" required />\r\n                <div [hidden]=\"txtNameTranslation.valid || txtNameTranslation.pristine\" class=\"alert alert-danger\">\r\n                    English Name is required\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"txtServiceCode\" class=\"control-label col-md-3\"> Code</label>\r\n            <div class=\"col-md-3\">\r\n                <input id=\"txtServiceCode\" name=\"txtServiceCode\" class=\"form-control\" [(ngModel)]='model.code' #txtServiceCode=\"ngModel\" />\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"txtclinicFee\" class=\"control-label col-md-3\">Clinic Fees </label>\r\n            <div class=\"col-md-3\">\r\n                <input type=\"number\" id=\"txtclinicFee\" name=\"txtclinicFee\" class=\"form-control\"  [(ngModel)]='model.clinicFee' #txtclinicFee=\"ngModel\" />\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"txtResourceFee\" class=\"control-label col-md-3\">Resource Fees </label>\r\n            <div class=\"col-md-3\">\r\n                <input type=\"number\" id=\"txtResourceFee\" name=\"txtResourceFee\" class=\"form-control\" [(ngModel)]='model.resourceFee' #txtResourceFee=\"ngModel\" />\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label class=\"control-label col-md-3\" for=\"ChkIsExemptedFromVAT \">{{ 'ExemptedFromVAT' | translate}} </label>\r\n            <div class=\"col-md-9\">\r\n                <label>\r\n                    <input id=\"ChkIsExemptedFromVAT\" name=\"ChkIsExemptedFromVAT\" class=\"ace ace-switch ace-switch-6\" type=\"checkbox\" [(ngModel)]=\"model.exemptedFromVAT\" #ChkIsExemptedFromVAT=\"ngModel\" />\r\n                    <span class=\"lbl\"></span>\r\n                </label>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"txtServiceRemark\" class=\"control-label col-md-3\"> Remark</label>\r\n            <div class=\"col-md-6\">\r\n                <textarea id=\"txtServiceRemark\" name=\"txtServiceRemark\" class=\"form-control\" [(ngModel)]='model.description' #txtServiceRemark=\"ngModel\"></textarea>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" (click)=\"saveService()\">Save</button>\r\n        <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" (click)=\"clear()\">Cancel</button>\r\n    </div>\r\n</form>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { Component, OnInit, ViewChild, ElementRef, Input, OnChanges, SimpleChanges, Output, EventEmitter } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { TreeNode } from 'primeng/api';\r\nimport { ClinicService } from '../shared/clinic.service';\r\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\r\n@Component({\r\n    selector: 'clinic-serviceGroup-details',\r\n    templateUrl: './clinic-serviceGroup-details.component.html'\r\n})\r\n\r\nexport class ClinicServiceGroupDetailsComponent implements OnChanges {\r\n    @Input() serviceGroupId: string = '';\r\n    @Input() treeDataSourceItems: any[] = [];\r\n    @Output() onServiceGroupChanged = new EventEmitter();\r\n    @Output() serviceGroupIdValue: EventEmitter<string> = new EventEmitter<string>();\r\n    @Output() selectedGroupNodeValue: EventEmitter<string> = new EventEmitter<string>();\r\n    selectServicesTab: boolean = true;\r\n    active: boolean = true;\r\n    model: any = {};\r\n    selectedGroupNode!: TreeNode;\r\n    tempSelectedGroupNode!: TreeNode;\r\n    showProgress: boolean = false;\r\n\r\n    constructor(public toastr: ToastrService\r\n        , private clinicService: ClinicService\r\n        , public translate: TranslateService) { }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        let thisComponent = this;\r\n        // thisComponent.showProgress = true;\r\n        if (this.serviceGroupId.toString().toLowerCase() != 'new') {\r\n            this.clinicService.getServiceGroupById(this.serviceGroupId)\r\n                .subscribe(\r\n                    function (response: any) {\r\n                        thisComponent.model = response;\r\n                        if (thisComponent.model.parentGroupId > 0) {\r\n                            thisComponent.displaySelectedParentGroupNode(response.parentGroupId);\r\n                        }\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n                    },\r\n                    function () {\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n        }\r\n    }\r\n\r\n    //private\r\n    displaySelectedParentGroupNode(parentGroupId: string) {\r\n        let vm = this\r\n        vm.treeDataSourceItems.forEach(node => {\r\n            vm.displaySelectedNodeRecursive(node, parentGroupId);\r\n\r\n            if (node.data == parentGroupId) {\r\n                vm.selectedGroupNode = node;\r\n            }\r\n\r\n            //if (node.data == vm.serviceGroupId) {\r\n            //    vm.tempSelectedGroupNode = node;\r\n            //}\r\n\r\n        });\r\n    }\r\n\r\n    private displaySelectedNodeRecursive(node: TreeNode, parentGroupId: string) {\r\n        if (node.children) {\r\n            node.children.forEach(childNode => {\r\n                this.displaySelectedNodeRecursive(childNode, parentGroupId);\r\n\r\n                if (childNode.data == parentGroupId) {\r\n                    this.selectedGroupNode = childNode;\r\n                }\r\n\r\n                //if (childNode.data == this.serviceGroupId) {\r\n                //    this.tempSelectedGroupNode = node;\r\n                //}\r\n\r\n\r\n            });\r\n        }\r\n    }\r\n    saveServiceGroup(): void {\r\n        let thisComponent = this;\r\n        //if (thisComponent.selectedGroupNode.data > 0)\r\n        //{\r\n        //    thisComponent.model.parentGroupId = thisComponent.selectedGroupNode.data;\r\n        //}\r\n        if (this.model.id > 0) {\r\n            //Update\r\n            this.clinicService.updateServiceGroup(this.model)\r\n                .subscribe(\r\n                    function (response: any) {\r\n\r\n                        thisComponent.model = response;\r\n                        thisComponent.onServiceGroupChanged.emit();\r\n                        thisComponent.serviceGroupIdValue.emit(thisComponent.serviceGroupId);\r\n                        thisComponent.selectedGroupNodeValue.emit(thisComponent.serviceGroupId);\r\n                        let msg = thisComponent.translate.instant(\"SavedSuccessfully\");\r\n                        thisComponent.toastr.success(msg, '');\r\n                        thisComponent.clear();\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () {\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n\r\n        }\r\n        else {\r\n            this.clinicService.createServiceGroup(this.model)\r\n                .subscribe(\r\n                    function (response: any) {\r\n\r\n                        thisComponent.model = response;\r\n                        let msg = thisComponent.translate.instant(\"SavedSuccessfully\");\r\n                        thisComponent.toastr.success(msg, '');\r\n                        thisComponent.onServiceGroupChanged.emit();\r\n                        thisComponent.serviceGroupIdValue.emit(thisComponent.serviceGroupId);\r\n                        thisComponent.clear();\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () {\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n        }\r\n    }\r\n\r\n    nodeSelect(event: any) {\r\n        this.model.parentGroupId = event.node.data;\r\n    }\r\n    nodeUnselect(event: any) {\r\n        this.model.parentGroupId = '';\r\n    }\r\n\r\n    clear() {\r\n        this.model = {};\r\n        this.serviceGroupId = 'new';\r\n        this.selectedGroupNode = {};\r\n        this.active = false;\r\n        this.serviceGroupIdValue.emit(this.serviceGroupId);\r\n        setTimeout(() => this.active = true, 0);\r\n    }\r\n}"," Services group Modal \r\n<div class=\"modal-header\">\r\n    <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n    <h4 class=\"modal-title\">Service Group</h4>\r\n</div>\r\n<form *ngIf=\"active\" class=\"form-horizontal\" name=\"departmentForm\" #departmentForm=\"ngForm\">\r\n    <div class=\"modal-body\">\r\n        <div class=\"form-group\">\r\n            <label for=\"txtName\" class=\"control-label col-md-3\"> Parent Group</label>\r\n            <div class=\"col-md-6\">\r\n                <div class=\"nopadding treeBorder\">\r\n                    <p-tree [value]=\"treeDataSourceItems\" selectionMode=\"single\"   [(selection)]=\"selectedGroupNode\" class=\"height100\" (onNodeSelect)=\"nodeSelect($event)\" (onNodeUnselect)=\"nodeUnselect($event)\">\r\n                    </p-tree>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"txtName\" class=\"control-label col-md-3\"> Name (Arabic)</label>\r\n            <div class=\"col-md-6\">\r\n                <input id=\"txtName\" name=\"txtName\" class=\"form-control\" [(ngModel)]='model.name' #txtName=\"ngModel\" required />\r\n                <div [hidden]=\"txtName.valid || txtName.pristine\" class=\"alert alert-danger\">\r\n                    Arabic Name is required\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"txtNameTranslation\" class=\"control-label col-md-3\"> Name (English)</label>\r\n            <div class=\"col-md-6\">\r\n                <input id=\"txtNameTranslation\" name=\"txtNameTranslation\" class=\"form-control\" [(ngModel)]='model.nameTranslation' #txtNameTranslation=\"ngModel\" required />\r\n                <div [hidden]=\"txtNameTranslation.valid || txtNameTranslation.pristine\" class=\"alert alert-danger\">\r\n                    English Name is required\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"txtGroupRemark\" class=\"control-label col-md-3\"> Remark</label>\r\n            <div class=\"col-md-6\">\r\n                <textarea id=\"txtGroupRemark\" name=\"txtGroupRemark\" class=\"form-control\" [(ngModel)]='model.description' #txtGroupRemark=\"ngModel\"></textarea>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" (click)=\"saveServiceGroup()\">Save</button>\r\n        <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" (click)=\"clear()\">Cancel</button>\r\n    </div>\r\n</form>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\n\r\nimport { TreeNode } from 'primeng/api';\r\nimport { ClinicService } from '../shared/clinic.service';\r\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\r\n\r\nimport { AccountService } from '../../security/shared/account.service';\r\nimport { UserPermissions } from '../../classes/user-permissions.class';\r\nimport { PermissionKeyEnum } from '../../shared/shared/permission-key.enum';\r\n@Component({\r\n\r\n    selector: 'clinic-servicePackage-details',\r\n    templateUrl: './clinic-servicePackage-details.component.html'\r\n})\r\n\r\nexport class ClinicServicePackageDetailsComponent implements OnInit {\r\n\r\n    filterString!:string;\r\n    leafType: string = 'Service';\r\n\r\n    selectServicePackagesTab: boolean = true;\r\n    selectedClinicId: string = \"0\";\r\n    selectedFile!: TreeNode;\r\n    model: any = {};\r\n    serviceModel: any = {};\r\n    tempServiceModel: any = {};\r\n    showProgress = false;\r\n    teamMembersList!: any[];\r\n    servicesList: any[] = [];\r\n    active = true;\r\n    servicePackageId!: any;\r\n    nodeType = \"\";\r\n    selectedObject: any = {};\r\n    treeDataSourceItems: any[] = [];\r\n    itemToDeleteId!: any;//servicemodel to be deleted\r\n    isGroupSelected = false;\r\n    isNew = true;\r\n    idToBeEdited!: any;\r\n    totalFees: number = 0;\r\n    servicesCost: number = 0;\r\n    @ViewChild('btnServicesGroup') btnServicesGroup!: ElementRef;\r\n    userType: string = '';\r\n    isClinicAdmin: boolean = false;\r\n    userPermisions: UserPermissions = new UserPermissions();\r\n    key: PermissionKeyEnum = new PermissionKeyEnum();\r\n    enableSaveBtn: boolean = false;\r\n    lstToTranslated: string[] = [];\r\n    lstToBeTranslated: string[] = [];\r\n    constructor(private clinicService: ClinicService,\r\n        private localStorage: LocalStorageService\r\n        , public toastr: ToastrService,\r\n        private router: Router,\r\n        private _route: ActivatedRoute\r\n        , public translate: TranslateService\r\n        , public accountService: AccountService) { }\r\n\r\n    ngOnInit(): void {\r\n        let thisComponent = this;\r\n        this.lstToTranslated = ['serviceName', 'serviceNameTranslation'];\r\n        this.lstToBeTranslated = ['label', 'labelTranslation'];\r\n        //     thisComponent.showProgress = true;\r\n        this.selectedClinicId = this.localStorage.retrieve(\"ClinicID\");\r\n        let id = this._route.snapshot.params['id'];\r\n        this.servicePackageId = `${id}`;\r\n\r\n        this.userType = this.localStorage.retrieve(\"UserType\");\r\n        if (this.userType == 'ClinicAdmin')\r\n            this.isClinicAdmin = true;\r\n\r\n        thisComponent.getServiceGroupsForTree();\r\n        // get team member to be updated \r\n        if (thisComponent.servicePackageId.toLowerCase() != 'new') {\r\n\r\n            thisComponent.loadServicePackageModel();\r\n        }\r\n\r\n        if (!this.isClinicAdmin) {\r\n            if (this.accountService.userPermision._isScalar != undefined)\r\n                this.accountService.userPermision.subscribe((item: any) => this.handleUserInterfaceViews(item));\r\n            else\r\n                this.handleUserInterfaceViews(this.accountService.userPermision);\r\n        }\r\n    }\r\n\r\n    getServiceGroupsForTree() {\r\n        let thisComponent = this;\r\n        thisComponent.showProgress = true;\r\n        this.clinicService.getServiceGroupsForTreeView(thisComponent.selectedClinicId)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    thisComponent.treeDataSourceItems = response;\r\n                },\r\n                function (error: any) {\r\n                    thisComponent.toastr.error(error, '');\r\n                    thisComponent.showProgress = false;\r\n                },\r\n                function () { // finally\r\n                    thisComponent.showProgress = false;\r\n                });\r\n    }\r\n    //on submit \r\n    onSubmit(): void {\r\n        let thisComponent = this;\r\n        thisComponent.showProgress = true;\r\n\r\n        thisComponent.updateModelWithServices();\r\n        thisComponent.model.clinicId = thisComponent.selectedClinicId;\r\n        // check if team member id is string \"new\"\r\n        if (isNaN(thisComponent.servicePackageId) && thisComponent.servicePackageId.toLowerCase() == 'new') {\r\n            // Add new\r\n            //  thisComponent.model.projectId = thisComponent.projectId;\r\n            if (thisComponent.servicesList.length > 0) {\r\n                this.clinicService.createServicePackage(thisComponent.model)\r\n                    .subscribe(\r\n                        function (response: any) {\r\n                            let msg = thisComponent.translate.instant(\"SavedSuccessfully\");\r\n                            thisComponent.toastr.success(msg, '');\r\n                            thisComponent.model = response;\r\n                            thisComponent.totalFees = thisComponent.model.totalCost;\r\n                            thisComponent.servicesCost = thisComponent.model.servicesCost;\r\n                            thisComponent.servicePackageId = response.id;\r\n\r\n                            // thisComponent.servicesList = response.services;\r\n                            thisComponent.loadServicePackageModel();\r\n                            thisComponent.navigateToPackages();\r\n\r\n                            thisComponent.filterString = '';\r\n                        },\r\n                        function (error: any) {\r\n                            //console.log(\"Error happened\" + error)\r\n                            thisComponent.toastr.error(error, '');\r\n                            thisComponent.showProgress = false;\r\n                        },\r\n                        function () {\r\n                            thisComponent.showProgress = false;\r\n                        }\r\n                    );\r\n\r\n            } else {\r\n\r\n                let msg = thisComponent.translate.instant(\"Package_ServiceValidation\");\r\n                thisComponent.toastr.error(msg, '');\r\n                thisComponent.showProgress = false;\r\n\r\n            }\r\n\r\n        }\r\n        else {\r\n            // update \r\n            if (thisComponent.servicesList.length > 0) {\r\n                this.clinicService.updateServicePackage(thisComponent.model)\r\n                    .subscribe(\r\n                        function (response: any) {\r\n                            let msg = thisComponent.translate.instant(\"SavedSuccessfully\");\r\n                            thisComponent.toastr.success(msg, '');\r\n                            thisComponent.model = response;\r\n                            thisComponent.totalFees = thisComponent.model.totalCost;\r\n                            thisComponent.servicesCost = thisComponent.model.servicesCost;\r\n                            thisComponent.loadServicePackageModel();\r\n                            thisComponent.filterString = '';\r\n                            //  thisComponent.servicesList = response.services;\r\n                        },\r\n                        function (error: any) {\r\n                            //console.log(\"Error happened\" + error)\r\n                            thisComponent.toastr.error(error, '');\r\n                            thisComponent.showProgress = false;\r\n                        },\r\n                        function () {\r\n                            thisComponent.showProgress = false;\r\n                        });\r\n\r\n            }\r\n            else {\r\n                let msg = thisComponent.translate.instant(\"Package_ServiceValidation\");\r\n                thisComponent.toastr.error(msg, '');\r\n                thisComponent.showProgress = false;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    //clear\r\n    clear(): void {\r\n        if (this.servicePackageId > 0)\r\n            this.loadServicePackageModel();\r\n\r\n        this.active = false;\r\n        setTimeout(() => this.active = true, 0);\r\n        //this.filterString = '';\r\n    }\r\n\r\n    loadServicePackageModel() {\r\n        let thisComponent = this;\r\n        this.clinicService.getServicePackageById(thisComponent.servicePackageId)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    thisComponent.model = response;\r\n                    thisComponent.servicesList = response.services;\r\n                    thisComponent.totalFees = thisComponent.model.totalCost;\r\n                    thisComponent.servicesCost = thisComponent.model.servicesCost;\r\n                    for (let item of thisComponent.servicesList) {\r\n                        item.nodeType = \"Service\";\r\n\r\n                        //thisComponent.strm = 'aaaaa';\r\n                    }\r\n                },\r\n                function (error: any) {\r\n                    thisComponent.toastr.error(error, '');\r\n                },\r\n                function () {\r\n                    thisComponent.showProgress = false;\r\n                });\r\n    }\r\n    nodeSelect(event: any) {\r\n        this.serviceModel.serviceId = event.node.data;\r\n        this.serviceModel.serviceName = event.node.label;\r\n        this.serviceModel.nodeType = event.node.type\r\n        this.serviceModel.serviceTotalCost = event.node.serviceCost;\r\n        this.selectedFile = event.node;\r\n\r\n        //    this.nodeType = event.node.type;\r\n        this.showProgress = false;\r\n    }\r\n    nodeUnselect(event: any) {\r\n        this.serviceModel.serviceId = '';\r\n    }\r\n\r\n    fillServicesList() {\r\n        let vm = this;\r\n        vm.isNew = true;\r\n\r\n        if (this.serviceModel.nodeType.toLocaleLowerCase() == \"service\") {\r\n            //  vm.serviceModel.servicePackageId = vm.servicePackageId;//relation converted to many to many \r\n            vm.tempServiceModel = vm.servicesList.find(srv => srv.serviceId == vm.serviceModel.serviceId);\r\n            if (vm.tempServiceModel == undefined) {\r\n                vm.servicesList.push(vm.serviceModel);\r\n                let msg = vm.translate.instant(\"SavedSuccessfully\");\r\n                vm.toastr.success(msg, '');\r\n\r\n            } else {\r\n\r\n                //vm.toastr.warning('Saved before.');\r\n                let msg = vm.translate.instant(\"ServiceDuplication\");\r\n                vm.toastr.warning(msg, '');\r\n                //vm.deleteItem(vm.serviceModel.serviceId);\r\n                //if (vm.selectedObject != null)\r\n                //{\r\n                //    vm.servicesList.push(vm.selectedObject);\r\n                //}\r\n            }\r\n\r\n            // vm.clearServiceModel();\r\n            vm.updateModelWithServices();\r\n            //  vm.isGroupSelected = false;\r\n        } else {\r\n\r\n            //   vm.toastr.error('you must select service not service group.');\r\n            // vm.RemoveServiceModelFromlist(vm.serviceModel.serviceId);\r\n            //vm.deleteItem(vm.serviceModel.serviceId);\r\n            let msg = vm.translate.instant(\"SelectServiceNotServiceGroup\");\r\n            vm.toastr.warning(msg, '');\r\n            vm.updateModelWithServices();\r\n            //  vm.isGroupSelected = true;\r\n            vm.clearServiceModel();\r\n\r\n        }\r\n\r\n\r\n    }\r\n    updateServicesList() {\r\n        let vm = this;\r\n        vm.isNew = false;\r\n        let count = 0;\r\n        var existElement = this.servicesList.find(o => o.serviceId == vm.serviceModel.serviceId);\r\n\r\n        if (existElement.serviceId == vm.idToBeEdited) {\r\n\r\n            vm.serviceModel = existElement;\r\n            // vm.clearServiceModel();\r\n            vm.updateModelWithServices();\r\n            //vm.toastr.success('Serviceupdated.');\r\n            let msg = vm.translate.instant(\"Serviceupdated\");\r\n            vm.toastr.warning(msg, '');\r\n        } else {//(existElement.serviceId != vm.idToBeEdited) {\r\n            for (let item of vm.servicesList) {\r\n                if (existElement.serviceId == item.serviceId) {\r\n                    count++;\r\n                }\r\n\r\n\r\n            }\r\n            if (count >= 2) {\r\n\r\n                vm.deleteItem(vm.serviceModel.serviceId);\r\n                //vm.clearServiceModel()\r\n                vm.updateModelWithServices();\r\n                //vm.toastr.warning('Service is already exist.');\r\n                let msg = vm.translate.instant(\"ServiceDuplication\");\r\n                vm.toastr.warning(msg, '');\r\n            } else {\r\n\r\n\r\n                vm.serviceModel = existElement;\r\n                // vm.clearServiceModel();\r\n                vm.updateModelWithServices();\r\n                //vm.toastr.success('Service updated.');\r\n                let msg = vm.translate.instant(\"Serviceupdated\");\r\n                vm.toastr.warning(msg, '');\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    clearServiceModel() {\r\n\r\n        this.serviceModel = {};\r\n        this.selectedFile = {};\r\n        this.filterString = '';\r\n    }\r\n    initialize() {\r\n        this.serviceModel = {};\r\n        this.selectedFile = {};\r\n        this.isNew = true;\r\n    }\r\n    updateModelWithServices() {\r\n        ////\r\n        let vm = this;\r\n        vm.servicesCost = 0;\r\n        for (let item of vm.servicesList) {\r\n            //cost of service to be shown in control.\r\n            vm.servicesCost += (item.serviceTotalCost) * (item.quantity);\r\n        }\r\n        this.model.services = vm.servicesList;\r\n\r\n    }\r\n    editItem(serviceId: string): void {\r\n        let vm = this;\r\n        vm.isNew = false;\r\n        vm.selectedObject = {};\r\n        vm.selectedObject = this.servicesList.find(o => o.serviceId == serviceId);\r\n\r\n        if (vm.selectedObject != null || vm.selectedObject != undefined) {\r\n            vm.idToBeEdited = vm.selectedObject.serviceId;\r\n            this.serviceModel = vm.selectedObject;\r\n            vm.displaySelectedParentGroupNode(serviceId);\r\n        }\r\n        //  vm.nodeType = \"service\";\r\n        this.btnServicesGroup.nativeElement.click();\r\n    }\r\n\r\n    deleteItem(id: string): void {\r\n        let vm = this;\r\n        vm.itemToDeleteId = id;\r\n        var selectedObject = vm.servicesList.find(o => o.serviceId == id);\r\n        var index = vm.servicesList.indexOf(selectedObject);\r\n        if (index > -1) {\r\n            vm.servicesList.splice(index, 1);\r\n        }\r\n\r\n    }\r\n\r\n    displaySelectedParentGroupNode(serviceId: string) {\r\n        let vm = this\r\n        vm.treeDataSourceItems.forEach(node => {\r\n            vm.displaySelectedNodeRecursive(node, serviceId);\r\n\r\n            //if (node.data == parentId)\r\n            //    vm.selectedFile = node;\r\n        });\r\n    }\r\n\r\n    private displaySelectedNodeRecursive(node: TreeNode, serviceId: string) {\r\n        let vm = this;\r\n        if (node.children) {\r\n            node.children.forEach((childNode: any) => {\r\n                this.displaySelectedNodeRecursive(childNode, serviceId);\r\n\r\n                if (childNode.data == serviceId && childNode.type.toLocaleLowerCase() == \"service\")\r\n                    this.selectedFile = childNode;\r\n\r\n            });\r\n        }\r\n    }\r\n    public navigateToPackages() {\r\n        this.router.navigate(['/clinic/servicePackages', this.selectedClinicId]);\r\n    }\r\n    sum() {\r\n        let c = Number(this.model.clinicCharge);\r\n        let r = Number(this.model.resourceCharge);\r\n        this.totalFees = c + r;\r\n    }\r\n    handleUserInterfaceViews(user: any) {\r\n        if (user.permissions != undefined) {\r\n\r\n            for (let item of user.permissions) {\r\n                if (item.permission.key == this.key.Coding) {\r\n                    if (item.fullControl || item.add || item.edit)\r\n                        this.enableSaveBtn = true;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n}","<div *ngIf=\"showProgress\">\r\n    <loading></loading>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <clinic-tab [isServicePackagesSelected]='selectServicePackagesTab' *ngIf=\"isClinicAdmin\"></clinic-tab>\r\n    <shared-tabs [isServicePackagesSelected]='selectServicePackagesTab' *ngIf=\"!isClinicAdmin\"></shared-tabs>\r\n    <div class=\"row nopadding\">\r\n        <div class=\"NBbreadcrumb\">\r\n            <a>{{ 'Clinic' | translate}}</a> &nbsp;/\r\n            {{ 'ServicePackage' | translate}}\r\n        </div>\r\n\r\n\r\n        <div class=\"padding5 well\">\r\n\r\n            <form *ngIf=\"active\" class=\"form-horizontal\" name=\"servicePackageForm\" (ngSubmit)=\"onSubmit()\" #servicePackageForm=\"ngForm\">\r\n                <div class=\"form-group\">\r\n                    <div class=\"col-md-4 col-md-offset-2\">\r\n                        <button class=\"btn btn-primary\" [disabled]=\"!servicePackageForm.form.valid || (!enableSaveBtn && !isClinicAdmin)\">{{ 'Save' | translate}}</button>\r\n                        <button type=\"button\" class=\"btn btn-primary\" (click)=\"navigateToPackages()\">{{ 'Back' | translate}}</button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                    <label for=\"txtCode\" class=\"control-label col-md-2\"> {{ 'Code' | translate}}</label>\r\n                    <div class=\"col-md-2\">\r\n                        <input id=\"txtCode\" name=\"txtCode\" class=\"form-control\" [(ngModel)]='model.code' #txtCode=\"ngModel\" required />\r\n                        <div [hidden]=\"txtCode.valid || txtCode.pristine\" class=\"alert alert-danger\">\r\n                           {{ 'RequiredField' | translate}}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                    <label for=\"txtName\" class=\"control-label col-md-2\"> {{ 'ArabicName' | translate}}</label>\r\n                    <div class=\"col-md-10\">\r\n                        <input id=\"txtName\" name=\"txtName\" class=\"form-control\" [(ngModel)]='model.name' #txtName=\"ngModel\" required />\r\n                        <div [hidden]=\"txtName.valid || txtName.pristine\" class=\"alert alert-danger\">\r\n                            {{ 'RequiredField' | translate}}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"txtNameTranslation\" class=\"control-label col-md-2\"> {{ 'EnglishName' | translate}}</label>\r\n                    <div class=\"col-md-10\">\r\n                        <input id=\"txtNameTranslation\" name=\"txtNameTranslation\" class=\"form-control\" [(ngModel)]='model.nameTranslation' #txtNameTranslation=\"ngModel\" required />\r\n                        <div [hidden]=\"txtNameTranslation.valid || txtNameTranslation.pristine\" class=\"alert alert-danger\">\r\n                            {{ 'RequiredField' | translate}}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <!--<div class=\"form-group\">\r\n                    <label for=\"txtNameTranslation\" class=\"control-label col-md-2\"> Services</label>\r\n                    <div class=\"col-md-4\">\r\n                        <div class=\"nopadding treeBorder\" style=\"height:180px;\">\r\n                            <p-tree [value]=\"services\" selectionMode=\"checkbox\" [(selection)]=\"selectedFiles\"\r\n                                    (onNodeSelect)=\"nodeSelect($event)\" (onNodeUnselect)=\"nodeUnselect($event)\"></p-tree>\r\n                        </div>\r\n                    </div>\r\n                </div>-->\r\n\r\n                <div class=\"form-group\">\r\n                    <label for=\"txtClinicCharge\" class=\"control-label col-md-2\"> {{ 'ClinicCharges' | translate}}</label>\r\n                    <div class=\"col-md-2\">\r\n                        <input type=\"number\" id=\"txtClinicCharge\" name=\"txtClinicCharge\" class=\"form-control\" [(ngModel)]='model.clinicCharge' #txtClinicCharge=\"ngModel\" required on-keyup=\"sum()\" />\r\n                        <div [hidden]=\"txtClinicCharge.valid || txtClinicCharge.pristine\" class=\"alert alert-danger\">\r\n                            {{ 'RequiredField' | translate}}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"txtResourcecharge\" class=\"control-label col-md-2\"> {{ 'ResourceCharges' | translate}}</label>\r\n                    <div class=\"col-md-2\">\r\n                        <input type=\"number\" id=\"txtResourcecharge\" name=\"txtResourcecharge\" class=\"form-control\" [(ngModel)]='model.resourceCharge' #txtResourcecharge=\"ngModel\" required on-keyup=\"sum()\" />\r\n                        <div [hidden]=\"txtResourcecharge.valid || txtResourcecharge.pristine\" class=\"alert alert-danger\">\r\n                            {{ 'RequiredField' | translate}}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"txtTotalFees\" class=\"control-label col-md-2\">{{ 'TotalFees' | translate}}</label>\r\n                    <div class=\"col-md-3\">\r\n                        <input id=\"txtTotalFees\" name=\"txtTotalFees\" class=\"form-control\" [value]=\"totalFees\" disabled />\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"txtPackageAcitvation\" class=\"control-label col-md-2\"> {{ 'Acitve' | translate}}</label>\r\n                    <div class=\"col-md-3\">\r\n                        <label>\r\n                            <input id=\"ChkIsActiveInGrid\" name=\"ChkIsActiveInGrid\" [(ngModel)]='model.isActive' class=\"ace ace-switch ace-switch-6\" type=\"checkbox\"  />\r\n                            <span class=\"lbl\"></span>\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"txtPackageRemark\" class=\"control-label col-md-2\"> {{ 'Remark' | translate}}</label>\r\n                    <div class=\"col-md-4\">\r\n                        <textarea id=\"txtPackageRemark\" name=\"txtPackageRemark\" class=\"form-control\" [(ngModel)]='model.description' #txtPackageRemark=\"ngModel\"></textarea>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"txtServicesCost\" class=\"control-label col-md-2\"> {{ 'ServicesCost' | translate}}</label>\r\n                    <div class=\"col-md-2\">\r\n                        <input type=\"number\" disabled id=\"txtServicesCost\" name=\"txtServicesCost\" class=\"form-control\" [value]=\"servicesCost\" />\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <div class=\"col-md-4 col-md-offset-2\">\r\n                        <button #AddServiceGroup type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#ServicesGroupPopup\" (click)=\"initialize()\">New Service</button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                    <label for=\"ddlServices\" class=\"control-label col-md-2\">{{ 'Services' | translate}}</label>\r\n                    <div class=\"col-md-10\">\r\n                        <table class=\"table table-responsive table-hover table-bordered\">\r\n                            <tr *ngFor=\"let item of servicesList | translateObjects  : null : null : lstToTranslated\">\r\n                                <td>\r\n                                    {{item.serviceName}}\r\n                                </td>\r\n                                <td>\r\n                                    {{item.quantity}}\r\n                                </td>\r\n                                <td>\r\n\r\n                                    <a (click)=\"editItem(item.serviceId)\" class=\"pointer\">{{ 'Edit' | translate}}</a>\r\n                                </td>\r\n                                <td>\r\n                                    <a (click)=\"deleteItem(item.serviceId)\" class=\"pointer\">{{ 'Delete' | translate}}</a>\r\n                                </td>\r\n                            </tr>\r\n                        </table>\r\n\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <div class=\"col-md-4 col-md-offset-2\">\r\n                        <button class=\"btn btn-primary\" [disabled]=\"!servicePackageForm.form.valid || (!enableSaveBtn && !isClinicAdmin)\">{{ 'Save' | translate}}</button>\r\n                        <button type=\"button\" class=\"btn btn-primary\" (click)=\"navigateToPackages()\">{{ 'Back' | translate}}</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n\r\n\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<button type=\"button\" data-toggle=\"modal\" data-target=\"#ServicesGroupPopup\" style=\"display:none\" #btnServicesGroup></button>\r\n<div id=\"ServicesGroupPopup\" #ServicesGroupPopup class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog width75percent\">\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n            <!-- Services group Modal -->\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">{{ 'Service' | translate}}</h4>\r\n            </div>\r\n\r\n            <form *ngIf=\"active\" class=\"form-horizontal\" name=\"servicegroupForm\" #servicegroupForm=\"ngForm\">\r\n                <div class=\"modal-body\">\r\n                    <div>\r\n                        <div class=\"form-group\">\r\n                            <label for=\"txtService \" class=\"control-label col-md-3\"> {{ 'Services' | translate}} </label>\r\n                            <div class=\"col-md-6\">\r\n                                <input name=\"txtSearchServices\" [placeholder]=\"'SearchByNameorCode' | translate\" class=\"form-control\" [(ngModel)]=\"filterString\" />\r\n                                <div class=\"nopadding treeBorder\" style=\"height:180px;\">\r\n                                    <p-tree [value]=\"treeDataSourceItems | translateObjects  : null : null : lstToBeTranslated | filterbynameorcode:filterString : leafType\" selectionMode=\"single\" [(selection)]=\"selectedFile\"\r\n                                            (onNodeSelect)=\"nodeSelect($event)\" (onNodeUnselect)=\"nodeUnselect($event)\">\r\n                                        <ng-template let-node pTemplate=\"ServiceGroup\">\r\n                                            <span class=\"nav-icon\"><i class=\"fa fa-cubes\"></i></span>\r\n                                            &nbsp;\r\n                                            {{node.label}}\r\n                                        </ng-template>\r\n                                        <ng-template let-node pTemplate=\"Service\">\r\n                                            <span class=\"nav-icon\"><i class=\"fa fa-cube\"></i></span>\r\n                                            &nbsp;\r\n                                            {{node.label}}\r\n                                        </ng-template>\r\n                                    </p-tree>\r\n\r\n                                    <input type=\"hidden\" id=\"treeSelections\" required />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label for=\"txtQuantity\" class=\"control-label col-md-3\">{{ 'Quantity' | translate}}</label>\r\n                            <div class=\"col-md-6\">\r\n                                <input type=\"number\" id=\"txtQuantity\" name=\"txtQuantity\" class=\"form-control\" [(ngModel)]='serviceModel.quantity' #txtQuantity=\"ngModel\" required />\r\n                                <!--<div [hidden]=\"txtQuantity.valid\" class=\"alert alert-danger\">\r\n                                     Quantity  is required\r\n                                 </div>-->\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                    <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" (click)=\"fillServicesList()\" *ngIf=\"isNew\" [disabled]=\"!servicegroupForm.valid\">{{ 'Save' | translate}}</button>\r\n                    <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" (click)=\"updateServicesList()\" *ngIf=\"!isNew\" [disabled]=\"!servicegroupForm.valid\">{{ 'Save' | translate}}</button>\r\n                    <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" (click)=\"clearServiceModel()\">{{ 'Cancel' | translate}}</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\nimport { ClinicService } from '../shared/clinic.service';\r\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\r\n\r\nimport { AccountService } from '../../security/shared/account.service';\r\nimport { UserPermissions } from '../../classes/user-permissions.class';\r\nimport { PermissionKeyEnum } from '../../shared/shared/permission-key.enum';\r\nimport { Table } from 'primeng/table';\r\n@Component({\r\n    selector: 'clinic-servicePackages',\r\n    templateUrl: './clinic-servicePackages.component.html'\r\n})\r\n\r\nexport class ClinicServicePackagesComponent implements OnInit {\r\n    filterString!: string;\r\n    clinicId = \"0\";\r\n    servicePackagesList!: any[];\r\n    showProgress = false;\r\n    selectServicePackagesTab: boolean = true;\r\n    userPermisions: UserPermissions = new UserPermissions();\r\n    key: PermissionKeyEnum = new PermissionKeyEnum();\r\n    enableNewBtn: boolean = false;\r\n    enableEditBtn: boolean = false;\r\n    enableActivateBtn: boolean = false;\r\n\r\n    toPrintDiv: string = \"print-section\";\r\n    userType: string = '';\r\n    isClinicAdmin: boolean = false;\r\n    lstToTranslated: string[] = [];\r\n    @ViewChild('dt') table!: Table;\r\n    constructor(public toastr: ToastrService\r\n        , private storage: LocalStorageService\r\n        , private router: Router\r\n        , private clinicService: ClinicService\r\n        , public translate: TranslateService\r\n        , public accountService: AccountService\r\n\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        let vm = this;\r\n        this.lstToTranslated = ['name', 'nameTranslation'];\r\n        //let hasAdminPermission = this.storage.retrieve(\"HasAdminPermission\");\r\n        //let userType = this.storage.retrieve(\"UserType\");\r\n        //if (hasAdminPermission) {\r\n        //    this.isAdmin = true;\r\n        //}\r\n        //else if (userType == new UserTypeEnum().Organization) {\r\n        //    this.isOrganization = true;\r\n        //}\r\n        this.clinicId = this.storage.retrieve(\"ClinicID\");\r\n        this.userType = this.storage.retrieve(\"UserType\");\r\n        if (this.userType == 'ClinicAdmin')\r\n            this.isClinicAdmin = true;\r\n\r\n        vm.showProgress = true;\r\n        vm.loadServicePackages();\r\n\r\n        if (!this.isClinicAdmin) {\r\n            if (this.accountService.userPermision._isScalar != undefined)\r\n                this.accountService.userPermision.subscribe((item: any) => this.handleUserInterfaceViews(item));\r\n            else\r\n                this.handleUserInterfaceViews(this.accountService.userPermision);\r\n        }\r\n    }\r\n\r\n    editServicePackage(id: string): void {\r\n\r\n        // store selected company ID\r\n        this.storage.store(\"ServicePackageID\", id);\r\n\r\n        //navigate to current URL\r\n        this.router.navigate(['/clinic/servicePackageDetails', id]);\r\n    }\r\n\r\n    addServicePackage(): void {\r\n        // store selected company ID\r\n        this.storage.store(\"ServicePackageID\", 'new');\r\n\r\n        //navigate to current URL\r\n        this.router.navigate(['/clinic/servicePackageDetails', 'new']);\r\n    }\r\n    changeActivation(packageId: any, event: any) {\r\n        let vm = this;\r\n        vm.showProgress = true;\r\n\r\n        this.clinicService.toggleServicePackageActivation(packageId)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    // get company by Id from the companies List \r\n                    //var selectedCompany = vm.companiesList.find(comp => comp.id == id);\r\n                    //selectedCompany.isActive = response;\r\n\r\n                    // load all companies\r\n                    vm.loadServicePackages();\r\n                },\r\n                function (error: any) {\r\n                    vm.toastr.error(error, '');\r\n                    vm.showProgress = false;\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n    }\r\n    loadServicePackages() {\r\n        let vm = this;\r\n        this.clinicService.getAllservicePackagesForClinic(vm.clinicId).subscribe(\r\n            function (response: any) {\r\n                vm.servicePackagesList = response;\r\n            },\r\n            function (error: any) {\r\n                vm.toastr.error(error, '');\r\n            },\r\n            function () { // finally\r\n                vm.showProgress = false;\r\n            });\r\n\r\n    }\r\n\r\n    handleUserInterfaceViews(user: any) {\r\n        if (user.permissions != undefined) {\r\n\r\n            for (let item of user.permissions) {\r\n                if (item.permission.key == this.key.Coding) {\r\n                    if (item.fullControl == true || item.add)\r\n                        this.enableNewBtn = true;// then any add button should be enabled\r\n                    if (item.fullControl == true || item.edit)\r\n                        this.enableEditBtn = true;\r\n                    if (item.fullControl == true || item.activate)\r\n                        this.enableActivateBtn = true;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}","<div *ngIf=\"showProgress\">\r\n    <loading></loading>ServicePackage\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <clinic-tab [isServicePackagesSelected]='selectServicePackagesTab' *ngIf=\"isClinicAdmin\"></clinic-tab>\r\n    <shared-tabs [isServicePackagesSelected]='selectServicePackagesTab' *ngIf=\"!isClinicAdmin\"></shared-tabs>\r\n    <div class=\"row \">\r\n        <div class=\"row \">\r\n            <div class=\"NBbreadcrumb\">\r\n                <a>{{ 'Clinic' | translate}}</a> &nbsp;/\r\n                {{ 'ServicePackage' | translate}}\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <div>\r\n\r\n            <div class=\"row well \">\r\n                <div class=\"col-md-offset-8\">\r\n                    <print-page [section]='toPrintDiv'></print-page>\r\n                    <button type=\"button\" class=\"btn btn-primary\" (click)=\"addServicePackage()\"\r\n                        disabled=\"{{ enableNewBtn || isClinicAdmin ? '' :'disabled'}}\">{{ 'NewPackage' |\r\n                        translate}}</button>\r\n                    <br />\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"wellBackOverride row well  \">\r\n                <div class=\"inner-addon left-addon \">\r\n                    <i class=\"glyphicon glyphicon-search\"></i>\r\n                    <input pInputText type=\"text\" (input)=\"dt.filterGlobal($event.target.value, 'contains')\"\r\n                        [placeholder]=\"'Search' | translate\" />\r\n                </div>\r\n                <br />\r\n\r\n                <!---New Table-->\r\n                <p-table #dt [value]=\"servicePackagesList\" dataKey=\"id\" [rowHover]=\"true\" [rows]=\"10\"\r\n                    [showCurrentPageReport]=\"true\" [rowsPerPageOptions]=\"[10,20,30,40,50,100]\" [paginator]=\"true\"\r\n                    currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" [filterDelay]=\"0\"\r\n                    [globalFilterFields]=\"['name','code']\">\r\n\r\n                    <ng-template pTemplate=\"header\">\r\n                        <tr>\r\n                            <th pSortableColumn=\"name\">{{'Name' | translate}} <p-sortIcon field=\"name\">\r\n                                </p-sortIcon>\r\n                            </th>\r\n                            <th pSortableColumn=\"code\">{{'Code' | translate}} <p-sortIcon field=\"code\">\r\n                                </p-sortIcon>\r\n                            </th>\r\n                            <th pSortableColumn=\"clinicCharge\">{{'ClinicCharges' | translate}} <p-sortIcon field=\"clinicCharge\">\r\n                                </p-sortIcon>\r\n                            </th>\r\n                            <th pSortableColumn=\"resourceCharge\">{{'ResourceCharges' | translate}} <p-sortIcon\r\n                                    field=\"resourceCharge\">\r\n                                </p-sortIcon>\r\n                            </th>\r\n                            <th pSortableColumn=\"totalCost\">{{'TotalCost' | translate}} <p-sortIcon\r\n                                    field=\"totalCost\">\r\n                                </p-sortIcon>\r\n                            </th>\r\n                            <th><span styleClass=\"text-center width70\">{{'Active' | translate}} </span>\r\n                            </th>\r\n                            <th><span styleClass=\"text-center width70\">{{'Edit' | translate}} </span>\r\n                            </th>\r\n                        </tr>\r\n\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"body\" let-item>\r\n                        <tr class=\"p-selectable-row\">\r\n                            <td>\r\n                                {{item.name}}\r\n                            </td>\r\n                            <td>\r\n                                <span>{{item.code}}</span>\r\n                            </td>\r\n                            <td>\r\n                                <span>{{item.clinicCharge}}</span>\r\n                            </td>\r\n                            <td>\r\n                                <span>{{item.resourceCharge}}</span>\r\n                            </td>\r\n                            <td>\r\n                                <span>{{item.totalCost}}</span>\r\n                            </td>\r\n                            <td>\r\n                                <input id=\"ChkIsActiveInGrid\" name=\"ChkIsActiveInGrid\" class=\"ace ace-switch ace-switch-6\"\r\n                                       type=\"checkbox\" [checked]=\"item.isActive\"\r\n                                       (click)=\"changeActivation(item.id , $event)\" disabled=\"{{ enableActivateBtn || isClinicAdmin ? '' :'disabled'}}\" />\r\n                                <span class=\"lbl\"></span>\r\n                            </td>\r\n                            <td style=\"text-align: center\">\r\n                                <a class=\"pointer\" (click)=\"editServicePackage(item.id)\" [class.disabled]=\"!enableEditBtn && !isClinicAdmin ? true : null\">\r\n                                    <i class=\"fa fa-pencil fa-2x\" style=\"color: #32bea6;\"></i>\r\n                                </a>\r\n                            </td>\r\n                        </tr>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"emptymessage\">\r\n                        <tr>\r\n                            <td colspan=\"8\">No data found.</td>\r\n                        </tr>\r\n                    </ng-template>\r\n                </p-table>\r\n                <!--End Table-->\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <div id=\"print-section\" class=\"hidden\">\r\n            <div class=\"row text-center\">\r\n                <span class=\"user-thumb\">\r\n                    <img src=\"{{accountService.profileImagePath}}\" alt=\"image\">\r\n                </span>\r\n            </div>\r\n            <table class=\"table table-responsive table-hover table-bordered\">\r\n                <thead>\r\n                    <tr>\r\n                        <th class=\"text-center\">{{'Name' | translate}}</th>\r\n                        <th class=\"text-center\">{{'Code' | translate}}</th>\r\n                        <th class=\"text-center\">{{'ClinicCharges' | translate}}</th>\r\n                        <th class=\"text-center\">{{'ResourceCharges' | translate}}</th>\r\n                        <th class=\"text-center\">{{'TotalCost' | translate}}</th>\r\n                        <th class=\"text-center\">{{'Active' | translate}}</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngFor=\"let item of servicePackagesList\">\r\n                        <td>{{ item.name }} </td>\r\n                        <td class=\"text-center\">{{ item.code }} </td>\r\n                        <td class=\"text-center\">{{ item.clinicCharge }} </td>\r\n                        <td class=\"text-center\">{{ item.resourceCharge }} </td>\r\n                        <td class=\"text-center\">{{ item.totalCost }} </td>\r\n                        <td class=\"text-center\">\r\n                            <img *ngIf=\"item.isActive\" src=\"assets/images/ok-24.jpg\" title=\"Active\" alt=\"Active\" />\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChild, ElementRef, OnChanges, SimpleChanges, } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\nimport { TreeNode } from 'primeng/api';\r\nimport { ClinicService } from '../shared/clinic.service';\r\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\r\nimport { AccountService } from '../../security/shared/account.service';\r\nimport { UserPermissions } from '../../classes/user-permissions.class';\r\nimport { PermissionKeyEnum } from '../../shared/shared/permission-key.enum';\r\n\r\n@Component({\r\n    selector: 'clinic-services',\r\n    templateUrl: './clinic-services.component.html'\r\n})\r\n\r\nexport class ClinicServicesComponent implements OnInit {\r\n    constructor(public toastr: ToastrService,\r\n        private localStorage: LocalStorageService\r\n        , private clinicService: ClinicService\r\n        , public translate: TranslateService\r\n        , public accountService: AccountService) { }\r\n\r\n    selectedLang = 'ar';\r\n    filterString!:string;\r\n    leafType: string = 'Service';\r\n    lstToTranslated: string[] = [];\r\n    selectServicesTab: boolean = true;\r\n    selectedClinicId: string = \"0\";\r\n    active: boolean = true;\r\n    showProgress = false;\r\n    isSelectedGroupNode = false;\r\n    isServiceGroupSeleced = true;\r\n    isServiceSeleced = false;\r\n    groupName: string = '';\r\n    childName: string = '';\r\n    rbSelections = [{ value: 1, text: this.groupName }, { value: 2, text: this.childName }];\r\n    selectedAction = 1;\r\n    txtHeaderModal = \"\";\r\n    serviceGroupId = 'new';\r\n    serviceId = 'new';\r\n    @ViewChild('btnServicesGroup') btnServicesGroup!: ElementRef;\r\n    @ViewChild('btnCloseServicesGroup') btnCloseServicesGroup!: ElementRef;\r\n    @ViewChild('btnCloseService') btnCloseService!: ElementRef;\r\n    //btnCloseService\r\n    @ViewChild('btnServices') btnServices!: ElementRef;\r\n    @ViewChild('tree') tree: any;\r\n\r\n    @ViewChild('i') rbselection!: ElementRef;\r\n    selectedFile2!: TreeNode;\r\n    selectedGroup!: TreeNode;\r\n\r\n    selectedGroupNode: any;\r\n    titl: string = '';\r\n    model: any = {};\r\n    serviceGroupModel: any = {};\r\n    hideModal = false;\r\n    selectedNode: any;\r\n    treeDataSourceItems: any[] = [];\r\n    groupsOnlyTreeDataSourceItems: any[] = [];\r\n    serviceGroupParentId = '';\r\n    serviceGroupParentlabel = '';\r\n    isRoot = false;\r\n    totalFees: number = 0;\r\n    isEdit = false;\r\n    toPrintDiv: string = \"print-section\";\r\n    userType: string = '';\r\n    isClinicAdmin: boolean = false;\r\n    userPermisions: UserPermissions = new UserPermissions();\r\n    key: PermissionKeyEnum = new PermissionKeyEnum();\r\n    enableAddRootBtn: boolean = false;\r\n    enableEditBtn: boolean = false;\r\n    enableActivateBtn: boolean = false;\r\n    enableSaveBtn: boolean = false;\r\n    enableServiceInput: boolean = false;\r\n    ngOnInit(): void {\r\n        this.selectedLang = this.localStorage.retrieve(\"selectedLanguage\");\r\n        this.lstToTranslated = ['label', 'labelTranslation'];\r\n        this.groupName = this.translate.instant(\"ServiceGroup\");\r\n        this.childName = this.translate.instant(\"Service\");\r\n        this.translate.onLangChange.subscribe((event: LangChangeEvent) => {\r\n            this.groupName = this.translate.instant(\"ServiceGroup\");\r\n            this.childName = this.translate.instant(\"Service\");\r\n        });\r\n        this.rbSelections = [{ value: 1, text: this.groupName }, { value: 2, text: this.childName }];\r\n        this.selectedClinicId = this.localStorage.retrieve(\"ClinicID\");\r\n        this.userType = this.localStorage.retrieve(\"UserType\");\r\n        if (this.userType == 'ClinicAdmin')\r\n            this.isClinicAdmin = true;\r\n\r\n        this.getServiceGroupsForTree();\r\n\r\n        if (!this.isClinicAdmin) {\r\n            if (this.accountService.userPermision._isScalar != undefined)\r\n                this.accountService.userPermision.subscribe((item: any) => this.handleUserInterfaceViews(item));\r\n            else\r\n                this.handleUserInterfaceViews(this.accountService.userPermision);\r\n        }\r\n    }\r\n    getServiceGroupsForTree() {\r\n        let thisComponent = this;\r\n        thisComponent.showProgress = true;\r\n        this.clinicService.getServiceGroupsForTreeView(thisComponent.selectedClinicId)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    thisComponent.treeDataSourceItems = response;\r\n                },\r\n                function (error: any) {\r\n                    thisComponent.toastr.error(error, '');\r\n                    thisComponent.showProgress = false;\r\n                },\r\n                function () { // finally\r\n                    thisComponent.showProgress = false;\r\n                });\r\n        //this.clinicService.getServiceGroupsOnlyForTreeView()\r\n        //    .subscribe(\r\n        //    function (response:any) {\r\n        //        thisComponent.groupsOnlyTreeDataSourceItems = response;\r\n        //    },\r\n        //    function (error:any) { \r\n        //        thisComponent.toastr.error('Failed to Load Data - ' + error, '');\r\n        //        thisComponent.showProgress = false;\r\n        //    },\r\n        //    function () { // finally\r\n        //        thisComponent.showProgress = false;\r\n        //    });\r\n    }\r\n\r\n    expandAll() {\r\n        this.treeDataSourceItems.forEach(node => {\r\n            this.expandRecursive(node, true);\r\n        });\r\n    }\r\n\r\n    collapseAll() {\r\n        this.treeDataSourceItems.forEach(node => {\r\n            this.expandRecursive(node, false);\r\n        });\r\n    }\r\n\r\n    private expandRecursive(node: TreeNode, isExpand: boolean) {\r\n        node.expanded = isExpand;\r\n        if (node.children) {\r\n            node.children.forEach(childNode => {\r\n                this.expandRecursive(childNode, isExpand);\r\n            });\r\n        }\r\n    }\r\n\r\n    nodeSelect(event?: any) {\r\n        event.node.label;\r\n    }\r\n\r\n    nodeUnselect(event: any) {\r\n        //event.node.label\r\n    }\r\n    displayPopup(node: any) {\r\n        let thisComponent = this;\r\n        if (node.type.toLocaleLowerCase() == \"servicegroup\") {\r\n            //  thisComponent.showProgress = true;\r\n            this.serviceGroupId = node.data;\r\n            this.isServiceGroupSeleced = true;\r\n            this.isServiceSeleced = false;\r\n            this.isRoot = true;\r\n            this.isEdit = true;\r\n            thisComponent.selectedAction = 1;\r\n            this.txtHeaderModal = this.translate.instant(\"ServiceGroup\");\r\n            this.translate.onLangChange.subscribe((event: LangChangeEvent) => {\r\n\r\n                this.txtHeaderModal = this.translate.instant(\"ServiceGroup\");\r\n                this.groupName = this.translate.instant(\"ServiceGroup\");\r\n                this.childName = this.translate.instant(\"Service\");\r\n            });\r\n            this.btnServicesGroup.nativeElement.click();\r\n            if (this.serviceGroupId.toString().toLowerCase() != 'new') {\r\n                this.clinicService.getServiceGroupById(this.serviceGroupId)\r\n                    .subscribe(\r\n                        function (response: any) {\r\n                            thisComponent.serviceGroupModel = response;\r\n                            thisComponent.serviceGroupParentId = thisComponent.serviceGroupModel.parentGroupId;\r\n\r\n                            if (thisComponent.selectedLang == 'ar')\r\n                                thisComponent.serviceGroupParentlabel = thisComponent.serviceGroupModel.parentName;\r\n                            else\r\n                                thisComponent.serviceGroupParentlabel = thisComponent.serviceGroupModel.parentNameTranslation;\r\n\r\n                        },\r\n                        function (error: any) {\r\n                            thisComponent.toastr.error(error, '');\r\n                        },\r\n                        function () {\r\n                            thisComponent.showProgress = false;\r\n                        });\r\n            }\r\n\r\n        } else if (node.type.toLocaleLowerCase() == \"service\") {\r\n            //  thisComponent.showProgress = true;\r\n            this.isServiceGroupSeleced = false;\r\n            this.isServiceSeleced = true;\r\n            this.serviceId = node.data;\r\n            thisComponent.selectedAction = 2;\r\n            //thisComponent.txtHeaderModal = \"Service\";\r\n            this.txtHeaderModal = this.translate.instant(\"Service\");\r\n            this.translate.onLangChange.subscribe((event: LangChangeEvent) => {\r\n\r\n                this.txtHeaderModal = this.translate.instant(\"Service\");\r\n                this.groupName = this.translate.instant(\"ServiceGroup\");\r\n                this.childName = this.translate.instant(\"Service\");\r\n            });\r\n            this.isRoot = true;\r\n            this.isEdit = true;\r\n            this.btnServicesGroup.nativeElement.click();\r\n            this.totalFees = thisComponent.model.resourceFee + thisComponent.model.clinicFee;\r\n            ////////////////get service by id\r\n            if (this.serviceId.toString().toLowerCase() != 'new') {\r\n                this.clinicService.getServiceById(this.serviceId)\r\n                    .subscribe(\r\n                        function (response: any) {\r\n                            thisComponent.model = response;\r\n                            thisComponent.serviceGroupParentId = thisComponent.model.parentId;\r\n                            if (thisComponent.selectedLang == 'ar')\r\n                                thisComponent.serviceGroupParentlabel = thisComponent.model.parentName;\r\n                            else\r\n                                thisComponent.serviceGroupParentlabel = thisComponent.model.parentNameTranslation;\r\n\r\n\r\n                            thisComponent.totalFees = thisComponent.model.resourceFee + thisComponent.model.clinicFee;\r\n                        },\r\n                        function (error: any) {\r\n                            thisComponent.toastr.error(error, '');\r\n                        },\r\n                        function () {\r\n                            thisComponent.showProgress = false;\r\n                        });\r\n            }\r\n        }\r\n        thisComponent.selectedNode = node;\r\n        this.rbSelections = [{ value: 1, text: this.groupName }, { value: 2, text: this.childName }];\r\n    }\r\n\r\n    passServiceGroupValue(node: any) {\r\n        let thisComp = this;\r\n        thisComp.clearServiceGroupWithParent();\r\n        thisComp.serviceGroupParentId = node.data;\r\n        thisComp.serviceGroupParentlabel = node.label;\r\n\r\n        if (thisComp.selectedLang == 'ar')\r\n            thisComp.serviceGroupParentlabel = node.label;\r\n        else\r\n            thisComp.serviceGroupParentlabel = node.labelTranslation;\r\n\r\n        //thisComp.titl = \"sgdfgd\";\r\n        this.selectedAction = 1;\r\n        this.txtHeaderModal = this.translate.instant(\"ServiceGroup\");\r\n        this.translate.onLangChange.subscribe((event: LangChangeEvent) => {\r\n\r\n            this.txtHeaderModal = this.translate.instant(\"ServiceGroup\");\r\n            this.groupName = this.translate.instant(\"ServiceGroup\");\r\n            this.childName = this.translate.instant(\"Service\");\r\n        });\r\n        thisComp.isRoot = false;\r\n        this.isServiceGroupSeleced = true;\r\n        this.isServiceSeleced = false;\r\n        //   this.isEdit = false;\r\n        this.selectedNode = node;\r\n        this.rbSelections = [{ value: 1, text: this.groupName }, { value: 2, text: this.childName }];\r\n\r\n    }\r\n    passInitialServiceGroupValue(value: string) {\r\n        let thisComp = this;\r\n        thisComp.clearServiceGroupWithParent();\r\n        thisComp.serviceGroupParentId = '';\r\n        thisComp.isRoot = true;\r\n        //    thisComp.titl = \"iniit\";\r\n        this.txtHeaderModal = this.translate.instant(\"ServiceGroup\");\r\n        this.translate.onLangChange.subscribe((event: LangChangeEvent) => {\r\n\r\n            this.txtHeaderModal = this.translate.instant(\"ServiceGroup\");\r\n            this.groupName = this.translate.instant(\"ServiceGroup\");\r\n            this.childName = this.translate.instant(\"Service\");\r\n        });\r\n        this.isServiceGroupSeleced = true;\r\n        this.isServiceSeleced = false;\r\n        this.isEdit = true;\r\n        this.rbSelections = [{ value: 1, text: this.groupName }, { value: 2, text: this.childName }];\r\n    }\r\n    onselectedGroupNodeValue(value: string): void {\r\n        let vm = this;\r\n        //this.selectedGroupNode = value;\r\n        //this.nodeSelect(event:any);\r\n        //this.selectedGroupNode.icon = \"style\";\r\n        //this.selectedGroupNode\r\n        // this.titl = value;\r\n        //vm.isSelectedGroupNode = true;\r\n        //vm.displaySelectedParentGroupNode(value);\r\n        //vm.selectedFile2 = this.selectedGroupNode;\r\n        //vm.expandAll() ;\r\n        //vm.titl = 'helllo';\r\n    }\r\n\r\n    //onGetServiceGroupsForTree() {\r\n    //    this.getServiceGroupsForTree();\r\n    //}\r\n    changeActivation(node: any, event: any) {\r\n        let thisComponent = this;\r\n\r\n        if (node.type == \"Service\") {\r\n            thisComponent.showProgress = true;\r\n            thisComponent.clinicService.updateServiceActiveState({ \"id\": node.id, \"isActive\": event.target.checked })\r\n                .subscribe(\r\n                    function (response: any) {\r\n                        if (event.target.checked) {\r\n                            thisComponent.activateParents(node);\r\n                        }\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () { // finally\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n        } else if (node.type == \"ServiceGroup\") {\r\n            thisComponent.showProgress = true;\r\n            thisComponent.clinicService.updateServiceGroupActiveState({ \"id\": node.id, \"isActive\": event.target.checked })\r\n                .subscribe(\r\n                    function (response: any) {\r\n                        node.isActive = event.target.checked;\r\n                        if (event.target.checked) {\r\n                            if (node.parent != undefined)\r\n                                thisComponent.activateParents(node.parent);\r\n                        } else {\r\n\r\n                            thisComponent.deActivateChildren(node, false);\r\n                        }\r\n\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () { // finally\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n        }\r\n    }\r\n    activateParents(node: any) {\r\n        node.isActive = true;\r\n        if (node.parent != undefined) {\r\n            this.activateParents(node.parent);\r\n        }\r\n    }\r\n    deActivateChildren(node: any, active: any) {\r\n        node.isActive = active;\r\n        if (node.children) {\r\n            node.children.forEach((childNode: any) => {\r\n                this.deActivateChildren(childNode, active);\r\n            });\r\n        }\r\n    }\r\n\r\n    onSelectionChange(value: any) {\r\n        this.selectedAction = value;\r\n\r\n        if (this.selectedAction == 1) {\r\n            this.isServiceGroupSeleced = true;\r\n            this.isServiceSeleced = false;\r\n            this.txtHeaderModal = this.translate.instant(\"ServiceGroup\");\r\n            this.translate.onLangChange.subscribe((event: LangChangeEvent) => {\r\n\r\n                this.txtHeaderModal = this.translate.instant(\"ServiceGroup\");\r\n            });\r\n\r\n        }\r\n        else if (this.selectedAction == 2) {\r\n            this.isServiceGroupSeleced = false;\r\n            this.isServiceSeleced = true\r\n            this.txtHeaderModal = this.translate.instant(\"Service\");\r\n            this.translate.onLangChange.subscribe((event: LangChangeEvent) => {\r\n\r\n                this.txtHeaderModal = this.translate.instant(\"Service\");\r\n            });\r\n            // this.totalFees = this.model.resourceFee + this.model.clinicFee;\r\n        }\r\n    }\r\n\r\n    saveServiceGroup(): void {\r\n        let thisComponent = this;\r\n        thisComponent.serviceGroupModel.parentGroupId = thisComponent.serviceGroupParentId;\r\n        thisComponent.serviceGroupModel.clinicId = thisComponent.selectedClinicId;\r\n        if (this.serviceGroupModel.id > 0) {\r\n            //Update\r\n            this.clinicService.updateServiceGroup(this.serviceGroupModel)\r\n                .subscribe(\r\n                    function (response: any) {\r\n\r\n                        // thisComponent.serviceGroupModel = response;\r\n                        thisComponent.selectedNode.label = response.name;\r\n                        thisComponent.selectedNode.labelTranslation = response.nameTranslation;\r\n                        //thisComponent.displaySelectedParentGroupNode(thisComponent.selectedNode.data, \"servicegroup\")//type.toLocaleLowerCase() == \"servicegroup\"\r\n                        let msg = thisComponent.translate.instant(\"SavedSuccessfully\");\r\n                        thisComponent.toastr.success(msg, '');\r\n                        thisComponent.clearServiceGroupWithParent();\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n                        thisComponent.clearServiceGroupWithParent();\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () {\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n\r\n        }\r\n        else {\r\n            this.clinicService.createServiceGroup(this.serviceGroupModel)\r\n                .subscribe(\r\n                    function (response: any) {\r\n\r\n                        //  thisComponent.serviceGroupModel = response;\r\n                        if (thisComponent.serviceGroupParentId == '') {\r\n                            thisComponent.treeDataSourceItems.push(response);\r\n                        } else {\r\n                            thisComponent.selectedNode.children.push(response);\r\n                            //thisComponent.selectedNode.children.sort(function (a, b) {\r\n                            //    return a.type && b.type == \"ServiceGroup\" ? 1 : -1;\r\n                            //});\r\n                            //  thisComponent.displaySelectedParentGroupNode(thisComponent.selectedNode.data, \"servicegroup\")//type.toLocaleLowerCase() == \"servicegroup\"\r\n                        }\r\n\r\n                        let msg = thisComponent.translate.instant(\"SavedSuccessfully\");\r\n                        thisComponent.toastr.success(msg, '');\r\n                        thisComponent.clearServiceGroupWithParent();\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n                        thisComponent.clearServiceGroupWithParent();\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () {\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n        }\r\n    }\r\n\r\n    /////////we need to find the node that have id and type\r\n    //private\r\n    displaySelectedParentGroupNode(id: string, type: string) {\r\n        let vm = this\r\n        vm.treeDataSourceItems.forEach(node => {\r\n            vm.displaySelectedNodeRecursive(node, id, type);\r\n\r\n            if (node.data == id && node.type.toLocaleLowerCase() == type) {\r\n                node = vm.selectedNode;\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    private displaySelectedNodeRecursive(node: any, parentGroupId: string, type: string) {\r\n        if (node.children) {\r\n            node.children.forEach((childNode: any) => {\r\n                this.displaySelectedNodeRecursive(childNode, parentGroupId, type);\r\n\r\n                if (childNode.data == parentGroupId && node.type.toLocaleLowerCase() == type) {\r\n                    childNode = this.selectedNode;\r\n                }\r\n\r\n            });\r\n        }\r\n    }\r\n    clearServiceGroupWithParent() {\r\n        this.serviceGroupModel = {};\r\n        this.serviceGroupId = 'new';\r\n        this.serviceGroupParentId = '';\r\n        this.serviceGroupParentlabel = '';\r\n        this.selectedNode = null;\r\n        this.isServiceGroupSeleced = true;\r\n        //  this.txtHeaderModal = '';\r\n        // this.selectedGroupNode = null;\r\n        this.active = false;\r\n        //this.serviceGroupIdValue.emit(this.serviceGroupId);\r\n        setTimeout(() => this.active = true, 0);\r\n    }\r\n    clearServiceGroupWithOutParent() {\r\n        this.serviceGroupModel = {};\r\n        this.serviceGroupId = 'new';\r\n        // this.serviceGroupParentId = '';\r\n        // this.serviceGroupParentlabel = '';\r\n        //  this.txtHeaderModal = '';\r\n        // this.selectedGroupNode = null;\r\n        this.active = false;\r\n        //this.serviceGroupIdValue.emit(this.serviceGroupId);\r\n        setTimeout(() => this.active = true, 0);\r\n    }\r\n\r\n    ///////////////////////////////////////////////////service\r\n    saveService(): void {\r\n        let thisComponent = this;\r\n        thisComponent.model.parentId = thisComponent.serviceGroupParentId;\r\n        if (this.model.id > 0) {\r\n            //Update\r\n            this.clinicService.updateService(this.model)\r\n                .subscribe(\r\n                    function (response: any) {\r\n                        // thisComponent.model = response;\r\n                        thisComponent.selectedNode.label = response.name;\r\n                        thisComponent.selectedNode.labelTranslation = response.nameTranslation;\r\n                        let msg = thisComponent.translate.instant(\"SavedSuccessfully\");\r\n                        thisComponent.toastr.success(msg, '');\r\n                        thisComponent.clearWithParent();\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n                        thisComponent.clearWithParent();\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () {\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n\r\n        }\r\n        else {\r\n            this.clinicService.createService(this.model)\r\n                .subscribe(\r\n                    function (response: any) {\r\n\r\n                        thisComponent.selectedNode.children.push(response);\r\n                        thisComponent.selectedNode.children.sort(function (a: { type: any; }, b: { type: string; }) {\r\n                            return a.type && b.type == \"Service\" ? 1 : -1;\r\n                        });\r\n                        let msg = thisComponent.translate.instant(\"SavedSuccessfully\");\r\n                        thisComponent.toastr.success(msg, '');\r\n                        thisComponent.clearWithParent();\r\n\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error, '');\r\n                        thisComponent.clearWithParent();\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () {\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n        }\r\n    }\r\n\r\n    clearWithParent() {\r\n        this.model = {};\r\n        this.serviceId = 'new';\r\n        this.serviceGroupParentId = '';\r\n        this.serviceGroupParentlabel = '';\r\n        this.totalFees = 0;\r\n        this.selectedNode = null;\r\n        this.active = false;\r\n        setTimeout(() => this.active = true, 0);\r\n    }\r\n    clearWithOutParent() {\r\n        this.model = {};\r\n        this.serviceId = 'new';\r\n        this.totalFees = 0;\r\n        this.active = false;\r\n        setTimeout(() => this.active = true, 0);\r\n    }\r\n    close() {\r\n        this.clearServiceGroupWithParent();\r\n        this.clearWithParent();\r\n    }\r\n    cancelService(): void {\r\n        this.clearWithParent();\r\n        this.btnCloseService.nativeElement.click();\r\n    }\r\n    cancelServiceGroup(): void {\r\n        this.clearServiceGroupWithParent();\r\n        this.btnCloseServicesGroup.nativeElement.click();\r\n    }\r\n    ///////////////////////filtering\r\n    filterNodes(text: any, tree: any) {\r\n        //tree.treeModel.filterNodes(\"text\", true);\r\n        // this.treeDataSourceItems.treeModel.filterNodes(\"text\", true);\r\n        //tree.treeModel.filterNodes((node) => {\r\n        //    return !node.data.name.startsWith(text);\r\n        //});\r\n    }\r\n    sum() {\r\n        let c = Number(this.model.clinicFee);\r\n        let r = Number(this.model.resourceFee);\r\n        this.totalFees = c + r;\r\n    }\r\n    handleUserInterfaceViews(user: any) {\r\n        if (user.permissions != undefined) {\r\n\r\n            for (let item of user.permissions) {\r\n                if (item.permission.key == this.key.Coding) {\r\n                    if (item.fullControl == true || item.add)\r\n                        this.enableAddRootBtn = true;// then any add button should be enabled\r\n                    if (item.fullControl == true || item.edit)\r\n                        this.enableEditBtn = true;\r\n                    if (item.fullControl == true || item.activate)\r\n                        this.enableActivateBtn = true;\r\n                    if (item.fullControl || item.add || item.edit)\r\n                        this.enableSaveBtn = true;\r\n                }\r\n\r\n                if (item.permission.key == this.key.UpdateServicePrice)\r\n                    this.enableServiceInput = true;\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n}","<div *ngIf=\"showProgress\">\r\n    <loading></loading>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <clinic-tab [isServicesSelected]='selectServicesTab' *ngIf=\"isClinicAdmin\"></clinic-tab>\r\n    <shared-tabs [isServicesSelected]='selectServicesTab' *ngIf=\"!isClinicAdmin\"></shared-tabs>\r\n    <div class=\"row \">\r\n        <div class=\"NBbreadcrumb\">\r\n            <a>{{ 'Clinic' | translate}}</a> &nbsp;/\r\n            {{ 'Services' | translate}}\r\n        </div>\r\n\r\n    </div>\r\n        <div>\r\n            <div class=\"row well\">\r\n                <div class=\"\">\r\n                    <button #AddServiceGroup type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#ServicesGroupPopup\" (click)=\"passInitialServiceGroupValue('new')\" disabled=\"{{ enableAddRootBtn || isClinicAdmin ? '' :'disabled'}}\"> {{ 'AddRootServiceGroup' | translate}}</button>\r\n                    <button type=\"button\" class=\"btn btn-primary\" (click)=\"expandAll()\">{{ 'ExpandAll' | translate}}</button>\r\n                    <button type=\"button\" class=\"btn btn-primary\" (click)=\"collapseAll()\">{{ 'CollapseAll' | translate}}</button>\r\n                    <print-page [section]='toPrintDiv'></print-page>\r\n\r\n                </div>\r\n                <br />\r\n                <div class=\"row nopadding\">\r\n                    <div class=\"col-md-5 nopadding\">\r\n                        <div class=\"inner-addon left-addon\">\r\n                            <i class=\"glyphicon glyphicon-search\"></i>\r\n                        <input [placeholder]=\"'SearchByNameorCode' | translate\" class=\"inputSearch form-control\" [(ngModel)]=\"filterString\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            \r\n            \r\n            <div id=\"print-section\" class=\"\">\r\n              <div class=\"row well\">\r\n                  <p-tree [value]=\"treeDataSourceItems | filterbynameorcode:filterString : leafType\" selectionMode=\"single\" [(selection)]=\"selectedGroup\" (onSelect)=\"nodeSelect()\" #tree>\r\n                      <ng-template let-node pTemplate=\"Service\">\r\n                          <span class=\"nav-icon\"><i class=\"fa fa-cube\"></i></span>\r\n                          &nbsp;\r\n                          {{selectedLang === 'ar' ?  node.label : node.labelTranslation}}\r\n                          &nbsp; &nbsp;\r\n                          <a [class.disabled]=\"!enableEditBtn && !isClinicAdmin ? true : null\">\r\n                              <i class=\"fa fa-pencil fa-2x\" (click)=\"displayPopup(node)\" style=\"color: #32bea6;\"></i>\r\n                          </a>\r\n                          <label>\r\n                              <input id=\"ChkIsActiveInGrid\" name=\"ChkIsActiveInGrid\" class=\"ace ace-switch ace-switch-6\"\r\n                                     type=\"checkbox\" [checked]=\"node.isActive\"\r\n                                     (click)=\"changeActivation(node, $event)\" disabled=\"{{ enableActivateBtn || isClinicAdmin ? '' :'disabled'}}\" />\r\n                              <span class=\"lbl\"></span>\r\n                          </label>\r\n                      </ng-template>\r\n                      <ng-template let-node pTemplate=\"ServiceGroup\">\r\n                          <span class=\"nav-icon\"><i class=\"fa fa-cubes\"></i></span>\r\n                          &nbsp;\r\n                          <span class=\"{{ isSelectedGroupNode ? 'bg-danger' : '' }}\">\r\n                              {{selectedLang === 'ar' ?  node.label : node.labelTranslation}}\r\n                          </span>\r\n                          &nbsp; &nbsp;\r\n                          <a #AddServiceGroup data-toggle=\"modal\" data-target=\"#ServicesGroupPopup\" [class.disabled]=\"!enableAddRootBtn && !isClinicAdmin ? true : null\">\r\n                              <img src=\"assets/images/addImage.png\" (click)=\"passServiceGroupValue(node)\" />\r\n                          </a>\r\n                          &nbsp; &nbsp;\r\n                          <a [class.disabled]=\"!enableEditBtn && !isClinicAdmin ? true : null\">\r\n                              <i class=\"fa fa-pencil fa-2x\" (click)=\"displayPopup(node)\" style=\"color: #32bea6;\"></i>\r\n                          </a>\r\n                          <label>\r\n                              <input id=\"ChkIsActiveInGrid\" name=\"ChkIsActiveInGrid\" class=\"ace ace-switch ace-switch-6\"\r\n                                     type=\"checkbox\" [checked]=\"node.isActive\"\r\n                                     (click)=\"changeActivation(node, $event)\" disabled=\"{{ enableActivateBtn || isClinicAdmin ? '' :'disabled'}}\" />\r\n                              <span class=\"lbl\"></span>\r\n                          </label>\r\n                      </ng-template>\r\n                  </p-tree>\r\n\r\n              </div>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n<!-- Services group Modal -->\r\n<button type=\"button\" data-toggle=\"modal\" data-target=\"#ServicesGroupPopup\" style=\"display:none\" #btnServicesGroup></button>\r\n\r\n<div id=\"ServicesGroupPopup\" #ServicesGroupPopup class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n            <!-- Services group Modal -->\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" #btnCloseServicesGroup class=\"close\" data-dismiss=\"modal\"  *ngIf=\"isServiceGroupSeleced\" (click)=\"close()\">&times;</button>\r\n                <button type=\"button\" #btnCloseService class=\"close\" data-dismiss=\"modal\" *ngIf=\"isServiceSeleced\" (click)=\"close()\">&times;</button>\r\n                <h4 class=\"modal-title\">{{txtHeaderModal}}</h4>\r\n            </div>\r\n\r\n            <form *ngIf=\"active\" class=\"form-horizontal\" name=\"servicegroupForm\" #servicegroupForm=\"ngForm\">\r\n                <div class=\"form-group\">\r\n                    <div class=\"col-sm-offset-3 col-md-8\" *ngIf=\"!isRoot\">\r\n                        <table>\r\n                            <tr>\r\n                                <td *ngFor=\"let item of rbSelections; let idx = index\">\r\n                                    <input type=\"radio\" name=\"radiogroup\" [value]=\"item.value\"\r\n                                           [checked]=\"item.value == selectedAction\" #i (change)=\"onSelectionChange(i.value)\">{{item.text| translate}}\r\n                                </td>\r\n                            </tr>\r\n                        </table>\r\n                    </div>\r\n                    <div class=\"col-sm-offset-3 col-md-8\" *ngIf=\"isRoot\">\r\n                        <div class=\"text-center\">\r\n                            <table>\r\n                                <tr>\r\n                                    <td *ngFor=\"let item of rbSelections; let idx = index\">\r\n                                        <input type=\"radio\" name=\"radiogroup\" [value]=\"item.value\"\r\n                                               [checked]=\"item.value == selectedAction\" #i (change)=\"onSelectionChange(i.value)\" disabled>{{item.text| translate}}\r\n                                    </td>\r\n                                </tr>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                    <div *ngIf=\"isServiceGroupSeleced\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"txtServiceGroupParentName\" class=\"control-label col-md-3\">{{ 'ParentGroup' | translate}}</label>\r\n                            <div class=\"col-md-6\">\r\n                                <input id=\"txtServiceGroupParentName\" name=\"txtServiceGroupParentName\" class=\"form-control\" value=\"{{serviceGroupParentlabel}}\" disabled />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label for=\"txtServiceGroupName\" class=\"control-label col-md-3\"> {{ 'ArabicName' | translate}}</label>\r\n                            <div class=\"col-md-9\">\r\n                                <input id=\"txtServiceGroupName\" name=\"txtServiceGroupName\" class=\"form-control\" [(ngModel)]='serviceGroupModel.name' #txtServiceGroupName=\"ngModel\" required />\r\n                                <div [hidden]=\"txtServiceGroupName.valid || txtServiceGroupName.pristine\" class=\"alert alert-danger\">\r\n                                    {{ 'RequiredField' | translate}}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label for=\"txtServiceGroupNameTranslation\" class=\"control-label col-md-3\">{{ 'EnglishName' | translate}}</label>\r\n                            <div class=\"col-md-9\">\r\n                                <input id=\"txtServiceGroupNameTranslation\" name=\"txtServiceGroupNameTranslation\" class=\"form-control\" [(ngModel)]='serviceGroupModel.nameTranslation' #txtServiceGroupNameTranslation=\"ngModel\" required />\r\n                                <div [hidden]=\"txtServiceGroupNameTranslation.valid || txtServiceGroupNameTranslation.pristine\" class=\"alert alert-danger\">\r\n                                    {{ 'RequiredField' | translate}}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label for=\"txtGroupRemark\" class=\"control-label col-md-3\"> {{ 'Remark' | translate}}</label>\r\n                            <div class=\"col-md-6\">\r\n                                <textarea id=\"txtGroupRemark\" name=\"txtGroupRemark\" class=\"form-control\" [(ngModel)]='serviceGroupModel.description' #txtGroupRemark=\"ngModel\"></textarea>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div *ngIf=\"isServiceSeleced\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"txtServiceParentName\" class=\"control-label col-md-3\">{{ 'ParentGroup' | translate}}</label>\r\n                            <div class=\"col-md-6\">\r\n                                <input id=\"txtServiceParentName\" name=\"txtServiceParentName\" class=\"form-control\" [ngModel]='serviceGroupParentlabel' disabled />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label for=\"txtServiceCode\" class=\"control-label col-md-3\"> {{ 'Code' | translate}}</label>\r\n                            <div class=\"col-md-3\">\r\n                                <input id=\"txtServiceCode\" name=\"txtServiceCode\" class=\"form-control\" [(ngModel)]='model.code' #txtServiceCode=\"ngModel\" required />\r\n                                <div [hidden]=\"txtServiceCode.valid || txtServiceCode.pristine\" class=\"alert alert-danger\">\r\n                                    {{ 'RequiredField' | translate}}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label for=\"txtName\" class=\"control-label col-md-3\"> {{ 'ArabicName' | translate}}</label>\r\n                            <div class=\"col-md-9\">\r\n                                <input id=\"txtName\" name=\"txtName\" class=\"form-control\" [(ngModel)]='model.name' #txtName=\"ngModel\" required />\r\n                                <div [hidden]=\"txtName.valid || txtName.pristine\" class=\"alert alert-danger\">\r\n                                    {{ 'RequiredField' | translate}}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label for=\"txtNameTranslation\" class=\"control-label col-md-3\"> {{ 'EnglishName' | translate}}</label>\r\n                            <div class=\"col-md-9\">\r\n                                <input id=\"txtNameTranslation\" name=\"txtNameTranslation\" class=\"form-control\" [(ngModel)]='model.nameTranslation'\r\n                                       #txtNameTranslation=\"ngModel\" required />\r\n                                <div [hidden]=\"txtNameTranslation.valid || txtNameTranslation.pristine\" class=\"alert alert-danger\">\r\n                                    {{ 'RequiredField' | translate}}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"form-group\">\r\n                            <label for=\"txtclinicFee\" class=\"control-label col-md-3\"> {{ 'ClinicFees' | translate}}</label>\r\n                            <div class=\"col-md-3\">\r\n                                <input type=\"number\" id=\"txtclinicFee\" name=\"txtclinicFee\" class=\"form-control\" [(ngModel)]='model.clinicFee'\r\n                                       #txtclinicFee=\"ngModel\" required on-keyup=\"sum()\" #c  [disabled]=\"model.id > 0 && !enableServiceInput && !isClinicAdmin\" />\r\n                                <div [hidden]=\"txtclinicFee.valid || txtclinicFee.pristine\" class=\"alert alert-danger\">\r\n                                    {{ 'RequiredField' | translate}}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label for=\"txtResourceFee\" class=\"control-label col-md-3\"> {{ 'ResourceFees' | translate}}</label>\r\n                            <div class=\"col-md-3\">\r\n                                <input type=\"number\" id=\"txtResourceFee\" name=\"txtResourceFee\" class=\"form-control\" [(ngModel)]='model.resourceFee'\r\n                                       #txtResourceFee=\"ngModel\" required on-keyup=\"sum()\" #r [disabled]=\"model.id > 0 && !enableServiceInput && !isClinicAdmin\" />\r\n                                <div [hidden]=\"txtResourceFee.valid || txtResourceFee.pristine\" class=\"alert alert-danger\">\r\n                                    {{ 'RequiredField' | translate}}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label for=\"txtTotalFees\" class=\"control-label col-md-3\">{{ 'TotalFees' | translate}}</label>\r\n                            <div class=\"col-md-3\">\r\n                                <input id=\"txtTotalFees\" name=\"txtTotalFees\" class=\"form-control\" [value]=\"totalFees\" disabled ke />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label class=\"control-label col-md-3\" for=\"ChkIsExemptedFromVAT \">{{ 'ExemptedFromVAT' | translate}} </label>\r\n                            <div class=\"col-md-9\">\r\n                                <label>\r\n                                    <input id=\"ChkIsExemptedFromVAT\" name=\"ChkIsExemptedFromVAT\" class=\"ace ace-switch ace-switch-6\" type=\"checkbox\" [(ngModel)]=\"model.exemptedFromVAT\" #ChkIsExemptedFromVAT=\"ngModel\" />\r\n                                    <span class=\"lbl\"></span>\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label for=\"txtServiceRemark\" class=\"control-label col-md-3\"> {{ 'Remark' | translate}}</label>\r\n                            <div class=\"col-md-6\">\r\n                                <textarea id=\"txtServiceRemark\" name=\"txtServiceRemark\" class=\"form-control\" [(ngModel)]='model.description'\r\n                                          #txtServiceRemark=\"ngModel\"></textarea>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                    <div class=\"text-center\">\r\n                        <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" (click)=\"saveServiceGroup()\" *ngIf=\"isServiceGroupSeleced\" [disabled]=\"!servicegroupForm.valid ||(!enableSaveBtn && !isClinicAdmin)\">{{ 'Save' | translate}}</button>\r\n                        <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" *ngIf=\"isServiceGroupSeleced\" (click)=\"cancelServiceGroup()\">{{ 'Cancel' | translate}}</button>\r\n                        <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" (click)=\"saveService()\" *ngIf=\"isServiceSeleced\" [disabled]=\"!servicegroupForm.valid ||(!enableSaveBtn && !isClinicAdmin)\">{{ 'Save' | translate}}</button>\r\n                        <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" *ngIf=\"isServiceSeleced\" (click)=\"cancelService()\">{{ 'Cancel' | translate}}</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\nimport { AdministrationService } from '../../administration/shared/administration.service';\r\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\r\n\r\n@Component({\r\n\r\n    selector: 'clinic-settings',\r\n    templateUrl: './clinic-settings.component.html'\r\n})\r\n\r\nexport class ClinicSettingsComponent {\r\n    selectAccountTab: boolean = true;\r\n    clinicModel: any = { id: 0, isActive: true };\r\n    clinicId: string = '';\r\n    selectClinicsTab: boolean = true;\r\n    showProgress = false;\r\n    active: boolean = true;\r\n    userType: string = '';\r\n    isClinicAdmin: boolean = false;\r\n    selectSettingsTab: any;\r\n    constructor(private administrationService: AdministrationService,\r\n        private localStorage: LocalStorageService,\r\n        public toastr: ToastrService,\r\n        private _route: ActivatedRoute\r\n        , public translate: TranslateService) { }\r\n\r\n    ngOnInit(): void {\r\n        this.clinicId = this._route.snapshot.params['id'];\r\n\r\n        this.userType = this.localStorage.retrieve(\"UserType\");\r\n        if (this.userType == 'ClinicAdmin')\r\n            this.isClinicAdmin = true;\r\n\r\n        this.initializeModel();\r\n    }\r\n\r\n    initializeModel(): void {\r\n        //Initialize the mode\r\n        //In case of Edit mode, load it from the DB\r\n        let thisComp = this;\r\n        if (this.clinicId.toLowerCase() != 'new') {\r\n            this.showProgress = true;\r\n            this.administrationService.getClinicDiscountById(this.clinicId)\r\n                .subscribe(\r\n                    function (response: any) {\r\n                        thisComp.clinicModel = response;\r\n                        thisComp.showProgress = false;\r\n                    },\r\n                    function (error: any) {\r\n                        thisComp.toastr.error(error, '');\r\n                        thisComp.showProgress = false;\r\n                    },\r\n                    function () {\r\n                        thisComp.showProgress = false;\r\n                    });\r\n        }\r\n    }\r\n\r\n\r\n    onSubmit(): void {\r\n        let thisComponent = this;\r\n        thisComponent.showProgress = true;\r\n        // update\r\n        this.administrationService.updateClinicDiscount(thisComponent.clinicModel)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    thisComponent.clinicModel = response;\r\n                    let msg = thisComponent.translate.instant(\"SavedSuccessfully\");\r\n                    thisComponent.toastr.success(msg, '');\r\n                },\r\n                function (error: any) {\r\n                    thisComponent.toastr.error(error, '');\r\n                    thisComponent.showProgress = false;\r\n                },\r\n                function () {\r\n                    thisComponent.showProgress = false;\r\n                });\r\n    }\r\n\r\n}","<div *ngIf=\"showProgress\">\r\n    <loading></loading>\r\n</div>\r\n\r\n<div class=\"row\">\r\n        <clinic-tab [isSettingsSelected]='selectSettingsTab'></clinic-tab>\r\n    <div class=\"row nopadding\">\r\n        <div class=\"row\">\r\n            <div class=\"row \" style=\"padding:13px;\">\r\n                <div class=\"NBbreadcrumb\">\r\n                    <a>{{ 'Clinic' | translate}}</a> &nbsp;/\r\n                   {{ 'Settings' | translate}}\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n\r\n        <form novalidate *ngIf=\"active\" class=\"form-horizontal\" name=\"SettingsForm\" #SettingsForm=\"ngForm\" (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"row well\">\r\n                <div style=\"padding-bottom:36px\" >\r\n                    <span class=\"txtDeco\">{{ 'Settings' | translate}}</span>\r\n                </div>\r\n               \r\n\r\n                <div class=\"form-group\">\r\n                    <label for=\"txtMaxDiscount\" class=\"txtMax control-label col-md-4\"> {{ 'MaximumDiscount' | translate}}</label>\r\n                    <div class=\"col-md-8\">\r\n                        <input type=\"text\" min=\"1\" pattern=\"\\d+\" id=\"txtMaxDiscount\" name=\"txtMaxDiscount\" class=\"formCtrl form-control\" [(ngModel)]='clinicModel.maximumDiscount' #txtMaxDiscount=\"ngModel\" required />\r\n                        <span> <button type=\"button\" class=\"btnRadius btn btn-primary\">  %</button></span>\r\n                        <div [hidden]=\"txtMaxDiscount.valid || txtMaxDiscount.pristine\" class=\"alert alert-danger\">\r\n                            {{ 'RequiredField' | translate}}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                   \r\n                <div class=\"form-group\">\r\n                    <label for=\"txtVAT\" class=\"txtMax control-label col-md-4\"> {{ 'VAT' | translate}}</label>\r\n                    <div class=\"col-md-8\">\r\n                        <input type=\"text\" min=\"1\" pattern=\"\\d+(\\.\\d{1,2})?\" id=\"txtVAT\" name=\"txtVAT\" class=\"formCtrl form-control\" [(ngModel)]='clinicModel.vat' #txtVAT=\"ngModel\" required />\r\n                        <span> <button type=\"button\" class=\"btnRadius btn btn-primary\">  %</button></span>\r\n                        <div [hidden]=\"txtVAT.valid || txtVAT.pristine\" class=\"alert alert-danger\">\r\n                            {{ 'RequiredField' | translate}}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group \">\r\n                    <div class=\"col-sm-12\">\r\n                        <button class=\"btn btn-primary\" [disabled]=\"!SettingsForm.form.valid  || !isClinicAdmin\">{{ 'Save' | translate}}</button>\r\n                        <button type=\"button\" class=\"btn btn-primary\" disabled=\"{{ isClinicAdmin ? '' :'disabled'}}\">{{ 'Cancel' | translate}}</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        \r\n\r\n        </form>\r\n\r\n    </div>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\n\r\n@Component({\r\n\r\n    selector: 'clinic-staff',\r\n    templateUrl: './clinic-staff.component.html'\r\n})\r\n\r\nexport class ClinicStaffComponent {\r\n    selectStaffTab: boolean = true;\r\n    showProgress: boolean = true;\r\n}","<div *ngIf=\"showProgress\">\r\n    <loading></loading>\r\n</div>\r\n\r\n<div class=\"row\">\r\n        <clinic-tab [isStaffSelected]='selectStaffTab'></clinic-tab>\r\n    <div class=\"row nopadding\">\r\n\r\n        <div class=\"page-breadcrumb\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-7\">\r\n                    <div class=\"page-breadcrumb-wrap\">\r\n                        <div class=\"page-breadcrumb-info\">\r\n                            <ul class=\"list-page-breadcrumb\">\r\n                                <li>\r\n                                   {{ 'Clinic' | translate}}\r\n                                </li>\r\n                                <li class=\"active-page\"> {{ 'Staff' | translate}}</li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-5\">\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-md-11\">\r\n                <ul class=\"nav nav-tabs\">\r\n                    <li class=\"active\"><a href=\"#Doctor\" data-toggle=\"tab\" aria-expanded=\"true\">{{ 'Doctors' | translate}}</a></li>\r\n                    <li><a href=\"#Nurse\" data-toggle=\"tab\" aria-expanded=\"true\">{{ 'Nurses' | translate}}</a></li>\r\n                    <li><a href=\"#Receptionist\" data-toggle=\"tab\" aria-expanded=\"true\">{{ 'Receptionists' | translate}}</a></li>\r\n                    <li><a href=\"#Cashier\" data-toggle=\"tab\" aria-expanded=\"true\">{{ 'Cashier' | translate}}</a></li>\r\n                </ul>\r\n                <div id=\"myTabContent\" class=\"tab-content\">\r\n                    <div class=\"tab-pane fade active in\" id=\"Doctor\">\r\n\r\n                    </div>\r\n                    <div class=\"tab-pane fade\" id=\"Nurse\">\r\n\r\n                    </div>\r\n                    <div class=\"tab-pane fade\" id=\"Receptionist\">\r\n\r\n                    </div>\r\n\r\n                    <div class=\"tab-pane fade\" id=\"Cashier\">\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n","import { Component, Input, OnInit, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\nimport { AccountService } from '../../security/shared/account.service';\r\nimport { ClinicModulesEnum } from '../../shared/shared/clinic-modules.enum';\r\n\r\n@Component({\r\n\r\n    selector: 'clinic-tab',\r\n    templateUrl: './clinic-tab.component.html',\r\n\r\n})\r\n\r\nexport class ClinicTabComponent implements OnInit, OnChanges {\r\n\r\n    hasID: boolean = false;\r\n    //@Input() clinicId = 'new';\r\n\r\n    @Input() isDashboardSelected: boolean = false;\r\n    @Input() isAccountSelected: boolean = false;\r\n    @Input() isAddressSelected: boolean = false;\r\n    @Input() isEMRMasterSelected: boolean = false;\r\n    @Input() isEMRWizardSelected: boolean = false;\r\n    @Input() isFeedbackSelected: boolean = false;\r\n    @Input() isInventorySelected: boolean = false;\r\n    @Input() isPermissionsSelected: boolean = false;\r\n    @Input() isPurchasingSelected: boolean = false;\r\n    @Input() isNewsSelected: boolean = false;\r\n    @Input() isReportsSelected: boolean = false;\r\n    @Input() isSettingsSelected: boolean = false;\r\n    @Input() isStaffSelected: boolean = false;\r\n    @Input() isAppointmentsSelected: boolean = false;\r\n    @Input() isOrgMasterSelected: boolean = false;\r\n\r\n    @Input() isDiagnosisSelected: boolean = false;\r\n    @Input() isServicesSelected: boolean = false;\r\n    @Input() isServicePackagesSelected: boolean = false;\r\n    @Input() isDrugsSelected: boolean = false;\r\n    @Input() isLaboratoryTestsSelected: boolean = false;\r\n    @Input() isRadiologyTestsSelected: boolean = false;\r\n    @Input() isProductsSelected: boolean = false;\r\n    @Input() isTemplatesSelected: boolean = false;\r\n    clinicId: string = '';\r\n\r\n    constructor(private storage: LocalStorageService\r\n        , public accountService: AccountService) { }\r\n\r\n    key: ClinicModulesEnum = new ClinicModulesEnum();\r\n    hasPurshasingAndInventory: boolean = false;\r\n    hasCoding: boolean = false;\r\n    hasClinicMaster: boolean = false;\r\n    hasAccessRights: boolean = false;\r\n    hasPatientRegistration: boolean = false;\r\n    hasAppointments: boolean = false;\r\n    hasEMR: boolean = false;\r\n    hasBillingAndInsurance: boolean = false;\r\n    ngOnInit(): void {\r\n        let thisComponent = this;\r\n        thisComponent.clinicId = this.storage.retrieve(\"ClinicID\");\r\n        if (thisComponent.clinicId !== null) {\r\n            //this code is added to return the clinic moduls .\r\n            this.getClinicModules(thisComponent.clinicId);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n\r\n        this.clinicId = this.storage.retrieve(\"ClinicId\");\r\n        if (this.clinicId == null)\r\n            this.clinicId = 'new';\r\n\r\n        if (this.clinicId == 'new' || this.clinicId == null)\r\n            this.hasID = false;\r\n        else\r\n            this.hasID = true;\r\n\r\n        if (this.accountService.modulesWrapper._isScalar != undefined)\r\n            this.accountService.modulesWrapper.subscribe((item: any) => this.handleUserInterfaceViews(item));\r\n        else\r\n            this.handleUserInterfaceViews(this.accountService.modulesWrapper);\r\n    }\r\n\r\n    getClinicModules(id: string) {\r\n        //let userPermisions: UserPermissions = new UserPermissions(timeSlotDate);\r\n        let thisComponent = this;\r\n        this.accountService.getClinicModules(id)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    thisComponent.accountService.modulesWrapper = response;\r\n                    if (thisComponent.accountService.modulesWrapperObserver != undefined)\r\n                        thisComponent.accountService.modulesWrapperObserver.next(response);\r\n\r\n                    thisComponent.handleUserInterfaceViews(thisComponent.accountService.modulesWrapper);\r\n                },\r\n                function (error: any) {\r\n                    // thisComponent.toastr.error(error, '');\r\n                },\r\n                function () { // finally\r\n                    //thisComponent.showProgress = false;\r\n                });\r\n    }\r\n\r\n    handleUserInterfaceViews(clinicModulesWrapper: any) {\r\n        let vm = this;\r\n        for (let item of clinicModulesWrapper.modules) {\r\n            if (item.key == vm.key.PurchasingAndInventory)\r\n                vm.hasPurshasingAndInventory = true;\r\n            if (item.key == vm.key.PatientRegistration)\r\n                vm.hasPatientRegistration = true;\r\n            if (item.key == vm.key.EMR)\r\n                vm.hasEMR = true;\r\n\r\n            if (item.key == vm.key.Coding)\r\n                vm.hasCoding = true;\r\n            if (item.key == vm.key.ClinicMaster)\r\n                vm.hasClinicMaster = true;\r\n            if (item.key == vm.key.BillingAndInsurance)\r\n                vm.hasBillingAndInsurance = true;\r\n\r\n            if (item.key == vm.key.Appointments)\r\n                vm.hasAppointments = true;\r\n            if (item.key == vm.key.AccessRights)\r\n                vm.hasAccessRights = true;\r\n\r\n        }\r\n\r\n    }\r\n}","\r\n\r\n<div class=\"left-aside desktop-view \">\r\n    <div class=\"aside-branding\">\r\n        <a>\r\n            <!--<img src=\"assets/images/logo.png\" height=\"60\" width=\"60\" />-->\r\n            <img src=\"assets/images/App-Logo.png\" title=\"Logo\" class=\"appLogo\" />\r\n        </a>\r\n        <!--<a routerLink=\"/home\" class=\"large-logo\">\r\n            <span style=\"color:white;\">&nbsp;&nbsp;CIS</span>\r\n        </a>-->\r\n        <span class=\"aside-pin waves-effect\"><i class=\"fa fa-thumb-tack\"></i></span>\r\n        <span class=\"aside-close waves-effect\" onclick=\"closeLeftBar();\"><i class=\"fa fa-times\"></i></span>\r\n    </div>\r\n    <div class=\"left-navigation\">\r\n        <ul class=\"list-accordion padding5\">\r\n\r\n            <li>\r\n                <a class=\"{{ isDashboardSelected ? 'selectednavbaritem active' : '' }}\" routerLink=\"/clinic/dashboard\">\r\n                    <span class=\"nav-icon\"><i class=\"fa fa-line-chart\"></i></span><span class=\"nav-label\">{{ 'Dashboard' | translate}}</span>\r\n                </a>\r\n            </li>\r\n            <li>\r\n                <a class=\"{{ isAccountSelected ? 'selectednavbaritem active' : '' }}\" routerLink=\"/clinic/account/{{clinicId}}\">\r\n                    <span class=\"nav-icon\"><i class=\"ico-user\"></i></span><span class=\"nav-label\">{{ 'Account' | translate}}</span>\r\n                </a>\r\n            </li>\r\n\r\n            <li>\r\n                <a onclick=\"applyVerticalMenuStyle(this);\">\r\n                    <span class=\"nav-icon\"><i class=\"fa fa fa-cogs\"></i></span><span class=\"nav-label\">{{ 'Settings' | translate}}</span>\r\n                    <span class=\"menuarrow glyphicon glyphicon-chevron-right\"></span>\r\n                </a>\r\n\r\n                <ul>\r\n                    <li>\r\n                        <a class=\"{{ isSettingsSelected ? 'selectednavbaritem active' : '' }}\" routerLink=\"/clinic/settings/{{clinicId}}\">\r\n                            <span class=\"nav-icon\"><i class=\"fa fa-cogs\"></i></span><span class=\"nav-label\">{{ 'Settings' | translate}}</span>\r\n                        </a>\r\n                    </li>\r\n                    <li>\r\n                        <a class=\"{{ isOrgMasterSelected ? 'selectednavbaritem active' : '' }}\" routerLink=\"/clinic/organizationMaster/{{clinicId}}\" *ngIf=\"hasClinicMaster\">\r\n                            <span class=\"nav-icon\"><i class=\"fa fa-sitemap\"></i></span><span class=\"nav-label\">{{ 'OrganizationStructure' | translate}}</span>\r\n                        </a>\r\n                    </li>\r\n                    <li>\r\n                        <a class=\"{{ isPermissionsSelected ? 'selectednavbaritem active' : '' }}\" routerLink=\"/clinic/permissions\" *ngIf=\"hasAccessRights\">\r\n                            <span class=\"nav-icon\"><i class=\"fa fa-unlock-alt\"></i></span><span class=\"nav-label\">{{ 'AccessRights' | translate}}</span>\r\n                        </a>\r\n                    </li>\r\n\r\n                </ul>\r\n            </li>\r\n\r\n            <li>\r\n                <a class=\"{{ isAddressSelected ? 'selectednavbaritem active' : '' }}\" routerLink=\"/clinic/address/{{clinicId}}\">\r\n                    <span class=\"nav-icon\"><i class=\"ico-info-with-circle\"></i></span><span class=\"nav-label\">{{ 'AddressandContact' | translate}}</span>\r\n                </a>\r\n            </li>\r\n\r\n\r\n\r\n            <li *ngIf=\"hasCoding\">\r\n                <a onclick=\"applyVerticalMenuStyle(this);\">\r\n                    <span class=\"nav-icon\"><i class=\"fa fa-barcode\"></i></span><span class=\"nav-label\">{{ 'Coding' | translate}}</span>\r\n                    <span class=\"menuarrow glyphicon glyphicon-chevron-right\"></span>\r\n                </a>\r\n\r\n                <ul>\r\n                    <li>\r\n                        <a class=\"{{ isDiagnosisSelected ? 'selectednavbaritem active' : '' }}\" routerLink=\"/clinic/diagnosis/{{clinicId}}\">\r\n                            <span class=\"nav-icon\"><i class=\"fa fa-stethoscope\"></i></span><span class=\"nav-label\">{{ 'Diagnosis' | translate}}</span>\r\n                        </a>\r\n                    </li>\r\n                    <li>\r\n                        <a class=\"{{ isDrugsSelected ? 'selectednavbaritem active' : '' }}\" routerLink=\"/clinic/drugs/{{clinicId}}\">\r\n                            <span class=\"nav-icon\"><i class=\"fa fa-glass\"></i></span><span class=\"nav-label\">{{ 'Drugs' | translate}}</span>\r\n                        </a>\r\n                    </li>\r\n                    <li>\r\n                        <a class=\"{{ isLaboratoryTestsSelected ? 'selectednavbaritem active' : '' }}\" routerLink=\"/clinic/laboratoryTests/{{clinicId}}\">\r\n                            <span class=\"nav-icon\"><i class=\"fa fa-flask\"></i></span><span class=\"nav-label\">{{ 'LaboratoryTests' | translate}}</span>\r\n                            <!--<img src=\"assets/images/lab-test.jpg\" width=\"40\" height=\"40\" />\r\n                            {{ 'LaboratoryTests' | translate}}-->\r\n                        </a>\r\n                    </li>\r\n                    <li>\r\n                        <a class=\"{{ isRadiologyTestsSelected ? 'selectednavbaritem active' : '' }}\" routerLink=\"/clinic/radiologyTests/{{clinicId}}\">\r\n                            <span class=\"nav-icon\"><i class=\"fa fa-bed\"></i></span><span class=\"nav-label\">{{ 'RadiologyTests' | translate}}</span>\r\n                            <!--<img src=\"assets/images/rad-test.jpg\" width=\"40\" height=\"40\" />\r\n                            {{ 'RadiologyTests' | translate}}-->\r\n                        </a>\r\n                    </li>\r\n                    <li>\r\n                        <a class=\"{{ isServicesSelected ? 'selectednavbaritem active' : '' }}\" routerLink=\"/clinic/services/{{clinicId}}\">\r\n                            <span class=\"nav-icon\"><i class=\"fa fa-heartbeat\"></i></span><span class=\"nav-label\">{{ 'Services' | translate}}</span>\r\n                        </a>\r\n                    </li>\r\n                    <li>\r\n                        <a class=\"{{ isServicePackagesSelected ? 'selectednavbaritem active' : '' }}\" routerLink=\"/clinic/servicePackages/{{clinicId}}\">\r\n                            <span class=\"nav-icon\"><i class=\"fa fa-heartbeat\"></i></span><span class=\"nav-label\">{{ 'ServicePackage' | translate}}</span>\r\n                        </a>\r\n                    </li>\r\n                    <li>\r\n                        <a class=\"{{ isProductsSelected ? 'selectednavbaritem active' : '' }}\" routerLink=\"/clinic/products/{{clinicId}}\">\r\n                            <span class=\"nav-icon\"><i class=\"fa fa-eyedropper\"></i></span><span class=\"nav-label\">{{ 'Products' | translate}}</span>\r\n                        </a>\r\n                    </li>\r\n\r\n                </ul>\r\n            </li>\r\n\r\n\r\n            <li>\r\n                <a onclick=\"applyVerticalMenuStyle(this);\">\r\n                    <span class=\"nav-icon\"><i class=\"ico-flow-cascade\"></i></span><span class=\"nav-label\">{{ 'EMR' | translate}}</span>\r\n                    <span class=\"menuarrow glyphicon glyphicon-chevron-right\"></span>\r\n                </a>\r\n                <ul>\r\n                    <li>\r\n                        <a class=\"{{ isEMRMasterSelected ? 'selectednavbaritem active' : '' }}\" routerLink=\"/clinic/EMRMaster/{{clinicId}}\" *ngIf=\"hasEMR\">\r\n                            <span class=\"nav-icon\"><i class=\"ico-flow-cascade\"></i></span><span class=\"nav-label\">{{ 'EMRMaster' | translate}}</span>\r\n                        </a>\r\n                    </li>\r\n                    <li>\r\n                        <a class=\"{{ isEMRWizardSelected ? 'selectednavbaritem active' : '' }}\" routerLink=\"/clinic/EMRWizard/{{clinicId}}\" *ngIf=\"hasEMR\">\r\n                            <span class=\"nav-icon\"><i class=\"fa fa-sort-amount-asc\"></i></span><span class=\"nav-label\">{{ 'EMRWizard' | translate}}</span>\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n            </li>\r\n\r\n            <li>\r\n                <a class=\"{{ isAppointmentsSelected ? 'selectednavbaritem active' : '' }}\" routerLink=\"/clinic/appointments/{{clinicId}}\" *ngIf=\"hasAppointments\">\r\n                    <span class=\"nav-icon\"><i class=\"fa fa-calendar\"></i></span><span class=\"nav-label\">{{ 'AppointmentMaster' | translate}}</span>\r\n                </a>\r\n            </li>\r\n            <li>\r\n                <a class=\"{{ isInventorySelected ? 'selectednavbaritem active' : '' }}\" routerLink=\"/clinic/inventory/{{clinicId}}\" *ngIf=\"hasPurshasingAndInventory\">\r\n                    <span class=\"nav-icon\"><i class=\"ico-shop\"></i></span><span class=\"nav-label\">{{ 'Inventory' | translate}}</span>\r\n                </a>\r\n            </li>\r\n            <li>\r\n                <a class=\"{{ isPurchasingSelected ? 'selectednavbaritem active' : '' }}\" routerLink=\"/clinic/purchasing/all/{{clinicId}}\" *ngIf=\"hasPurshasingAndInventory\">\r\n                    <span class=\"nav-icon\"><i class=\"fa fa-shopping-cart\"></i></span><span class=\"nav-label\">{{ 'Purchasing' | translate}}</span>\r\n                </a>\r\n            </li>\r\n            <li>\r\n                <a class=\"{{ isFeedbackSelected ? 'selectednavbaritem active' : '' }}\" routerLink=\"/clinic/feedback/all/{{clinicId}}\">\r\n                    <span class=\"nav-icon\"><i class=\"fa fa-twitch\"></i></span><span class=\"nav-label\">{{ 'Feedback' | translate}}</span>\r\n                </a>\r\n            </li>\r\n            <li>\r\n                <a class=\"{{ isNewsSelected ? 'selectednavbaritem active' : '' }}\" routerLink=\"/clinic/news/all/{{clinicId}}\">\r\n                    <span class=\"nav-icon\"><i class=\"ico-newspaper\"></i></span><span class=\"nav-label\">{{ 'News' | translate}}</span>\r\n                </a>\r\n            </li>\r\n            <li>\r\n                <a class=\"{{ isReportsSelected ? 'selectednavbaritem active' : '' }}\" routerLink=\"/clinic/reports/{{clinicId}}\">\r\n                    <span class=\"nav-icon\"><i class=\"fa fa-files-o\"></i></span><span class=\"nav-label\">{{ 'Reports' | translate}}</span>\r\n                </a>\r\n            </li>\r\n            <li>\r\n                <a class=\"{{ isTemplatesSelected ? 'selectednavbaritem active' : '' }}\" routerLink=\"/clinic/templates/{{clinicId}}\">\r\n                    <span class=\"nav-icon\"><i class=\"fa fa-file-word-o\"></i></span><span class=\"nav-label\">{{ 'Templates' | translate}}</span>\r\n                </a>\r\n            </li>\r\n        </ul>\r\n\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChild, ElementRef, OnChanges, SimpleChanges, Output, EventEmitter } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\nimport { ClinicService } from '../shared/clinic.service';\r\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\r\n\r\n@Component({\r\n    selector: 'clinic-templates',\r\n    templateUrl: './clinic-templates.component.html'\r\n})\r\n\r\nexport class ClinicTemplatesComponent implements OnInit {\r\n    fileNameTxt: string = this.translate.instant(\"TemplateName\");\r\n    btnUploadText = this.translate.instant(\"UploadTemplate\");\r\n    fileNameUploadTxt = this.translate.instant(\"Template\");\r\n    fileType: boolean = false;\r\n    showDocumentDetails: boolean = true;\r\n    model: any;\r\n    type = 'TemplateFileType';\r\n    patientAttachementId = '';\r\n    selectedClinicId!: string;\r\n    isTemplatesSelected = true;\r\n    Template: any;\r\n    // showProgress: any = true;\r\n    constructor(public toastr: ToastrService,\r\n        private localStorage: LocalStorageService\r\n        , private clinicService: ClinicService\r\n        , public translate: TranslateService) { }\r\n\r\n\r\n\r\n    ngOnInit(): void {\r\n        this.selectedClinicId = this.localStorage.retrieve(\"ClinicID\");\r\n    }\r\n    updateModel(updatedModel: any) {\r\n        this.model = updatedModel;\r\n        this.patientAttachementId = this.model.id;\r\n    }\r\n}","\r\n<!-- <div *ngIf=\"showProgress\">\r\n    <loading></loading>\r\n</div> -->\r\n    <clinic-tab [isTemplatesSelected]='isTemplatesSelected'></clinic-tab>\r\n    <div class=\"row nopadding\">\r\n        <div class=\"row NBbreadcrumb\">\r\n            <a>{{ 'Clinic' | translate}}</a> &nbsp;/\r\n            {{ 'Templates' | translate}}\r\n        </div>\r\n    </div>\r\n\r\n\r\n\r\n<documents (onModelUpdated)=\"updateModel($event)\" [btnUploadText]=\"btnUploadText\" [parentId]=\"selectedClinicId\" [title]=\"Template\" [fileNameUploadTxt]=\"fileNameUploadTxt\" [showDocumentDetails]=\"showDocumentDetails\"[fileType]=\"fileType\" [parentType]=\"type\" [fileNameTxt]=\"fileNameTxt\"></documents>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ClinicRoutingModule } from './clinic.routing';\r\nimport { ClinicTabComponent } from './clinic-tab/clinic-tab.component';\r\nimport { ClinicAccountComponent } from './clinic-account/clinic-account.component';\r\nimport { ClinicAddressComponent } from './clinic-address/clinic-address.component';\r\nimport { ClinicEMRMasterComponent } from './clinic-EMRMaster/clinic-EMRMaster.component';\r\nimport { ClinicEMRWizardComponent } from './clinic-EMRWizard/clinic-EMRWizard.component';\r\nimport { ViewfeedbacksListComponent } from './clinic-feedback/view-feedbacks-list/view-feedbacks-list.component';\r\nimport { ReplyToFeedbackComponent } from './clinic-feedback/reply-to-feedback/reply-to-feedback.component';\r\nimport { ClinicInventoryComponent } from './clinic-inventory/clinic-inventory.component';\r\nimport { ClinicInventoryList } from './clinic-inventory/clinic-inventory-list/clinic-inventory-list.component';\r\nimport { ClinicInventoryAddQuantity } from './clinic-inventory/clinic-inventory-add-quantity/clinic-inventory-add-quantity.component';\r\nimport { ClinicInventoryAdjustQuantity } from './clinic-inventory/clinic-inventory-adjust-quantity/clinic-inventory-adjust-quantity.component';\r\nimport { ClinicInventoryAdjustmentHistory } from './clinic-inventory/clinic-inventory-adjustment-history/clinic-inventory-adjustment-history.component';\r\nimport { DoctorInventoryRequestsComponent } from './clinic-inventory/doctor-inventory-requests/doctor-inventory-requests.component';\r\nimport { ClinicPermissionsComponent } from './clinic-permissions/clinic-permissions.component';\r\nimport { PurchaseOrderList } from './clinic-purchasing/purchase-order-list/purchase-order-list.component';\r\nimport { CreatePurchaseOrder } from './clinic-purchasing/create-purchase-order/create-purchase-order.component';\r\nimport { ReceivePurchaseOrder } from './clinic-purchasing/receive-purchase-order/receive-purchase-order.component';\r\nimport { PurchaseOrderViewDetails } from './clinic-purchasing/purchase-order-view-details/purchase-order-view-details.component';\r\nimport { ClinicReportsComponent } from './clinic-reports/clinic-reports.component';\r\nimport { ViewNewsListComponent } from './clinic-news/view-news-list/view-news-list.component';\r\nimport { AddNewsComponent } from './clinic-news/add-news/add-news.component';\r\nimport { ClinicSettingsComponent } from './clinic-settings/clinic-settings.component';\r\nimport { ClinicStaffComponent } from './clinic-staff/clinic-staff.component';\r\nimport { ClinicAppointmentsComponent } from './clinic-appointments/clinic-appointments.component';\r\nimport { ClinicOrganizationMasterComponent } from './clinic-organizationMaster/clinic-organizationMaster.component';\r\nimport { ClinicManageDiagnosisGroupComponent } from './clinic-diagnosis/manage-diagnosis-group/clinic-manage-diagnosis-group.component';\r\nimport { ClinicDiagnosisComponent } from './clinic-diagnosis/clinic-diagnosis.component';\r\nimport { ClinicServicesComponent } from './clinic-services/clinic-services.component';\r\nimport { ClinicServicePackagesComponent } from './clinic-servicePackages/clinic-servicePackages.component';\r\nimport { ClinicServicePackageDetailsComponent } from './clinic-servicePackage-details/clinic-servicePackage-details.component';\r\nimport { ClinicDrugsComponent } from './clinic-drugs/clinic-drugs.component';\r\nimport { ClinicManageDrugComponent } from './clinic-drugs/manage-drug/clinic-manage-drug.component';\r\nimport { ClinicManageDrugsGroupComponent } from './clinic-drugs/manage-drugs-group/clinic-manage-drugs-group.component';\r\nimport { ClinicLaboratoryTestsComponent } from './clinic-laboratory-tests/clinic-laboratory-tests.component';\r\nimport { ClinicManageLaboratoryTestComponent } from './clinic-laboratory-tests/manage-laboratory-test/clinic-manage-laboratory-test.component';\r\nimport { ClinicManageLaboratoryTestsGroupComponent } from './clinic-laboratory-tests/manage-laboratory-tests-group/clinic-manage-laboratory-tests-group.component';\r\nimport { ClinicRadiologyTestsComponent } from './clinic-radiology-tests/clinic-radiology-tests.component';\r\nimport { ClinicManageRadiologyTestComponent } from './clinic-radiology-tests/manage-radiology-test/clinic-manage-radiology-test.component';\r\nimport { ClinicManageRadiologyTestsGroupComponent } from './clinic-radiology-tests/manage-radiology-tests-group/clinic-manage-radiology-tests-group.component';\r\nimport { ClinicProductsComponent } from './clinic-products/clinic-products.component';\r\nimport { ClinicTemplatesComponent } from './clinic-templates/clinic-templates.component';\r\n\r\nimport { ClinicEMRMasterDrugsComponent } from './clinic-EMRMaster-drugs/clinic-EMRMaster-drugs.component';\r\nimport { ClinicEMRMasterServicesComponent } from './clinic-EMRMaster-services/clinic-EMRMaster-services.component';\r\nimport { ClinicEMRMasterLaboratoryTestsComponent } from './clinic-EMRMaster-laboratoryTests/clinic-EMRMaster-laboratoryTests.component';\r\nimport { ClinicEMRMasterRadiologyTestsComponent } from './clinic-EMRMaster-radiologyTests/clinic-EMRMaster-radiologyTests.component';\r\nimport { ClinicEMRMasterServicePackagesComponent } from './clinic-EMRMaster-servicePackages/clinic-EMRMaster-servicePackages.component';\r\nimport { ClinicHumanResourceComponent } from './clinic-humanResource/clinic-humanResource.component';\r\nimport { ClinicHumanResourceBasicComponent } from './clinic-humanResource-basic/clinic-humanResource-basic.component';\r\nimport { ClinicHumanResourceServiceFeesComponent } from './clinic-humanResource-serviceFees/clinic-humanResource-serviceFees.component';\r\nimport { ClinicHumanResourceServiceSlotsComponent } from './clinic-humanResource-serviceSlots/clinic-humanResource-serviceSlots.component';\r\nimport { ClinicAppointmentDetailsComponent } from './clinic-appointment-details/clinic-appointment-details.component';\r\nimport { ClinicDashboardComponent } from './clinic-dashboard/clinic-dashboard.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { SecurityModule } from '../security/security.module';\r\nimport { ClinicServiceGroupDetailsComponent } from './clinic-serviceGroup-details/clinic-serviceGroup-details.component';\r\nimport { ClinicServiceDetailsComponent } from './clinic-service-details/clinic-service-details.component';\r\nimport { ClinicManageDiagnoseComponent } from './clinic-diagnosis/manage-diagnose/clinic-manage-diagnose.component';\r\nimport { ClinicEMRMasterDiagnosisComponent } from './clinic-EMRMaster-diagnosis/clinic-EMRMaster-diagnosis.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        FormsModule,\r\n        CommonModule,\r\n        ClinicRoutingModule,\r\n        SharedModule,\r\n        SecurityModule,\r\n        //ToastModule\r\n    ],\r\n    declarations: [\r\n        ClinicTabComponent,\r\n        ClinicTemplatesComponent,\r\n        ClinicAccountComponent,\r\n        ClinicAddressComponent,\r\n        ClinicEMRMasterComponent,\r\n        ClinicEMRWizardComponent,\r\n        ViewfeedbacksListComponent,\r\n        ReplyToFeedbackComponent,\r\n        ClinicInventoryComponent,\r\n        ClinicInventoryList,\r\n        ClinicInventoryAddQuantity,\r\n        ClinicInventoryAdjustQuantity,\r\n        ClinicInventoryAdjustmentHistory,\r\n        DoctorInventoryRequestsComponent,\r\n        ClinicPermissionsComponent,\r\n        PurchaseOrderList,\r\n        CreatePurchaseOrder,\r\n        ReceivePurchaseOrder,\r\n        PurchaseOrderViewDetails,\r\n        ClinicReportsComponent,\r\n        ViewNewsListComponent,\r\n        AddNewsComponent,\r\n        ClinicSettingsComponent,\r\n        ClinicStaffComponent,\r\n        ClinicAppointmentsComponent,\r\n        ClinicOrganizationMasterComponent,\r\n        ClinicManageDiagnoseComponent,\r\n        ClinicManageDiagnosisGroupComponent,\r\n        ClinicDiagnosisComponent,\r\n        ClinicServicesComponent,\r\n        ClinicServicePackagesComponent,\r\n        ClinicServicePackageDetailsComponent,\r\n        ClinicDrugsComponent,\r\n        ClinicManageDrugComponent,\r\n        ClinicManageDrugsGroupComponent,\r\n        ClinicLaboratoryTestsComponent,\r\n        ClinicManageLaboratoryTestComponent,\r\n        ClinicManageLaboratoryTestsGroupComponent,\r\n        ClinicRadiologyTestsComponent,\r\n        ClinicManageRadiologyTestComponent,\r\n        ClinicManageRadiologyTestsGroupComponent,\r\n        ClinicProductsComponent,\r\n        ClinicEMRMasterDiagnosisComponent,\r\n        ClinicEMRMasterDrugsComponent,\r\n        ClinicEMRMasterServicesComponent,\r\n        ClinicEMRMasterLaboratoryTestsComponent,\r\n        ClinicEMRMasterRadiologyTestsComponent,\r\n        ClinicEMRMasterServicePackagesComponent,\r\n\r\n        ClinicAppointmentDetailsComponent,\r\n        ClinicHumanResourceComponent,\r\n        ClinicServiceGroupDetailsComponent,\r\n        ClinicServiceDetailsComponent,\r\n\r\n        ClinicHumanResourceBasicComponent,\r\n        ClinicHumanResourceServiceFeesComponent,\r\n        ClinicHumanResourceServiceSlotsComponent,\r\n        ClinicDashboardComponent\r\n\r\n    ],\r\n    providers: [],\r\n    exports: [\r\n\r\n    ]\r\n})\r\nexport class ClinicsModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ClinicAccountComponent } from './clinic-account/clinic-account.component';\r\nimport { ClinicAddressComponent } from './clinic-address/clinic-address.component';\r\nimport { ClinicEMRMasterComponent } from './clinic-EMRMaster/clinic-EMRMaster.component';\r\nimport { ClinicEMRWizardComponent } from './clinic-EMRWizard/clinic-EMRWizard.component';\r\nimport { ViewfeedbacksListComponent } from './clinic-feedback/view-feedbacks-list/view-feedbacks-list.component';\r\nimport { ReplyToFeedbackComponent } from './clinic-feedback/reply-to-feedback/reply-to-feedback.component';\r\nimport { ClinicInventoryComponent } from './clinic-inventory/clinic-inventory.component';\r\nimport { DoctorInventoryRequestsComponent } from './clinic-inventory/doctor-inventory-requests/doctor-inventory-requests.component';\r\nimport { ClinicPermissionsComponent } from './clinic-permissions/clinic-permissions.component';\r\nimport { PurchaseOrderList } from './clinic-purchasing/purchase-order-list/purchase-order-list.component';\r\nimport { CreatePurchaseOrder } from './clinic-purchasing/create-purchase-order/create-purchase-order.component';\r\nimport { ReceivePurchaseOrder } from './clinic-purchasing/receive-purchase-order/receive-purchase-order.component';\r\nimport { PurchaseOrderViewDetails } from './clinic-purchasing/purchase-order-view-details/purchase-order-view-details.component';\r\nimport { ClinicReportsComponent } from './clinic-reports/clinic-reports.component';\r\nimport { ViewNewsListComponent } from './clinic-news/view-news-list/view-news-list.component';\r\nimport { AddNewsComponent } from './clinic-news/add-news/add-news.component';\r\nimport { ClinicSettingsComponent } from './clinic-settings/clinic-settings.component';\r\nimport { ClinicStaffComponent } from './clinic-staff/clinic-staff.component';\r\nimport { ClinicAppointmentsComponent } from './clinic-appointments/clinic-appointments.component';\r\nimport { ClinicOrganizationMasterComponent } from './clinic-organizationMaster/clinic-organizationMaster.component';\r\nimport { ClinicServicesComponent } from './clinic-services/clinic-services.component';\r\nimport { ClinicServicePackagesComponent } from './clinic-servicePackages/clinic-servicePackages.component';\r\nimport { ClinicServicePackageDetailsComponent } from './clinic-servicePackage-details/clinic-servicePackage-details.component';\r\nimport { ClinicDrugsComponent } from './clinic-drugs/clinic-drugs.component';\r\nimport { ClinicLaboratoryTestsComponent } from './clinic-laboratory-tests/clinic-laboratory-tests.component';\r\nimport { ClinicRadiologyTestsComponent } from './clinic-radiology-tests/clinic-radiology-tests.component';\r\nimport { ClinicProductsComponent } from './clinic-products/clinic-products.component';\r\nimport { ClinicTemplatesComponent } from './clinic-templates/clinic-templates.component';\r\nimport { ClinicDashboardComponent } from './clinic-dashboard/clinic-dashboard.component';\r\nimport { ClinicDiagnosisComponent } from './clinic-diagnosis/clinic-diagnosis.component';\r\n\r\nconst clinicRoutes: Routes = [\r\n    //Clinics\r\n    { path: 'account/:id', component: ClinicAccountComponent },\r\n    { path: 'address/:id', component: ClinicAddressComponent },\r\n    { path: 'EMRMaster/:id', component: ClinicEMRMasterComponent },\r\n    { path: 'EMRWizard/:id', component: ClinicEMRWizardComponent },\r\n    { path: 'feedback/all/:id', component: ViewfeedbacksListComponent },\r\n    { path: 'feedback/replyToFeedback/:id', component: ReplyToFeedbackComponent },\r\n    { path: 'inventory/:id', component: ClinicInventoryComponent },\r\n    { path: 'clinicInventory/doctorRequests/:id', component: DoctorInventoryRequestsComponent },\r\n    { path: 'permissions', component: ClinicPermissionsComponent },\r\n    { path: 'purchasing/all/:id', component: PurchaseOrderList },\r\n    { path: 'purchasing/createOrder/:id/:bool/:proId', component: CreatePurchaseOrder },\r\n    { path: 'purchasing/receiveOrder/:id', component: ReceivePurchaseOrder },\r\n    { path: 'purchasing/orderDetails/:id', component: PurchaseOrderViewDetails },\r\n    { path: 'reports/:id', component: ClinicReportsComponent },\r\n    { path: 'news/all/:id', component: ViewNewsListComponent },\r\n    { path: 'clinicNews/addNews/:id', component: AddNewsComponent },\r\n    { path: 'settings/:id', component: ClinicSettingsComponent },\r\n    { path: 'clinicStaff/:id', component: ClinicStaffComponent },\r\n    { path: 'appointments/:id', component: ClinicAppointmentsComponent },\r\n    { path: 'organizationMaster/:id', component: ClinicOrganizationMasterComponent },\r\n    { path: 'diagnosis/:id', component: ClinicDiagnosisComponent },\r\n    { path: 'services/:id', component: ClinicServicesComponent },\r\n    { path: 'servicePackages/:id', component: ClinicServicePackagesComponent },\r\n    { path: 'servicePackageDetails/:id', component: ClinicServicePackageDetailsComponent },\r\n    { path: 'drugs/:id', component: ClinicDrugsComponent },\r\n    { path: 'laboratoryTests/:id', component: ClinicLaboratoryTestsComponent },\r\n    { path: 'radiologyTests/:id', component: ClinicRadiologyTestsComponent },\r\n    { path: 'products/:id', component: ClinicProductsComponent },\r\n    { path: 'templates/:id', component: ClinicTemplatesComponent },\r\n    { path: 'dashboard', component: ClinicDashboardComponent }\r\n\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(clinicRoutes)\r\n    ],\r\n    exports: [\r\n        RouterModule\r\n    ]\r\n})\r\nexport class ClinicRoutingModule { }","export class EMRObjectType {\r\n\r\n    Diagnosis: string = \"Diagnosis\";\r\n    Drugs: string = \"Drugs\";\r\n    Services: string = \"Services\";\r\n    LaboratoryTests: string = \"LaboratoryTests\";\r\n    RadiologyTests: string = \"RadiologyTests\";\r\n    ServicePackages: string = \"ServicePackages\";\r\n}","import { UtilityClass } from './utility.class';\r\n\r\nexport class TimeSlot {\r\n\r\n    utilClass: UtilityClass = new UtilityClass();\r\n\r\n    name!:string;\r\n    amPmName!:string;\r\n\r\n    hour!: number;\r\n    minute!: number;\r\n    dateTime: Date | undefined;\r\n\r\n    constructor(selectedDate: Date) {\r\n        this.hour = selectedDate.getHours();\r\n        this.minute = selectedDate.getMinutes();\r\n        this.dateTime = new Date(selectedDate.getFullYear(), selectedDate.getMonth(),\r\n            selectedDate.getDate(), this.hour, this.minute);\r\n\r\n        this.name = this.utilClass.getFormattedTime(this.hour, this.minute);\r\n        this.amPmName = this.utilClass.getAmPmTime(this.hour, this.minute);\r\n    }\r\n}","export class TreeHelerClass {\r\n\r\n    getActiveNodesOnly(originalList: any[]) {\r\n        let activeList: any[] = [];\r\n\r\n        if (originalList) {\r\n            for (let node of originalList) {\r\n\r\n                if (node.parent == undefined && node.isActive) {\r\n                    // create temp node for root node\r\n                    var tempNode: any = {};\r\n                    tempNode = { data: node.data, label: node.label, labelTranslation: node.labelTranslation, type: node.type, isActive: node.isActive, expanded: true, parent: node.parent };\r\n                    tempNode.children = [];\r\n                    // add active root node to the list\r\n                    activeList.push(tempNode);\r\n                    //get active children\r\n                    this.getActiveChildNodes(node, tempNode);\r\n                }\r\n            }\r\n        }\r\n\r\n        return activeList;\r\n    }\r\n\r\n    private getActiveChildNodes(node: any, ParentTempNode: any) {\r\n\r\n        if (node.children) {\r\n            node.children.forEach((childNode:any) => {\r\n                if (childNode.isActive) {\r\n                    var tempNode: any = {};\r\n                    tempNode = { data: childNode.data, label: childNode.label, labelTranslation: childNode.labelTranslation, type: childNode.type, isActive: childNode.isActive, expanded: true, parent: childNode.parent };\r\n                    tempNode.children = [];\r\n                    ParentTempNode.children.push(tempNode);\r\n                }\r\n\r\n                this.getActiveChildNodes(childNode, tempNode);\r\n            });\r\n        }\r\n    }\r\n}"],"names":[],"sourceRoot":"webpack:///"}