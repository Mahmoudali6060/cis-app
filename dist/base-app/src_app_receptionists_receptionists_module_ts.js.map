{"version":3,"file":"src_app_receptionists_receptionists_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;AAWO,MAAM,4BAA4B;IAErC,YAA0B,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;IAAI,CAAC;IAE7D,QAAQ;QAEJ,sEAAsE;IAC1E,CAAC;;wGAPQ,4BAA4B;0HAA5B,4BAA4B;QCXzC,yEAAiB;QACT;QAAA,4EAAgD;QACpD;QAAA,yEAA2B;QACvB;QAAA,yEAA6B;QACzB;QAAA,yEAAiB;QACb;QAAA,0EAAsB;QAClB;QAAA,0EAAkC;QAC9B;QAAA,0EAAkC;QAC9B;QAAA,yEAAiC;QAC7B;QAAA,sEAAI;QACA;QAAA,qEAAI;QAAA,wDAAsC;;QAAA,4DAAI;QAClD;QAAA,4DAAK;QACL;QAAA,yEAAwB;QAAC,wDAA0B;;QAAA,4DAAK;QAC5D;QAAA,4DAAK;QACT;QAAA,4DAAM;QACV;QAAA,4DAAM;QACV;QAAA,4DAAM;QACN;QAAA,0EAAsB;QACtB;QAAA,4DAAM;QACV;QAAA,4DAAM;QACV;QAAA,4DAAM;QAEN;QAAA,gFAAwE;QACpE;QAAA,2EAAwB;QACpB;QAAA,2EAAsC;QAClC;QAAA,8EAAqE;QAAA,wDAAuB;;QAAA,4DAAS;QACrG;QAAA,8EAAgC;QAAA,wDAAyB;;QAAA,4DAAS;QACtE;QAAA,4DAAM;QACV;QAAA,4DAAM;QACN;QAAA,2EAAwB;QACpB;QAAA,6EAAwD;QAAA,wDAA2B;;QAAA,4DAAQ;QAC3F;QAAA,2EAAsB;QAClB;QAAA,wEAAkE;QACtE;QAAA,4DAAM;QACV;QAAA,4DAAM;QACN;QAAA,2EAAwB;QACpB;QAAA,6EAAoD;QAAA,wDAAwB;;QAAA,4DAAQ;QACpF;QAAA,2EAAsB;QAClB;QAAA,wEAA0D;QAC9D;QAAA,4DAAM;QACV;QAAA,4DAAM;QACN;QAAA,2EAAwB;QACpB;QAAA,6EAAwD;QAAA,wDAA2B;;QAAA,4DAAQ;QAC3F;QAAA,2EAAsB;QAClB;QAAA,wEAAkF;QACtF;QAAA,4DAAM;QACV;QAAA,4DAAM;QACN;QAAA,2EAAwB;QACpB;QAAA,6EAA+D;QAAA,wDAAkC;;QAAA,4DAAQ;QACzG;QAAA,2EAAsB;QAClB;QAAA,wEAAgG;QACpG;QAAA,4DAAM;QACV;QAAA,4DAAM;QACN;QAAA,4EAAwB;QACpB;QAAA,4EAAsC;QAClC;QAAA,+EAAgC;QAAA,yDAAuB;;QAAA,4DAAS;QAChE;QAAA,+EAAgC;QAAA,yDAAyB;;QAAA,4DAAS;QACtE;QAAA,4DAAM;QACV;QAAA,4DAAM;QACV;QAAA,4DAAO;QAEX;QAAA,4DAAM;QACV;QAAA,4DAAM;QAEN;;;QA/DqB,0DAAoB;QAApB,6EAAoB;QASD,2DAAsC;QAAtC,yJAAsC;QAErB,0DAA0B;QAA1B,uJAA0B;QAa/B,2DAAoC;QAApC,gFAAoC;QAAC,0DAAuB;QAAvB,0IAAuB;QAC5D,0DAAyB;QAAzB,4IAAyB;QAIL,0DAA2B;QAA3B,8IAA2B;QAM/B,2DAAwB;QAAxB,2IAAwB;QAMpB,2DAA2B;QAA3B,8IAA2B;QAMpB,2DAAkC;QAAlC,qJAAkC;QAO7D,2DAAuB;QAAvB,2IAAuB;QACvB,0DAAyB;QAAzB,6IAAyB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IExD7E,sEAA0B;IACtB;IAAA,qEAAmB;IACvB;IAAA,4DAAM;;;;IAcI,6EAAyH;IAA9C,gTAAY,iBAAU,IAAC;IAChG;IAAA,yEAAwB;IACpB;IAAA,8EAAsC;IAClC;IAAA,yEAAwB;IAChB;IAAA,6EAAmF;IAAA,wDAAuB;;IAAA,4DAAS;IACnH;IAAA,8EAAgE;IAAlB,6SAAS,cAAO,IAAC;IAAC,wDAAyB;;IAAA,4DAAS;IAC1G;IAAA,4DAAM;IACV;IAAA,4DAAU;IACd;IAAA,4DAAM;IAEV;IAAA,4DAAO;;;;IARU,0DAA2B;IAA3B,2FAA2B;IAEsB,0DAAoC;IAApC,qFAAoC;IAAC,0DAAuB;IAAvB,yIAAuB;IAC1C,0DAAyB;IAAzB,2IAAyB;;ADT9G,MAAM,4BAA4B;IAMrC,sBAAsB;IAEtB,YAAoB,mBAAwC,EACjD,MAAqB,EACpB,MAAsB;QAFd,wBAAmB,GAAnB,mBAAmB,CAAqB;QACjD,WAAM,GAAN,MAAM,CAAe;QACpB,WAAM,GAAN,MAAM,CAAgB;QATlC,qBAAgB,GAAY,IAAI,CAAC;QAEjC,WAAM,GAAG,IAAI,CAAC;QACd,UAAK,GAAQ,EAAE,CAAC;QAChB,iBAAY,GAAG,KAAK,CAAC;IAMjB,CAAC;IAGL,QAAQ;QACJ,IAAI,EAAE,GAAG,IAAI,CAAC;QACd,IAAI,OAAO,GAAQ,EAAE,CAAC;QACtB,IAAI,OAAO,GAAQ,EAAE,CAAC;QAEtB,EAAE,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;QAC3B,EAAE,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;QAE3B,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC3C,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,GAAG,EAAE,EAAE,CAAC;QAExB,yDAAyD;QACzD,kCAAkC;IACtC,CAAC;IACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MA+BE;IACF,KAAK;QACD,oCAAoC;QACpC,kBAAkB;QAClB,sBAAsB;QACtB,wBAAwB;QACxB,0BAA0B;QAC1B,0BAA0B;QAC1B,0CAA0C;IAC9C,CAAC;IAED,QAAQ;QACJ;;;;;;;;;;;;;;;;;;;UAmBE;IACN,CAAC;;wGA3FQ,4BAA4B;0HAA5B,4BAA4B;QCZzC,wHAEM;QAGN;QAAA,yEAAiB;QACT;QAAA,4EAAgD;QACpD;QAAA,yEAA2B;QACvB;QAAA,yEAAwC;QACpC;QAAA,0EAA0B;QACtB;QAAA,qEAAG;QAAA,wDAAsC;;QAAA,4DAAI;QAAC,wDAElD;;QAAA,4DAAM;QAEV;QAAA,4DAAM;QAEJ;QAAA,6HAUK;QAEf;QAAA,4DAAM;QACN;QAAA,4DAAM;QAEN;;QA/BM,kFAAkB;QAMH,0DAAoB;QAApB,6EAAoB;QAItB,0DAAsC;QAAtC,wJAAsC;QAAK,0DAElD;QAFkD,oMAElD;QAIgB,0DAAY;QAAZ,4EAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDjC,MAAM,uCAAuC;IAYhD,YAAoB,mBAAwC,EAC9C,aAA4B,EAC7B,MAAqB,EACpB,MAAsB,EACvB,OAA4B;QAJrB,wBAAmB,GAAnB,mBAAmB,CAAqB;QAC9C,kBAAa,GAAb,aAAa,CAAe;QAC7B,WAAM,GAAN,MAAM,CAAe;QACpB,WAAM,GAAN,MAAM,CAAgB;QACvB,YAAO,GAAP,OAAO,CAAqB;QAdzC,mBAAc,GAAY,IAAI,CAAC;QAIvB,uBAAkB,GAAQ,EAAE,CAAC;QAErC,oBAAe,GAAG,EAAE,CAAC;QACrB,iBAAY,GAAG,KAAK,CAAC;IASnB,CAAC;IAEH,QAAQ;QAGJ,IAAI,IAAI,CAAC,kBAAkB,CAAC,eAAe,IAAI,IAAI,IAAI,IAAI,CAAC,kBAAkB,CAAC,eAAe,IAAI,SAAS,EAC3G;YAEI,IAAI,eAAe,GAAQ,EAAE,CAAC;YAC9B,IAAI,CAAC,kBAAkB,CAAC,eAAe,GAAG,eAAe,CAAC;SAC7D;IAEL,CAAC;IAED,QAAQ;IAER,CAAC;;8HAlCQ,uCAAuC;qIAAvC,uCAAuC;;;;;;QCdpD;QAAA,6EAAqH;QAAnD,mKAAY,cAAU,IAAC;QACrF;QAAA,yEAAwB;QACpB;QAAA,2EAAuD;QAAA,uDAA+B;;QAAA,4DAAQ;QAC9F;QAAA,0EAAsB;QAClB;QAAA,4EAA6G;QAA/C,2NAAmC;QAAjG,4DAA6G;QACjH;QAAA,4DAAM;QACN;QAAA,4EAAoD;QAAA,wDAAsB;;QAAA,4DAAQ;QAClF;QAAA,0EAAsB;QAClB;QAAA,4EAAqH;QAAlF,yOAAiD;QAApF,4DAAqH;QACzH;QAAA,4DAAM;QACV;QAAA,4DAAM;QACN;QAAA,0EAAwB;QACpB;QAAA,4EAAkD;QAAA,wDAA4B;;QAAA,4DAAQ;QACtF;QAAA,0EAAsB;QAClB;QAAA,4EAA0G;QAAxF,kOAA0C;QAA5D,4DAA0G;QAC9G;QAAA,4DAAM;QACN;QAAA,6EAAkD;QAAA,wDAA2B;;QAAA,4DAAQ;QACrF;QAAA,0EAAsB;QAClB;QAAA,6EAAyG;QAAvF,iOAAyC;QAA3D,4DAAyG;QAC7G;QAAA,4DAAM;QACV;QAAA,4DAAM;QACN;QAAA,0EAAwB;QACpB;QAAA,6EAAsD;QAAA,wDAA4B;;QAAA,4DAAQ;QAC1F;QAAA,0EAAsB;QAClB;QAAA,6EAA8H;QAA3G,kOAA0C;QAA7D,4DAA8H;QAClI;QAAA,4DAAM;QACN;QAAA,6EAAqD;QAAA,wDAAyB;;QAAA,4DAAQ;QACtF;QAAA,0EAAsB;QAClB;QAAA,6EAA6G;QAAxF,+NAAuC;QAA5D,4DAA6G;QACjH;QAAA,4DAAM;QACV;QAAA,4DAAM;QACN;QAAA,0EAAwB;QACpB;QAAA,6EAAyD;QAAA,wDAA6B;;QAAA,4DAAQ;QAC9F;QAAA,0EAAsB;QAClB;QAAA,6EAA+H;QAAtF,6OAAqD;QAA9F,4DAA+H;QACnI;QAAA,4DAAM;QACN;QAAA,6EAAuD;QAAA,wDAAiC;;QAAA,4DAAQ;QAChG;QAAA,0EAAsB;QAClB;QAAA,6EAAoJ;QAAjI,sPAA8D;QAAjF,4DAAoJ;QACxJ;QAAA,4DAAM;QACV;QAAA,4DAAM;QACN;QAAA,0EAAwB;QACpB;QAAA,6EAAyD;QAAA,wDAA+B;;QAAA,4DAAQ;QAChG;QAAA,2EAAsB;QAClB;QAAA,gFAA2H;QAA/F,uOAA4C;QAAmD,4DAAW;QAC1I;QAAA,4DAAM;QACV;QAAA,4DAAM;QACN;QAAA,2EAAwB;QACpB;QAAA,8EAAoD;QAAA,yDAAkC;;QAAA,4DAAQ;QAC9F;QAAA,2EAAsB;QAClB;QAAA,8EAAgH;QAA7F,kOAAyC;QAA5D,4DAAgH;QACpH;QAAA,4DAAM;QACN;QAAA,8EAAoD;QAAA,yDAAuB;;QAAA,4DAAQ;QACnF;QAAA,2EAAsB;QAClB;QAAA,8EAA4G;QAAzF,8NAAqC;QAAxD,4DAA4G;QAEhH;QAAA,4DAAM;QAEV;QAAA,4DAAM;QACN;QAAA,2EAAwB;QACpB;QAAA,8EAAiD;QAAA,yDAAuB;;QAAA,4DAAQ;QAChF;QAAA,2EAAsB;QAClB;QAAA,8EAA+G;QAA5F,uOAA8C;QAAjE,4DAA+G;QACnH;QAAA,4DAAM;QACN;QAAA,8EAAsD;QAAA,yDAAwB;;QAAA,4DAAQ;QACtF;QAAA,2EAAsB;QACtB;QAAA,8EAAgI;QAA7G,8OAAqD;QAAxE,4DAAgI;QAEhI;QAAA,4DAAM;QACV;QAAA,4DAAM;QACN;QAAA,2EAAwB;QACpB;QAAA,8EAAiD;QAAA,yDAAuB;;QAAA,4DAAQ;QAChF;QAAA,2EAAsB;QAClB;QAAA,8EAA0G;QAAnF,8NAAqC;QAA5D,4DAA0G;QAC9G;QAAA,4DAAM;QAGV;QAAA,4DAAM;QACN;QAAA,2EAAwB;QACpB;QAAA,8EAAmD;QAAA,yDAA0B;;QAAA,4DAAQ;QACrF;QAAA,4EAAsB;QAClB;QAAA,iFAAuG;QAAlE,wOAA4C;QAAsB,4DAAW;QACtH;QAAA,4DAAM;QACV;QAAA,4DAAM;QACN;QAAA,2EAAwB;QACpB;QAAA,8EAAoD;QAAA,yDAA6B;;QAAA,4DAAQ;QACzF;QAAA,2EAAsB;QAClB;QAAA,8EAA8G;QAAvD,oOAA2C;QAAlG,4DAA8G;QAClH;QAAA,4DAAM;QACN;QAAA,8EAAuD;QAAA,yDAAiC;;QAAA,4DAAQ;QAChG;QAAA,2EAAsB;QAClB;QAAA,8EAAqI;QAA7F,wOAA+C;QAAvF,4DAAqI;QACzI;QAAA,4DAAM;QACV;QAAA,4DAAM;QACN;QAAA,2EAAwB;QACpB;QAAA,8EAA4D;QAAA,yDAA6B;;QAAA,4DAAQ;QACjG;QAAA,2EAAsB;QAClB;QAAA,8EAAuH;QAA9C,oOAA2C;QAApH,4DAAuH;QAC3H;QAAA,4DAAM;QAEN;QAAA,8EAAoD;QAAA,yDAAmC;;QAAA,4DAAQ;QAC/F;QAAA,2EAAsB;QAClB;QAAA,8EAA8H;QAA3G,oPAA2D;QAA9E,4DAA8H;QAClI;QAAA,4DAAM;QACV;QAAA,4DAAM;QACV;QAAA,4DAAO;;QAvGwD,0DAA+B;QAA/B,iJAA+B;QAEpB,0DAAmC;QAAnC,8FAAmC;QAEjD,0DAAsB;QAAtB,yIAAsB;QAEnC,0DAAiD;QAAjD,4GAAiD;QAItC,0DAA4B;QAA5B,+IAA4B;QAExD,0DAA0C;QAA1C,qGAA0C;QAEd,0DAA2B;QAA3B,8IAA2B;QAEvD,0DAAyC;QAAzC,oGAAyC;QAIT,0DAA4B;QAA5B,+IAA4B;QAE3D,0DAA0C;QAA1C,qGAA0C;QAEZ,0DAAyB;QAAzB,4IAAyB;QAErD,0DAAuC;QAAvC,kGAAuC;QAIP,0DAA6B;QAA7B,gJAA6B;QAEzC,0DAAqD;QAArD,gHAAqD;QAE3C,0DAAiC;QAAjC,oJAAiC;QAEjE,0DAA8D;QAA9D,yHAA8D;QAI5B,0DAA+B;QAA/B,kJAA+B;QAExD,0DAA4C;QAA5C,uGAA4C;QAIxB,0DAAkC;QAAlC,sJAAkC;QAE/D,0DAAyC;QAAzC,oGAAyC;QAEZ,0DAAuB;QAAvB,2IAAuB;QAEpD,0DAAqC;QAArC,gGAAqC;QAMX,0DAAuB;QAAvB,2IAAuB;QAEjD,0DAA8C;QAA9C,yGAA8C;QAEf,0DAAwB;QAAxB,4IAAwB;QAE3D,0DAAqD;QAArD,gHAAqD;QAKvB,0DAAuB;QAAvB,2IAAuB;QAE7C,0DAAqC;QAArC,gGAAqC;QAMb,0DAA0B;QAA1B,8IAA0B;QAEpC,0DAA4C;QAA5C,uGAA4C;QAIjC,0DAA6B;QAA7B,iJAA6B;QAEtB,0DAA2C;QAA3C,sGAA2C;QAE/C,0DAAiC;QAAjC,qJAAiC;QAE5C,0DAA+C;QAA/C,0GAA+C;QAI/B,0DAA6B;QAA7B,iJAA6B;QAEZ,0DAA2C;QAA3C,sGAA2C;QAGpE,0DAAmC;QAAnC,uJAAmC;QAEhE,0DAA2D;QAA3D,sHAA2D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjGC;AAM3B;AACR;AAEe;AACK;AAEb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IClB/D,uEAA0B;IACtB;IAAA,sEAAmB;IACvB;IAAA,6DAAM;;;IAEN,uEAAyB;IACrB;IAAA,sEAAmB;IACvB;IAAA,6DAAM;;;IA0BkB,wDACJ;;;;IADI,2LACJ;;;IAEI,wDACJ;;;;IADI,2LACJ;;;IAEI,wDACJ;;;;IADI,2LACJ;;;IAEI,wDACJ;;;;IADI,2LACJ;;;IAEI;IAAA,wEAA8C;IAC9C,wDACJ;;;;IADI,2DACJ;IADI,2LACJ;;;;IAoBY,0EAAiJ;IAArG,8SAAS,8CAAsC,IAAC;IAAqD,wDAAuB;;IAAA,6DAAI;;;IAA/E,+GAAmD;IAAC,2DAAuB;IAAvB,0IAAuB;;;IACxK,0EAA8C;IAAA,wDAAuB;;IAAA,6DAAI;;IAA3B,2DAAuB;IAAvB,0IAAuB;;;;IAGrE,0EAAgJ;IAApG,8SAAS,+CAAuC,IAAC;IAAmD,wDAAwB;;IAAA,6DAAI;;;IAA9E,6GAAiD;IAAC,2DAAwB;IAAxB,2IAAwB;;;IACxK,0EAA8C;IAAA,wDAAwB;;IAAA,6DAAI;;IAA5B,2DAAwB;IAAxB,2IAAwB;;;;IAGtE,0EAAsI;IAA1F,8SAAS,mCAA2B,IAAC;IAAqD,wDAA0B;;IAAA,6DAAI;;;IAAlF,gHAAmD;IAAC,2DAA0B;IAA1B,6IAA0B;;;IAChK,0EAA8C;IAAA,wDAA0B;;IAAA,6DAAI;;IAA9B,2DAA0B;IAA1B,6IAA0B;;;IAWxF,0EAA0C;IACtC;IAAA,4EAAoG;IAChG;IAAA,0EAAiB;IACb;IAAA,4EAAsB;IAClB;IAAA,2EAAwB;IACpB,wDACJ;IAAA,6DAAK;IACT;IAAA,6DAAM;IACN;IAAA,4EAAsB;IAClB;IAAA,6EAAmD;IAC/C;IAAA,6EAA6B;IACzB;IAAA,uEAAI;IACA;IAAA,uEAAI;IACA;IAAA,0EAAO;IAAA,yDAA0B;;IAAA,6DAAQ;IAAA,yDAC7C;;IAAA,6DAAK;IACL;IAAA,uEAAI;IACA;IAAA,0EAAO;IAAA,yDAA+B;;IAAA,6DAAQ;IAAA,yDAClD;IAAA,6DAAK;IAEL;IAGJ;IAAA,6DAAK;IACT;IAAA,6DAAM;IACV;IAAA,6DAAM;IACV;IAAA,6DAAM;IACV;IAAA,6DAAM;IACV;IAAA,6DAAM;IACN;IAAA,wEAAgC;IACpC;IAAA,6DAAM;;;IAxBc,2DACJ;IADI,4OACJ;IAOuB,4DAA0B;IAA1B,uJAA0B;IAAQ,2DAC7C;IAD6C,+NAC7C;IAEW,2DAA+B;IAA/B,4JAA+B;IAAQ,2DAClD;IADkD,uOAClD;;;IAc5B,uEAAiC;IAC7B;IAgBJ;IAAA,6DAAM;;;IACN,uEAAgC;IAC5B;IAAA,kGAAqH;IACzH;IAAA,6DAAM;;;IAD8B,2DAAuB;IAAvB,yFAAuB;;;IAuCvD,uEAA0B;IACtB;IAAA,sEAAmB;IACvB;IAAA,6DAAM;;;;IAYE,0EAAiF;IAA/B,wTAAS,4BAAoB,IAAC;IAAC,wDAAkC;;IAAA,6DAAI;;IAAtC,2DAAkC;IAAlC,qJAAkC;;;IAyB/G,+EAA6D;IAAA,wDAAY;IAAA,6DAAS;;;IAAxC,gFAAkB;IAAC,2DAAY;IAAZ,8EAAY;;;;IAsBrE,8EAAoG;IAAvB,kUAAS,oBAAY,IAAC;IAAC,wDAAyB;;IAAA,6DAAS;;IAAlC,2DAAyB;IAAzB,4IAAyB;;;;IAIjI,0EAA8F;IAA5C,yTAAS,yCAAiC,IAAC;IAAC,wDAAwC;;IAAA,6DAAI;;IAA5C,2DAAwC;IAAxC,2JAAwC;;;;IAmBlI,sEAAmE;IAC/D;IAAA,8EAE+F;IADxF,0XAAS,2CAA+B,IAAC;IADhD,6DAE+F;IAAC,wDACpG;IAAA,6DAAK;;;;IADM,2DAAiB;IAAjB,+EAAiB;IAAwE,2DACpG;IADoG,+HACpG;;;IAWJ,+EAAsH;IAAA,wDAA+D;IAAA,6DAAS;;;;IAAzF,8EAAgB;IAAC,2DAA+D;IAA/D,6IAA+D;;;;;IA5GjN,kFAA0G;IACtG;IAAA,2EAAyC;IACrC;IACA;IAAA,2EAA2B;IACvB;IAAA,2EAA0B;IACtB;IAAA,oFAAmF;IAAA,mEAAO;IAAA,6DAAS;IACnG;IAAA,2EAAwB;IAAA,yDAAsD;;IAAA,6DAAK;IACvF;IAAA,6DAAM;IACN;IAAA,4EAAyB;IACrB;IAAA,yIAEM;IACN;IAAA,6EAA8F;IAC1F,yDACJ;IAAA,6DAAM;IACN;IAAA,4EAAwB;IACpB;IAAA,8EAAsC;IAClC,yDACJ;;IAAA,6DAAQ;IACR;IAAA,4EAAsB;IAClB,yDACJ;IAAA,6DAAM;IACN;IAAA,6EAAsB;IAClB;IAAA,uIAAuH;IAC3H;IAAA,6DAAM;IACV;IAAA,6DAAM;IACN;IAAA,4EAAwB;IACpB;IAAA,8EAAsC;IAClC,yDACJ;;IAAA,6DAAQ;IACR;IAAA,6EAAuB;IACnB;IAAA,mFAO8C;IAPlC,mXAA0B,+QAOd,4BAAoB,IAPN;IAOQ,6DAAa;IAC/D;IAAA,6DAAM;IACV;IAAA,6DAAM;IACN;IAAA,4EAAwB;IACpB;IAAA,8EAAsC;IAClC,yDACJ;;IAAA,6DAAQ;IACR;IAAA,4EAAsB;IAClB;IAAA,qFACmE;IAA3D,mXAA8B;IAClC;IAAA,gJAAkF;IACtF;IAAA,6DAAS;IACb;IAAA,6DAAM;IACN;IAAA,8EAAsC;IAClC,yDACJ;;IAAA,6DAAQ;IACR;IAAA,4EAAsB;IAClB;IAAA,oFACkF;IAA3E,mXAA+B;IADtC,6DACkF;IACtF;IAAA,6DAAM;IACV;IAAA,6DAAM;IACN;IAAA,4EAAwB;IACpB;IAAA,8EAAsC;IAClC,yDACJ;;IAAA,6DAAQ;IACR;IAAA,4EAAsB;IAClB;IAAA,2EAA2B;IACvB;IAAA,6EAAgC;IAC5B;IAAA,oFACmH;IAA5G,kXAA8B;IADrC,6DACmH;IACvH;IAAA,6DAAM;IACN;IAAA,6EAAsB;IAClB;IAAA,iJAAsI;IAC1I;IAAA,6DAAM;IACV;IAAA,6DAAM;IACN;IAAA,4EAA2B;IACvB;IAAA,yIAA0I;IAC9I;IAAA,6DAAM;IACV;IAAA,6DAAM;IACN;IAAA,+EAAsC;IAClC,0DACJ;;IAAA,6DAAQ;IACR;IAAA,6EAAsB;IAClB;IAAA,qFAC+E;IAAxE,8WAAyB;IADhC,6DAC+E;IACnF;IAAA,6DAAM;IACV;IAAA,6DAAM;IACN;IAAA,6EAAwB;IACpB;IAAA,+EAAsC;IAClC,0DAEJ;;IAAA,6DAAQ;IACR;IAAA,6EAAsB;IAClB;IAAA,2EAAO;IACH;IAAA,wEAAI;IACA;IAAA,2IAIK;;IACT;IAAA,6DAAK;IACT;IAAA,6DAAQ;IACZ;IAAA,6DAAM;IACN;IAAA,+EAAsC;IAClC,0DACJ;;IAAA,6DAAQ;IACR;IAAA,6EAAsB;IAClB;IAAA,sFAC+H;IAAvH,sYAAgD,gVAAuC,uCAA8B,IAArE;IACpD;IAAA,4EAAuD;IACvD;IAAA,kJAA8L;;IAClM;IAAA,6DAAS;IACb;IAAA,6DAAM;IACV;IAAA,6DAAM;IACN;IAAA,6EAAwB;IACpB;IAAA,+EAAsC;IAClC,0DACJ;;IAAA,6DAAQ;IACR;IAAA,8EAAsB;IAClB;IAAA,qFAAqJ;IAAnE,6XAAwC;IAA1H,6DAAqJ;IACzJ;IAAA,6DAAM;IACN;IAAA,gFAAsC;IAClC,0DACJ;;IAAA,6DAAQ;IACR;IAAA,8EAAsB;IAClB;IAAA,qFAAiI;IAAzD,wXAAmC;IAA3G,6DAAiI;IACrI;IAAA,6DAAM;IAEN;IASJ;IAAA,6DAAM;IACN;IAAA,6EAAwB;IACpB;IAAA,+EAAsC;IAClC,0DACJ;;IAAA,6DAAQ;IACR;IAAA,8EAAuB;IACnB;IAAA,mFAA4G;IAA3C,kYAA0C;IAAC,6DAAW;IAC3H;IAAA,6DAAM;IACV;IAAA,6DAAM;IAEV;IAAA,6DAAM;IACN;IAAA,6EAA0B;IACtB;IAAA,6EAA6B;IACzB;IAAA,gFAAmK;IAArH,yTAAS,iCAAyB,IAAC;IAAkF,0DAAuB;;IAAA,6DAAS;IACnM;IAAA,qFAA4F;IAAA,0DAAyB;;IAAA,6DAAS;IAC9H;IAAA,gFAAsJ;IAAhI,yTAAS,oBAAY,IAAC;IAA0G,0DAA6B;;IAAA,6DAAS;IAC5L;IAAA,gFAA2I;IAArH,yTAAS,oCAA4B,IAAC;IAA+E,0DAAwB;;IAAA,6DAAS;IAC5K;IAAA,gFAAoK;IAA9I,yTAAS,+BAAuB,IAAC;IAA6G,0DAAmC;;IAAA,6DAAS;IAChN;IAAA,gFAAoI;IAA9G,yTAAS,6BAAqB,IAAC;IAA+E,0DAA2B;;IAAA,6DAAS;IAC5K;IAAA,6DAAM;IACV;IAAA,6DAAM;IACV;IAAA,6DAAM;IAEV;IAAA,6DAAM;IACV;IAAA,6DAAO;;;;IAzJiC,4DAAsD;IAAtD,8LAAsD;IAGxE,2DAAkB;IAAlB,uFAAkB;IAIpB,2DACJ;IADI,gJACJ;IAGQ,2DACJ;IADI,iNACJ;IAEI,2DACJ;IADI,+JACJ;IAEwB,2DAA4B;IAA5B,mGAA4B;IAKhD,2DACJ;IADI,6MACJ;IAEgB,2DAA0B;IAA1B,0FAA0B;IAYtC,2DACJ;IADI,6MACJ;IAGY,2DAA8B;IAA9B,8FAA8B;IACV,2DAAgB;IAAhB,2FAAgB;IAI5C,2DACJ;IADI,0NACJ;IAGW,2DAA+B;IAA/B,+FAA+B;IAKtC,2DACJ;IADI,4MACJ;IAKmB,2DAA8B;IAA9B,8FAA8B;IAG5B,2DAA4B;IAA5B,mGAA4B;IAIrB,2DAA4B;IAA5B,mGAA4B;IAIpD,2DACJ;IADI,qNACJ;IAGW,2DAAyB;IAAzB,yFAAyB;IAKhC,2DAEJ;IAFI,iNAEJ;IAIiC,2DAA4C;IAA5C,yKAA4C;IASzE,2DACJ;IADI,iNACJ;IAGY,2DAAgD;IAAhD,gHAAgD;IAE5B,2DAA2E;IAA3E,4MAA2E;IAMvG,2DACJ;IADI,mNACJ;IAEsF,2DAAwC;IAAxC,wGAAwC;IAG1H,2DACJ;IADI,8MACJ;IAE4E,2DAAmC;IAAnC,mGAAmC;IAe3G,2DACJ;IADI,iNACJ;IAEqE,2DAA0C;IAA1C,0GAA0C;IAO7B,2DAAgF;IAAhF,iIAAgF;IAAC,2DAAuB;IAAvB,6IAAuB;IAC9F,2DAAyB;IAAzB,+IAAyB;IAChD,2DAAgF;IAAhF,mKAAgF;IAAC,2DAA6B;IAA7B,oJAA6B;IAC9F,2DAAqD;IAArD,gIAAqD;IAAC,2DAAwB;IAAxB,+IAAwB;IACnF,2DAAmF;IAAnF,sKAAmF;IAAC,2DAAmC;IAAnC,0JAAmC;IACzH,2DAAqD;IAArD,gIAAqD;IAAC,2DAA2B;IAA3B,kJAA2B;;;IA0JnK,uEAA0B;IACtB;IAAA,sEAAmB;IACvB;IAAA,6DAAM;;;IAuBM,+EAAoF;IAAA,wDAAa;IAAA,6DAAS;;;IAA1C,kFAAmB;IAAC,2DAAa;IAAb,gFAAa;;;IAWjG,+EAAkF;IAAA,wDAAa;IAAA,6DAAS;;;IAA1C,kFAAmB;IAAC,2DAAa;IAAb,gFAAa;;;;IA7C3H,kFAAsG;IAClG;IAAA,2EAAoC;IAChC;IACA;IAAA,2EAA2B;IACvB;IAAA,2EAA0B;IACtB;IAAA,+EAAyD;IAAA,mEAAO;IAAA,6DAAS;IACzE;IAAA,2EAAwB;IAAA,yDAA+C;IAAA,6DAAK;IAChF;IAAA,6DAAM;IACN;IAAA,4EAAwB;IACpB;IAAA,yIAEM;IACN;IAAA,4EAAwB;IACpB;IAAA,8EAAsC;IAClC,yDACJ;;IAAA,6DAAQ;IACR;IAAA,6EAAsB;IAClB;IAAA,mFAO2D;IAP/C,sYAA0C,iRAO9B,0CAAiC,IAPH;IAOK,6DAAa;IAC5E;IAAA,6DAAM;IACV;IAAA,6DAAM;IACN;IAAA,4EAAwB;IACpB;IAAA,8EAAsC;IAClC,yDACJ;;IAAA,6DAAQ;IACR;IAAA,6EAAsB;IAClB;IAAA,qFACyG;IAAjG,uYAA+C;IACnD;IAAA,gJAA0G;IAC9G;IAAA,6DAAS;IACb;IAAA,6DAAM;IACV;IAAA,6DAAM;IACN;IAAA,4EAAwB;IACpB;IAAA,8EAAsC;IAClC,yDACJ;;IAAA,6DAAQ;IACR;IAAA,6EAAsB;IAClB;IAAA,qFACqG;IAA7F,qYAA6C;IACjD;IAAA,gJAAwG;IAC5G;IAAA,6DAAS;IACb;IAAA,6DAAM;IACV;IAAA,6DAAM;IACN;IAAA,4EAAwB;IACpB;IAAA,8EAAsC;IAClC,yDACJ;;IAAA,6DAAQ;IACR;IAAA,6EAAuB;IACnB;IAAA,kFAA4G;IAA3C,oYAA0C;IAAC,6DAAW;IAC3H;IAAA,6DAAM;IACV;IAAA,6DAAM;IACV;IAAA,6DAAM;IACN;IAAA,4EAA0B;IACtB;IAAA,2EAAiB;IACb;IAAA,6EAAsC;IAClC;IAAA,+EAA4H;IAA9E,0TAAS,+BAAsB,IAAC;IAA8C,yDAAuB;;IAAA,6DAAS;IAC5J;IAAA,oFAAiG;IAAA,yDAAyB;;IAAA,6DAAS;IACvI;IAAA,6DAAM;IACV;IAAA,6DAAM;IACV;IAAA,6DAAM;IACV;IAAA,6DAAM;IACV;IAAA,6DAAM;IACV;IAAA,6DAAO;;;;IA9DiC,4DAA+C;IAA/C,wIAA+C;IAGjE,2DAAkB;IAAlB,uFAAkB;IAKhB,2DACJ;IADI,6MACJ;IAEgB,2DAA0C;IAA1C,0GAA0C;IAYtD,2DACJ;IADI,kNACJ;IAGY,2DAA+C;IAA/C,+GAA+C;IAC1B,2DAAqC;IAArC,gHAAqC;IAMlE,2DACJ;IADI,gNACJ;IAGY,2DAA6C;IAA7C,6GAA6C;IACxB,2DAAmC;IAAnC,8GAAmC;IAMhE,2DACJ;IADI,gNACJ;IAEqE,2DAA0C;IAA1C,0GAA0C;IAO5B,4DAA4C;IAA5C,uFAA4C;IAAC,2DAAuB;IAAvB,4IAAuB;IAClD,2DAAyB;IAAzB,8IAAyB;;;IAqBlI,uEAA0B;IACtB;IAAA,sEAAmB;IACvB;IAAA,6DAAM;;;;IAXtB,kFAAsG;IAClG;IAAA,2EAAoC;IAChC;IACA;IAAA,2EAA2B;IACvB;IAAA,2EAA0B;IACtB;IAAA,+EAAyD;IAAA,mEAAO;IAAA,6DAAS;IACzE;IAAA,2EAAwB;IAAA,yDAAiD;;IAAA,6DAAK;IAClF;IAAA,6DAAM;IACN;IAAA,4EAAwB;IACpB;IAAA,yIAEM;IACN;IAAA,4EAAwB;IACpB;IAAA,8EAAsC;IAClC,yDACJ;;IAAA,6DAAQ;IACR;IAAA,6EAAsB;IAClB;IAAA,oFAMkC;IANtB,gYAAoC;IAMd,6DAAa;IACnD;IAAA,6DAAM;IACV;IAAA,6DAAM;IACV;IAAA,6DAAM;IACN;IAAA,4EAA0B;IACtB;IAAA,2EAAiB;IACb;IAAA,6EAAsC;IAClC;IAAA,+EAAwH;IAA1E,0TAAS,2BAAkB,IAAC;IAA8C,yDAAuB;;IAAA,6DAAS;IACxJ;IAAA,oFAAiG;IAAA,yDAAyB;;IAAA,6DAAS;IACvI;IAAA,6DAAM;IACV;IAAA,6DAAM;IACV;IAAA,6DAAM;IACV;IAAA,6DAAM;IACV;IAAA,6DAAM;IACV;IAAA,6DAAO;;;;IA/BiC,4DAAiD;IAAjD,yLAAiD;IAGnE,2DAAkB;IAAlB,uFAAkB;IAKhB,2DACJ;IADI,6MACJ;IAEgB,2DAAoC;IAApC,oGAAoC;IAa2B,4DAA4C;IAA5C,wFAA4C;IAAC,2DAAuB;IAAvB,4IAAuB;IAC9C,2DAAyB;IAAzB,8IAAyB;;;IA4CtH,+EAAgF;IAAA,wDAAY;IAAA,6DAAS;;;IAAxC,iFAAkB;IAAC,2DAAY;IAAZ,+EAAY;;;IAgE5F,+EAAkE;IAAA,wDAA+D;IAAA,6DAAS;;;;IAAzF,+EAAgB;IAAC,2DAA+D;IAA/D,+IAA+D;;;IA8L7H,uEAAwG;;;IARhH,sEAAgD;IAC5C;IACA;IAAA,sEAAI;IAAA,wDAAgB;IAAA,6DAAK;IACzB;IAAA,sEAAI;IAAA,wDAAe;IAAA,6DAAK;IACxB;IAAA,sEAAI;IAAA,yDAAgB;IAAA,6DAAK;IACzB;IAAA,uEAAI;IAAA,yDAAkB;IAAA,6DAAK;IAC3B;IAAA,uEAAI;IAAA,yDAAuB;IAAA,6DAAK;IAChC;IAAA,2EAAwB;IACpB;IAAA,yIAAwG;IAC5G;IAAA,6DAAK;IACL;IAAA,uEAAI;IAAA,yDAAmB;IAAA,6DAAK;IAChC;IAAA,6DAAK;;;IATG,2DAAgB;IAAhB,0FAAgB;IAChB,2DAAe;IAAf,yFAAe;IACf,2DAAgB;IAAhB,0FAAgB;IAChB,2DAAkB;IAAlB,4FAAkB;IAClB,2DAAuB;IAAvB,iGAAuB;IAEjB,2DAA8B;IAA9B,gGAA8B;IAEpC,2DAAmB;IAAnB,6FAAmB;;;IAgDnB,uEAAwG;;;IAPhH,sEAAgD;IAC5C;IAAA,sEAAI;IAAA,wDAAgB;IAAA,6DAAK;IACzB;IAAA,sEAAI;IAAA,wDAAe;IAAA,6DAAK;IACxB;IAAA,sEAAI;IAAA,wDAAgB;IAAA,6DAAK;IACzB;IAAA,uEAAI;IAAA,yDAAkB;IAAA,6DAAK;IAC3B;IAAA,uEAAI;IAAA,yDAAuB;IAAA,6DAAK;IAChC;IAAA,2EAAwB;IACpB;IAAA,yIAAwG;IAC5G;IAAA,6DAAK;IACL;IAAA,uEAAI;IAAA,yDAAmB;IAAA,6DAAK;IAChC;IAAA,6DAAK;;;IATG,2DAAgB;IAAhB,0FAAgB;IAChB,2DAAe;IAAf,yFAAe;IACf,2DAAgB;IAAhB,0FAAgB;IAChB,2DAAkB;IAAlB,4FAAkB;IAClB,2DAAuB;IAAvB,iGAAuB;IAEjB,2DAA8B;IAA9B,gGAA8B;IAEpC,2DAAmB;IAAnB,6FAAmB;;AD73BhD,MAAM,iCAAiC;IAmI1C,YACY,mBAAwC,EACxC,aAA4B,EAC5B,MAAqB,EACrB,YAAiC,EAC/B,MAAc,EACf,SAA2B,EAC3B,cAA8B;QAN/B,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,kBAAa,GAAb,aAAa,CAAe;QAC5B,WAAM,GAAN,MAAM,CAAe;QACrB,iBAAY,GAAZ,YAAY,CAAqB;QAC/B,WAAM,GAAN,MAAM,CAAQ;QACf,cAAS,GAAT,SAAS,CAAkB;QAC3B,mBAAc,GAAd,cAAc,CAAgB;QAxI3C,6BAAwB,GAAW,EAAE,CAAC;QACtC,2BAAsB,GAAU,EAAE,CAAC;QACnC,eAAU,GAAW,qBAAqB,CAAC;QAC3C,cAAS,GAAY,KAAK,CAAC;QAC3B,wBAAmB,GAAG,IAAI,IAAI,EAAE,CAAC;QAEjC,mBAAc,GAAW,EAAE,CAAC;QAC5B,SAAI,GAAW,EAAE,CAAC;QAClB,UAAK,GAAY,KAAK,CAAC;QACvB,kBAAa,GAAW,EAAE,CAAC;QAC3B,mBAAc,GAAW,EAAE,CAAC,CAAC,uDAAuD;QAEpF,gBAAW,GAAY,KAAK,CAAC;QAc7B,iBAAY,GAAiB,IAAI,sEAAY,EAAE,CAAC;QAEhD,iBAAY,GAAY,KAAK,CAAC;QAC9B,gBAAW,GAAY,KAAK,CAAC;QAC7B,WAAM,GAAY,IAAI,CAAC;QAEvB,WAAM,GAAU,EAAE,CAAC;QAEnB,kBAAa,GAAQ,EAAE,CAAC;QACxB,WAAM,GAAQ,EAAE,IAAI,EAAE,kBAAkB,EAAE,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,WAAW,EAAE,CAAC;QAEhF,iCAA4B,GAAY,KAAK,CAAC;QAC9C,sBAAiB,GAAY,IAAI,CAAC;QAClC,oBAAe,GAAY,KAAK,CAAC;QACjC,8BAAyB,GAAU,EAAE,CAAC;QAKtC,eAAU,GAAG,EAAE,CAAC;QAChB,qBAAgB,GAAY,KAAK,CAAC;QAClC,uBAAkB,GAAY,KAAK,CAAC;QACpC,yBAAoB,GAAY,KAAK,CAAC;QACtC,qBAAgB,GAAQ,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC;QAClC,6BAAwB,GAAU,EAAE,CAAC;QACrC,0BAAqB,GAAU,EAAE,CAAC;QAClC,2BAAsB,GAAU,EAAE,CAAC;QACnC,mBAAc,GAAU,EAAE,CAAC;QAC3B,kBAAa,GAAU,EAAE,CAAC;QAC1B,sBAAiB,GAAU,EAAE,CAAC;QAC9B,yBAAoB,GAAU,EAAE,CAAC;QACjC,oBAAe,GAAU,EAAE,CAAC;QAC5B,yBAAoB,GAAa,EAAE,CAAC;QAGpC,wBAAmB,GAAQ,EAAE,CAAC;QAE9B,qBAAgB,GAAQ,EAAE,CAAC;QAC3B,uCAAkC,GAAU,EAAE,CAAC;QAC/C,qCAAgC,GAAU,EAAE,CAAC;QAC7C,+BAA0B,GAAW,EAAE,CAAC;QAExC,qBAAgB,GAAG,EAAE,CAAC;QACtB,gBAAW,GAAG,EAAE,CAAC;QACjB,cAAS,GAAG,EAAE,CAAC;QAOf,sBAAiB,GAAW,CAAC,CAAC;QAC9B,gBAAW,GAAG,EAAE,CAAC;QAEjB,YAAO,GAAY,KAAK,CAAC;QACzB,UAAK,GAAG,kBAAkB,CAAC;QAC3B,WAAM,GAAG,uBAAuB,CAAC;QACjC,WAAM,GAAG,oBAAoB,CAAC;QAE9B,qBAAgB,GAAY,KAAK,CAAC;QAClC,6BAAwB,GAAY,KAAK,CAAC;QAC1C,qBAAgB,GAAG,EAAE,CAAC;QACtB,yBAAoB,GAAG,KAAK,CAAC;QAC7B,2BAAsB,GAAG,KAAK,CAAC;QAC/B,uBAAkB,GAAG,EAAE,CAAC;QAIxB,kCAA6B,GAAY,KAAK,CAAC;QAG/C,6BAAwB,GAAQ,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC;QAC1C,2BAAsB,GAAU,EAAE,CAAC;QACnC,6BAAwB,GAAU,EAAE,CAAC;QAGrC,6BAAwB,GAAY,KAAK,CAAC;QAC1C,gCAA2B,GAAQ,EAAE,CAAC;QAItC,OAAE,GAAG,EAAE,CAAC;QACR,mBAAc,GAAoB,IAAI,4EAAe,EAAE,CAAC;QACxD,QAAG,GAAsB,IAAI,iFAAiB,EAAE,CAAC;QACjD,4BAAuB,GAAY,KAAK,CAAC;QACzC,+BAA0B,GAAY,KAAK,CAAC;QAC5C,kCAA6B,GAAY,KAAK,CAAC;QAC/C,+BAA0B,GAAY,KAAK,CAAC;QAC5C,4BAAuB,GAAY,KAAK,CAAC;QACzC,sBAAiB,GAAY,KAAK,CAAC;QACnC,oBAAe,GAAY,KAAK,CAAC;QACjC,sBAAiB,GAAY,KAAK,CAAC;QAEnC,oBAAe,GAAQ,EAAE,CAAC;QAQ1B,oBAAe,GAAa,CAAC,aAAa,EAAE,wBAAwB,CAAC,CAAC;QAUlE,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;IACrE,CAAC;IAED,QAAQ;QAEJ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC;QAC3D,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI;YAC9B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAEtB,IAAI,QAAQ,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,oBAAoB,GAAG,6DAAoB,CAAC;QACjD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;QAClE,IAAI,CAAC,eAAe,CAAC,QAAQ,GAAG,IAAI,IAAI,EAAE,CAAC,MAAM,EAAE,CAAC;QACpD,IAAI,CAAC,eAAe,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrC,IAAI,CAAC,eAAe,CAAC,UAAU,GAAG,IAAI,CAAC;QACvC,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,UAAU,KAAU,EAAE,GAAQ,IAAI,QAAQ,CAAC,oBAAoB,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;QAC5G,IAAI,CAAC,eAAe,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QAExC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;QACvD,uBAAuB;QACvB,IAAI,CAAC,6BAA6B,EAAE,CAAC;QACrC,IAAI,CAAC,mBAAmB,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;QACrC,IAAI,CAAC,8BAA8B,GAAG,IAAI,oGAA8B,CAAC,IAAI,CAAC,wBAAwB,EAAE,IAAI,CAAC,qBAAqB,CAAC,CAAC;QACpI,+IAA+I;QAE/I,IAAI,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,SAAS,IAAI,SAAS;YACxD,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC,CAAC;;YAEhG,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC;IACzE,CAAC;IAED,iBAAiB;QACb,IAAI,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC,EAAE;YACzD,IAAI,KAAK,GAAG,EAAE,CAAC;YACf,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,eAAe;gBACjC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;YAEnD,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,KAAK,EAAE,EAAE;gBACrC,IAAI,KAAK,GAAQ,EAAE,CAAC;gBACpB,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;gBAC3B,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;gBACzB,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC;gBACpB,KAAK,CAAC,SAAS,GAAG,gBAAgB,CAAC;gBACnC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;gBAC/C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAC3B;SACJ;IACL,CAAC;IAED,mBAAmB,CAAC,SAAe;QAC/B,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAE1B,IAAI,KAAK,GAAW,SAAS,CAAC,OAAO,EAAE,CAAC;QAExC,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,KAAK,EAAE,EAAE;YACrC;gBACI,IAAI,IAAI,GAAS,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC;gBAC/C,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;gBAC3B,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACnC;SACJ;IACL,CAAC;IAED,UAAU;QACN,IAAI,CAAC,gBAAgB,GAAG,IAAI;QAC5B,IAAI,CAAC,wBAAwB,GAAG,KAAK,CAAC;QACtC,IAAI,CAAC,sBAAsB,GAAG,KAAK,CAAC;QACpC,IAAI,CAAC,wBAAwB,GAAG,KAAK,CAAC;QACtC,yBAAyB;QAEzB,IAAI,CAAC,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC;QAE9B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACxB,CAAC;IAED,mBAAmB;QACf,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC;QACrC,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAC9B,IAAI,CAAC,sBAAsB,GAAG,KAAK,CAAC;QACpC,IAAI,CAAC,wBAAwB,GAAG,KAAK,CAAC;QACtC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACxB,CAAC;IACD,qBAAqB;QACjB,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;QACnC,IAAI,CAAC,wBAAwB,GAAG,KAAK,CAAC;QACtC,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAC9B,IAAI,CAAC,wBAAwB,GAAG,KAAK,CAAC;QACtC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACxB,CAAC;IACD,0BAA0B;IAC1B,0CAA0C;IAC1C,4CAA4C;IAC5C,oCAAoC;IACpC,2CAA2C;IAC3C,0BAA0B;IAC1B,GAAG;IACH,yBAAyB;QACrB,IAAI,aAAa,GAAG,IAAI,CAAC;QACzB,IAAI,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,IAAI,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAC/E,IAAI,QAAQ,IAAI,SAAS,EAAE;YAEvB,IAAI,CAAC,mBAAmB,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YACxF,IAAI,CAAC,mBAAmB,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAClD,IAAI,CAAC,mBAAmB,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;YAC1D,IAAI,CAAC,mBAAmB,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAClD,IAAI,CAAC,mBAAmB,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC;YACpE,IAAI,IAAI,CAAC,mBAAmB,CAAC,SAAS;gBAClC,IAAI,CAAC,mBAAmB,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC,CAAC;YAE1G,kCAAkC;YAClC,IAAI,aAAa,GAAG,IAAI,CAAC,wBAAwB,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YAErE,IAAI,CAAC,aAAa,EAAE;gBAChB,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC;gBACzD,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;gBAC3B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;gBAC1B,OAAO;aACV;YAED,aAAa,CAAC,YAAY,GAAG,IAAI,CAAC;YAClC,IAAI,CAAC,mBAAmB,CAAC,oBAAoB,CAAC,IAAI,CAAC,mBAAmB,CAAC;iBAClE,SAAS,CACN,UAAU,QAAa;gBAEnB,aAAa,CAAC,oBAAoB,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;gBACnD,aAAa,CAAC,qBAAqB,EAAE,CAAC;gBAEtC,IAAI,GAAG,GAAG,aAAa,CAAC,SAAS,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;gBAC/D,aAAa,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;YAE1C,CAAC,EACD,UAAU,KAAU;gBAChB,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBAClC,aAAa,CAAC,YAAY,GAAG,KAAK,CAAC;YACvC,CAAC,EACD;gBACI,aAAa,CAAC,YAAY,GAAG,KAAK,CAAC;YACvC,CAAC,CAAC,CAAC;SACd;IACL,CAAC;IAED,YAAY;QACR,IAAI,CAAC,mBAAmB,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC;QACrC,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;QAC3B,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;QAC3B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,6BAA6B;QAC7B,UAAU,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC;IAC5C,CAAC;IAED,6BAA6B;QACzB,IAAI,QAAQ,GAAG,IAAI,CAAC;QACpB,QAAQ,CAAC,YAAY,GAAG,IAAI,CAAC;QAC7B,+CAA+C;QAC/C,IAAI,CAAC,aAAa,CAAC,2CAA2C,CAAC,IAAI,CAAC,QAAQ,CAAC;aACxE,SAAS,CACN,UAAU,QAAa;YACnB,QAAQ,CAAC,yBAAyB,GAAG,QAAQ,CAAC;QAClD,CAAC,EACD,UAAU,KAAU;YAChB,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YACjC,QAAQ,CAAC,YAAY,GAAG,KAAK,CAAC;QAClC,CAAC,EACD;YACI,QAAQ,CAAC,YAAY,GAAG,KAAK,CAAC;QAClC,CAAC,CAAC,CAAC;IACf,CAAC;IAED,KAAK;QACD,IAAI,CAAC,gBAAgB,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC;QAClC,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;QAC3B,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;QAC3B,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;QAC3B,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,2BAA2B,GAAG,EAAE,CAAC;QACtC,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,6BAA6B;QAE7B,uBAAuB;QACvB,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,GAAG,IAAI,CAAC,cAAc,CAAC;IAEnE,CAAC;IAED,iBAAiB;QACb,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;QAClC,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,IAAI,CAAC,oBAAoB,EAAE,CAAC;IAChC,CAAC;IAED,gBAAgB,CAAC,CAAM;QAEnB,IAAI,OAAO,GAAG,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC;QAE5B,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC;IACtC,CAAC;IAED,mBAAmB,CAAC,OAAY;QAC5B,IAAI,IAAI,CAAC,iBAAiB,IAAI,SAAS,EAAE;YACrC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,IAAI,OAAO,CAAC,CAAC;YAE9E,IAAI,IAAI,CAAC,gBAAgB,IAAI,SAAS,EAAE;gBACpC,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;gBACjC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,qBAAqB,CAAC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;gBAC5F,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;gBACrC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC;gBACnD,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC;gBACjE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC;gBACjD,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC;gBAC/D,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC;gBACrD,8CAA8C;gBAC9C,4BAA4B;gBAC5B,GAAG;gBACH,IAAI,IAAI,CAAC,gBAAgB,CAAC,WAAW;oBACjC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,qBAAqB,CAAC,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC;gBAElG,IAAI,IAAI,CAAC,gBAAgB,CAAC,aAAa,EAAE;oBACrC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,qBAAqB,CAAC,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC;oBAClG,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,qBAAqB,CAAC,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC;iBACrG;gBAED,6CAA6C;gBAC7C,6GAA6G;gBAE7G,oHAAoH;gBACpH,IAAI,CAAC,oBAAoB,EAAE,CAAC;aAC/B;iBACI;gBACD,IAAI,CAAC,gBAAgB,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC;gBAClC,oCAAoC;aACvC;YAED,IAAI,CAAC,wBAAwB,EAAE,CAAC;SACnC;IACL,CAAC;IAGD,oBAAoB;QAEhB,IAAI,CAAC,sBAAsB,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;IACtD,CAAC;IAED,oBAAoB;QAChB,IAAI,CAAC,sBAAsB,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;IACtD,CAAC;IAED,qBAAqB;QACjB,IAAI,CAAC,wBAAwB,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;IACxD,CAAC;IAED,SAAS;QACL,IAAI,CAAC,yBAAyB,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YAC1C,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,WAAW;QACP,IAAI,CAAC,yBAAyB,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YAC1C,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,eAAe,CAAC,IAAc,EAAE,QAAiB;QACrD,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,IAAI,CAAC,QAAQ,EAAE;YACf,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;gBAC9B,IAAI,CAAC,eAAe,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;YAC9C,CAAC,CAAC,CAAC;SACN;IACL,CAAC;IAED,qBAAqB;IACrB,sDAAsD;IACtD,8CAA8C;IAC9C,SAAS;IACT,GAAG;IAEH,oDAAoD;IACpD,0BAA0B;IAC1B,8CAA8C;IAC9C,uDAAuD;IAEvD,qDAAqD;IACrD,kDAAkD;IAElD,aAAa;IACb,OAAO;IACP,GAAG;IAEH,UAAU,CAAC,KAAU;QAEjB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IACxC,CAAC;IAED,kBAAkB,CAAC,IAAS;QACxB,IAAI,EAAE,GAAG,IAAI,CAAC;QACd,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;QAClB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAC9B,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;QAChC,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;QAElC,IAAI,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,IAAI,cAAc,EAAE;YACjD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YAExB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC;YAE1B,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI;gBACjB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC;;gBAE7B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC;YAE5C,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;YAC7B,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;YAChC,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;YAElC,IAAI,CAAC,4BAA4B,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAEjD,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAE/C;aAAM,IAAI,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,IAAI,gBAAgB,EAAE;YAE1D,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC;YAE3B,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI;gBACjB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;;gBAE9B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC;YAE7C,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;YAC9B,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;YAC/B,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;SAGrC;aAAM,IAAI,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,IAAI,kBAAkB,EAAE;YAE5D,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;YAC9B,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;YAChC,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;SAEpC;IACL,CAAC;IAED,4BAA4B,CAAC,QAAa;QAEtC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,QAAQ,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,mBAAmB,CAAC,4BAA4B,CAAC,QAAQ,CAAC;aAC1D,SAAS,CACN,UAAU,QAAa;YAEnB,QAAQ,CAAC,wBAAwB,GAAG,QAAQ,CAAC,oBAAoB,CAAC;YAClE,QAAQ,CAAC,qBAAqB,GAAG,QAAQ,CAAC,iBAAiB,CAAC;YAC5D,QAAQ,CAAC,sBAAsB,GAAG,QAAQ,CAAC,kBAAkB,CAAC;YAC9D,QAAQ,CAAC,cAAc,GAAG,QAAQ,CAAC,UAAU,CAAC;YAC9C,QAAQ,CAAC,iBAAiB,GAAG,QAAQ,CAAC,YAAY,CAAC;YACnD,QAAQ,CAAC,oBAAoB,GAAG,QAAQ,CAAC,gBAAgB,CAAC;YAC1D,QAAQ,CAAC,oBAAoB,GAAG,QAAQ,CAAC,qBAAqB,CAAC;YAC/D,QAAQ,CAAC,aAAa,GAAG,QAAQ,CAAC,MAAM,CAAC;YAEzC,wBAAwB;YACxB,IAAI,QAAQ,CAAC,iBAAiB,EAAE;gBAC5B,QAAQ,CAAC,sBAAsB,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;oBAC1C,IAAI,GAAG,CAAC,GAAG,IAAI,UAAU,EAAE;wBACvB,QAAQ,CAAC,cAAc,GAAG,GAAG,CAAC,EAAE,CAAC;qBACpC;gBACL,CAAC,CAAC,CAAC;aACN;YAED,6CAA6C;YAE7C,0EAA0E;YAC1E,IAAI,qBAAqB,GAAG,QAAQ,CAAC,oBAAoB,CAAC;YAC1D,IAAI,UAAU,GAAG,UAAU,CAAC;YAC5B,QAAQ,CAAC,8BAA8B,GAAG,IAAI,oGAA8B,CAAC,QAAQ,CAAC,wBAAwB,EAAE,QAAQ,CAAC,qBAAqB,CAAC,CAAC;YAChJ,QAAQ,CAAC,YAAY,GAAG,QAAQ,CAAC,8BAA8B,CAAC,sBAAsB,CAAC,QAAQ,CAAC,YAAY,CAAC,gBAAgB,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,CAAC;YAC3I,IAAI,QAAQ,CAAC,YAAY,IAAI,SAAS,IAAI,QAAQ,CAAC,YAAY,IAAI,CAAC;gBAChE,qBAAqB,GAAG,KAAK,GAAG,QAAQ,CAAC,YAAY,CAAC,iBAAiB,CAAC,QAAQ,CAAC,YAAY,CAAC,GAAG,KAAK,CAAC;YAE3G,oBAAoB;YACpB,IAAI,aAAa,GAAa,QAAQ,CAAC,8BAA8B,CAAC,gBAAgB,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;YACnG,IAAI,aAAa,IAAI,SAAS,EAAE;gBAC5B,IAAI,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAC,aAAa;oBAClD,UAAU,GAAG,aAAa,CAAC,IAAI,GAAG,KAAK,CAAC,cAAa;qBACrD,gBAAgB;oBAChB,UAAU,GAAG,aAAa,CAAC,IAAI,GAAG,QAAQ,CAAC,0BAAyB;aAC3E;YAED,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC;YAC5B,QAAQ,CAAC,SAAS,CAAC,mBAAmB,CAAC,qBAAqB,EAAE,UAAU,CAAC,CAAC;YAC1E,QAAQ,CAAC,WAAW,GAAG,KAAK,CAAC;YAC7B,wBAAwB;YACxB,QAAQ,CAAC,MAAM,GAAG,QAAQ,CAAC,cAAc,CAAC;YAE1C,8CAA8C;YAC9C,QAAQ,CAAC,mBAAmB,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;YACzC,QAAQ,CAAC,kBAAkB,EAAE,CAAC;YAC9B,+BAA+B;YAE/B,IAAI,QAAQ,CAAC,cAAc,EAAE;gBACzB,IAAI,IAAI,GAAG,QAAQ,CAAC,YAAY,CAAC,qBAAqB,CAAC,QAAQ,CAAC,cAAc,CAAC;gBAE/E,IAAI,QAAQ,CAAC,uBAAuB,CAAC,IAAI,CAAC,EAAE;oBACxC,yBAAyB;oBACzB,QAAQ,CAAC,mBAAmB,CAAC,QAAQ,CAAC,+BAA+B,CAAC,CAAC;oBACvE,QAAQ,CAAC,cAAc,GAAG,EAAE,CAAC;iBAChC;qBACI;oBACD,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;iBACrC;aACJ;QAEL,CAAC,EACD,UAAU,KAAU;YAChB,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YACjC,QAAQ,CAAC,YAAY,GAAG,KAAK,CAAC;QAClC,CAAC,EACD;YACI,QAAQ,CAAC,YAAY,GAAG,KAAK,CAAC;QAClC,CAAC,CAAC,CAAC;IACf,CAAC;IAED,uBAAuB,CAAC,UAAgB;QACpC,KAAK,IAAI,QAAQ,IAAI,IAAI,CAAC,eAAe,EAAE;YACvC,IAAI,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;YAC7D,IAAI,eAAe,CAAC,MAAM,EAAE,IAAI,UAAU,CAAC,MAAM,EAAE;gBAC/C,eAAe,CAAC,WAAW,EAAE,IAAI,UAAU,CAAC,WAAW,EAAE;gBACzD,eAAe,CAAC,QAAQ,EAAE,IAAI,UAAU,CAAC,QAAQ,EAAE;gBACnD,OAAO,IAAI,CAAC;SACnB;QAED,OAAO,KAAK,CAAC;IACjB,CAAC;IAED,uBAAuB,CAAC,QAAa;QACjC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,QAAQ,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,mBAAmB,CAAC,uBAAuB,CAAC,QAAQ,CAAC;aACrD,SAAS,CACN,UAAU,QAAa;YACnB,IAAI,QAAQ,IAAI,SAAS;gBACrB,QAAQ,CAAC,kBAAkB,GAAG,QAAQ,CAAC,EAAE,CAAC;YAC9C,IAAI,QAAQ,CAAC,IAAI,IAAI,IAAI;gBACrB,QAAQ,CAAC,oBAAoB,GAAG,QAAQ,CAAC,IAAI,CAAC;;gBAE9C,QAAQ,CAAC,oBAAoB,GAAG,QAAQ,CAAC,eAAe,CAAC;QACjE,CAAC,EACD,UAAU,KAAU;YAChB,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YACjC,QAAQ,CAAC,YAAY,GAAG,KAAK,CAAC;QAClC,CAAC,EACD;YACI,QAAQ,CAAC,YAAY,GAAG,KAAK,CAAC;QAClC,CAAC,CAAC,CAAC;IACf,CAAC;IACD,qBAAqB,CAAC,KAAU;QAC5B,IAAI,EAAE,GAAG,IAAI,CAAC;QACd,0BAA0B;IAE9B,CAAC;IACD,kBAAkB;QAEd,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAEzB,KAAK,IAAI,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,IAAI,EAAE,EAAE;YAC3D,IAAI,GAAG,GAAS,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;YAC3C,IAAI,CAAC,8BAA8B,GAAG,IAAI,oGAA8B,CAAC,IAAI,CAAC,wBAAwB,EAAE,IAAI,CAAC,qBAAqB,CAAC,CAAC;YACpI,IAAI,kBAAkB,GAAG,IAAI,CAAC,8BAA8B,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;YAE/E,KAAK,IAAI,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,kBAAkB,CAAC,MAAM,EAAE,IAAI,EAAE,EAAE;gBACzD,IAAI,OAAO,GAAG,kBAAkB,CAAC,IAAI,CAAC,CAAC;gBAEvC,IAAI,YAAY,GAAW,OAAO,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBAEzE,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,OAAO,CAAC,QAAQ,CAAC,UAAU,EAAE,GAAG,IAAI,CAAC,8BAA8B,CAAC,eAAe,EAAE,CAAC,CAAC;gBACnH,IAAI,UAAU,GAAW,OAAO,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBACvE,IAAI,UAAU,IAAI,UAAU;oBACxB,UAAU,GAAG,UAAU,CAAC;gBAG5B,IAAI,OAAO,GAAkB,IAAI,aAAa,EAAE,CAAC;gBACjD,IAAI,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,YAAY,CAAC;gBACjF,IAAI,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,UAAU,CAAC;gBAE7E,OAAO,CAAC,EAAE,GAAG,CAAC,CAAC;gBACf,OAAO,CAAC,KAAK,GAAG,aAAa,CAAC;gBAC9B,OAAO,CAAC,GAAG,GAAG,WAAW,CAAC;gBAC1B,OAAO,CAAC,SAAS,GAAG,oBAAoB,CAAC;gBACzC,OAAO,CAAC,SAAS,GAAG,yBAAyB,CAAC;gBAE9C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aAC7B;SACJ;IAEL,CAAC;IAED,YAAY,CAAC,SAAe;QACxB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,SAAS,IAAI,SAAS,EAAE;YACxB,IAAI,CAAC,8BAA8B,GAAG,IAAI,oGAA8B,CAAC,IAAI,CAAC,wBAAwB,EAAE,IAAI,CAAC,qBAAqB,CAAC,CAAC;YACpI,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,8BAA8B,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;YACjF,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,8BAA8B,CAAC,eAAe,EAAE,CAAC;SAC7E;IACL,CAAC;IAED,yBAAyB,CAAC,SAAe;QACrC,IAAI,CAAC,kCAAkC,GAAG,EAAE,CAAC;QAC7C,IAAI,CAAC,gCAAgC,GAAG,EAAE,CAAC;QAC3C,IAAI,SAAS,IAAI,SAAS,EAAE;YACxB,IAAI,CAAC,8BAA8B,GAAG,IAAI,oGAA8B,CAAC,IAAI,CAAC,wBAAwB,EAAE,IAAI,CAAC,qBAAqB,CAAC,CAAC;YACpI,IAAI,WAAW,GAAG,IAAI,CAAC,8BAA8B,CAAC,sBAAsB,CAAC,SAAS,CAAC,CAAC;YACxF,IAAI,WAAW,IAAI,SAAS,EAAE;gBAC1B,IAAI,CAAC,kCAAkC,GAAG,IAAI,CAAC,8BAA8B,CAAC,mBAAmB,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;gBAC5H,IAAI,CAAC,gCAAgC,GAAG,IAAI,CAAC,kCAAkC,CAAC,KAAK,EAAE,CAAC;gBACxF,0BAA0B;gBAC1B,IAAI,MAAM,GAAS,IAAI,IAAI,EAAE,CAAC;gBAC9B,IAAI,IAAI,GAAS,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,EAAE,MAAM,CAAC,QAAQ,EAAE,EAAE,MAAM,CAAC,OAAO,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;gBAC7F,IAAI,CAAC,kCAAkC,CAAC,IAAI,CAAC,IAAI,oEAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;gBACjE,IAAI,CAAC,gCAAgC,CAAC,IAAI,CAAC,IAAI,oEAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;aAClE;SACJ;IACL,CAAC;IAED,UAAU;QACN,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,QAAQ,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,mBAAmB,CAAC,qBAAqB,CAAC,IAAI,CAAC,gBAAgB,CAAC;aAChE,SAAS,CACN,UAAU,QAAa;YACnB,QAAQ,CAAC,WAAW,GAAG,QAAQ,CAAC,IAAI,CAAC;YACrC,QAAQ,CAAC,SAAS,GAAG,QAAQ,CAAC,EAAE,CAAC;QACrC,CAAC,EACD,UAAU,KAAU;YAChB,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YACjC,QAAQ,CAAC,YAAY,GAAG,KAAK,CAAC;QAClC,CAAC,EACD;YACI,QAAQ,CAAC,YAAY,GAAG,KAAK,CAAC;QAClC,CAAC,CAAC,CAAC;IACf,CAAC;IAED,sBAAsB,CAAC,OAAY;QAC/B,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,GAAG,OAAO,CAAC;IACvD,CAAC;IAGD,0BAA0B;QACtB,IAAI,QAAQ,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,GAAG,QAAQ,CAAC;QAClD,IAAI,CAAC,mBAAmB,CAAC,iBAAiB,CAAC,IAAI,CAAC,gBAAgB,CAAC;aAC5D,SAAS,CACN,UAAU,QAAa;QACvB,CAAC,EACD,UAAU,KAAU;YAChB,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YACjC,QAAQ,CAAC,YAAY,GAAG,KAAK,CAAC;QAClC,CAAC,EACD;YACI,QAAQ,CAAC,YAAY,GAAG,KAAK,CAAC;QAClC,CAAC,CAAC,CAAC;IACf,CAAC;IAED,2BAA2B;QACvB,IAAI,QAAQ,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,GAAG,SAAS,CAAC;QACnD,IAAI,CAAC,mBAAmB,CAAC,iBAAiB,CAAC,IAAI,CAAC,gBAAgB,CAAC;aAC5D,SAAS,CACN,UAAU,QAAa;QACvB,CAAC,EACD,UAAU,KAAU;YAChB,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YACjC,QAAQ,CAAC,YAAY,GAAG,KAAK,CAAC;QAClC,CAAC,EACD;YACI,QAAQ,CAAC,YAAY,GAAG,KAAK,CAAC;QAClC,CAAC,CAAC,CAAC;IACf,CAAC;IACD,8BAA8B,CAAC,GAAS,EAAE,SAAe;QAErD,IAAI,IAAI,GAAW,SAAS,CAAC,QAAQ,EAAE,CAAC;QACxC,IAAI,MAAM,GAAW,SAAS,CAAC,UAAU,EAAE,CAAC;QAC5C,IAAI,QAAQ,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,EAAE,GAAG,CAAC,QAAQ,EAAE,EACrD,GAAG,CAAC,OAAO,EAAE,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;QAEjC,OAAO,QAAQ,CAAC;IACpB,CAAC;IACD,uBAAuB,CAAC,iBAAqC;QAEzD,IAAI,CAAC,gBAAgB,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC/C,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,GAAG,IAAI,CAAC,kBAAkB,CAAC;QACjE,IAAI,CAAC,gBAAgB,CAAC,OAAO,GAAG,KAAK,CAAC;QAEtC,IAAI,IAAI,CAAC,WAAW,IAAI,iBAAiB,EAAC,WAAW;SACrD;YACI,IAAI,CAAC,gBAAgB,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YACvF,IAAI,CAAC,gBAAgB,CAAC,OAAO,GAAG,IAAI,CAAC;SACxC;QAED,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,aAAa,EAAC,MAAM;SACnD;YACI,IAAI,WAAW,GAAS,IAAI,CAAC,8BAA8B,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;YACpG,IAAI,CAAC,gBAAgB,CAAC,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;SACvF;QAGD,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;YAC/D,IAAI,CAAC,gBAAgB,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;SACpD;QAED,IAAI,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,IAAI,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAC/E,IAAI,QAAQ,IAAI,SAAS,EAAE;YACvB,kBAAkB;YAClB,IAAI,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAC,6BAA6B;gBAC7D,IAAI,CAAC,uBAAuB,GAAG,QAAQ,CAAC;YAE5C,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC;YAC/D,IAAI,CAAC,gBAAgB,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YACrF,IAAI,CAAC,gBAAgB,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAC/C,IAAI,CAAC,gBAAgB,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;YACjD,IAAI,CAAC,gBAAgB,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;YACvD,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC;YAEjE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,QAAQ,GAAG,IAAI,CAAC;YACpB,IAAI,gBAAgB,GAAY,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;YAE/E,IAAI,iBAAiB,EAAE;gBACnB,IAAI,CAAC,mBAAmB,CAAC,wBAAwB,CAAC,IAAI,CAAC,gBAAgB,CAAC;qBACnE,SAAS,CACN,UAAU,QAAa;oBACnB,QAAQ,CAAC,oBAAoB,CAAC,QAAQ,EAAE,gBAAgB,CAAC,CAAC;oBAC1D,QAAQ,CAAC,qBAAqB,EAAE,CAAC;oBAEjC,IAAI,GAAG,GAAG,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;oBAC1D,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;gBACrC,CAAC,EACD,UAAU,KAAU;oBAChB,QAAQ,CAAC,gBAAgB,CAAC,QAAQ,GAAG,QAAQ,CAAC,wBAAwB,CAAC;oBACvE,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;oBACjC,QAAQ,CAAC,YAAY,GAAG,KAAK,CAAC;gBAClC,CAAC,EACD;oBACI,QAAQ,CAAC,YAAY,GAAG,KAAK,CAAC;gBAClC,CAAC,CAAC,CAAC;aACd;iBACI;gBACD,IAAI,aAAa,GAAG,IAAI,CAAC,wBAAwB,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;gBAErE,IAAI,CAAC,aAAa,EAAE;oBAChB,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC;oBACzD,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;oBAC3B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;oBAC1B,IAAI,CAAC,gBAAgB,CAAC,QAAQ,GAAG,IAAI,CAAC,wBAAwB,CAAC;oBAC/D,OAAO;iBACV;gBAED,IAAI,CAAC,mBAAmB,CAAC,uBAAuB,CAAC,IAAI,CAAC,gBAAgB,CAAC;qBAClE,SAAS,CACN,UAAU,QAAa;oBACnB,QAAQ,CAAC,oBAAoB,CAAC,QAAQ,EAAE,gBAAgB,CAAC,CAAC;oBAC1D,QAAQ,CAAC,qBAAqB,EAAE,CAAC;oBAEjC,IAAI,GAAG,GAAG,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;oBAC1D,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;gBACrC,CAAC,EACD,UAAU,KAAU;oBAChB,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;oBACjC,QAAQ,CAAC,gBAAgB,CAAC,QAAQ,GAAG,QAAQ,CAAC,wBAAwB,CAAC;oBACvE,QAAQ,CAAC,YAAY,GAAG,KAAK,CAAC;gBAClC,CAAC,EACD;oBACI,QAAQ,CAAC,YAAY,GAAG,KAAK,CAAC;gBAClC,CAAC,CAAC,CAAC;aACd;SACJ;aACI;YACD,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;YAClD,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;SAC9B;IACL,CAAC;IAED,iBAAiB;QACb,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,CAAC;QACnC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;IACzB,CAAC;IACD,eAAe;QACX,IAAI,CAAC,uBAAuB,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,CAAC,2BAA2B,EAAE,CAAC;QACnC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;IACzB,CAAC;IAED,iBAAiB;QACb,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,uBAAuB,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,CAAC,4BAA4B,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACjD,IAAI,CAAC,0BAA0B,EAAE,CAAC;QAClC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;IACzB,CAAC;IAED,2BAA2B;IAC3B,uCAAuC;IACvC,GAAG;IACH,oBAAoB,CAAC,KAAU;QAC3B,IAAI,KAAK,CAAC,MAAM,CAAC,OAAO,EAAE;YACtB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;SACzB;aAAM;YACH,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;SAC1B;IACL,CAAC;IACD,+BAA+B;IAC/B,oBAAoB;IACpB,2DAA2D;IAC3D,gGAAgG;IAChG,kCAAkC;IAClC,4BAA4B;IAC5B,0GAA0G;IAE1G,mCAAmC;IACnC,8BAA8B;IAC9B,yFAAyF;IACzF,4FAA4F;IAC5F,yBAAyB;IACzB,uCAAuC;IACvC,4EAA4E;IAC5E,mDAAmD;IAEnD,oEAAoE;IACpE,gBAAgB;IAChB,qCAAqC;IACrC,mDAAmD;IACnD,gDAAgD;IAChD,gBAAgB;IAChB,2BAA2B;IAC3B,gDAAgD;IAChD,iBAAiB;IACjB,OAAO;IACP,YAAY;IACZ,mEAAmE;IACnE,OAAO;IACP,GAAG;IACH,4CAA4C;IAC5C,yCAAyC;IACzC,mCAAmC;IACnC,8IAA8I;IAC9I,sGAAsG;IACtG,oFAAoF;IACpF,OAAO;IACP,GAAG;IACH,oBAAoB;QAEhB,IAAI,aAAa,GAAG,IAAI,CAAC;QACzB,oCAAoC;QACpC,IAAI,CAAC,gBAAgB,CAAC,GAAG,GAAG,IAAI,CAAC,4BAA4B,CAAC,uEAAsE;QACpI,IAAI,CAAC,gBAAgB,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,iCAAiC,GAAG,CAAC,IAAI,CAAC,iCAAiC,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;QACnN,IAAI,CAAC,gBAAgB,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,+BAA+B,GAAG,CAAC,IAAI,CAAC,+BAA+B,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;QAC7M,IAAI,IAAI,CAAC,gBAAgB,CAAC,SAAS,IAAI,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE;YAClE,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,uBAAuB,CAAC,CAAC;YAC1D,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;YACpC,OAAO;SACV;QACD,IAAI,CAAC,mBAAmB,CAAC,uBAAuB,CAAC,IAAI,CAAC,gBAAgB,CAAC;aAClE,SAAS,CACN,UAAU,QAAa;YAEnB,aAAa,CAAC,gBAAgB,GAAG,QAAQ,CAAC;YAC1C,aAAa,CAAC,6BAA6B,EAAE,CAAC;YAC9C,aAAa,CAAC,4BAA4B,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;YACnE,IAAI,GAAG,GAAG,aAAa,CAAC,SAAS,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;YAC/D,aAAa,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;YACtC,aAAa,CAAC,6BAA6B,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;QACtE,CAAC,EACD,UAAU,KAAU;YAChB,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YACtC,qCAAqC;QACzC,CAAC,EACD;YACI,qCAAqC;QACzC,CAAC,CAAC,CAAC;IACf,CAAC;IAGD,oBAAoB,CAAC,WAAgB,EAAE,gBAAyB;QAC5D,IAAI,IAAI,GAAkB,IAAI,aAAa,EAAE,CAAC;QAC9C,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;QAEpC,IAAI,gBAAgB,EAAC,SAAS;SAC9B;YACI,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAEzC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC1B;aACG,iBAAiB;SACrB;YACI,IAAI,IAAI,CAAC,SAAS,EAAE;gBAChB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACpD,IAAI,WAAW,CAAC,EAAE,IAAI,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE;wBAChD,yDAAyD;wBACzD,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;wBACpC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;wBACvB,MAAM;qBACT;iBACJ;gBAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACzC,IAAI,WAAW,CAAC,EAAE,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE;wBACrC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;wBACzB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;wBACvB,MAAM;qBACT;iBACJ;aAEJ;iBACI;gBACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACpD,IAAI,WAAW,CAAC,EAAE,IAAI,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE;wBAChD,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC;wBACxC,MAAM;qBACT;iBACJ;gBAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACzC,IAAI,WAAW,CAAC,EAAE,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE;wBACrC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;wBACtB,MAAM;qBACT;iBACJ;aACJ;SAEJ;IACL,CAAC;IACD,sBAAsB,CAAC,WAAgB;QACnC,IAAI,aAAa,GAAG,IAAI,CAAC;QAEzB,IAAI,WAAW,CAAC,WAAW;YACvB,WAAW,CAAC,WAAW,GAAG,aAAa,CAAC,YAAY,CAAC,qBAAqB,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;QAExG,IAAI,WAAW,CAAC,aAAa;YACzB,WAAW,CAAC,aAAa,GAAG,aAAa,CAAC,YAAY,CAAC,qBAAqB,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;IAGhH,CAAC;IAED,uBAAuB,CAAC,WAAgB;QACpC,IAAI,SAAS,GAAG,EAAE,CAAC;QAEnB,SAAS,IAAI,WAAW,CAAC,iBAAiB,CAAC;QAC3C,SAAS,IAAI,KAAK,GAAG,WAAW,CAAC,WAAW,CAAC;QAC7C,SAAS,IAAI,KAAK,GAAG,WAAW,CAAC,MAAM,CAAC;QAExC,IAAI,WAAW,CAAC,OAAO;YACnB,SAAS,IAAI,KAAK,GAAG,WAAW,CAAC,iBAAiB,CAAC;QAEvD,IAAI,WAAW,CAAC,SAAS;YACrB,SAAS,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;;YAEzD,SAAS,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;QAEhE,IAAI,WAAW,CAAC,WAAW;YACvB,SAAS,IAAI,KAAK,GAAG,WAAW,CAAC,WAAW,CAAC;QAEjD,OAAO,SAAS,CAAC;IACrB,CAAC;IAED,WAAW,CAAC,IAAmB,EAAE,WAAgB;QAE7C,IAAI,CAAC,EAAE,GAAG,WAAW,CAAC,EAAE,CAAC;QACzB,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC,cAAc,CAAC;QAC3C,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC,WAAW,CAAC;QACrC,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC,SAAS,CAAC;QAEvC,OAAO;QACP,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC,KAAK,CAAC;QAC/B,KAAK;QACL,IAAI,CAAC,GAAG,GAAG,WAAW,CAAC,GAAG,CAAC;QAC3B,IAAI,WAAW,CAAC,QAAQ;YACpB,IAAI,CAAC,SAAS,GAAG,sBAAsB,CAAC;aACvC,IAAI,WAAW,CAAC,OAAO;YACxB,IAAI,CAAC,SAAS,GAAG,uBAAuB,CAAC;aACxC,IAAI,WAAW,CAAC,SAAS;YAC1B,IAAI,CAAC,SAAS,GAAG,yBAAyB,CAAC;aAC1C,IAAI,WAAW,CAAC,IAAI;YACrB,IAAI,CAAC,SAAS,GAAG,sBAAsB,CAAC;;YAExC,IAAI,CAAC,SAAS,GAAG,eAAe,CAAC;IAEzC,CAAC;IAED,6BAA6B;QACzB,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;IAC/B,CAAC;IAED,oCAAoC;QAChC,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QAC7C,4EAA4E;QAC5E,IAAI,CAAC,gBAAgB,GAAG;YACpB,IAAI,EAAE,CAAC;YACP,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;SAC1B,CAAC;QACF,IAAI,CAAC,0BAA0B,GAAG,GAAG,CAAC;QACtC,IAAI,CAAC,gCAAgC,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;QAC5D,GAAG;IACP,CAAC;IAED,qCAAqC;QACjC,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;QAE9C,6EAA6E;QAC7E,IAAI,CAAC,gBAAgB,GAAG;YACpB,IAAI,EAAE,CAAC;YACP,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;SAC1B,CAAC;QACF,IAAI,CAAC,0BAA0B,GAAG,GAAG,CAAC;QACtC,IAAI,CAAC,gCAAgC,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;QAC5D,IAAI;IACR,CAAC;IAED,yBAAyB;QACrB,0EAA0E;QAC1E,IAAI,CAAC,4BAA4B,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;IAC5D,CAAC;IAED,gBAAgB;QAEZ,IAAI,aAAa,GAAG,IAAI,CAAC;QACzB,oCAAoC;QACpC,IAAI,kBAAkB,GAAG;YACrB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,sBAAsB,EAAE,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,IAAI,CAAC,sBAAsB,CAAC;SACxF,CAAC;QACF,IAAI,CAAC,mBAAmB,CAAC,gBAAgB,CAAC,kBAAkB,CAAC;aACxD,SAAS,CACN,UAAU,QAAa;YACnB,aAAa,CAAC,4BAA4B,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;YACnE,IAAI,GAAG,GAAG,aAAa,CAAC,SAAS,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;YAC/D,aAAa,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;YACtC,aAAa,CAAC,6BAA6B,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;QACtE,CAAC,EACD,UAAU,KAAU;YAChB,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YACtC,qCAAqC;QACzC,CAAC,EACD;YACI,qCAAqC;QACzC,CAAC,CAAC,CAAC;IACf,CAAC;IAGD,0BAA0B;QACtB,IAAI,IAAI,CAAC,gBAAgB,IAAI,SAAS,EAAE;YACpC,mGAAmG;YACnG,2DAA2D;YAC3D,kEAAkE;YAClE,IAAI,CAAC,wBAAwB,CAAC,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC;YAC1E,IAAI,CAAC,wBAAwB,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC;YACxF,IAAI,CAAC,wBAAwB,CAAC,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC;YAC9E,IAAI,CAAC,wBAAwB,CAAC,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC;YAC9E,IAAI,CAAC,wBAAwB,CAAC,kBAAkB,GAAG,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAAC;YAC5F,IAAI,CAAC,wBAAwB,CAAC,IAAI,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC;YAChE,IAAI,CAAC,wBAAwB,CAAC,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC;YAC9E,IAAI,CAAC,6BAA6B,GAAG,IAAI,CAAC;SAC7C;IACL,CAAC;IAED,8BAA8B,CAAC,OAAY;QACvC,IAAI,CAAC,wBAAwB,CAAC,kBAAkB,GAAG,OAAO,CAAC;IAC/D,CAAC;IAED,uBAAuB;QAEnB,IAAI,QAAQ,GAAG,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,IAAI,IAAI,CAAC,sBAAsB,CAAC,CAAC;QAC9F,IAAI,QAAQ,IAAI,SAAS,EAAE;YACvB,kBAAkB;YAElB,IAAI,CAAC,wBAAwB,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YAC7F,IAAI,CAAC,wBAAwB,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YACvD,IAAI,CAAC,wBAAwB,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;YACzD,IAAI,CAAC,wBAAwB,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;YAC/D,IAAI,CAAC,wBAAwB,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC;YAEzE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,QAAQ,GAAG,IAAI,CAAC;YACpB,IAAI,gBAAgB,GAAY,IAAI,CAAC;YACrC,IAAI,CAAC,mBAAmB,CAAC,uBAAuB,CAAC,IAAI,CAAC,wBAAwB,CAAC;iBAC1E,SAAS,CACN,UAAU,QAAa;gBACnB,QAAQ,CAAC,oBAAoB,CAAC,QAAQ,EAAE,gBAAgB,CAAC,CAAC;gBAE1D,QAAQ,CAAC,0BAA0B,EAAE,CAAC;gBAEtC,IAAI,GAAG,GAAG,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;gBAC1D,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;YACrC,CAAC,EACD,UAAU,KAAU;gBAChB,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;gBACjC,QAAQ,CAAC,YAAY,GAAG,KAAK,CAAC;YAClC,CAAC,EACD;gBACI,QAAQ,CAAC,YAAY,GAAG,KAAK,CAAC;YAClC,CAAC,CAAC,CAAC;SACd;aACI;YACD,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;YAClD,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;SAC9B;IACL,CAAC;IACD,kBAAkB,CAAC,SAAe;QAC9B,IAAI,CAAC,sBAAsB,GAAG,EAAE,CAAC;QACjC,IAAI,SAAS,IAAI,SAAS,EAAE;YACxB,IAAI,CAAC,8BAA8B,GAAG,IAAI,oGAA8B,CAAC,IAAI,CAAC,wBAAwB,EAAE,IAAI,CAAC,qBAAqB,CAAC,CAAC;YACpI,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,8BAA8B,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;YAC1F,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,8BAA8B,CAAC,eAAe,EAAE,CAAC;SAC7E;IACL,CAAC;IACD,0BAA0B;QACtB,IAAI,CAAC,wBAAwB,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC;QAC1C,IAAI,CAAC,sBAAsB,GAAG,EAAE,CAAC;QACjC,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;QAC7B,IAAI,CAAC,sBAAsB,GAAG,EAAE,CAAC;QACjC,IAAI,CAAC,6BAA6B,GAAG,KAAK,CAAC;IAC/C,CAAC;IAED,wBAAwB,CAAC,IAAS;QAC9B,IAAI,IAAI,CAAC,WAAW,IAAI,SAAS,EAAE;YAC/B,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,WAAW,EAAE;gBAC/B,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,mBAAmB,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,IAAI,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC;oBACrG,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,iGAAgG;gBAExI,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,mBAAmB,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,IAAI,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC;oBACrG,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC;gBAE3C,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,mBAAmB,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,IAAI,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC;oBAC1H,IAAI,CAAC,6BAA6B,GAAG,IAAI,CAAC;gBAE9C,EAAE;gBACF,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,iBAAiB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;oBACjE,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC,iGAAgG;gBAE3I,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,cAAc,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;oBAC9D,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC;gBAExC,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;oBACxD,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;gBAElC,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;oBACzD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;gBAEhC,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,YAAY,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;oBAC5D,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;aAErC;SACJ;IAEL,CAAC;IAED,gBAAgB,CAAC,KAAU;QACvB,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YAEnB,IAAI,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC;YAC/B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,mBAAmB,GAAG,IAAI,IAAI,EAAE,CAAC;YAEtC,IAAI,QAAQ,IAAI,UAAU,EAAE;gBACxB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;gBACtB,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC;gBACvD,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;aAC9F;YAED,IAAI,SAAS,GAAS,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC;YAC1C,IAAI,QAAQ,GAAG,SAAS,CAAC,OAAO,EAAE,CAAC;YACnC,IAAI,OAAO,GAAS,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC;YAClD,OAAO,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC;YAE9B,IAAI,UAAU,GAAQ,EAAE,CAAC;YACzB,UAAU,CAAC,SAAS,GAAG,SAAS,CAAC;YACjC,UAAU,CAAC,OAAO,GAAG,OAAO,CAAC;YAC7B,UAAU,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAEpC,IAAI,QAAQ,GAAG,IAAI,CAAC;YACpB,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC;YAC5B,IAAI,CAAC,mBAAmB,CAAC,2BAA2B,CAAC,UAAU,CAAC;iBAC3D,SAAS,CACN,UAAU,QAAa;gBACnB,QAAQ,CAAC,iBAAiB,GAAG,QAAQ,CAAC,YAAY,CAAC;gBACnD,QAAQ,CAAC,MAAM,GAAG,QAAQ,CAAC,cAAc,CAAC;gBAC1C,QAAQ,CAAC,mCAAmC,EAAE,CAAC;gBAE/C,QAAQ,CAAC,oBAAoB,GAAG,QAAQ,CAAC,qBAAqB,CAAC;gBAE/D,QAAQ,CAAC,mBAAmB,CAAC,SAAS,CAAC,CAAC;gBAExC,QAAQ,CAAC,kBAAkB,EAAE,CAAC,CAAC,6CAA6C;gBAC5E,8BAA8B;gBAE9B,IAAI,QAAQ,CAAC,cAAc,EAAE;oBACzB,yBAAyB;oBACzB,QAAQ,CAAC,mBAAmB,CAAC,QAAQ,CAAC,+BAA+B,CAAC,CAAC;iBAC1E;gBAED,gDAAgD;YAEpD,CAAC,EACD,UAAU,KAAU;gBAChB,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;gBACjC,QAAQ,CAAC,WAAW,GAAG,KAAK,CAAC;YACjC,CAAC,EACD;gBACI,QAAQ,CAAC,WAAW,GAAG,KAAK,CAAC;gBAC7B,QAAQ,CAAC,cAAc,GAAG,EAAE,CAAC;YACjC,CAAC,CAAC,CAAC;YAEX,2BAA2B;SAC9B;IACL,CAAC;IAED,mCAAmC;QAC/B,uBAAuB;QACvB,sCAAsC;QACtC,wCAAwC;QACxC,OAAO;QACP,GAAG;QACH,QAAQ;QACR,sCAAsC;QACtC,yCAAyC;QACzC,OAAO;QACP,GAAG;QACH,KAAK,IAAI,KAAK,IAAI,IAAI,CAAC,MAAM,EAAE;YAC3B,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,UAAU,CAAC;SAClC;IACL,CAAC;IAED,cAAc,CAAC,GAAQ;QAEnB,IAAI,gBAAgB,GAAQ,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAChF,IAAI,YAAY,GAAa,IAAI,oEAAQ,CAAC,gBAAgB,CAAC,CAAC;QAE5D,IAAI,CAAC,8BAA8B,GAAG,IAAI,oGAA8B,CAAC,IAAI,CAAC,wBAAwB,EAAE,IAAI,CAAC,qBAAqB,CAAC,CAAC;QACpI,IAAI,kBAAkB,GAAG,IAAI,CAAC,8BAA8B,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC;QAE5F,IAAI,aAAa,GAAG,kBAAkB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,IAAI,YAAY,CAAC,IAAI,CAAC,CAAC;QAChF,IAAI,aAAa,IAAI,SAAS,EAAE;YAC5B,IAAI,CAAC,iBAAiB,EAAE,CAAC;YAEzB,IAAI,CAAC,YAAY,GAAG,gBAAgB,CAAC;YAErC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YACrC,IAAI,CAAC,gBAAgB,GAAG,aAAa,CAAC,IAAI,CAAC;SAC9C;IACL,CAAC;IAED,oBAAoB,CAAC,KAAU,EAAE,GAAQ;QAErC,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACvB,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;YACnF,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;YAE/E,IAAI,OAAO,GAAQ,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC;YACvF,IAAI,CAAC,8BAA8B,GAAG,IAAI,oGAA8B,CAAC,IAAI,CAAC,wBAAwB,EAAE,IAAI,CAAC,qBAAqB,CAAC,CAAC;YACpI,IAAI,kBAAkB,GAAG,IAAI,CAAC,8BAA8B,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;YAEnF,IAAI,CAAC,sBAAsB,GAAG,IAAI,oEAAQ,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC;YAC5E,IAAI,CAAC,qBAAqB,GAAG,IAAI,oEAAQ,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC;YAEzE,IAAI,aAAa,GAAG,kBAAkB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,IAAI,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC;YAE/F,8BAA8B;YAC9B,IAAI,aAAa,IAAI,SAAS,EAAE;gBAE5B,IAAI,CAAC,oBAAoB,EAAE,CAAC;aAE/B;iBACI,+BAA+B;aACpC;gBACI,IAAI,CAAC,4BAA4B,EAAE,CAAC;aACvC;SACJ;aACI;YACD,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;YACrD,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;SAC1B;IAEL,CAAC;IAED,sBAAsB,CAAC,aAAkB,EAAE,WAAgB;QACvD,IAAI,OAAO,GAAQ,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC;QACrE,IAAI,YAAY,GAAG,IAAI,CAAC,8BAA8B,CAAC,sBAAsB,CAAC,OAAO,CAAC,CAAC;QACvF,IAAI,iBAAiB,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,GAAG,aAAa,CAAC,CAAC;QAC9D,IAAI,aAAa,GAAG,CAAC,iBAAiB,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QAEpD,IAAI,iBAAiB,GAAW,CAAC,CAAC;QAClC,IAAI,YAAY,IAAI,SAAS,IAAI,YAAY,IAAI,CAAC;YAC9C,iBAAiB,GAAG,aAAa,GAAG,YAAY,CAAC;QAErD,OAAO,iBAAiB,CAAC;IAC7B,CAAC;IAED,iCAAiC;QAC7B,yBAAyB;QACzB,IAAI,CAAC,wBAAwB,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;QAEpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAEzB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,0BAA0B,CAAC;QAEpD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACrC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC;QACzD,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,0BAA0B,EAAE,IAAI,CAAC,wBAAwB,CAAC,CAAC;QAErH,IAAI,CAAC,wBAAwB,EAAE,CAAC;IACpC,CAAC;IAED,6BAA6B;QACzB,yBAAyB;QACzB,IAAI,CAAC,wBAAwB,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;QAEpD,IAAI,CAAC,4BAA4B,GAAG,IAAI,CAAC,0BAA0B,CAAC;QACpE,IAAI,CAAC,iCAAiC,GAAG,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC;QAC1E,IAAI,CAAC,+BAA+B,GAAG,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC;QAEvE,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,4BAA4B,CAAC,CAAC;QAElE,IAAI,CAAC,qCAAqC,EAAE,CAAC;IAEjD,CAAC;IAED,4BAA4B;QAExB,IAAI,CAAC,4BAA4B,GAAG,IAAI,CAAC,0BAA0B,CAAC;QACpE,IAAI,CAAC,iCAAiC,GAAG,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC;QAC1E,IAAI,CAAC,+BAA+B,GAAG,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC;QAEvE,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,4BAA4B,CAAC,CAAC;QAElE,IAAI,CAAC,oCAAoC,EAAE,CAAC;IAChD,CAAC;IAED,+BAA+B;QAC3B,IAAI,CAAC,4BAA4B,GAAG,IAAI,CAAC;IAC7C,CAAC;IAED,sBAAsB,CAAC,kBAAuB;QAC1C,IAAI,CAAC,gBAAgB,GAAG,kBAAkB,CAAC;QAC3C,IAAI,CAAC,4BAA4B,GAAG,KAAK,CAAC;QAC1C,IAAI,CAAC,UAAU,EAAE;IACrB,CAAC;IAED,iBAAiB,CAAC,CAAM;QACpB,KAAK,CAAC,eAAe,CAAC,CAAC;IAC3B,CAAC;IAED,eAAe,CAAC,CAAM;QAClB,KAAK,CAAC,eAAe,CAAC,CAAC;IAC3B,CAAC;IAED,sBAAsB,CAAC,kBAAuB;QAC1C,IAAI,kBAAkB,EAAE;YACpB,yBAAyB;YACzB,IAAI,YAAY,GAAG,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;YAEvE,IAAI,YAAY,EAAE;gBACd,IAAI,CAAC,cAAc,GAAG,YAAY,CAAC;gBACnC,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,CAAC;gBAEtC,IAAI,CAAC,cAAc,GAAG,kBAAkB,CAAC,eAAe,CAAC;gBACzD,IAAI,CAAC,+BAA+B,GAAG,kBAAkB,CAAC,EAAE,CAAC;gBAC7D,IAAI,CAAC,+BAA+B,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;aAC9D;SACJ;IACL,CAAC;IAED,iBAAiB,CAAC,QAAa;QAC3B,IAAI,YAAY,CAAC;QACjB,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,yBAAyB,EAAE;YAC7C,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;YAClD,IAAI,YAAY;gBACZ,MAAM;SACb;QAED,OAAO,YAAY,CAAC;IACxB,CAAC;IAEO,aAAa,CAAC,IAAS,EAAE,QAAgB;QAE7C,IAAI,IAAI,CAAC,QAAQ,EAAE;YAEf,KAAK,IAAI,SAAS,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjC,IAAI,SAAS,CAAC,IAAI,IAAI,cAAc,IAAI,SAAS,CAAC,IAAI,IAAI,QAAQ,EAAE;oBAChE,OAAO,SAAS,CAAC;iBACpB;;oBAEG,OAAO,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;aAEtD;SACJ;IACL,CAAC;IAED,kBAAkB;QACd,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;QACxD,IAAI,CAAC,wBAAwB,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;IACxD,CAAC;IAED,wBAAwB;QAEpB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QAExB,IAAI,CAAC,CAAC,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,gBAAgB,CAAC,EAAE,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,YAAY,EAAE;YAEhF,IAAI,CAAC,gBAAgB,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YACrF,IAAI,CAAC,gBAAgB,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;SAClD;QAED,IAAI,EAAE,GAAG,IAAI,CAAC;QACd,IAAI,CAAC,mBAAmB,CAAC,wBAAwB,CAAC,IAAI,CAAC,gBAAgB,CAAC;aACnE,SAAS,CACN,UAAU,QAAa;YACnB,EAAE,CAAC,aAAa,GAAG,QAAQ,CAAC;QAChC,CAAC,EACD,UAAU,KAAU;QAEpB,CAAC,EACD;QAEA,CAAC,CAAC,CAAC;IACf,CAAC;IAED,mBAAmB,CAAC,iBAAyB;QACzC,IAAI,eAAe,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,IAAI,iBAAiB,CAAC,CAAC;QAEzF,IAAI,eAAe,EAAE;YACjB,IAAI,CAAC,iBAAiB,GAAG,eAAe,CAAC,aAAa,CAAC;SAC1D;IACL,CAAC;IAED,mBAAmB,CAAC,CAAM;QACtB,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IAED,kCAAkC;QAC9B,IAAI,8BAA8B,GAAU,EAAE,CAAC;QAC/C,IAAI,EAAE,GAAG,IAAI,CAAC;QAEd,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,MAAM,EAAE;YAC/B,KAAK,IAAI,KAAK,IAAI,IAAI,CAAC,MAAM,EAAE;gBAC3B,IAAI,KAAK,CAAC,QAAQ,IAAI,IAAI,CAAC,YAAY,CAAC,qBAAqB,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,OAAO,EAAE,IAAI,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE,EAAE;oBAC3H,IAAI,IAAI,GAAQ,EAAE,CAAC;oBACnB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,qBAAqB,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;oBACrE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,SAAS,CAAC;oBAC5F,8BAA8B,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBAC7C;aACJ;YAED,gCAAgC;YAChC,8BAA8B,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC;gBAC9C,6DAA6D;gBAC7D,OAAO,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC;YACnC,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,sBAAsB,GAAG,EAAE,CAAC;YACjC,KAAK,IAAI,KAAK,IAAI,8BAA8B,EAAE;gBAC9C,IAAI,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBACpC,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC;oBAC7B,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;oBACd,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC;oBACb,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;oBACd,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC;oBAChB,WAAW,EAAE,KAAK,CAAC,CAAC,CAAC;oBACrB,SAAS,EAAE,KAAK,CAAC,CAAC,CAAC;oBACnB,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC;iBACpB,CAAC,CAAC;aACN;YAED,IAAI,CAAC,+BAA+B,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;SAC9D;IACL,CAAC;IAED,wBAAwB,CAAC,QAAc;QAEnC,IAAI,YAAY,GAAG,IAAI,CAAC;QAExB,IAAI,IAAI,CAAC,iBAAiB,GAAG,CAAC,EAAE;YAC5B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC,EAAE,EAAE;gBAE7C,IAAI,OAAO,GAAG,QAAQ,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;gBAC9D,IAAI,eAAe,GAAS,IAAI,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,EAAE,QAAQ,CAAC,QAAQ,EAAE,EAC5E,QAAQ,CAAC,OAAO,EAAE,EAAE,QAAQ,CAAC,QAAQ,EAAE,EAAE,QAAQ,CAAC,UAAU,EAAE,CAAC,CAAC;gBAEpE,eAAe,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;gBAEpC,IAAI,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,eAAe,CAAC,QAAQ,EAAE,EAAE,eAAe,CAAC,UAAU,EAAE,CAAC,CAAC;gBAE5G,IAAI,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,IAAI,QAAQ,CAAC,CAAC;gBAEvE,IAAI,WAAW,IAAI,IAAI,IAAI,WAAW,IAAI,SAAS,EAAE;oBACjD,YAAY,GAAG,KAAK,CAAC;oBACrB,MAAM;iBACT;aACJ;SACJ;QAED,OAAO,YAAY,CAAC;IACxB,CAAC;IAED,iBAAiB,CAAC,KAAU;QAExB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC;QACzC,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;QAE3F,IAAI,CAAC,kCAAkC,EAAE,CAAC;IAC9C,CAAC;;kHAzhDQ,iCAAiC;gIAAjC,iCAAiC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QC1B9C,8HAEM;QAEN;QAAA,8HAEM;QAEN;QAAA,0EAAiB;QACb;QAAA,6EAAgD;QAChD;QAAA,0EAA2B;QAEvB;QAAA,2EAA8B;QAC1B;QAAA,sEAAG;QAAA,yDAAsC;;QAAA,6DAAI;QAAC,yDAElD;;QAAA,6DAAM;QAEN;QAAA,2EAAsB;QAClB;QAAA,2EAAgC;QAC5B;QAAA,2EAAoE;QAChE;QAAA,yEAA0F;QAAtD,sJAAS,eAAW,IAAC;QAAiC,yDAA4B;;QAAA,6DAAI;QAC1H;QAAA,yEAA4F;QAAxD,sJAAS,iBAAa,IAAC;QAAiC,yDAA8B;;QAAA,6DAAI;QAClI;QAAA,6DAAM;QACN;QAIA;QAAA,8EAG4C;QADpC,oNAA8B,sHACd,sBAAkB,IADJ;QAElC;QAAA,iJAEc;QACd;QAAA,iJAEc;QACd;QAAA,iJAEc;QACd;QAAA,iJAEc;QACd;QAAA,iJAGc;QAClB;QAAA,6DAAS;QACb;QAAA,6DAAM;QACN;QAAA,4EAA+B;QAE3B;QAAA,4EAAuE;QACnE;QAAA,+EACiG;QAAzF,2JAAS,uBAAmB,IAAC;QACjC;QAAA,wEAA8C;QAAC,yDACnD;;QAAA,6DAAS;QACT;QAAA,+EAAsK;QAClK;QAAA,wEAA8C;QAAA,yDAClD;;QAAA,6DAAS;QACT;QAAA,4EAAuB;QACnB;QAAA,+EAAqF;QACjF,yDACA;;QAAA,wEAA2B;QAC/B;QAAA,6DAAS;QACT;QAAA,2EAAsC;QAClC;QAAA,uEAAI;QACA;QAAA,6HAA4K;QAC5K;QAAA,6HAAyE;QAC7E;QAAA,6DAAK;QACL;QAAA,uEAAI;QACA;QAAA,6HAA4K;QAC5K;QAAA,6HAA0E;QAC9E;QAAA,6DAAK;QACL;QAAA,uEAAI;QACA;QAAA,6HAAoK;QACpK;QAAA,6HAA4E;QAChF;QAAA,6DAAK;QACT;QAAA,6DAAK;QACT;QAAA,6DAAM;QACN;QAAA,+EAAkG;QAC9F;QAAA,wEAAgD;QAAC,0DACrD;;QAAA,6DAAS;QAEb;QAAA,6DAAM;QAEN;QACA;QAAA,qIA6BM;QAEN;QAAA,kIAiBM;QACN;QAAA,kIAEM;QACV;QAAA,6DAAM;QACV;QAAA,6DAAM;QACV;QAAA,6DAAM;QACV;QAAA,6DAAM;QACN;QACA;QAAA,+EAAgI;QAChI;QAAA,iFAAqG;QACjG;QAAA,6EAAoC;QAChC;QACA;QAAA,6EAA2B;QACvB;QAAA,6EAA0B;QACtB;QAAA,gFAAyD;QAAA,oEAAO;QAAA,6DAAS;QACzE;QAAA,4EAAwB;QAAA,0DAA+B;;QAAA,6DAAK;QAChE;QAAA,6DAAM;QACN;QAAA,6EAAoC;QAChC;QAAA,gFAA4F;QAA9C,4JAAS,uCAAmC,IAAC;QAAC,0DAAqC;;QAAA,6DAAS;QAC1I;QAAA,gFAAwF;QAA1C,4JAAS,mCAA+B,IAAC;QAAC,0DAA6B;;QAAA,6DAAS;QAClI;QAAA,6DAAM;QACN;QAAA,6EAA0B;QACtB;QAAA,oFAAiH;QAAA,0DAAyB;;QAAA,6DAAS;QACvJ;QAAA,6DAAM;QACV;QAAA,6DAAM;QAEV;QAAA,6DAAM;QACV;QAAA,6DAAM;QAEN;QAAA,+EAAgI;QAChI;QAAA,iFAAqG;QACjG;QAAA,wIA+JO;QACX;QAAA,6DAAM;QACN;QAkBA;QAkDA;QAiCA;QAiCA;QACA;QAAA,+EAAmJ;QACnJ;QAAA,iFAAuH;QACnH;QAAA,uIAoEO;QACX;QAAA,6DAAM;QAEN;QACA;QAAA,+EAA2I;QAC3I;QAAA,iFAA+G;QAC3G;QAAA,uIAqCO;QACX;QAAA,6DAAM;QAEN;QAAA,6EAAkE;QAC9D;QAAA,6EAAyC;QACrC;QAGA;QAAA,6EAA2B;QAEvB;QAAA,6EAA0B;QACtB;QAAA,gFAAyD;QAAA,oEAAO;QAAA,6DAAS;QACzE;QAAA,4EAAwB;QAAA,0DAA2C;;QAAA,6DAAK;QAC5E;QAAA,6DAAM;QACN;QAAA,kFAAqF;QAEjF;QAAA,6EAAwB;QAEpB;QAAA,6EAAwB;QACpB;QAAA,+EAAsC;QAClC,0DACJ;;QAAA,6DAAQ;QACR;QAAA,6EAAsB;QAClB;QAAA,oFAO8C;QAPlC,mNAA0B,mHAOd,wBAAoB,IAPN;QAOQ,6DAAa;QAC/D;QAAA,6DAAM;QACN;QAAA,+EAAsC;QAClC,0DACJ;;QAAA,6DAAQ;QACR;QAAA,6EAAsB;QAClB;QAAA,oFACoE;QAA5D,mNAA8B;QAClC;QAAA,yIAAqG;;QACzG;QAAA,6DAAS;QACb;QAAA,6DAAM;QACV;QAAA,6DAAM;QACN;QAAA,6EAAwB;QACpB;QAAA,+EAAsC;QAClC,0DACJ;;QAAA,6DAAQ;QACR;QAAA,6EAAsB;QAClB;QAAA,mFAAoJ;QAA5E,+NAA2C;QAAnH,6DAAoJ;QACxJ;QAAA,6DAAM;QACN;QAAA,+EAAsC;QAClC,0DACJ;;QAAA,6DAAQ;QACR;QAAA,6EAAsB;QAClB;QAAA,mFAAwJ;QAA9E,gOAA4C;QAAtH,6DAAwJ;QAC5J;QAAA,6DAAM;QACV;QAAA,6DAAM;QACN;QAAA,6EAAwB;QACpB;QAAA,+EAAsC;QAClC,0DACJ;;QAAA,6DAAQ;QACR;QAAA,6EAAsB;QAClB;QAAA,mFAAgJ;QAA1E,8NAA0C;QAAhH,6DAAgJ;QACpJ;QAAA,6DAAM;QACN;QAAA,+EAAsC;QAClC,0DACJ;;QAAA,6DAAQ;QACR;QAAA,6EAAsB;QAClB;QAAA,mFAA0L;QAA5E,kOAA8C;QAA5J,6DAA0L;QAC9L;QAAA,6DAAM;QAEV;QAAA,6DAAM;QACN;QAAA,6EAAwB;QACpB;QAAA,+EAAsC;QAClC,0DACJ;;QAAA,6DAAQ;QACR;QAAA,6EAAsB;QAClB;QAAA,oFAC4G;QADhG,oOAA2C;QACqD,6DAAa;QAC7H;QAAA,6DAAM;QACN;QAAA,+EAAsC;QAClC,0DACJ;;QAAA,6DAAQ;QACR;QAAA,6EAAsB;QAClB;QAAA,2EAAO;QACH;QAAA,wEAAI;QACA;QAAA,wEAAI;QACA;QAAA,+EAAuG;QAArD,4NAAwC;QAA1F,6DAAuG;QAAA,0DAC3G;;QAAA,6DAAK;QACL;QAAA,wEAAI;QACA;QAAA,+EAAuG;QAA3D,4NAAwC;QAApF,6DAAuG;QAAA,0DAC3G;;QAAA,6DAAK;QACT;QAAA,6DAAK;QACT;QAAA,6DAAQ;QACZ;QAAA,6DAAM;QACV;QAAA,6DAAM;QACN;QAAA,6EAAwB;QACpB;QAAA,+EAAsC;QAClC,0DACJ;;QAAA,6DAAQ;QACR;QAAA,6EAAsB;QAClB;QAAA,oFACoJ;QAA5I,wOAAmD,wPAAyD,mCAA8B,IAAvF;QACvD;QAAA,yIAA0I;QAC9I;QAAA,6DAAS;QACb;QAAA,6DAAM;QACV;QAAA,6DAAM;QACV;QAAA,6DAAM;QACN;QAAA,6EAA0B;QACtB;QAAA,4EAAiB;QACb;QAAA,6EAAsC;QAClC;QAAA,gFAA+K;QAAtC,4JAAS,+BAA2B,IAAC;QAAC,0DAA4B;;QAAA,6DAAS;QACpN;QAAA,gFAAkE;QAAA,0DAA0B;;QAAA,6DAAS;QACzG;QAAA,6DAAM;QACV;QAAA,6DAAM;QACV;QAAA,6DAAM;QAEV;QAAA,6DAAO;QACX;QAAA,6DAAM;QAGV;QAAA,6DAAM;QACV;QAAA,6DAAM;QACN;QAAA,6EAA4D;QACxD;QAAA,6EAAoC;QAChC;QACA;QAAA,6EAA2B;QACvB;QAAA,6EAA0B;QACtB;QAAA,gFAAyD;QAAA,oEAAO;QAAA,6DAAS;QACzE;QAAA,4EAAwB;QAAA,0DAA0B;;QAAA,6DAAK;QAC3D;QAAA,6DAAM;QACN;QAAA,6EAAwB;QACpB;QAAA,6FAA8E;QAAzD,+MAAyB,kCAA8B,IAAC;QAAC,6DAAsB;QACxG;QAAA,6DAAM;QACN;QAAA,6EAA0B;QACtB;QAAA,4EAAiB;QACb;QAAA,6EAAyB;QACrB;QAAA,oFAAmG;QAAA,0DAAyB;;QAAA,6DAAS;QACzI;QAAA,6DAAM;QACV;QAAA,6DAAM;QACV;QAAA,6DAAM;QACV;QAAA,6DAAM;QAEV;QAAA,6DAAM;QACV;QAAA,6DAAM;QAEN;QAoFA;QAMA;QAAA,+EAAyI;QACzI;QAAA,6EAAkE;QAC9D;QAAA,6EAAyC;QACrC;QAEA;QAAA,6EAA2B;QACvB;QAAA,6EAA0B;QACtB;QAAA,gFAAyD;QAAA,oEAAO;QAAA,6DAAS;QACzE;QAAA,4EAAwB;QAAA,0DAA0D;;QAAA,6DAAK;QAC3F;QAAA,6DAAM;QACN;QAAA,6EAAwB;QAEpB;QAAA,+EAAgD;QAEhD;QAAA,6EAAiC;QAC7B;QAAA,6EAAoB;QAChB;QAAA,6EAA6B;QACzB;QAAA,8EAAyB;QACrB;QAAA,yEAA2D;QAC/D;QAAA,6DAAO;QACX;QAAA,6DAAM;QACN;QAAA,4EAAiB;QACb;QAAA,4EAAQ;QACJ,0DACJ;;QAAA,6DAAS;QACT,0DACJ;QAAA,6DAAM;QACN;QAAA,4EAAiB;QACb;QAAA,4EAAQ;QACJ,0DACJ;;QAAA,6DAAS;QACT,0DACJ;;QAAA,6DAAM;QACN;QAAA,8EAAsB;QAAA,oEAAM;QAAA,6DAAM;QAEtC;QAAA,6DAAM;QACN;QAAA,gFAAiE;QAC7D;QAAA,2EAAO;QACH;QAAA,wEAAI;QACA;QAAA,4EAAwB;QAAA,0DAAsB;;QAAA,6DAAK;QACnD;QAAA,4EAAwB;QAAA,0DAAqB;;QAAA,6DAAK;QAClD;QAAA,4EAAwB;QAAA,0DAAsB;;QAAA,6DAAK;QACnD;QAAA,4EAAwB;QAAA,0DAAwB;;QAAA,6DAAK;QACrD;QAAA,4EAAwB;QAAA,0DAA6B;;QAAA,6DAAK;QAC1D;QAAA,4EAAwB;QAAA,0DAA2B;;QAAA,6DAAK;QACxD;QAAA,4EAAwB;QAAA,0DAAyB;;QAAA,6DAAK;QAC1D;QAAA,6DAAK;QACT;QAAA,6DAAQ;QACR;QAAA,2EAAO;QACH;QAAA,mIAWK;QACT;QAAA,6DAAQ;QACZ;QAAA,6DAAQ;QACZ;QAAA,6DAAM;QAEN;QAAA,8EAA6C;QACzC;QAAA,yEAAK;QACD;QAAA,6EAA6B;QACzB;QAAA,8EAAyB;QACrB;QAAA,yEAA2D;QAC/D;QAAA,6DAAO;QACX;QAAA,6DAAM;QACN;QAAA,4EAAiB;QACb;QAAA,4EAAQ;QACJ,0DACJ;;QAAA,6DAAS;QACT,0DACJ;QAAA,6DAAM;QACN;QAAA,4EAAiB;QACb;QAAA,4EAAQ;QACJ,0DACJ;;QAAA,6DAAS;QACT,0DACJ;;QAAA,6DAAM;QACN;QAAA,8EAAsB;QAAA,oEAAM;QAAA,6DAAM;QAEtC;QAAA,6DAAM;QACN;QAAA,gFAAiE;QAC7D;QAAA,2EAAO;QACH;QAAA,wEAAI;QACA;QAAA,4EAAwB;QAAA,0DAAsB;;QAAA,6DAAK;QACnD;QAAA,4EAAwB;QAAA,0DAAqB;;QAAA,6DAAK;QAClD;QAAA,4EAAwB;QAAA,0DAAsB;;QAAA,6DAAK;QACnD;QAAA,4EAAwB;QAAA,0DAAwB;;QAAA,6DAAK;QACrD;QAAA,4EAAwB;QAAA,0DAA6B;;QAAA,6DAAK;QAC1D;QAAA,4EAAwB;QAAA,0DAA2B;;QAAA,6DAAK;QACxD;QAAA,4EAAwB;QAAA,0DAAyB;;QAAA,6DAAK;QAC1D;QAAA,6DAAK;QACT;QAAA,6DAAQ;QACR;QAAA,2EAAO;QACH;QAAA,mIAUK;QACT;QAAA,6DAAQ;QACZ;QAAA,6DAAQ;QACZ;QAAA,6DAAM;QACV;QAAA,6DAAM;QACV;QAAA,6DAAM;QACV;QAAA,6DAAM;QACV;QAAA,6DAAM;QACN;;;QAh6BM,mFAAkB;QAIlB,2DAAiB;QAAjB,kFAAiB;QAKN,2DAAoB;QAApB,8EAAoB;QAItB,2DAAsC;QAAtC,2JAAsC;QAAK,2DAElD;QAFkD,8LAElD;QAKsG,4DAA4B;QAA5B,kJAA4B;QAC1B,2DAA8B;QAA9B,oJAA8B;QAMtH,2DAAmC;QAAnC,iGAAmC;QA0BD,4DAA0D;QAA1D,4HAA0D;QAC7C,2DACnD;QADmD,uLACnD;QACwG,2DAA6D;QAA7D,+HAA6D;QACnH,2DAClD;QADkD,yLAClD;QAGQ,2DACA;QADA,kNACA;QAIQ,2DAAsB;QAAtB,uFAAsB;QACtB,2DAAuB;QAAvB,wFAAuB;QAGvB,2DAAsB;QAAtB,uFAAsB;QACtB,2DAAuB;QAAvB,wFAAuB;QAGvB,2DAAsB;QAAtB,uFAAsB;QACtB,2DAAuB;QAAvB,wFAAuB;QAKc,2DACrD;QADqD,gLACrD;QAKc,2DAAsB;QAAtB,uFAAsB;QA+BlC,2DAAyB;QAAzB,0FAAyB;QAkBzB,2DAAwB;QAAxB,yFAAwB;QAeN,4DAA+B;QAA/B,sJAA+B;QAGqC,2DAAqC;QAArC,4JAAqC;QACzC,2DAA6B;QAA7B,oJAA6B;QAGJ,2DAAyB;QAAzB,gJAAyB;QAS/I,4DAAY;QAAZ,6EAAY;QA0SZ,4DAAY;QAAZ,6EAAY;QA0EZ,4DAAY;QAAZ,6EAAY;QAiDiB,4DAA2C;QAA3C,kKAA2C;QAQvD,4DACJ;QADI,+MACJ;QAEgB,2DAA0B;QAA1B,sFAA0B;QAUtC,2DACJ;QADI,gNACJ;QAGY,2DAA8B;QAA9B,0FAA8B;QACV,2DAAmC;QAAnC,6JAAmC;QAM/D,2DACJ;QADI,oNACJ;QAE4E,2DAA2C;QAA3C,uGAA2C;QAGnH,2DACJ;QADI,qNACJ;QAE8E,2DAA4C;QAA5C,wGAA4C;QAKtH,2DACJ;QADI,mNACJ;QAE0E,2DAA0C;QAA1C,sGAA0C;QAGhH,2DACJ;QADI,iNACJ;QAEkH,2DAA8C;QAA9C,0GAA8C;QAM5J,2DACJ;QADI,oNACJ;QAEgB,2DAA2C;QAA3C,uGAA2C;QAIvD,2DACJ;QADI,iNACJ;QAKkE,4DAAwC;QAAxC,oGAAwC;QAAa,2DAC3G;QAD2G,6LAC3G;QAEgD,2DAAwC;QAAxC,oGAAwC;QAAmB,2DAC3G;QAD2G,+LAC3G;QAOR,4DACJ;QADI,kNACJ;QAGY,2DAAmD;QAAnD,+GAAmD;QAC/B,2DAAuB;QAAvB,8FAAuB;QAQgB,4DAAqE;QAArE,qHAAqE;QAAuC,2DAA4B;QAA5B,4JAA4B;QACzI,2DAA0B;QAA1B,0JAA0B;QAiBhF,4DAA0B;QAA1B,0JAA0B;QAQyD,4DAAyB;QAAzB,yJAAyB;QA2G5G,4DAA0D;QAA1D,gMAA0D;QAItE,2DAAsB;QAAtB,oFAAsB;QAMb,4DAAyC;QAAzC,8KAAyC;QAK9C,2DACJ;QADI,0OACJ;QACA,2DACJ;QADI,iJACJ;QAGQ,2DACJ;QADI,oOACJ;QACA,2DACJ;QADI,8OACJ;QAOgC,4DAAsB;QAAtB,8IAAsB;QACtB,2DAAqB;QAArB,6IAAqB;QACrB,2DAAsB;QAAtB,8IAAsB;QACtB,2DAAwB;QAAxB,gJAAwB;QACxB,2DAA6B;QAA7B,qJAA6B;QAC7B,2DAA2B;QAA3B,mJAA2B;QAC3B,2DAAyB;QAAzB,iJAAyB;QAIhC,2DAAyB;QAAzB,gGAAyB;QAoBrC,4DAAyC;QAAzC,8KAAyC;QAK9C,2DACJ;QADI,0OACJ;QACA,2DACJ;QADI,iJACJ;QAGQ,2DACJ;QADI,oOACJ;QACA,2DACJ;QADI,8OACJ;QAOgC,4DAAsB;QAAtB,8IAAsB;QACtB,2DAAqB;QAArB,6IAAqB;QACrB,2DAAsB;QAAtB,8IAAsB;QACtB,2DAAwB;QAAxB,gJAAwB;QACxB,2DAA6B;QAA7B,qJAA6B;QAC7B,2DAA2B;QAA3B,mJAA2B;QAC3B,2DAAyB;QAAzB,iJAAyB;QAIhC,2DAAyB;QAAzB,gGAAyB;;AD0qBnE,MAAM,aAAa;CASzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IGjkDD,sEAA0B;IACtB;IAAA,qEAAmB;IACvB;IAAA,4DAAM;;;IA2EkB,6EAA6D;IAAA,uDAAY;IAAA,4DAAS;;;IAAtC,6EAAgB;IAAC,0DAAY;IAAZ,6EAAY;;;IAQzE,6EAA6D;IAAA,uDAAY;IAAA,4DAAS;;;IAAtC,6EAAgB;IAAC,0DAAY;IAAZ,6EAAY;;;;IA3DzF,+EAAmI;IAAnD,gTAAY,kBAAU,IAAC;IACnG;IAAA,0EAAwB;IACpB;IAAA,0EAAsC;IAClC;IAAA,6EAA0E;IAAA,uDAAwB;;IAAA,4DAAS;IAC3G;IAAA,8EAAgE;IAAlB,6SAAS,eAAO,IAAC;IAAC,wDAA0B;;IAAA,4DAAS;IACvG;IAAA,4DAAM;IACV;IAAA,4DAAM;IACN;IAAA,2EAAwB;IACpB;IAAA,6EAAoD;IAAA,wDAA4B;;IAAA,4DAAQ;IACxF;IAAA,2EAAsB;IAClB;IAAA,iFAA+G;IAAvD,iWAAwB;IAAhF,4DAA+G;IAC/G;IAAA,2EAA6E;IACzE,wDACJ;;IAAA,4DAAM;IACV;IAAA,4DAAM;IACV;IAAA,4DAAM;IACN;IAAA,2EAAwB;IACpB;IAAA,6EAAoD;IAAA,wDAAiC;;IAAA,4DAAQ;IAC7F;IAAA,2EAAsB;IAClB;IAAA,iFAA+G;IAAvD,iWAAwB;IAAhF,4DAA+G;IAC/G;IAAA,2EAA6E;IACzE,oHACJ;IAAA,4DAAM;IACV;IAAA,4DAAM;IACV;IAAA,4DAAM;IACN;IAAA,2EAAwB;IACpB;IAAA,6EAAoD;IAAA,wDAA4B;;IAAA,4DAAQ;IACxF;IAAA,2EAAsB;IAClB;IAAA,iFAAiL;IAAxC,8WAAqC;IAA9K,4DAAiL;IACrL;IAAA,4DAAM;IACV;IAAA,4DAAM;IACN;IAAA,2EAAwB;IACpB;IAAA,6EAAqD;IAAA,wDAAyB;;IAAA,4DAAQ;IACtF;IAAA,2EAAsB;IAClB;IAAA,yEAAO;IACH;IAAA,sEAAI;IACA;IAAA,sEAAI;IACA;IAAA,wEAAoC;IAAA,wDACxC;;IAAA,4DAAK;IACL;IAAA,sEAAI;IACA;IAAA,wEAAoC;IAAA,wDACxC;;IAAA,4DAAK;IACT;IAAA,4DAAK;IACT;IAAA,4DAAQ;IAEZ;IAAA,4DAAM;IACV;IAAA,4DAAM;IACN;IAAA,2EAAwB;IACpB;IAAA,6EAA8D;IAAC,wDAA6B;;IAAA,4DAAQ;IACpG;IAAA,2EAAsB;IAClB;IAAA,kFAAwJ;IAA3E,8WAAoC;IAC7G;IAAA,yIAAkF;IACtF;IAAA,4DAAS;IACb;IAAA,4DAAM;IACV;IAAA,4DAAM;IACN;IAAA,4EAAwB;IACpB;IAAA,8EAA8D;IAAA,yDAAgC;;IAAA,4DAAQ;IACtG;IAAA,4EAAsB;IAClB;IAAA,mFAAwJ;IAA3E,+WAAoC;IAC7G;IAAA,yIAAkF;IACtF;IAAA,4DAAS;IACb;IAAA,4DAAM;IACV;IAAA,4DAAM;IACN;IAAA,4EAAwB;IACpB;IAAA,8EAAsD;IAAA,yDAAyB;;IAAA,4DAAQ;IACvF;IAAA,4EAAsB;IAClB;IAAA,uFAAyG;IAAjC,8TAAU,4BAAoB,IAAE;IAAC,4DAAiB;IAC9H;IAAA,4DAAM;IACV;IAAA,4DAAM;IACN;IAAA,4EAAwB;IACpB;IAAA,4EAAsC;IAClC;IAAA,+EAA0E;IAAA,yDAAwB;;IAAA,4DAAS;IAC3G;IAAA,+EAAgE;IAAlB,8SAAS,eAAO,IAAC;IAAC,yDAA0B;;IAAA,4DAAS;IACvG;IAAA,4DAAM;IACV;IAAA,4DAAM;IACV;IAAA,4DAAO;;;;;IAxEqC,0DAAyC;IAAzC,qFAAyC;IAAC,0DAAwB;IAAxB,mJAAwB;IAClC,0DAA0B;IAA1B,sJAA0B;IAI1C,0DAA4B;IAA5B,wJAA4B;IAEpB,0DAAwB;IAAxB,sFAAwB;IAC3E,0DAA4C;IAA5C,6FAA4C;IAC7C,0DACJ;IADI,4MACJ;IAIgD,0DAAiC;IAAjC,oJAAiC;IAEzB,0DAAwB;IAAxB,sFAAwB;IAC3E,0DAA4C;IAA5C,6FAA4C;IAMD,0DAA4B;IAA5B,+IAA4B;IAE6D,0DAAqC;IAArC,mGAAqC;IAI7H,0DAAyB;IAAzB,4IAAyB;IAK1B,2DACxC;IADwC,iLACxC;IAEwC,0DACxC;IADwC,mLACxC;IAOmD,2DAA6B;IAA7B,0JAA6B;IAEX,0DAAoC;IAApC,kGAAoC;IACrF,0DAAkB;IAAlB,2FAAkB;IAKY,0DAAgC;IAAhC,oJAAgC;IAEb,0DAAoC;IAApC,kGAAoC;IACrF,0DAAkB;IAAlB,2FAAkB;IAKI,0DAAyB;IAAzB,sJAAyB;IAE3D,0DAAyB;IAAzB,yFAAyB;IAKT,0DAAyC;IAAzC,qFAAyC;IAAC,0DAAwB;IAAxB,qJAAwB;IAClC,0DAA0B;IAA1B,uJAA0B;;ADnFvG,MAAM,0BAA0B;IAUnC,YAAoB,mBAAwC,EAC9C,aAA4B,EAC7B,MAAqB,EACpB,MAAsB,EACvB,OAA4B;QAJrB,wBAAmB,GAAnB,mBAAmB,CAAqB;QAC9C,kBAAa,GAAb,aAAa,CAAe;QAC7B,WAAM,GAAN,MAAM,CAAe;QACpB,WAAM,GAAN,MAAM,CAAgB;QACvB,YAAO,GAAP,OAAO,CAAqB;QAbzC,mBAAc,GAAY,IAAI,CAAC;QAE/B,WAAM,GAAG,IAAI,CAAC;QACd,UAAK,GAAQ,EAAE,CAAC;QAEhB,oBAAe,GAAQ,EAAE,CAAC;QAC1B,iBAAY,GAAG,KAAK,CAAC;IAQjB,CAAC;IAEL,QAAQ;QACJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UAmCE;IACN,CAAC;IAED,QAAQ;QACJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;WAoDG;IACP,CAAC;IAED,KAAK;QACD,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,iCAAiC;QACjC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC;QAC5C,UAAU,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC;IAC5C,CAAC;IAED,kBAAkB,CAAC,EAAO;QACtB;;;;;;;;;;;;;;;;;;;;;;iBAsBS;IACb,CAAC;IAED,YAAY,CAAC,QAAa;QACtB,IAAI,aAAa,GAAQ,EAAE,CAAC;QAE5B,IAAI,QAAQ,IAAI,IAAI,EAAE;YAElB,IAAI,QAAQ,CAAC,YAAY,IAAI,SAAS,EAAE;gBACpC,IAAI,CAAC,KAAK,CAAC,cAAc,GAAG,IAAI,CAAC;gBACjC,OAAO;aACV;YAED,IAAI,CAAC,KAAK,CAAC,cAAc,GAAG,aAAa,CAAC;YAC1C,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,YAAY,GAAG,QAAQ,CAAC,YAAY,CAAC;YAC/D,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC;YACrD,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;YACvD,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;SAC1D;aACI;YACD,IAAI,CAAC,KAAK,CAAC,cAAc,GAAG,IAAI,CAAC;SACpC;IAEL,CAAC;;oGAtKQ,0BAA0B;wHAA1B,0BAA0B;;;;;;QCfvC,sHAEM;QAEN;QAAA,yEAAiB;QACb;QAAA,4EAAgD;QAChD;QAAA,yEAA2B;QACvB;QAAA,yEAA6B;QACzB;QAAA,0EAAiB;QACb;QAAA,0EAAsB;QAClB;QAAA,0EAAkC;QAC9B;QAAA,0EAAkC;QAC9B;QAAA,yEAAiC;QAC7B;QAAA,sEAAI;QACA;QAAA,qEAAI;QAAA,wDAAsC;;QAAA,4DAAI;QAClD;QAAA,4DAAK;QACL;QAAA,yEAAwB;QAAC,wDAA+B;;QAAA,4DAAK;QACjE;QAAA,4DAAK;QACT;QAAA,4DAAM;QACV;QAAA,4DAAM;QACV;QAAA,4DAAM;QACN;QAAA,2EAAsB;QACtB;QAAA,4DAAM;QACV;QAAA,4DAAM;QACV;QAAA,4DAAM;QAEN;QAAA,8HA2EO;QACX;QAAA,4DAAM;QACV;QAAA,4DAAM;QAEN;;QAzGM,kFAAkB;QAKP,0DAAoB;QAApB,6EAAoB;QASG,2DAAsC;QAAtC,wJAAsC;QAErB,0DAA+B;QAA/B,2JAA+B;QAU9D,2DAAY;QAAZ,4EAAY;;;;;;;;;;;;;;;;;;;;;;;;;ACrBqD;AAE3B;;;;;;;;;ICPhE,sEAA0B;IACtB;IAAA,qEAAmB;IACvB;IAAA,4DAAM;;;IAWc,qEAAsC;IACtC,uDACA;IAAA,4DAAK;;;;IADL,0DACA;IADA,oLACA;;;IAMA,qEAAiF;IAC7E,uDACJ;IAAA,4DAAK;;;;;IAFiC,qGAA0C;IAC5E,0DACJ;IADI,4KACJ;;;IAJJ,qEAA0C;IACtC;IAAA,wEAAqB;IAAA,uDAAiB;IAAA,4DAAK;IAC3C;IAAA,qIAEK;IACT;IAAA,4DAAK;;;;IAJoB,0DAAiB;IAAjB,iFAAiB;IAChB,0DAAc;IAAd,uFAAc;;ADHjD,MAAM,qCAAqC;IAe9C,YACY,mBAAwC,EACxC,MAAqB,EACrB,YAAiC;QAFjC,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,WAAM,GAAN,MAAM,CAAe;QACrB,iBAAY,GAAZ,YAAY,CAAqB;QAb7C,iBAAY,GAAiB,IAAI,sEAAY,EAAE,CAAC;QAChD,mCAA8B,GAAmC,IAAI,oGAA8B,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;QAE5G,qBAAgB,GAAU,EAAE,CAAC;QAC7B,iBAAY,GAAY,KAAK,CAAC;QAC9B,gBAAW,GAAU,EAAE,CAAC;QAGxB,SAAI,GAAW,EAAE,CAAC;IAK+B,CAAC;IAElD,QAAQ;QACJ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC;IAC/D,CAAC;IAED,WAAW;QACP,IAAI,CAAC,2BAA2B,EAAE,CAAC;QAEnC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,8BAA8B,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;QAEtF,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;IAEhE,CAAC;IAED,2BAA2B;QAEvB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,QAAQ,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,mBAAmB,CAAC,kCAAkC,CAAC,IAAI,CAAC,SAAS,CAAC;aACtE,SAAS,CACN,UAAU,QAAa;YAEnB,QAAQ,CAAC,WAAW,GAAG,QAAQ,CAAC;QAEpC,CAAC,EACD,UAAU,KAAU;YAChB,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YACjC,QAAQ,CAAC,YAAY,GAAG,KAAK,CAAC;QAClC,CAAC,EACD;YACI,QAAQ,CAAC,YAAY,GAAG,KAAK,CAAC;QAClC,CAAC,CAAC,CAAC;IACf,CAAC;IAED,mBAAmB,CAAC,MAAW,EAAE,QAAa;QAC1C,IAAI,gBAAgB,GAAG,EAAE,CAAC;QAC1B,IAAI,MAAM,CAAC,YAAY,IAAI,SAAS,IAAI,MAAM,CAAC,YAAY,IAAI,IAAI,IAAI,MAAM,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE;YACnG,IAAI,WAAW,GAAG,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,GAAQ,EAAE,EAAE,CAAC,GAAG,CAAC,IAAI,IAAI,QAAQ,IAAI,GAAG,CAAC,SAAS,IAAI,IAAI,CAAC,CAAC;YACxG,IAAI,WAAW,IAAI,SAAS;gBACxB,gBAAgB,GAAG,WAAW,CAAC,WAAW,CAAC;SAClD;QAED,OAAO,gBAAgB,CAAC;IAC5B,CAAC;IAED,YAAY,CAAC,MAAW,EAAE,QAAa;QAEnC,IAAI,MAAM,CAAC,YAAY,IAAI,SAAS,EAAE;YAClC,IAAI,WAAW,GAAG,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,GAAQ,EAAE,EAAE,CAAC,GAAG,CAAC,IAAI,IAAI,QAAQ,CAAC,CAAC;YAC/E,IAAI,WAAW,IAAI,SAAS;gBACxB,OAAO,yBAAyB,CAAC,oDAAmD;SAC3F;QAED,OAAO,EAAE,CAAC;IACd,CAAC;;0HAzEQ,qCAAqC;mIAArC,qCAAqC;QClBlD,iIAEM;QAEN;QAAA,yEAAsB;QAClB;QAAA,wEAAwB;QACpB,uDACJ;;;QAAA,4DAAK;QACL;QAAA,yEAAmC;QAC/B;QAAA,4EAAiE;QAC7D;QAAA,yEAAO;QACH;QAAA,sEAAI;QACA;QAAA,oEAA0B;QAC1B;QAAA,iIAEK;QACT;QAAA,4DAAK;QACT;QAAA,4DAAQ;QACR;QAAA,yEAAO;QACH;QAAA,iIAKK;QACT;QAAA,4DAAQ;QACZ;QAAA,4DAAQ;QACZ;QAAA,4DAAM;QACV;QAAA,4DAAM;QACN;;QA7BM,kFAAkB;QAMhB,0DACJ;QADI,mSACJ;QAMsC,2DAAc;QAAd,oFAAc;QAMnB,0DAAmB;QAAnB,yFAAmB;;;;;;;;;;;;;;;;;;;;;;;;ACjBa;AACK;;;;;;;AAOnE,MAAM,6BAA6B;IAUtC,YACW,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;QAVzC,eAAU,GAAY,IAAI,CAAC;QAC3B,aAAQ,GAAY,IAAI,CAAC;QACzB,eAAU,GAAY,KAAK,CAAC;QAC5B,cAAS,GAAY,KAAK,CAAC;QAC3B,mBAAc,GAAoB,IAAI,4EAAe,EAAE,CAAC;QACxD,QAAG,GAAsB,IAAI,iFAAiB,EAAE,CAAC;QACjD,wBAAmB,GAAY,KAAK,CAAC;QACrC,yBAAoB,GAAY,KAAK,CAAC;QACtC,6BAAwB,GAAY,KAAK,CAAC;IAEG,CAAC;IAE9C,QAAQ;QACJ,IAAI,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,SAAS,IAAI,SAAS;YACxD,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,IAAS,EAAC,EAAE,CAAC,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC,CAAC;;YAE/F,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC;IACzE,CAAC;IAED,wBAAwB,CAAC,IAAS;QAC9B,IAAI,IAAI,CAAC,WAAW,IAAI,SAAS,EAAE;YAC/B,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,WAAW,EAAE;gBAC/B,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,mBAAmB,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,IAAI,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC;oBACrG,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;aACvC;SAEJ;IAEL,CAAC;;0GA7BQ,6BAA6B;2HAA7B,6BAA6B;QCT1C;QAAA,yEAAiB;QACT;QAAA,4EAAiD;QACrD;QAAA,yEAA2B;QACvB;QAAA,yEAA6B;QACrB;QAAA,yEAAwC;QACpC;QAAA,0EAA0B;QACtB;QAAA,qEAAG;QAAA,wDAAsC;;QAAA,4DAAI;QAAC,wDAElD;;QAAA,4DAAM;QAEV;QAAA,4DAAM;QACd;QAAA,4DAAM;QAEN;QAAA,0EAAiB;QACb;QAAA,0EAAsB;QAClB;QAAA,yEAAmB;QAChB,wDACH;;QAAA,4DAAK;QACT;QAAA,4DAAM;QACN;QAAA,0EAA6C;QACzC;QAAA,6EAAkI;QAAA,wDAAoC;;QAAA,4DAAS;QACnL;QAAA,4DAAM;QACV;QAAA,4DAAM;QACN;QAAA,2EAAsB;QAClB;QAAA,iFAAuI;QAC3I;QAAA,4DAAM;QACV;QAAA,4DAAM;QACV;QAAA,4DAAM;QAGN;;QA7BqB,0DAAqB;QAArB,8EAAqB;QAKf,2DAAsC;QAAtC,yJAAsC;QAAK,0DAElD;QAFkD,+MAElD;QAQD,2DACH;QADG,mMACH;QAG6E,0DAAoD;QAApD,0HAAoD;QAAC,0DAAoC;QAApC,uJAAoC;QAI1J,0DAA0B;QAA1B,sFAA0B;;;;;;;;;;;;;;;;;;;;;;;;;;ACV/C,MAAM,4BAA4B;IAcrC,YAAoB,MAAsB,EAC7B,OAA4B;QADrB,WAAM,GAAN,MAAM,CAAgB;QAC7B,YAAO,GAAP,OAAO,CAAqB;QAbzC,iCAAiC;QACjC,uBAAuB;QAEvB,gBAAgB;QAChB,kBAAkB;QAElB,uBAAuB;QACvB,uBAAuB;QACvB,iBAAiB;QACjB,cAAS,GAAY,IAAI,CAAC;QAC1B,aAAQ,GAAG,EAAE,CAAC;IAIZ,CAAC;IAMH,QAAQ;QACJ,6CAA6C;QAC7C,2BAA2B;QAE3B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;IAEtD,CAAC;IAED,UAAU,CAAC,UAAkB;QAEzB,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC;QAErD,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,SAAS;YACjC,IAAI,GAAG,IAAI,CAAC;QAEhB,IAAI,GAAG,GAAG,UAAU,GAAG,UAAU,GAAG,GAAG,GAAG,yBAAyB,GAAG,IAAI,GAAG,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC;QAEpG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACrB,CAAC;;wGAxCQ,4BAA4B;0HAA5B,4BAA4B;QCdzC;QAAA,yEAAiB;QACT;QAAA,4EAAiD;QACrD;QAAA,yEAA2B;QACvB;QAAA,yEAA6B;QACzB;QAAA,yEAAkB;QACd;QAAA,0EAA0B;QACtB;QAAA,qEAAG;QAAA,wDAAsC;;QAAA,4DAAI;QAAC,wDAElD;;QAAA,4DAAM;QAEV;QAAA,4DAAM;QACV;QAAA,4DAAM;QAGN;QAAA,0EAAsB;QAClB;QAAA,iEAAM;QACN;QAAA,yEAAqC;QACjC;QAAA,wEAAwE;QAArE,gJAAS,eAAW,8BAA8B,CAAC,IAAC;QACnD,wDACJ;;QAAA,4DAAI;QACR;QAAA,4DAAK;QACT;QAAA,4DAAM;QAGN;QAAA,0EAAsB;QAClB;QAAA,iEAAM;QACN;QAAA,yEAAqC;QACjC;QAAA,wEAAsE;QAAnE,gJAAS,eAAW,4BAA4B,CAAC,IAAC;QACjD,wDACJ;;QAAA,4DAAI;QACR;QAAA,4DAAK;QACT;QAAA,4DAAM;QAGV;QAAA,4DAAM;QACV;QAAA,4DAAM;QACN;;QAnCqB,0DAAqB;QAArB,8EAAqB;QAKnB,2DAAsC;QAAtC,wJAAsC;QAAK,0DAElD;QAFkD,qMAElD;QAUI,2DACJ;QADI,kNACJ;QASI,2DACJ;QADI,iNACJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9BmE;AAWZ;AACK;;;;;;;;;;;;;;;;;;ICexD;IAAA,qEAAI;IACA;IAAA,yEAA2B;IAAA,uDAA8B;;IAAA,4EAAsC;IAC/F;IAAA,4DAAK;IACL;IAAA,yEAAsC;IAAA,wDAA4B;;IAAA,6EACrB;IAC7C;IAAA,4DAAK;IACL;IAAA,0EAAmC;IAAA,wDAAyB;;IAAA,6EAClB;IAC1C;IAAA,4DAAK;IACL;IAAA,0EAA6B;IAAA,wDAAyB;;IAAA,kFAA2B;IAC7E;IAAA,4DAAa;IAEjB;IAAA,4DAAK;IACL;IAAA,0EAAqC;IAAA,wDAAkC;;IAAA,6EAC3B;IAC5C;IAAA,4DAAK;IACL;IAAA,0EAAiC;IAAA,wDAA6B;;IAAA,kFAA+B;IACzF;IAAA,4DAAa;IACjB;IAAA,4DAAK;IACL;IAAA,0EAA2B;IAAA,wDAAkC;;IAAA,6EAAsC;IACnG;IAAA,4DAAK;IACL;IAAA,0EAAoC;IAAA,wDAAuB;;IAAA,6EAChB;IAC3C;IAAA,4DAAK;IACL;IAAA,0EAA2C;IAAA,wDAAwB;;IAAA,6EACjB;IAClD;IAAA,4DAAK;IACL;IAAA,0EAA6B;IAAA,wDAAyB;;IAAA,kFAA2B;IAC7E;IAAA,4DAAa;IACjB;IAAA,4DAAK;IACL;IAAA,sEAAI;IAAA,wDACJ;;IAAA,4DAAK;IACL;IAAA,sEAAI;IAAA,wDACJ;;IAAA,4DAAK;IACT;IAAA,4DAAK;IAET;;IAnCmC,0DAA8B;IAA9B,0JAA8B;IAEnB,0DAA4B;IAA5B,yJAA4B;IAG/B,0DAAyB;IAAzB,sJAAyB;IAG/B,0DAAyB;IAAzB,sJAAyB;IAIjB,0DAAkC;IAAlC,+JAAkC;IAGtC,0DAA6B;IAA7B,0JAA6B;IAGnC,0DAAkC;IAAlC,+JAAkC;IAEzB,0DAAuB;IAAvB,oJAAuB;IAGhB,0DAAwB;IAAxB,qJAAwB;IAGtC,0DAAyB;IAAzB,sJAAyB;IAGlD,0DACJ;IADI,gLACJ;IACI,0DACJ;IADI,+KACJ;;;;IAKJ;IAAA,yEAA6B;IACzB;IAAA,qEAAI;IACA,uDACJ;IAAA,4DAAK;IACL;IAAA,qEAAI;IACA;IAAA,uEAAM;IAAA,uDAAwB;IAAA,4DAAO;IACzC;IAAA,4DAAK;IACL;IAAA,sEAAI;IACA;IAAA,wEAAM;IAAA,wDAAqB;IAAA,4DAAO;IACtC;IAAA,4DAAK;IACL;IAAA,sEAAI;IACA;IAAA,wEAAM;IAAA,wDAAe;IAAA,4DAAO;IAChC;IAAA,4DAAK;IACL;IAAA,sEAAI;IACA;IAAA,wEAAM;IAAA,wDAAuB;IAAA,4DAAO;IACxC;IAAA,4DAAK;IACL;IAAA,sEAAI;IACA;IAAA,wEAAM;IAAA,wDAAmB;IAAA,4DAAO;IACpC;IAAA,4DAAK;IACL;IAAA,sEAAI;IACA;IAAA,wEAAM;IAAA,wDAAa;IAAA,4DAAO;IAC9B;IAAA,4DAAK;IACL;IAAA,sEAAI;IACA;IAAA,wEAAM;IAAA,wDAAsB;IAAA,4DAAO;IACvC;IAAA,4DAAK;IACL;IAAA,sEAAI;IACA;IAAA,wEAAM;IAAA,wDAA6B;IAAA,4DAAO;IAC9C;IAAA,4DAAK;IACL;IAAA,sEAAI;IACA;IAAA,wEAAM;IAAA,wDAAe;IAAA,4DAAO;IAChC;IAAA,4DAAK;IACL;IAAA,sEAAI;IACA;IAAA,yEACwD;IADrC,2WAAS,wCAA8B,IAAC;IAEvD;IAAA,sEAAqC;IACzC;IAAA,4DAAI;IACR;IAAA,4DAAK;IACL;IAAA,0EAA+B;IAC3B;IAAA,6EAEuD;IADnD,4WAAS,6CAAkC,IAAC;IAE5C;IAAA,sEAAyC;IAC7C;IAAA,4DAAI;IACR;IAAA,4DAAK;IACT;IAAA,4DAAK;IACT;;;;IA3CY,0DACJ;IADI,8IACJ;IAEU,0DAAwB;IAAxB,wFAAwB;IAGxB,0DAAqB;IAArB,qFAAqB;IAGrB,0DAAe;IAAf,+EAAe;IAGf,0DAAuB;IAAvB,uFAAuB;IAGvB,0DAAmB;IAAnB,mFAAmB;IAGnB,0DAAa;IAAb,6EAAa;IAGb,0DAAsB;IAAtB,sFAAsB;IAGtB,0DAA6B;IAA7B,6FAA6B;IAG7B,0DAAe;IAAf,+EAAe;IAIjB,0DAAmD;IAAnD,8GAAmD;IAOnD,0DAAkD;IAAlD,6GAAkD;;;IAO9D;IAAA,qEAAI;IACA;IAAA,yEAAgB;IAAA,yEAAc;IAAA,4DAAK;IACvC;IAAA,4DAAK;IACT;;;;IAiBJ,+EAAgG;IAC5F;IAAA,0EAAwB;IAEpB;IAAA,0EAAwB;IACpB;IAAA,4EAA2D;IAAA,uDAC5C;;IAAA,4DAAQ;IACvB;IAAA,2EAAsB;IAClB;IAAA,oFAC6E;IAAzE,oXAAqC;IAAoC,4DAAW;IAC5F;IAAA,4DAAM;IACV;IAAA,4DAAM;IAEV;IAAA,4DAAM;IACN;IAAA,2EAA0B;IACtB;IAAA,2EAAyB;IACrB;IAAA,8EAC0E;IAAtE,gTAAS,8BAAsB,IAAC;IAAsC,wDAC3D;;IAAA,4DAAS;IACxB;IAAA,8EACmC;IAA/B,gTAAS,4BAAoB,IAAC;IAAC,wDAAyB;;IAAA,4DAAS;IACzE;IAAA,4DAAM;IACV;IAAA,4DAAM;IACV;IAAA,4DAAO;;;;IAlBgE,0DAC5C;IAD4C,qJAC5C;IAGP,0DAAqC;IAArC,mGAAqC;IAQR,2DAAoC;IAApC,iFAAoC;IAAC,0DAC3D;IAD2D,yIAC3D;IAEoB,0DAAyB;IAAzB,2IAAyB;;;;ADlI7E,MAAM,6BAA6B;IAuBtC,YAAoB,mBAAwC,EAC/C,aAA4B,EAC5B,MAAqB,EACpB,MAAsB,EACvB,OAA4B,EAC5B,cAA8B,EAC9B,SAA2B;QANpB,wBAAmB,GAAnB,mBAAmB,CAAqB;QAC/C,kBAAa,GAAb,aAAa,CAAe;QAC5B,WAAM,GAAN,MAAM,CAAe;QACpB,WAAM,GAAN,MAAM,CAAgB;QACvB,YAAO,GAAP,OAAO,CAAqB;QAC5B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,cAAS,GAAT,SAAS,CAAkB;QA3BxC,mBAAc,GAAY,IAAI,CAAC;QAG/B,WAAM,GAAG,IAAI,CAAC;QACd,UAAK,GAAQ,EAAE,CAAC;QAChB,gBAAW,GAAG,KAAK,CAAC;QACpB,eAAU,GAAG,KAAK,CAAC;QACnB,cAAS,GAAG,IAAI,CAAC;QACP,sBAAiB,GAAG,IAAI,uDAAY,EAAE,CAAC;QAGjD,aAAQ,GAAG,GAAG,CAAC;QAEf,oBAAe,GAAa,EAAE,CAAC;QAC/B,iBAAY,GAAG,KAAK,CAAC;QAErB,mBAAc,GAAoB,IAAI,4EAAe,EAAE,CAAC;QACxD,QAAG,GAAsB,IAAI,iFAAiB,EAAE,CAAC;QACjD,qBAAgB,GAAY,KAAK,CAAC;QAClC,sBAAiB,GAAY,KAAK,CAAC;QAY/B,mMAAmM;IACvM,CAAC;IAED,QAAQ;QAEJ,IAAI,EAAE,GAAG,IAAI,CAAC;QACd,iEAAiE;QACjE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;QAClD,EAAE,CAAC,YAAY,GAAG,IAAI,CAAC;QACvB,EAAE,CAAC,mBAAmB,EAAE,CAAC;QAEzB,IAAI,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,SAAS,IAAI,SAAS;YACxD,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC,CAAC;;YAEhG,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC;IACzE,CAAC;IACD,mBAAmB;QACf,IAAI,EAAE,GAAG,IAAI,CAAC;QACd,IAAI,CAAC,mBAAmB,CAAC,qBAAqB,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,SAAS,CACjE,UAAU,QAAa;YACnB,EAAE,CAAC,kBAAkB,GAAG,QAAQ,CAAC;QACrC,CAAC,EACD,UAAU,KAAU;YAChB,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;QAC/B,CAAC,EACD;YACI,EAAE,CAAC,YAAY,GAAG,KAAK,CAAC;QAC5B,CAAC,CAAC,CAAC;IAEX,CAAC;IACD,qBAAqB,CAAC,SAAiB;QACnC,IAAI,EAAE,GAAG,IAAI,CAAC;QACd,IAAI,CAAC,mBAAmB,CAAC,qBAAqB,CAAC,SAAS,CAAC,CAAC,SAAS,CAC/D,UAAU,QAAa;YACnB,IAAI,GAAG,GAAG,EAAE,CAAC,SAAS,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;YACpD,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;YAC3B,IAAI,QAAQ,IAAI,SAAS;gBACrB,EAAE,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC;QAC1C,CAAC,EACD,UAAU,KAAU;YAChB,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;QAC/B,CAAC,EACD;YACI,EAAE,CAAC,YAAY,GAAG,KAAK,CAAC;QAC5B,CAAC,CAAC,CAAC;IAGX,CAAC;IAED,kBAAkB;IAElB,CAAC;IAED,oBAAoB,CAAC,GAAQ;QACzB,IAAI,OAAO,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC;QAChE,OAAO,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;QAC5B,IAAI,OAAO,CAAC,MAAM,IAAI,UAAU,EAAE;YAC9B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;SAC1B;aAAM,IAAI,OAAO,CAAC,MAAM,IAAI,WAAW,EAAE;YACtC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;SAC1B;IACL,CAAC;IACD,yBAAyB,CAAC,SAAiB;QACvC,IAAI,CAAC,2BAA2B,GAAG,SAAS,CAAC;IACjD,CAAC;IACD,oBAAoB;QAChB,IAAI,EAAE,GAAG,IAAI,CAAC;QACd,+CAA+C;QAC/C,IAAI,iBAAiB,GAAG,EAAE,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,2BAA2B,CAAC,CAAC;QAChG,IAAI,iBAAiB,IAAI,SAAS,EAAE;YAChC,iBAAiB,CAAC,iBAAiB,GAAG,EAAE,CAAC,KAAK,CAAC,iBAAiB,CAAC;SACpE;QACD,IAAI,CAAC,mBAAmB,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,CAAC,SAAS,CACtE,UAAU,QAAa;YACnB,IAAI,QAAQ,IAAI,SAAS;gBACrB,EAAE,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC;QAC1C,CAAC,EACD,UAAU,KAAU;YAChB,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;QAC/B,CAAC,EACD;YACI,EAAE,CAAC,YAAY,GAAG,KAAK,CAAC;QAC5B,CAAC,CAAC,CAAC;IACX,CAAC;IACD,gCAAgC;IAChC,sBAAsB;IACtB,yCAAyC;IACzC,8DAA8D;IAC9D,iBAAiB;IACjB,OAAO;IAEP,6BAA6B;IAC7B,qDAAqD;IACrD,qBAAqB;IACrB,mCAAmC;IACnC,4DAA4D;IAC5D,yBAAyB;IAEzB,+CAA+C;IAC/C,wDAAwD;IACxD,YAAY;IACZ,iCAAiC;IACjC,qDAAqD;IACrD,iEAAiE;IACjE,YAAY;IACZ,uBAAuB;IACvB,sCAAsC;IACtC,eAAe;IACf,GAAG;IAEH,WAAW;QACP,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC;IAClC,CAAC;IAED,wBAAwB,CAAC,IAAS;QAC9B,IAAI,IAAI,CAAC,WAAW,IAAI,SAAS,EAAE;YAC/B,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,WAAW,EAAE;gBAC/B,4EAA4E;gBAC5E,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,mBAAmB,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,EAAC,qBAAqB;oBAC5H,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;qBAC5B,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,mBAAmB,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,IAAI,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,EAAC,qBAAqB;oBAChI,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;aAErC;SACJ;IAEL,CAAC;IAED,KAAK;IAEL,CAAC;;0GAvKQ,6BAA6B;2HAA7B,6BAA6B;;;;;;;;;QCrB1C,yEAAiB;QACb;QAAA,4EAAiD;QACjD;QAAA,yEAA2B;QACvB;QAAA,yEAA6B;QACzB;QAAA,yEAAkB;QACd;QAAA,0EAA0B;QACtB;QAAA,qEAAG;QAAA,wDAAsC;;QAAA,4DAAI;QAAC,wDAElD;;QAAA,4DAAM;QAEV;QAAA,4DAAM;QAEV;QAAA,4DAAM;QAEN;QAAA,0EAAoE;QAChE;QAAA,0EAAoC;QAChC;QAAA,mEAA0C;QAC1C;QAAA,4EAC2C;QADb,ySAAS,sCAAqC,UAAU,CAAC,IAAC;;QAAxF,4DAC2C;QAC/C;QAAA,4DAAM;QACN;QACA;QAAA,kFAGmK;QAE/J;QAAA,8IAqCc;QACd;QAAA,8IA8Cc;QACd;QAAA,4IAIc;QAClB;QAAA,4DAAU;QACV;QAEJ;QAAA,4DAAM;QACV;QAAA,4DAAM;QACV;QAAA,4DAAM;QACN;QAAA,+EAAkF;QAC9E;QAAA,2EAA0B;QACtB;QACA;QAAA,2EAA2B;QACvB;QACA;QAAA,2EAA0B;QACtB;QAAA,8EAA2E;QAAlB,sJAAS,WAAO,IAAC;QAAC,kEAAO;QAAA,4DAAS;QAC3F;QAAA,0EAAwB;QAAC,wDAAuC;;QAAA,4DAAK;QACzE;QAAA,4DAAM;QAEN;QAAA,gIAsBO;QACX;QAAA,4DAAM;QACV;QAAA,4DAAM;QACV;QAAA,4DAAM;;QA5JW,0DAAqB;QAArB,8EAAqB;QAKf,2DAAsC;QAAtC,yJAAsC;QAAK,0DAElD;QAFkD,mNAElD;QAUI,2DAAoC;QAApC,oJAAoC;QAG/B,0DAA4B;QAA5B,yFAA4B;QA4GZ,2DAAuC;QAAvC,oKAAuC;QAG7D,0DAAY;QAAZ,4EAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpIoD;AAUnB;;;;;;;;;;;;;;;;;;;;;ICVhE,sEAA0B;IACtB;IAAA,qEAAmB;IACvB;IAAA,4DAAM;;;IA2Bc,6EAA8E;IAAA,uDAAa;IAAA,4DAAS;;;IAAxC,8EAAiB;IAAC,0DAAa;IAAb,8EAAa;;;;IAqBvG,yEAA4C;IACxC;IAAA,2EAAoD;IAAA,uDAA2B;;IAAA,4DAAQ;IACvF;IAAA,yEAAsB;IAClB;IAAA,4EACqD;IAAjD,sXAA8C;IADlD,4DACqD;IACzD;IAAA,4DAAM;IACV;IAAA,4DAAM;;;IALkD,0DAA2B;IAA3B,4IAA2B;IAGvE,0DAA8C;IAA9C,4GAA8C;;;;IAG1D,yEAA2C;IACvC;IAAA,2EAAoD;IAAA,uDAA+B;;IAAA,4DAAQ;IAC3F;IAAA,yEAAsB;IAClB;IAAA,4EACqD;IAAjD,sXAA8C;IADlD,4DACqD;IACzD;IAAA,4DAAM;IACV;IAAA,4DAAM;;;IALkD,0DAA+B;IAA/B,gJAA+B;IAG3E,0DAA8C;IAA9C,4GAA8C;;;;IAG1D,yEAA4C;IACxC;IAAA,2EAAoD;IAAA,uDAAgC;;IAAA,4DAAQ;IAC5F;IAAA,yEAAsB;IAClB;IAAA,4EACqD;IAAjD,sXAA8C;IADlD,4DACqD;IACzD;IAAA,4DAAM;IACV;IAAA,4DAAM;;;IALkD,0DAAgC;IAAhC,iJAAgC;IAG5E,0DAA8C;IAA9C,4GAA8C;;;;IAG1D,yEAA2C;IACvC;IAAA,2EAAoD;IAAA,uDAA+B;;IAAA,4DAAQ;IAC3F;IAAA,yEAAsB;IAClB;IAAA,4EACqD;IAAjD,sXAA8C;IADlD,4DACqD;IACzD;IAAA,4DAAM;IACV;IAAA,4DAAM;;;IALkD,0DAA+B;IAA/B,gJAA+B;IAG3E,0DAA8C;IAA9C,4GAA8C;;;;;IAI1D,yEAA6C;IACzC;IAAA,2EAAoD;IAAA,uDAAuB;;IAAA,4DAAQ;IACnF;IAAA,yEAAsB;IAClB;IAAA,iFACwG;IAD5F,0WAA6B;IAEzC;IAAA,4DAAa;IACjB;IAAA,4DAAM;IACN;IAAA,6EAAoD;IAAA,wDAAqB;;IAAA,4DAAQ;IACjF;IAAA,0EAAsB;IAClB;IAAA,kFACwG;IAD5F,yWAA2B;IAEvC;IAAA,4DAAa;IACjB;IAAA,4DAAM;IACV;IAAA,4DAAM;;;IAZkD,0DAAuB;IAAvB,yIAAuB;IAE3D,0DAA6B;IAA7B,2FAA6B;IAIO,0DAAqB;IAArB,wIAAqB;IAEzD,0DAA2B;IAA3B,yFAA2B;;;;IAK/C,yEAA6C;IACzC;IAAA,4EAAwD;IAAA,uDAA+B;;IAAA,4DAAQ;IAC/F;IAAA,yEAAsB;IAClB;IAAA,6EAAmF;IAA7C,qXAA4C;IAC9E;IAAA,8EAAqB;IAAA,wDAAuB;;IAAA,4DAAS;IACrD;IAAA,8EAAuB;IAAA,wDAAyB;;IAAA,4DAAS;IAC7D;IAAA,4DAAS;IAEb;IAAA,4DAAM;IACV;IAAA,4DAAM;;;IARsD,0DAA+B;IAA/B,gJAA+B;IAE7C,0DAA4C;IAA5C,0GAA4C;IACzD,0DAAuB;IAAvB,yIAAuB;IACrB,0DAAyB;IAAzB,2IAAyB;;;IA6BpD;IAAA,qEAAI;IACA;IAAA,yEAA+B;IAAA,uDAA6B;;IAAA,iFAA6B;IACrF;IAAA,4DAAa;IACjB;IAAA,4DAAK;IACL;IAAA,0EAA2C;IAAA,wDAA8B;;IAAA,6EACvB;IAClD;IAAA,4DAAK;IACL;IAAA,0EAAkC;IAAA,wDAA8B;;IAAA,kFAAgC;IAC5F;IAAA,4DAAa;IACjB;IAAA,4DAAK;IACL;IAAA,0EAAuC;IAAA,wDAA8B;;IAAA,6EACvB;IAC9C;IAAA,4DAAK;IACL;IAAA,0EAAiC;IAAA,wDAA8B;;IAAA,kFAA+B;IAC1F;IAAA,4DAAa;IACjB;IAAA,4DAAK;IACL;IAAA,0EAAkC;IAAA,wDAA8B;;IAAA,kFAAgC;IAC5F;IAAA,4DAAa;IACjB;IAAA,4DAAK;IACL;IAAA,0EAA6B;IAAA,wDAA8B;;IAAA,6EAAwC;IACnG;IAAA,4DAAK;IACL;IAAA,0EAAiC;IAAA,wDAA8B;;IAAA,kFAA+B;IAC1F;IAAA,4DAAa;IACjB;IAAA,4DAAK;IACL;IAAA,0EAAoC;IAAA,wDAA8B;;IAAA,kFAAkC;IAChG;IAAA,4DAAa;IACjB;IAAA,4DAAK;IACL;IAAA,0EAAmC;IAAA,wDAA8B;;IAAA,kFAAiC;IAC9F;IAAA,4DAAa;IACjB;IAAA,4DAAK;IACL;IAAA,0EAAiD;IAAA,wDAA8B;;IAAA,6EACvB;IACxD;IAAA,4DAAK;IACL;IAAA,sEAAI;IAAA,4EAAuC;IAAA,wDAAuB;;IAAA,4DAAO;IACzE;IAAA,4DAAK;IACT;IAAA,4DAAK;IAET;;IApCuC,0DAA6B;IAA7B,yJAA6B;IAGjB,0DAA8B;IAA9B,2JAA8B;IAGvC,0DAA8B;IAA9B,2JAA8B;IAGzB,0DAA8B;IAA9B,2JAA8B;IAGpC,0DAA8B;IAA9B,2JAA8B;IAG7B,0DAA8B;IAA9B,2JAA8B;IAGnC,0DAA8B;IAA9B,2JAA8B;IAE1B,0DAA8B;IAA9B,2JAA8B;IAG3B,0DAA8B;IAA9B,2JAA8B;IAG/B,0DAA8B;IAA9B,2JAA8B;IAGhB,0DAA8B;IAA9B,2JAA8B;IAGpC,0DAAuB;IAAvB,oJAAuB;;;;IAMtE;IAAA,yEAA6B;IACzB;IAAA,qEAAI;IACA,uDACJ;IAAA,4DAAK;IACL;IAAA,qEAAI;IACA;IAAA,uEAAM;IAAA,uDAA6B;IAAA,4DAAO;IAC9C;IAAA,4DAAK;IACL;IAAA,sEAAI;IACA;IAAA,wEAAM;IAAA,wDAAoB;IAAA,4DAAO;IACrC;IAAA,4DAAK;IACL;IAAA,sEAAI;IACA;IAAA,wEAAM;IAAA,wDAAyB;IAAA,4DAAO;IAC1C;IAAA,4DAAK;IACL;IAAA,sEAAI;IACA;IAAA,wEAAM;IAAA,wDAAmB;IAAA,4DAAO;IACpC;IAAA,4DAAK;IACL;IAAA,sEAAI;IACA;IAAA,wEAAM;IAAA,wDAAoB;IAAA,4DAAO;IACrC;IAAA,4DAAK;IACL;IAAA,sEAAI;IACA;IAAA,wEAAM;IAAA,wDAAe;IAAA,4DAAO;IAChC;IAAA,4DAAK;IACL;IAAA,sEAAI;IACA;IAAA,wEAAM;IAAA,wDAAmB;IAAA,4DAAO;IACpC;IAAA,4DAAK;IACL;IAAA,sEAAI;IACA;IAAA,wEAAM;IAAA,wDAAsB;IAAA,4DAAO;IACvC;IAAA,4DAAK;IACL;IAAA,sEAAI;IACA;IAAA,wEAAM;IAAA,wDAAqB;IAAA,4DAAO;IACtC;IAAA,4DAAK;IACL;IAAA,sEAAI;IACA;IAAA,wEAAM;IAAA,wDAAmC;IAAA,4DAAO;IACpD;IAAA,4DAAK;IACL;IAAA,sEAAI;IACA;IAAA,6EAA8C;IAAtB,6WAAS,uBAAW,IAAC;IACzC;IAAA,sEAA0C;IAC9C;IAAA,4DAAI;IACR;IAAA,4DAAK;IACT;IAAA,4DAAK;IACT;;;IAtCY,0DACJ;IADI,2IACJ;IAEU,0DAA6B;IAA7B,8FAA6B;IAG7B,0DAAoB;IAApB,qFAAoB;IAGpB,0DAAyB;IAAzB,0FAAyB;IAGzB,0DAAmB;IAAnB,oFAAmB;IAGnB,0DAAoB;IAApB,qFAAoB;IAGpB,0DAAe;IAAf,gFAAe;IAGf,0DAAmB;IAAnB,oFAAmB;IAGnB,0DAAsB;IAAtB,uFAAsB;IAGtB,0DAAqB;IAArB,sFAAqB;IAGrB,0DAAmC;IAAnC,oGAAmC;;;IAUjD;IAAA,qEAAI;IACA;IAAA,yEAAgB;IAAA,yEAAc;IAAA,4DAAK;IACvC;IAAA,4DAAK;IACT;;;IAmDA,qEAA4C;IACxC;IAAA,qEAAI;IAAA,uDAAiB;IAAA,4DAAK;IAC1B;IAAA,qEAAI;IAAA,uDAA6B;IAAA,4DAAK;IACtC;IAAA,qEAAI;IAAA,uDAAoB;IAAA,4DAAK;IAC7B;IAAA,sEAAI;IAAA,wDAAyB;IAAA,4DAAK;IAClC;IAAA,sEAAI;IAAA,wDAAiE;IAAA,4DAAK;IAC1E;IAAA,sEAAI;IAAA,wDAAoB;IAAA,4DAAK;IAC7B;IAAA,sEAAI;IAAA,wDAAe;IAAA,4DAAK;IAExB;IAAA,sEAAI;IAAA,wDAAmB;IAAA,4DAAK;IAC5B;IAAA,sEAAI;IAAA,wDAAsB;IAAA,4DAAK;IAC/B;IAAA,sEAAI;IAAA,wDAAqB;IAAA,4DAAK;IAC9B;IAAA,sEAAI;IAAA,wDAAmC;IAAA,4DAAK;IAChD;IAAA,4DAAK;;;;IAZG,0DAAiB;IAAjB,kFAAiB;IACjB,0DAA6B;IAA7B,8FAA6B;IAC7B,0DAAoB;IAApB,qFAAoB;IACpB,0DAAyB;IAAzB,0FAAyB;IACzB,0DAAiE;IAAjE,4IAAiE;IACjE,0DAAoB;IAApB,qFAAoB;IACpB,0DAAe;IAAf,gFAAe;IAEf,0DAAmB;IAAnB,oFAAmB;IACnB,0DAAsB;IAAtB,uFAAsB;IACtB,0DAAqB;IAArB,sFAAqB;IACrB,0DAAmC;IAAnC,oGAAmC;;;;AD/PhD,MAAM,2BAA2B;IAmCpC,YAAoB,mBAAwC,EAC9C,aAA4B,EAC7B,MAAqB,EACpB,MAAsB,EACvB,OAA4B,EAC5B,SAA2B;QALpB,wBAAmB,GAAnB,mBAAmB,CAAqB;QAC9C,kBAAa,GAAb,aAAa,CAAe;QAC7B,WAAM,GAAN,MAAM,CAAe;QACpB,WAAM,GAAN,MAAM,CAAgB;QACvB,YAAO,GAAP,OAAO,CAAqB;QAC5B,cAAS,GAAT,SAAS,CAAkB;QAtCxC,iBAAY,GAAiB,IAAI,sEAAY,EAAE,CAAC;QAChD,oBAAe,GAAS,IAAI,IAAI,EAAE,CAAC;QACnC,kBAAa,GAAS,IAAI,IAAI,EAAE,CAAC;QACjC,mBAAc,GAAY,IAAI,CAAC;QAE/B,mBAAc,GAAQ,EAAE,CAAC;QACzB,uBAAkB,GAAQ,EAAE,CAAC;QAC7B,wBAAmB,GAAQ,EAAE,CAAC;QAC9B,cAAS,GAAG,EAAE,CAAC;QACf,iBAAiB;QACjB,oBAAe,GAAa,EAAE,CAAC;QAC/B,eAAU,GAAY,KAAK,CAAC;QAC5B,aAAQ,GAAY,KAAK,CAAC;QAC1B,eAAU,GAAY,IAAI,CAAC;QAC3B,cAAS,GAAY,IAAI,CAAC;QAG1B,oBAAe,GAAQ,EAAE,CAAC;QAC1B,uBAAkB,GAAQ,EAAE,CAAC;QAC7B,WAAM,GAAG,IAAI,CAAC;QACd,UAAK,GAAQ,EAAE,CAAC;QAEN,sBAAiB,GAAG,IAAI,uDAAY,EAAE,CAAC;QACvC,0BAAqB,GAAG,IAAI,uDAAY,EAAO,CAAC;QAE1D,oBAAe,GAAG,EAAE,CAAC;QACrB,iBAAY,GAAG,KAAK,CAAC;QAGrB,eAAU,GAAW,8BAA8B,CAAC;QACpD,gBAAW,GAAU,EAAE,CAAC;QACxB,SAAI,GAAW,IAAI,CAAC;QAqBpB,YAAO,GAAY,KAAK,CAAC;QACzB,gBAAW,GAAY,KAAK,CAAC;QAC7B,eAAU,GAAY,KAAK,CAAC;QAC5B,gBAAW,GAAY,KAAK,CAAC;QAC7B,eAAU,GAAY,KAAK,CAAC;QAC5B,iBAAY,GAAY,KAAK,CAAC;QAC9B,wBAAmB,GAAY,KAAK,CAAC;QACrC,iBAAY,GAAY,KAAK,CAAC;IApB1B,CAAC;IAEL,QAAQ;QACJ,IAAI,CAAC,eAAe,GAAG,CAAC,eAAe,EAAE,sBAAsB,EAAE,sBAAsB,EAAE,sBAAsB,EAAE,aAAa,EAAE,wBAAwB,EAAE,YAAY,EAAE,uBAAuB,CAAC,CAAC;QACjM,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC;QAEtD,IAAI,CAAC,qBAAqB,EAAE,CAAC;IACjC,CAAC;IAED,QAAQ;IAER,CAAC;IAWD,UAAU,CAAC,cAAsB;QAC7B,IAAI,cAAc,IAAI,MAAM,EAAE;YAC1B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;SAC5B;aACI,IAAI,cAAc,IAAI,MAAM,EAAE;YAC/B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;SAE5B;aACI,IAAI,cAAc,IAAI,OAAO,EAAE;YAChC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;SAE5B;aAEI,IAAI,cAAc,IAAI,MAAM,EAAE;YAC/B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;SAE5B;aACI,IAAI,cAAc,IAAI,cAAc,EAAE;YACvC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;SAG7B;aACI;YACD,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,0DAA0D;SAC7D;IACL,CAAC;IAED,qBAAqB;QACjB,IAAI,aAAa,GAAG,IAAI,CAAC;QACzB,IAAI,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;QACjD,aAAa,CAAC,YAAY,GAAG,IAAI,CAAC;QAClC,IAAI,CAAC,mBAAmB,CAAC,qBAAqB,CAAC,QAAQ,CAAC;aACnD,SAAS,CACN,UAAU,QAAa;YACnB,aAAa,CAAC,WAAW,GAAG,QAAQ,CAAC;QACzC,CAAC,EACD,UAAU,KAAU;YAChB,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAClC,aAAa,CAAC,YAAY,GAAG,KAAK,CAAC;QACvC,CAAC,EACD;YACI,aAAa,CAAC,YAAY,GAAG,KAAK,CAAC;QACvC,CAAC,CAAC,CAAC;IACf,CAAC;IAED,cAAc;QACV,IAAI,aAAa,GAAG,IAAI,CAAC;QACzB,aAAa,CAAC,mBAAmB,CAAC,gBAAgB,CAAC,aAAa,CAAC,cAAc,CAAC;aAC3E,SAAS,CACN,UAAU,QAAa;YAEnB,aAAa,CAAC,eAAe,GAAG,QAAQ,CAAC;YACzC,gCAAgC;YAChC,2CAA2C;QAE/C,CAAC,EACD,UAAU,KAAU;YAChB,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YACtC,aAAa,CAAC,YAAY,GAAG,KAAK,CAAC;QACvC,CAAC,EACD;YACI,aAAa,CAAC,YAAY,GAAG,KAAK,CAAC;QACvC,CAAC,CAAC,CAAC;IAKf,CAAC;IACD,KAAK,CAAC,gBAAqB;QACvB,IAAI,CAAC,aAAa,GAAG,gBAAgB,CAAC,EAAE,CAAC;QACzC,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAClD,4BAA4B;IAChC,CAAC;IAGD,kBAAkB;QACd,IAAI,aAAa,GAAG,IAAI,CAAC;QAEzB,kBAAkB;QAClB,IAAI,IAAI,CAAC,YAAY,EAAE;YACnB,IAAI,CAAC,mBAAmB,CAAC,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;YAC9F,IAAI,CAAC,mBAAmB,CAAC,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YAE1F,IAAI,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,aAAa,IAAI,IAAI,CAAC,mBAAmB,CAAC,eAAe,CAAC,EAAE;gBACvF,IAAI,GAAG,GAAG,aAAa,CAAC,SAAS,CAAC,OAAO,CAAC,6BAA6B,CAAC,CAAC;gBACzE,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;gBACpC,OAAO;aACV;SACJ;QAED,aAAa,CAAC,YAAY,GAAG,IAAI,CAAC;QAElC,aAAa,CAAC,mBAAmB,CAAC,qBAAqB,CAAC,aAAa,CAAC,mBAAmB,CAAC;aACrF,SAAS,CACN,UAAU,QAAa;YAEnB,aAAa,CAAC,kBAAkB,GAAG,QAAQ,CAAC;QAEhD,CAAC,EACD,UAAU,KAAU;YAChB,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YACtC,aAAa,CAAC,YAAY,GAAG,KAAK,CAAC;QACvC,CAAC,EACD;YACI,aAAa,CAAC,YAAY,GAAG,KAAK,CAAC;QACvC,CAAC,CAAC,CAAC;IAKf,CAAC;IAED,UAAU;QACN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACxB,CAAC;IAED,kBAAkB;QACd,IAAI,aAAa,GAAG,IAAI,CAAC;QAEzB,IAAI,CAAC,mBAAmB,CAAC,kBAAkB,CAAC,IAAI,CAAC,aAAa,CAAC;aAC1D,SAAS,CACN,UAAU,QAAa;YAEnB,aAAa,CAAC,kBAAkB,GAAG,QAAQ,CAAC;QAGhD,CAAC,EACD,UAAU,KAAU;YAChB,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;QAC1C,CAAC,EACD;YACI,aAAa,CAAC,YAAY,GAAG,KAAK,CAAC;QACvC,CAAC,CAAC,CAAC;IACf,CAAC;IAID,KAAK;QACD,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,iCAAiC;QACjC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC;QAC5C,UAAU,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC;IAC5C,CAAC;IAGD,YAAY,CAAC,QAAa;QACtB,IAAI,aAAa,GAAQ,EAAE,CAAC;QAE5B,IAAI,QAAQ,IAAI,IAAI,EAAE;YAElB,IAAI,QAAQ,CAAC,YAAY,IAAI,SAAS,EAAE;gBACpC,IAAI,CAAC,KAAK,CAAC,cAAc,GAAG,IAAI,CAAC;gBACjC,OAAO;aACV;YAED,IAAI,CAAC,KAAK,CAAC,cAAc,GAAG,aAAa,CAAC;YAC1C,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,YAAY,GAAG,QAAQ,CAAC,YAAY,CAAC;YAC/D,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC;YACrD,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;YACvD,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;SAC1D;aACI;YACD,IAAI,CAAC,KAAK,CAAC,cAAc,GAAG,IAAI,CAAC;SACpC;IAEL,CAAC;IACD,sBAAsB,CAAC,kBAAuB;QAC1C,IAAI,CAAC,mBAAmB,CAAC,gBAAgB,GAAG,kBAAkB,CAAC;QAC/D,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC9B,CAAC;IAED,WAAW;QACP,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC;IAClC,CAAC;;sGA7QQ,2BAA2B;yHAA3B,2BAA2B;;;;;;;;;QCnBxC,uHAEM;QAEN;QAAA,yEAAsB;QAClB;QAAA,yEAAsC;QAClC;QAAA,gEAAM;QACN;QAAA,yEAAwB;QACpB;QAAA,4EAAsD;QAAA,wDAAsB;;QAAA,4DAAQ;QACpF;QAAA,0EAAsB;QAClB;QAAA,4EACsC;QADE,8NAAkD;QAA1F,4DACsC;QAE1C;QAAA,4DAAM;QACN;QAAA,6EAA8E;QAAxD,oJAAS,gBAAY,IAAC;QAAkC,wDAC/D;;QAAA,4DAAS;QAExB;QAMA;QAAA,4EAAoD;QAAA,wDAA6B;;QAAA,4DAAQ;QACzF;QAAA,0EAAsB;QAClB;QACA;QAAA,kFACqB;QADU,uNAA0C;QAErE;QAAA,8EAA2B;QAAA,wDAAyB;;QAAA,4DAAS;QAC7D;QAAA,gIAAoG;;QACxG;QAAA,4DAAS;QACb;QAAA,4DAAM;QACV;QAAA,4DAAM;QACN;QAAA,0EAAwB;QACpB;QAAA,4EAAoD;QAAA,wDAAuB;;QAAA,4DAAQ;QACnF;QAAA,0EAAsB;QAClB;QAAA,kFAEqF;QADjF,wOAA2D,4OACjD,yBAAgC,IADiB;QAE3D;QAAA,0EAAQ;QAAA,wDAA4B;;QAAA,4DAAS;QAC7C;QAAA,8EAAsB;QAAA,wDAAwB;;QAAA,4DAAS;QACvD;QAAA,8EAAqB;QAAA,wDAAuB;;QAAA,4DAAS;QACrD;QAAA,8EAAqB;QAAA,wDAAuB;;QAAA,4DAAS;QACrD;QAAA,8EAAsB;QAAA,wDAAwB;;QAAA,4DAAS;QACvD;QAAA,8EAAqB;QAAA,wDAAuB;;QAAA,4DAAS;QACrD;QAAA,8EAA6B;QAAA,wDAA+B;;QAAA,4DAAS;QACzE;QAAA,4DAAS;QACb;QAAA,4DAAM;QACV;QAAA,4DAAM;QAEN;QAAA,2HAMM;QACN;QAAA,2HAMM;QACN;QAAA,2HAMM;QACN;QAAA,2HAMM;QAEN;QAAA,4HAaM;QACN;QAAA,4HASM;QAEN;QAAA,0EAAwB;QACpB;QAAA,4EAAsC;QAClC;QAAA,+EAA6E;QAA/B,qJAAS,wBAAoB,IAAC;QAAC,yDAC9D;;QAAA,4DAAS;QAC5B;QAAA,4DAAM;QACV;QAAA,4DAAM;QACV;QAAA,4DAAM;QACN;QAAA,4EAAiB;QACb;QAAA,uEAAI;QAAA,yDAAgC;;QAAA,4DAAK;QACzC;QAAA,kEAAM;QACN;QAAA,8EAAgD;QAChD;QAAA,4EAA2C;QACvC;QAAA,qEAAuC;QACvC;QAAA,8EAC2C;QADb,0SAAS,uCAAqC,UAAU,CAAC,IAAC;;QAAxF,4DAC2C;QAC/C;QAAA,4DAAM;QACN;QACA;QAAA,oFAG6M;QAEzM;QAAA,8IAsCc;QACd;QAAA,8IAyCc;QACd;QAAA,4IAIc;QAClB;QAAA,4DAAU;QACV;QAEJ;QAAA,4DAAM;QACV;QAAA,4DAAM;QACN;QAAA,4EAAmE;QAC/D;QAAA,4EAAyC;QACrC;QACA;QAAA,4EAA2B;QACvB;QAAA,4EAA0B;QACtB;QAAA,+EAAyD;QAAA,mEAAO;QAAA,4DAAS;QACzE;QAAA,2EAAwB;QAAA,yDAAqC;;QAAA,4DAAK;QACtE;QAAA,4DAAM;QACN;QAAA,4EAAwB;QACpB;QAAA,oGACsE;QAC1E;QAAA,4DAAM;QACN;QAAA,4EAA0B;QACtB;QAAA,4EAAiB;QACb;QAKA;QAAA,+EAAkE;QAAA,yDAAwB;;QAAA,4DAAS;QACvG;QAAA,4DAAM;QACV;QAAA,4DAAM;QACV;QAAA,4DAAM;QAEV;QAAA,4DAAM;QACV;QAAA,4DAAM;QACN;QAAA,4EAAsD;QAClD;QAAA,8EAAkD;QAC9C;QAAA,8EAAgC;QAC5B;QAAA,uEAAI;QACA;QAAA,uEAAI;QAAA,yDAAkC;;QAAA,4DAAK;QAC3C;QAAA,uEAAI;QAAA,yDAAwB;;QAAA,4DAAK;QACjC;QAAA,uEAAI;QAAA,yDAA8B;;QAAA,4DAAK;QACvC;QAAA,uEAAI;QAAA,yDAA6B;;QAAA,4DAAK;QACtC;QAAA,uEAAI;QAAA,yDAA6B;;QAAA,4DAAK;QACtC;QAAA,uEAAI;QAAA,yDAA8B;;QAAA,4DAAK;QACvC;QAAA,uEAAI;QAAA,yDAAyB;;QAAA,4DAAK;QAClC;QAAA,uEAAI;QAAA,yDAA6B;;QAAA,4DAAK;QACtC;QAAA,uEAAI;QAAA,yDAAgC;;QAAA,4DAAK;QACzC;QAAA,uEAAI;QAAA,yDAAmC;;QAAA,4DAAK;QAC5C;QAAA,uEAAI;QAAA,yDAAuC;;QAAA,4DAAK;QAEpD;QAAA,4DAAK;QACT;QAAA,4DAAQ;QACR;QAAA,0EAAO;QACH;QAAA,4HAaK;QACT;QAAA,4DAAQ;QACZ;QAAA,4DAAQ;QACZ;QAAA,4DAAM;;QAtRA,kFAAkB;QAQ0C,2DAAsB;QAAtB,yIAAsB;QAEhC,0DAAkD;QAAlD,6GAAkD;QAIhB,0DAC/D;QAD+D,iJAC/D;QAQqC,0DAA6B;QAA7B,gJAA6B;QAG9C,0DAA0C;QAA1C,qGAA0C;QAE1C,0DAAyB;QAAzB,4IAAyB;QAC3B,0DAAiC;QAAjC,uJAAiC;QAKd,0DAAuB;QAAvB,0IAAuB;QAGnE,0DAA2D;QAA3D,sHAA2D;QAEnD,0DAA4B;QAA5B,wJAA4B;QACd,0DAAwB;QAAxB,2IAAwB;QACzB,0DAAuB;QAAvB,0IAAuB;QACvB,0DAAuB;QAAvB,0IAAuB;QACtB,0DAAwB;QAAxB,2IAAwB;QACzB,0DAAuB;QAAvB,0IAAuB;QACf,0DAA+B;QAA/B,kJAA+B;QAK/C,0DAAiB;QAAjB,iFAAiB;QAOjB,0DAAgB;QAAhB,gFAAgB;QAOhB,0DAAiB;QAAjB,iFAAiB;QAOjB,0DAAgB;QAAhB,gFAAgB;QAQhB,0DAAkB;QAAlB,kFAAkB;QAclB,0DAAkB;QAAlB,kFAAkB;QAa0C,0DAC9D;QAD8D,6IAC9D;QAKnB,0DAAgC;QAAhC,oJAAgC;QAExB,0DAAsB;QAAtB,mFAAsB;QAI1B,0DAAoC;QAApC,qJAAoC;QAG/B,0DAA4B;QAA5B,yFAA4B;QAsGT,2DAAqC;QAArC,yJAAqC;QAG3B,0DAAyC;QAAzC,sGAAyC;QAUL,0DAAwB;QAAxB,4IAAwB;QAW1F,2DAAkC;QAAlC,sJAAkC;QAClC,0DAAwB;QAAxB,4IAAwB;QACxB,0DAA8B;QAA9B,kJAA8B;QAC9B,0DAA6B;QAA7B,iJAA6B;QAC7B,0DAA6B;QAA7B,iJAA6B;QAC7B,0DAA8B;QAA9B,kJAA8B;QAC9B,0DAAyB;QAAzB,6IAAyB;QACzB,0DAA6B;QAA7B,kJAA6B;QAC7B,0DAAgC;QAAhC,qJAAgC;QAChC,0DAAmC;QAAnC,wJAAmC;QACnC,0DAAuC;QAAvC,4JAAuC;QAK1B,0DAAqB;QAArB,2FAAqB;;;;;;;;;;;;;;;;;;;;;;;;AC5P/C,MAAM,yBAAyB;IAKlC,YAAoB,YAAiC;QAAjC,iBAAY,GAAZ,YAAY,CAAqB;QAJ5C,mBAAc,GAAW,CAAC,CAAC;QAC3B,mBAAc,GAAG,GAAG,CAAC;QAC9B,UAAK,GAAY,KAAK,CAAC;IAEkC,CAAC;IAE1D,WAAW,CAAC,OAAsB;QAE9B,+DAA+D;QAE/D,4DAA4D;QAC5D,yBAAyB;QACzB,MAAM;QACN,wBAAwB;IAC5B,CAAC;;kGAfQ,yBAAyB;uHAAzB,yBAAyB;QCTtC;QAAA,yEAAqC;QACjC;QAAA,yEAA4B;QACxB;QAAA,oEAAG;QACC;QACA;QAAA,oEAAqE;QACzE;QAAA,4DAAI;QACJ;QAGA;QAAA,2EAAqC;QAAA,mEAAgC;QAAA,4DAAO;QAC5E;QAAA,2EAAiE;QAAA,mEAA2B;QAAA,4DAAO;QACvG;QAAA,4DAAM;QACN;QAAA,0EAA6B;QACzB;QAAA,yEAAoC;QAChC;QAAA,sEAAK;QACD;QAAA,wEAAgI;QAAC,wDAA4B;;QAAA,4DAAI;QACrK;QAAA,4DAAK;QACL;QAAA,sEAAK;QACD;QAAA,wEAA8H;QAAA,wDAAiC;;QAAA,4DAAI;QACvK;QAAA,4DAAK;QACL;QAAA,sEAAK;QACD;QAAA,wEAAgI;QAAA,wDAAiC;;QAAA,4DAAI;QACzK;QAAA,4DAAK;QACL;QAAA,sEAAK;QACD;QAAA,yEAAkH;QAAA,wDAA+B;;QAAA,4DAAI;QACzJ;QAAA,4DAAK;QACL;QAAA,sEAAK;QACD;QAAA,wEAAiI;QAAA,wDAA2B;;QAAA,4DAAI;QACpK;QAAA,4DAAK;QACL;QAAA,sEAAI;QACA;QAAA,wEAAiI;QAAA,wDAAgC;;QAAA,4DAAI;QACzK;QAAA,4DAAK;QACL;QAAA,sEAAI;QACA;QAAA,wEAAgI;QAAA,wDAA0B;;QAAA,4DAAI;QAClK;QAAA,4DAAK;QAET;QAAA,4DAAK;QACT;QAAA,4DAAM;QACV;QAAA,4DAAM;QAEN;;QAzBmB,2DAAsE;QAAtE,oHAAsE;QAAC,oIAAqD;QAAE,0DAA4B;QAA5B,yJAA4B;QAG1J,0DAAsE;QAAtE,oHAAsE;QAAC,kIAAmD;QAAC,0DAAiC;QAAjC,oJAAiC;QAG5J,0DAAsE;QAAtE,oHAAsE;QAAC,oIAAqD;QAAC,0DAAiC;QAAjC,oJAAiC;QAG9J,0DAAsE;QAAtE,oHAAsE;QAAyC,0DAA+B;QAA/B,kJAA+B;QAG9I,0DAAsE;QAAtE,oHAAsE;QAAC,qIAAsD;QAAC,0DAA2B;QAA3B,8IAA2B;QAGzJ,0DAAsE;QAAtE,oHAAsE;QAAC,qIAAsD;QAAC,0DAAgC;QAAhC,mJAAgC;QAG9J,0DAAsE;QAAtE,oHAAsE;QAAC,oIAAqD;QAAC,0DAA0B;QAA1B,6IAA0B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IElC1K,sEAA0B;IACtB;IAAA,qEAAmB;IACvB;IAAA,4DAAM;;;;IAgDM,qEAAmE;IAC/D;IAAA,gEAAS;IACT;IAAA,gEAAS;IACT;IAAA,gEAAS;IACT;IAAA,gEAAS;IACT;IAAA,iEAAS;IACT;IAAA,iEAAS;IACT;IAAA,iEAAS;IACT;IAAA,sEAAI;IACA;IAAA,yEAAmD;IAAhD,0VAAS,+BAAqB,IAAC;IAAiB,0FAAK;IAAA,4DAAI;IAChE;IAAA,4DAAK;IACL;IAAA,sEAAI;IACA;IAAA,yEAA6C;IAAA,8EAAG;IAAA,4DAAI;IACxD;IAAA,4DAAK;IACT;IAAA,4DAAK;;;IAFM,2DAAyC;IAAzC,uHAAyC;;AD9CzD,MAAM,sBAAsB;IAM/B,YAAoB,mBAAwC,EAC/C,MAAqB,EACpB,OAA4B,EAC5B,MAAc;QAHR,wBAAmB,GAAnB,mBAAmB,CAAqB;QAC/C,WAAM,GAAN,MAAM,CAAe;QACpB,YAAO,GAAP,OAAO,CAAqB;QAC5B,WAAM,GAAN,MAAM,CAAQ;QAL5B,iBAAY,GAAG,KAAK,CAAC;IAMjB,CAAC;IAEL,QAAQ;QACJ;;;;;;;;;;;;;;;UAeE;IACN,CAAC;IAED,gBAAgB,CAAC,EAAU;QAEvB,4BAA4B;QAC5B,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,gBAAgB,EAAE,EAAE,CAAC,CAAC;QAEzC,yBAAyB;QACzB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,oBAAoB,EAAE,EAAE,CAAC,CAAC,CAAC;IACrD,CAAC;IAED,aAAa,CAAC,EAAO;IAErB,CAAC;;4FA1CQ,sBAAsB;oHAAtB,sBAAsB;QChBnC,kHAEM;QAEN;QAAA,yEAA6B;QACzB;QAAA,yEAAiB;QACb;QAAA,yEAAsB;QAClB;QAAA,yEAAkC;QAC9B;QAAA,0EAAkC;QAC9B;QAAA,yEAAiC;QAC7B;QAAA,sEAAI;QACA;QAAA,qEAAI;QAAA,gFAAoB;QAAA,4DAAI;QAChC;QAAA,4DAAK;QACL;QAAA,yEAAwB;QAAC,oEAAO;QAAA,4DAAK;QACzC;QAAA,4DAAK;QACT;QAAA,4DAAM;QACV;QAAA,4DAAM;QACV;QAAA,4DAAM;QACN;QAAA,0EAAsB;QACtB;QAAA,4DAAM;QACV;QAAA,4DAAM;QACV;QAAA,4DAAM;QAEN;QAAA,0EAAsB;QAElB;QAAA,0EAAiB;QACb;QAAA,2EAAgC;QAC5B;QAAA,6EAA0F;QAA7B,iMAA0B;QAAvF,4DAA0F;QAC9F;QAAA,4DAAM;QACN;QAAA,2EAA0C;QACtC;QAAA,8EAA4E;QAAA,oFAAI;QAAA,4DAAS;QAC7F;QAAA,4DAAM;QACV;QAAA,4DAAM;QACN;QAAA,sEAA4B;QAE5B;QAAA,6EAAkD;QAC9C;QAAA,6EAAgC;QAC5B;QAAA,sEAAI;QACA;QAAA,sEAAI;QAAA,0FAAK;QAAA,4DAAK;QACd;QAAA,sEAAI;QAAA,mHAAU;QAAA,4DAAK;QACnB;QAAA,sEAAI;QAAA,sIAAc;QAAA,4DAAK;QACvB;QAAA,sEAAI;QAAA,qIAAa;QAAA,4DAAK;QACtB;QAAA,sEAAI;QAAA,0FAAK;QAAA,4DAAK;QACd;QAAA,sEAAI;QAAA,gGAAM;QAAA,4DAAK;QACf;QAAA,sEAAI;QAAA,2IAAc;QAAA,4DAAK;QACvB;QAAA,sEAAI;QAAA,0FAAK;QAAA,4DAAK;QACd;QAAA,sEAAI;QAAA,8EAAG;QAAA,4DAAK;QAChB;QAAA,4DAAK;QACT;QAAA,4DAAQ;QACR;QAAA,yEAAO;QACH;QAAA,oHAcK;;QACT;QAAA,4DAAQ;QACZ;QAAA,4DAAQ;QACZ;QAAA,4DAAM;;QAnEA,kFAAkB;QA2BiD,2DAA0B;QAA1B,qFAA0B;QAuBnE,2DAA6C;QAA7C,2KAA6C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChD9B;AACF;AACuB;AACD;AACyB;AACG;AACM;AACA;AACe;AACf;AACG;AACN;AACsC;AAChC;AAC0B;AAC3E;AACM;;AA+CtD,MAAM,mBAAmB;;sFAAnB,mBAAmB;iHAAnB,mBAAmB;sHAhBjB,EAAE,YA3BJ;YACL,wDAAW;YACX,0DAAY;YACZ,6EAAyB;YACzB,gEAAY;YACZ,UAAU;YACV,kBAAkB;YAElB,sEAAc;SAGjB;oIAgCQ,mBAAmB,mBA9BxB,4EAAsB;QACtB,qGAAyB;QACzB,wGAA0B;QAC1B,8GAA4B;QAC5B,8GAA4B;QAC5B,6HAAiC;QACjC,8GAA4B;QAC5B,iHAA6B;QAC7B,2GAA2B;QAC3B,kJAAuC;QACvC,kHAA6B;QAC7B,4IAAqC,aAvBrC,wDAAW;QACX,0DAAY;QACZ,6EAAyB;QACzB,gEAAY;QACZ,UAAU;QACV,kBAAkB;QAElB,sEAAc,aAqBd,4EAAsB;QACtB,qGAAyB;QACzB,wGAA0B;QAC1B,8GAA4B;QAC5B,8GAA4B;QAC5B,6HAAiC;QACjC,8GAA4B;QAC5B,iHAA6B;QAC7B,2GAA2B;QAC3B,kJAAuC;QACvC,kHAA6B;QAC7B,4IAAqC;;;;;;;;;;;;;;;;;;;;;;;;AC7DU;AAC8C;AACJ;AACM;AACa;AACf;AACG;AACA;;;AAExG,MAAM,kBAAkB,GAAW;IAE/B,eAAe;IACf,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,8GAA4B,EAAE;IAChE,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,wGAA0B,EAAE;IAC5D,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,8GAA4B,EAAE;IAChE,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,6HAAiC,EAAE;IACtE,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,8GAA4B,EAAE;IAChE,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,iHAA6B,EAAE;IAClE,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,iHAA6B,EAAE;CAErE,CAAC;AAUK,MAAM,yBAAyB;;kGAAzB,yBAAyB;sHAAzB,yBAAyB;0HAPzB;YACL,kEAAqB,CAAC,kBAAkB,CAAC;SAC5C,EAEG,yDAAY;mIAGP,yBAAyB,oFAH9B,yDAAY","sources":["./src/app/receptionists/receptionist-account/receptionist-account.component.ts","./src/app/receptionists/receptionist-account/receptionist-account.component.html","./src/app/receptionists/receptionist-address/receptionist-address.component.ts","./src/app/receptionists/receptionist-address/receptionist-address.component.html","./src/app/receptionists/receptionist-appointment-details/receptionist-appointment-details.component.ts","./src/app/receptionists/receptionist-appointment-details/receptionist-appointment-details.component.html","./src/app/receptionists/receptionist-appointments/receptionist-appointments.component.ts","./src/app/receptionists/receptionist-appointments/receptionist-appointments.component.html","./src/app/receptionists/receptionist-basic/receptionist-basic.component.ts","./src/app/receptionists/receptionist-basic/receptionist-basic.component.html","./src/app/receptionists/receptionist-division-calendar/receptionist-division-calendar.component.ts","./src/app/receptionists/receptionist-division-calendar/receptionist-division-calendar.component.html","./src/app/receptionists/receptionist-patients/receptionist-patients.component.ts","./src/app/receptionists/receptionist-patients/receptionist-patients.component.html","./src/app/receptionists/receptionist-reports/receptionist-reports.component.ts","./src/app/receptionists/receptionist-reports/receptionist-reports.component.html","./src/app/receptionists/receptionist-requests/receptionist-requests.component.ts","./src/app/receptionists/receptionist-requests/receptionist-requests.component.html","./src/app/receptionists/receptionist-search/receptionist-search.component.ts","./src/app/receptionists/receptionist-search/receptionist-search.component.html","./src/app/receptionists/receptionist-tabs/receptionist-tabs.component.ts","./src/app/receptionists/receptionist-tabs/receptionist-tabs.component.html","./src/app/receptionists/receptionists.component.ts","./src/app/receptionists/receptionists.component.html","./src/app/receptionists/receptionists.module.ts","./src/app/receptionists/receptionists.routing.ts"],"sourcesContent":["import {Component, OnInit } from '@angular/core';\r\n\r\nimport { AccountService } from '../../security/shared/account.service';\r\nimport { UserTypeEnum } from '../../security/shared/user-type.enum';\r\n\r\n@Component({\r\n   \r\n    selector: 'receptionist-account',\r\n    templateUrl: 'receptionist-account.component.html'\r\n})\r\n\r\nexport class ReceptionistAccountComponent implements OnInit {\r\n\r\n    public constructor(public accountService: AccountService) { }\r\n\r\n    ngOnInit(): void {\r\n\r\n        //this.accountService.changeUserRole(new UserTypeEnum().Receptionist);\r\n    }\r\n}","<div class=\"row\">\r\n        <shared-tabs [activeTabIndex]=\"6\"></shared-tabs>\r\n    <div class=\"row nopadding\">\r\n        <div class=\"page-breadcrumb\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-7\">\r\n                    <div class=\"page-breadcrumb-wrap\">\r\n                        <div class=\"page-breadcrumb-info\">\r\n                            <ul class=\"list-page-breadcrumb\">\r\n                                <li>\r\n                                    <a >{{ 'ReceptionistProfile' | translate}}</a>\r\n                                </li>\r\n                                <li class=\"active-page\"> {{ 'Account' | translate}}</li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-5\">\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <form class=\"form-horizontal\" name=\"organizationForm\" #organizationForm>\r\n            <div class=\"form-group\">\r\n                <div class=\"col-md-4 col-md-offset-2\">\r\n                    <button class=\"btn btn-primary\" [disabled]=\"!organizationForm.valid\">{{ 'Save' | translate}}</button>\r\n                    <button class=\"btn btn-primary\">{{ 'Cancel' | translate}}</button>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label class=\"control-label col-md-2\" for=\"txtUserName\">{{ 'UserName' | translate}}</label>\r\n                <div class=\"col-md-4\">\r\n                    <input id=\"txtUserName\" name=\"txtUserName\" class=\"form-control\" />\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label class=\"control-label col-md-2\" for=\"txtmail\">{{ 'Email' | translate}}</label>\r\n                <div class=\"col-md-4\">\r\n                    <input id=\"txtmail\" name=\"txtmail\" class=\"form-control\" />\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label class=\"control-label col-md-2\" for=\"txtPassword\">{{ 'Password' | translate}}</label>\r\n                <div class=\"col-md-4\">\r\n                    <input type=\"password\" id=\"txtPassword\" name=\"txtPassword\" class=\"form-control\" />\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label class=\"control-label col-md-2\" for=\"txtconfirmPassword\">{{ 'ConfirmPassword' | translate}}</label>\r\n                <div class=\"col-md-4\">\r\n                    <input type=\"password\" id=\"txtconfirmPassword\" name=\"txtconfirmPassword\" class=\"form-control\" />\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <div class=\"col-md-4 col-md-offset-2\">\r\n                    <button class=\"btn btn-primary\">{{ 'Save' | translate}}</button>\r\n                    <button class=\"btn btn-primary\">{{ 'Cancel' | translate}}</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n\r\n    </div>\r\n</div>\r\n\r\n","import {Component, OnInit} from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { ReceptionistService } from '../shared/receptionist.service'\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n   \r\n    selector: 'receptionist-address',\r\n    templateUrl: 'receptionist-address.component.html'\r\n})\r\n\r\nexport class ReceptionistAddressComponent implements OnInit {\r\n    selectAddressTab: boolean = true;\r\n\r\n    active = true;\r\n    model: any = {};\r\n    showProgress = false;\r\n    //organizationId = '';\r\n\r\n    constructor(private organizationService: ReceptionistService,\r\n        public toastr: ToastrService,\r\n        private _route: ActivatedRoute\r\n    ) { }\r\n    \r\n\r\n    ngOnInit(): void {\r\n        let vm = this;\r\n        let contact: any = {};\r\n        let address: any = {};\r\n\r\n        vm.model.contact = contact;\r\n        vm.model.address = address;\r\n\r\n        let id = this._route.snapshot.params['id'];\r\n        this.model.id = `${id}`;\r\n\r\n        // get organization contact and address in case of update\r\n        //this.getOrganizationAddress(vm);\r\n    }\r\n    /*\r\n    getOrganizationAddress(vm)\r\n    {\r\n        if (!isNaN(vm.model.id) && vm.model.id != 'new') {\r\n            vm.showProgress = true;\r\n            this.organizationService.getOrganizationAddress(vm.model.id)\r\n                .subscribe(\r\n                function (response:any) {\r\n                    vm.model = response;\r\n                    vm.model.contact = response.contact;\r\n                    vm.model.address = response.address;\r\n\r\n                    if (response.contact == null) {\r\n                        vm.model.contact = {};\r\n                        vm.model.contactId = 0;\r\n                    }\r\n\r\n                    if (response.address == null) {\r\n                        vm.model.address = {};\r\n                        vm.model.addressId = 0;\r\n                    }\r\n                },\r\n                function (error:any) { \r\n                    vm.toastr.error('حدث خطأ اثناء تحميل البيانات - ' + error, '');\r\n                    vm.showProgress = false;\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n        }\r\n    }\r\n    */\r\n    clear(): void {\r\n        //this.getOrganizationAddress(this);\r\n        //this.model = {};\r\n        //this.active = false;\r\n        //this.model.id = 'new';\r\n        //this.model.contact = {};\r\n        //this.model.address = {};\r\n        //setTimeout(() => this.active = true, 0);\r\n    }\r\n\r\n    onSubmit(): void {\r\n        /*\r\n        let vm = this;\r\n        vm.showProgress = true;\r\n\r\n        // update \r\n        this.organizationService.SaveOrganizationAddress(vm.model)\r\n            .subscribe(\r\n            function (response:any) {\r\n                vm.toastr.success('Saved successfully', '');\r\n                vm.model = response;\r\n            },\r\n            function (error:any) { \r\n                vm.toastr.error('Failed to save - ' + error, '');\r\n                vm.showProgress = false;\r\n            },\r\n            function () {\r\n                vm.showProgress = false;\r\n            });\r\n\r\n        */\r\n    }\r\n\r\n}","<div *ngIf=\"showProgress\">\r\n    <loading></loading>\r\n</div>\r\n\r\n\r\n<div class=\"row\">\r\n        <shared-tabs [activeTabIndex]=\"8\"></shared-tabs>\r\n    <div class=\"row nopadding\">\r\n        <div class=\"row \" style=\"padding:13px;\">\r\n            <div class=\"NBbreadcrumb\">\r\n                <a>{{ 'ReceptionistProfile' | translate}}</a> &nbsp;/\r\n                {{ 'AddressContact' | translate}}\r\n            </div>\r\n\r\n        </div>\r\n\r\n          <form novalidate *ngIf=\"active\" class=\"form-horizontal\" name=\"addressForm\" (ngSubmit)=\"onSubmit()\" #addressForm=\"ngForm\">\r\n            <div class=\"form-group\">\r\n                <address [reachInfo]=\"model.address\" >\r\n                    <div class=\"form-group\">\r\n                            <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!addressForm.form.valid\">{{ 'Save' | translate}}</button>\r\n                            <button type=\"button\" class=\"btn btn-primary\" (click)=\"clear()\">{{ 'Cancel' | translate}}</button>\r\n                    </div>\r\n                </address>\r\n            </div>\r\n            \r\n        </form>\r\n\r\n</div>\r\n</div>\r\n\r\n","import {Component, OnInit, ViewChild, Output, EventEmitter,Input} from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { ReceptionistService } from '../shared/receptionist.service'\r\nimport { SharedService } from '../../shared/shared/shared.service';\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport {LocalStorageService} from 'ng2-webstorage';\r\n\r\n@Component({\r\n   \r\n    selector: 'receptionist-appointment-details',\r\n    templateUrl: 'receptionist-appointment-details.component.html',\r\n})\r\n\r\nexport class ReceptionistAppointmentDetailsComponent implements OnInit {\r\n\r\n    selectBasicTab: boolean = true;\r\n    filterString!:string;\r\n    @Input() AppontmentId: any;\r\n\r\n   @Input() appointmentDetails: any = {};\r\n\r\n    classifications = [];\r\n    showProgress = false;\r\n    @ViewChild(\"fileInput\") fileInput!:any;\r\n\r\n    constructor(private receptionistService: ReceptionistService\r\n        , private sharedService: SharedService\r\n        , public toastr: ToastrService\r\n        , private _route: ActivatedRoute\r\n        , public storage: LocalStorageService\r\n    )\r\n    { }\r\n\r\n    ngOnInit(): void {\r\n\r\n\r\n        if (this.appointmentDetails.activeInsurance == null || this.appointmentDetails.activeInsurance == undefined)\r\n        {\r\n\r\n            let activeInsurance: any = {};\r\n            this.appointmentDetails.activeInsurance = activeInsurance;\r\n        }\r\n\r\n    }\r\n\r\n    onSubmit(){\r\n        \r\n    }\r\n\r\n}","\r\n<form novalidate  class=\"form-horizontal\" name=\"organizationForm\" (ngSubmit)=\"onSubmit()\" #organizationForm=\"ngForm\">\r\n    <div class=\"form-group\">\r\n        <label for=\"serialName\" class=\"control-label col-md-3\">{{ 'SerialNumber' | translate}}</label>\r\n        <div class=\"col-md-3\">\r\n            <input id=\"serialName\" name=\"serialName\" class=\"form-control\" [(ngModel)]='appointmentDetails.id' disabled />\r\n        </div>\r\n        <label for=\"marName\" class=\"control-label col-md-3\">{{ 'MRN' | translate}}</label>\r\n        <div class=\"col-md-3\">\r\n            <input id=\"marName\" name=\"marName\" [(ngModel)]='appointmentDetails.patientClinicMRN' class=\"form-control\" disabled />\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"fName\" class=\"control-label col-md-3\">{{ 'FirstName' | translate}}</label>\r\n        <div class=\"col-md-3\">\r\n            <input id=\"fName\" [(ngModel)]='appointmentDetails.firstName' name=\"fName\" class=\"form-control\" disabled />\r\n        </div>\r\n        <label for=\"lName\" class=\"control-label col-md-3\">{{ 'LastName' | translate}}</label>\r\n        <div class=\"col-md-3\">\r\n            <input id=\"lName\" [(ngModel)]='appointmentDetails.lastName' name=\"lName\" class=\"form-control\" disabled />\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"birthdate\" class=\"control-label col-md-3\">{{ 'BirthDate' | translate}}</label>\r\n        <div class=\"col-md-3\">\r\n            <input type=\"date\" [(ngModel)]='appointmentDetails.birthDate' id=\"birthdate\" name=\"birthdate\" class=\"form-control\" disabled />\r\n        </div>\r\n        <label for=\"mobileNo\" class=\"control-label col-md-3\">{{ 'Mobile' | translate}}</label>\r\n        <div class=\"col-md-3\">\r\n            <input id=\"mobileNo\" [(ngModel)]='appointmentDetails.mobile' name=\"mobileNo\" class=\"form-control\" disabled />\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"policyNameSt\" class=\"control-label col-md-3\">{{ 'PolicyName' | translate}}</label>\r\n        <div class=\"col-md-3\">\r\n            <input id=\"policyName\" name=\"policyName\" [(ngModel)]='appointmentDetails.activeInsurance.name' class=\"form-control\" disabled />\r\n        </div>\r\n        <label for=\"expireDate\" class=\"control-label col-md-3\">{{ 'ExpirationDate' | translate}}</label>\r\n        <div class=\"col-md-3\">\r\n            <input type=\"text\" [(ngModel)]='appointmentDetails.activeInsurance.endDateString' id=\"expireDate\" name=\"expireDate\" class=\"form-control\" disabled />\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"policyRemark\" class=\"control-label col-md-3\">{{ 'PolicyRemark' | translate}}</label>\r\n        <div class=\"col-md-9\">\r\n            <textarea id=\"policyRemark\" [(ngModel)]='appointmentDetails.description' name=\"policyRemark\" class=\"form-control\" disabled></textarea>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"appDate\" class=\"control-label col-md-3\">{{ 'AppointmentDate' | translate}}</label>\r\n        <div class=\"col-md-3\">\r\n            <input type=\"text\" [(ngModel)]='appointmentDetails.dateTime' id=\"appDate\" name=\"appDate\" class=\"form-control\" />\r\n        </div>\r\n        <label for=\"appTime\" class=\"control-label col-md-3\">{{ 'Time' | translate}}</label>\r\n        <div class=\"col-md-3\">\r\n            <input type=\"text\" [(ngModel)]='appointmentDetails.time' id=\"appTime\" name=\"appTime\" class=\"form-control\" />\r\n\r\n        </div>\r\n\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"type\" class=\"control-label col-md-3\">{{ 'Type' | translate}}</label>\r\n        <div class=\"col-md-3\">\r\n            <input type=\"text\" [(ngModel)]='appointmentDetails.visitTypeName' id=\"type\" name=\"type\" class=\"form-control\" />\r\n        </div>\r\n        <label for=\"className\" class=\"control-label col-md-3\">{{ 'Class' | translate}}</label>\r\n        <div class=\"col-md-3\">\r\n        <input type=\"text\" [(ngModel)]='appointmentDetails.appointmentClassName' id=\"className\" name=\"className\" class=\"form-control\" />\r\n\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"flag\" class=\"control-label col-md-3\">{{ 'Flag' | translate}}</label>\r\n        <div class=\"col-md-3\">\r\n            <input type=\"checkbox\" [(ngModel)]='appointmentDetails.flag' id=\"flag\" name=\"flag\" class=\"form-control\" />\r\n        </div>\r\n\r\n\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"txtdes\" class=\"control-label col-md-3\">{{ 'Remarks' | translate}}</label>\r\n        <div class=\"col-md-9\">\r\n            <textarea id=\"txtdes\" name=\"txtdes\"  [(ngModel)]='appointmentDetails.description' class=\"form-control\"></textarea>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"docName\" class=\"control-label col-md-3\">{{ 'DoctorName' | translate}}</label>\r\n        <div class=\"col-md-3\">\r\n            <input type=\"text\" class=\"form-control\" name=\"docName\" [(ngModel)]='appointmentDetails.doctorName' disabled />\r\n        </div>\r\n        <label for=\"department\" class=\"control-label col-md-3\">{{ 'DepartmentName' | translate}}</label>\r\n        <div class=\"col-md-3\">\r\n            <input type=\"text\" class=\"form-control\" [(ngModel)]='appointmentDetails.departmentName' disabled name=\"department\" id=\"department\" />\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"modidfiedPerson\" class=\"control-label col-md-3\">{{ 'ModifiedBy' | translate}}</label>\r\n        <div class=\"col-md-3\">\r\n            <input type=\"text\" class=\"form-control\"  name=\"modidfiedPerson\" disabled [(ngModel)]='appointmentDetails.modifierID' />\r\n        </div>\r\n\r\n        <label for=\"dateMod\" class=\"control-label col-md-3\">{{ 'ModificationDate' | translate}}</label>\r\n        <div class=\"col-md-3\">\r\n            <input type=\"text\" [(ngModel)]='appointmentDetails.lastModificationDateString' name=\"dateMod\" class=\"form-control\" disabled />\r\n        </div>\r\n    </div>\r\n</form>","import { Component, OnInit, ViewChild, ChangeDetectorRef, ElementRef } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TreeNode } from 'primeng/api';\r\n\r\nimport { ReceptionistService } from '../shared/receptionist.service'\r\nimport { ReceptionistAppointmentManager } from '../shared/receptionist-appointment.manager'\r\nimport { SharedService } from '../../shared/shared/shared.service';\r\nimport { ClinicService } from '../../clinics/shared/clinic.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\n\r\nimport { UtilityClass } from '../../shared/shared/utility.class'\r\nimport { calendarSlotDuration } from '../../app.config';\r\nimport { AccountService } from '../../security/shared/account.service';\r\nimport { UserPermissions } from '../../classes/user-permissions.class';\r\nimport { PermissionKeyEnum } from '../../shared/shared/permission-key.enum';\r\n\r\nimport { TimeSlot } from '../../shared/shared/time-slot.model';\r\n\r\n@Component({\r\n\r\n    selector: 'receptionist-appointments',\r\n    templateUrl: 'receptionist-appointments.component.html',\r\n})\r\n\r\nexport class ReceptionistAppointmentsComponent implements OnInit {\r\n\r\n    appoitmentDateTimeBackup: string = '';\r\n    SelectedDayAppoitments: any[] = [];\r\n    toPrintDiv: string = 'todayAppoinmentsDiv';\r\n    isDayView: boolean = false;\r\n    dayViewSelectedDate = new Date();\r\n    selectedDateAsString!: string;\r\n    defaultclassId: string = '';\r\n    lang: string = '';\r\n    isRTL: boolean = false;\r\n    waitInInquiry: string = '';\r\n    gotoDateString: string = ''; // used to open the appointment that edited from search\r\n    selectedAppointmentIDFromSearch!: number;\r\n    initialView: boolean = false;\r\n    @ViewChild('bookOrCloseModalButton') bookOrCloseModalButton!: ElementRef;\r\n    @ViewChild('btnCloseBookOrCloseModal') btnCloseBookOrCloseModal!: ElementRef;\r\n    @ViewChild('appointmentModalButton') appointmentModalButton!: ElementRef;\r\n    @ViewChild('btnClostAppointmentModal') btnClostAppointmentModal!: ElementRef;\r\n    @ViewChild('btnShowSessionExtensionSlotModal') btnShowSessionExtensionSlotModal!: ElementRef;\r\n    @ViewChild('btnCloseSessionExtensionModal') btnCloseSessionExtensionModal!: ElementRef;\r\n    @ViewChild('btnCloseRestoreTimeSlotsModal') btnCloseRestoreTimeSlotsModal!: ElementRef;\r\n    @ViewChild('btnShowRestoreTimeSlotsModal') btnShowRestoreTimeSlotsModal!: ElementRef;\r\n    @ViewChild('pSchedule') pSchedule: any;\r\n    @ViewChild('btnCloseReceptionistSearchPopup') btnCloseReceptionistSearchPopup!: ElementRef;\r\n    @ViewChild('btnCloseAppointmentPopup') btnCloseAppointmentPopup!: ElementRef;\r\n    @ViewChild('btnDisplayCurrentDayAppointment') btnDisplayCurrentDayAppointment!: ElementRef;\r\n\r\n    utilityClass: UtilityClass = new UtilityClass();\r\n    receptionistAppointmentManager!: ReceptionistAppointmentManager;\r\n    showProgress: boolean = false;\r\n    showLoading: boolean = false;\r\n    active: boolean = true;\r\n\r\n    events: any[] = [];\r\n    selectedDoctor: any;\r\n    currentDoctor: any = {};\r\n    header: any = { left: 'today,agendaWeek', center: 'title', right: 'prev,next' };\r\n\r\n    displayPatientAdvancedSearch: boolean = false;\r\n    showSelectPatient: boolean = true;\r\n    showEditPatient: boolean = false;\r\n    organizationStructureTree: any[] = [];\r\n    clinicId!: any;\r\n    doctorId!: any;\r\n    divisonId!: any;\r\n    divisonName!: any;\r\n    doctorName = '';\r\n    isDoctorSelected: boolean = false;\r\n    isDivisionSelected: boolean = false;\r\n    isDepartmentSelected: boolean = false;\r\n    appointmentModel: any = { id: 0 };\r\n    appointmentSchedulesList: any[] = [];\r\n    sessionExtensionsList: any[] = [];\r\n    appointmentClassesList: any[] = [];\r\n    visitTypesList: any[] = [];\r\n    timeSlotsList: any[] = [];\r\n    appointementsList: any[] = [];\r\n    serviceTimeSlotsList: any[] = [];\r\n    currentWeekDays: any[] = [];\r\n    currentHijriWeekDays: string[] = [];\r\n    slotDuration!: number;\r\n    calendarSlotDuration!: string;\r\n    patientQucikAccount: any = {};\r\n\r\n    sessionExtension: any = {};\r\n    entireDayTimeSlotsListForStartTime: any[] = [];\r\n    entireDayTimeSlotsListForEndTime: any[] = [];\r\n    sessionExtensionPopupTitle: string = '';\r\n\r\n    patientClinicMrn = '';\r\n    patientName = '';\r\n    patientId = '';\r\n\r\n    selectedDate!: any;\r\n    selectedTimeSlot!: any;\r\n    selectedDateForOpenCloseSlot!: any;\r\n    selectedStartTimeForOpenCloseSlot!: any;\r\n    selectedEndTimeForOpenCloseSlot!: any;\r\n    numberOfTimeSlots: number = 1;\r\n    defaultDate = '';\r\n    dateToRestoreTimeSlots!: Date;\r\n    display: boolean = false;\r\n    title = \"Add Arrival Time\";\r\n    title1 = \"Reconfirm Appointment\";\r\n    title2 = \"Cancel Appointment\";\r\n    isArrived: boolean | undefined;\r\n    isAddArrivalTime: boolean = false;\r\n    isReconfirmedAppointment: boolean = false;\r\n    reconfirmRemarks = \"\";\r\n    isUpdatedAppointment = false;\r\n    isCancelledAppointment = false;\r\n    cancelationRemarks = \"\";\r\n    cancelled: boolean | undefined;\r\n    cancelledDate: any;\r\n    timeSlotForCancelledApp: any;\r\n    displayRepeatAppointmentPopup: boolean = false;\r\n    selectedRepeatDate!: any;\r\n    selectedRepeatTimeSlot!: any;\r\n    repeatedAppointmentModel: any = { id: 0 };\r\n    repeatingTimeSlotsList: any[] = [];\r\n    rescheduledTimeSlotsList: any[] = [];\r\n    selectedRescheduledDate!: any;\r\n    selectedRescheduledTimeSlot!: any;\r\n    isRescheduledAppointment: boolean = false;\r\n    rescheduledAppointmentModel: any = {};\r\n    reconfirmTime: any;\r\n    selectedDivisionId!: any;\r\n    selectedDivisionName!: any;\r\n    ts = \"\";\r\n    userPermisions: UserPermissions = new UserPermissions();\r\n    key: PermissionKeyEnum = new PermissionKeyEnum();\r\n    enableNewAppointmentBtn: boolean = false;\r\n    enableQuickRegistrationBtn: boolean = false;\r\n    enableSaveAppointmentPopupBtn: boolean = false;\r\n    enableCancelAppointmentBtn: boolean = false;\r\n    enableSetArrivalTimeBtn: boolean = false;\r\n    enableOpenSlotBtn: boolean = false;\r\n    enableCloseSlot: boolean = false;\r\n    enableRestoreSlot: boolean = false;\r\n\r\n    calendarOptions: any = {};\r\n    reconfirmDate!: any;\r\n    arrivalTime!: any;\r\n    cancellationDate;\r\n    calendarRangeStartDateTime: Date | undefined;\r\n    calendarRangeEndDateTime: Date | undefined;\r\n    calendarRangeFirstSlot!: TimeSlot;\r\n    calendarRangeLastSlot!: TimeSlot;\r\n    lstToTranslated: string[] = ['serviceName', 'serviceNameTranslation'];\r\n\r\n    constructor(\r\n        private receptionistService: ReceptionistService,\r\n        private clinicService: ClinicService,\r\n        private toastr: ToastrService,\r\n        private localStorage: LocalStorageService\r\n        , private router: Router\r\n        , public translate: TranslateService\r\n        , public accountService: AccountService) {\r\n        this.cancellationDate = this.utilityClass.getUtcDate(new Date());\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n        this.lang = this.localStorage.retrieve('SelectedLanguage');\r\n        if (this.lang && this.lang == 'ar')\r\n            this.isRTL = true;\r\n\r\n        let thisComp = this;\r\n        this.calendarSlotDuration = calendarSlotDuration;\r\n        this.defaultDate = this.utilityClass.getISODateFormat(new Date());\r\n        this.calendarOptions.firstDay = new Date().getDay();\r\n        this.calendarOptions.navLinks = true;\r\n        this.calendarOptions.selectable = true;\r\n        this.calendarOptions.select = function (start: any, end: any) { thisComp.handleCalendarSelect(start, end); }\r\n        this.calendarOptions.isRTL = this.isRTL;\r\n\r\n        this.clinicId = this.localStorage.retrieve(\"ClinicID\");\r\n        // this.clinicId = \"1\";\r\n        this.loadOrganizationStructureTree();\r\n        this.fillCurrentWeekDays(new Date());\r\n        this.receptionistAppointmentManager = new ReceptionistAppointmentManager(this.appointmentSchedulesList, this.sessionExtensionsList);\r\n        //this.entireDayTimeSlotsList = this.receptionistAppointmentManager.getFullDayTimeSlots(this.receptionistAppointmentManager.getSlotDuration());\r\n\r\n        if (this.accountService.userPermision._isScalar != undefined)\r\n            this.accountService.userPermision.subscribe((item: any) => this.handleUserInterfaceViews(item));\r\n        else\r\n            this.handleUserInterfaceViews(this.accountService.userPermision);\r\n    }\r\n\r\n    FillHijriWeekDays() {\r\n        if (this.currentWeekDays && this.currentWeekDays.length > 0) {\r\n            let dates = [];\r\n            for (let date of this.currentWeekDays)\r\n                dates.push(this.utilityClass.getUtcDate(date));\r\n\r\n            for (let dayNo = 0; dayNo <= 6; dayNo++) {\r\n                let event: any = {};\r\n                event.start = dates[dayNo];\r\n                event.end = dates[dayNo];\r\n                event.allDay = true;\r\n                event.className = 'hijriDateStyle';\r\n                event.title = this.currentHijriWeekDays[dayNo];\r\n                this.events.push(event);\r\n            }\r\n        }\r\n    }\r\n\r\n    fillCurrentWeekDays(startDate: Date) {\r\n        this.currentWeekDays = [];\r\n\r\n        let satrt: number = startDate.getDate();\r\n\r\n        for (let dayNo = 0; dayNo <= 6; dayNo++) {\r\n            {\r\n                let date: Date = new Date(startDate.getTime());\r\n                date.setDate(satrt + dayNo)\r\n                this.currentWeekDays.push(date);\r\n            }\r\n        }\r\n    }\r\n\r\n    showDialog() {\r\n        this.isAddArrivalTime = true\r\n        this.isReconfirmedAppointment = false;\r\n        this.isCancelledAppointment = false;\r\n        this.isRescheduledAppointment = false;\r\n        //this.isArrived = false;\r\n\r\n        this.arrivalTime = new Date();\r\n\r\n        this.display = true;\r\n    }\r\n\r\n    showReconfirmDialog() {\r\n        this.isReconfirmedAppointment = true;\r\n        this.isAddArrivalTime = false;\r\n        this.isCancelledAppointment = false;\r\n        this.isRescheduledAppointment = false;\r\n        this.display = true;\r\n    }\r\n    showCancelationDialog() {\r\n        this.isCancelledAppointment = true;\r\n        this.isReconfirmedAppointment = false;\r\n        this.isAddArrivalTime = false;\r\n        this.isRescheduledAppointment = false;\r\n        this.display = true;\r\n    }\r\n    //showRescheduleDialog() {\r\n    //    this.isCancelledAppointment = false;\r\n    //    this.isReconfirmedAppointment = false;\r\n    //    this.isAddArrivalTime = false;\r\n    //    this.isRescheduledAppointment = true;\r\n    //    this.display = true;\r\n    //}\r\n    createQuickPateintAccount() {\r\n        let thisComponent = this;\r\n        let timeSlot = this.timeSlotsList.find(ts => ts.name == this.selectedTimeSlot);\r\n        if (timeSlot != undefined) {\r\n\r\n            this.patientQucikAccount.dateTime = this.utilityClass.getUtcDateTime(timeSlot.dateTime);\r\n            this.patientQucikAccount.doctorId = this.doctorId;\r\n            this.patientQucikAccount.slotDuration = this.slotDuration;\r\n            this.patientQucikAccount.clinicId = this.clinicId;\r\n            this.patientQucikAccount.numberOfTimeSlots = this.numberOfTimeSlots;\r\n            if (this.patientQucikAccount.birthDate)\r\n                this.patientQucikAccount.birthDate = this.utilityClass.getUtcDate(this.patientQucikAccount.birthDate);\r\n\r\n            // check for available open slots \r\n            let isSlotsOpened = this.isAppointmentSlotsOpened(timeSlot.dateTime);\r\n\r\n            if (!isSlotsOpened) {\r\n                let msg = this.translate.instant(\"NotEnoughOpenedSlots\");\r\n                this.toastr.error(msg, '');\r\n                this.showProgress = false;\r\n                return;\r\n            }\r\n\r\n            thisComponent.showProgress = true;\r\n            this.receptionistService.createPatientRequest(this.patientQucikAccount)\r\n                .subscribe(\r\n                    function (response: any) {\r\n\r\n                        thisComponent.updateCalendarEvents(response, true);\r\n                        thisComponent.closeAppointmentModal();\r\n\r\n                        let msg = thisComponent.translate.instant(\"SavedSuccessfully\");\r\n                        thisComponent.toastr.success(msg, '');\r\n\r\n                    },\r\n                    function (error: any) {\r\n                        thisComponent.toastr.error(error);\r\n                        thisComponent.showProgress = false;\r\n                    },\r\n                    function () {\r\n                        thisComponent.showProgress = false;\r\n                    });\r\n        }\r\n    }\r\n\r\n    clearControl(): void {\r\n        this.patientQucikAccount = { id: 0 };\r\n        this.timeSlotsList = [];\r\n        this.selectedDate = '';\r\n        this.selectedTimeSlot = '';\r\n        this.numberOfTimeSlots = 1;\r\n        this.active = false;\r\n        this.reconfirmTime = '';\r\n        this.reconfirmDate = '';\r\n        this.arrivalTime = '';\r\n        //this.cancellationDate = '';\r\n        setTimeout(() => this.active = true, 0);\r\n    }\r\n\r\n    loadOrganizationStructureTree() {\r\n        let thisComp = this;\r\n        thisComp.showProgress = true;\r\n        //let userId = this.storage.retrieve(\"UserID\");\r\n        this.clinicService.getOrganizationStructureTreeWithDoctorsOnly(this.clinicId)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    thisComp.organizationStructureTree = response;\r\n                },\r\n                function (error: any) {\r\n                    thisComp.toastr.error(error, '');\r\n                    thisComp.showProgress = false;\r\n                },\r\n                function () {\r\n                    thisComp.showProgress = false;\r\n                });\r\n    }\r\n\r\n    clear() {\r\n        this.appointmentModel = { id: 0 };\r\n        this.timeSlotsList = [];\r\n        this.selectedDate = '';\r\n        this.selectedTimeSlot = '';\r\n        this.numberOfTimeSlots = 1;\r\n        this.patientClinicMrn = '';\r\n        this.patientName = '';\r\n        this.cancelled = false;\r\n        this.rescheduledAppointmentModel = {};\r\n        this.reconfirmTime = '';\r\n        this.reconfirmDate = '';\r\n        this.arrivalTime = '';\r\n        //this.cancellationDate = '';\r\n\r\n        // set default class ID\r\n        this.appointmentModel.appointmentClassId = this.defaultclassId;\r\n\r\n    }\r\n\r\n    addNewAppointment() {\r\n        this.isUpdatedAppointment = false;\r\n        this.clear();\r\n        this.showAppointmentModal();\r\n    }\r\n\r\n    handleEventClick(e: any) {\r\n\r\n        let eventId = e.calEvent.id;\r\n\r\n        this.fillAppointmentinfo(eventId);\r\n    }\r\n\r\n    fillAppointmentinfo(eventId: any) {\r\n        if (this.appointementsList != undefined) {\r\n            this.appointmentModel = this.appointementsList.find(app => app.id == eventId);\r\n\r\n            if (this.appointmentModel != undefined) {\r\n                this.isUpdatedAppointment = true;\r\n                this.selectedDate = this.utilityClass.getDateTimeFromString(this.appointmentModel.dateTime);\r\n                this.onDateSelect(this.selectedDate);\r\n                this.selectedTimeSlot = this.appointmentModel.time;\r\n                this.numberOfTimeSlots = this.appointmentModel.numberOfTimeSlots;\r\n                this.patientId = this.appointmentModel.patientId;\r\n                this.patientClinicMrn = this.appointmentModel.patientClinicMRN;\r\n                this.patientName = this.appointmentModel.patientName;\r\n                //if (this.appointmentModel.arrived == true) {\r\n                //    this.isArrived = true;\r\n                //}\r\n                if (this.appointmentModel.arrivalTime)\r\n                    this.arrivalTime = this.utilityClass.getDateTimeFromString(this.appointmentModel.arrivalTime);\r\n\r\n                if (this.appointmentModel.reconfirmDate) {\r\n                    this.reconfirmTime = this.utilityClass.getDateTimeFromString(this.appointmentModel.reconfirmDate);\r\n                    this.reconfirmDate = this.utilityClass.getDateTimeFromString(this.appointmentModel.reconfirmDate);\r\n                }\r\n\r\n                //if (this.appointmentModel.cancellationDate)\r\n                //    this.cancellationDate = this.utilityClass.getUtcDateFromString(this.appointmentModel.cancellationDate);\r\n\r\n                //this.appointmentModel.description += this.appointmentModel.cancelRemarks + this.appointmentModel.reconfirmRemarks;\r\n                this.showAppointmentModal();\r\n            }\r\n            else {\r\n                this.appointmentModel = { id: 0 };\r\n                //this.isUpdatedAppointment = false;\r\n            }\r\n\r\n            this.inquireWaitInAppointment();\r\n        }\r\n    }\r\n\r\n\r\n    showAppointmentModal() {\r\n\r\n        this.appointmentModalButton.nativeElement.click();\r\n    }\r\n\r\n    showBookOrCloseModal() {\r\n        this.bookOrCloseModalButton.nativeElement.click();\r\n    }\r\n\r\n    closeAppointmentModal() {\r\n        this.btnClostAppointmentModal.nativeElement.click();\r\n    }\r\n\r\n    expandAll() {\r\n        this.organizationStructureTree.forEach(node => {\r\n            this.expandRecursive(node, true);\r\n        });\r\n    }\r\n\r\n    collapseAll() {\r\n        this.organizationStructureTree.forEach(node => {\r\n            this.expandRecursive(node, false);\r\n        });\r\n    }\r\n\r\n    private expandRecursive(node: TreeNode, isExpand: boolean) {\r\n        node.expanded = isExpand;\r\n        if (node.children) {\r\n            node.children.forEach(childNode => {\r\n                this.expandRecursive(childNode, isExpand);\r\n            });\r\n        }\r\n    }\r\n\r\n    //getSelectedNode() {\r\n    //    this.organizationStructureTree.forEach(node => {\r\n    //        this.getSelectedNodeRecursive(node);\r\n    //    });\r\n    //}\r\n\r\n    //private getSelectedNodeRecursive(node: TreeNode) {\r\n    //    if (node.children) {\r\n    //        node.children.forEach(childNode => {\r\n    //            this.getSelectedNodeRecursive(childNode);\r\n\r\n    //            if (childNode.data == \"SelectedDoctor\")\r\n    //                this.selectedDoctor = childNode;\r\n\r\n    //        });\r\n    //    }\r\n    //}\r\n\r\n    nodeSelect(event: any) {\r\n\r\n        this.isDayView = false;\r\n        this.handelSelectedNode(event.node);\r\n    }\r\n\r\n    handelSelectedNode(node: any) {\r\n        let vm = this;\r\n        this.doctorId = 0;\r\n        this.doctorName = \"\";\r\n        this.isDoctorSelected = false;\r\n        this.isDivisionSelected = false;\r\n        this.isDepartmentSelected = false;\r\n\r\n        if (node.type.toLocaleLowerCase() == \"securityuser\") {\r\n            this.initialView = true;\r\n\r\n            this.doctorId = node.data;\r\n\r\n            if (this.lang == 'ar')\r\n                this.doctorName = node.label;\r\n            else\r\n                this.doctorName = node.labelTranslation;\r\n\r\n            this.isDoctorSelected = true;\r\n            this.isDivisionSelected = false;\r\n            this.isDepartmentSelected = false;\r\n\r\n            this.getAppointmentDetailsWrapper(this.doctorId);\r\n\r\n            this.getDoctorClinicDivision(this.doctorId);\r\n\r\n        } else if (node.type.toLocaleLowerCase() == \"clinicdivision\") {\r\n\r\n            this.divisonId = node.data;\r\n\r\n            if (this.lang == 'ar')\r\n                this.divisonName = node.label;\r\n            else\r\n                this.divisonName = node.labelTranslation;\r\n\r\n            this.isDoctorSelected = false;\r\n            this.isDivisionSelected = true;\r\n            this.isDepartmentSelected = false;\r\n\r\n\r\n        } else if (node.type.toLocaleLowerCase() == \"clinicdepartment\") {\r\n\r\n            this.isDoctorSelected = false;\r\n            this.isDivisionSelected = false;\r\n            this.isDepartmentSelected = true;\r\n\r\n        }\r\n    }\r\n\r\n    getAppointmentDetailsWrapper(doctorId: any) {\r\n\r\n        this.showProgress = true;\r\n        let thisComp = this;\r\n        this.receptionistService.getAppointmentDetailsWrapper(doctorId)\r\n            .subscribe(\r\n                function (response: any) {\r\n\r\n                    thisComp.appointmentSchedulesList = response.appointmentSchedules;\r\n                    thisComp.sessionExtensionsList = response.sessionExtensions;\r\n                    thisComp.appointmentClassesList = response.appointmentClasses;\r\n                    thisComp.visitTypesList = response.visitTypes;\r\n                    thisComp.appointementsList = response.appointments;\r\n                    thisComp.serviceTimeSlotsList = response.serviceTimeSlots;\r\n                    thisComp.currentHijriWeekDays = response.currentWeekHijriDates;\r\n                    thisComp.currentDoctor = response.doctor;\r\n\r\n                    // get default class ID \r\n                    if (thisComp.appointementsList) {\r\n                        thisComp.appointmentClassesList.forEach(cls => {\r\n                            if (cls.key == 'Reserved') {\r\n                                thisComp.defaultclassId = cls.id;\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                    //------- Work with the Calendar view -------\r\n\r\n                    //Refresh the calendar solt duration according to the doctor solt duration\r\n                    let formattedSlotDuration = thisComp.calendarSlotDuration;\r\n                    let scrollTime = \"00:00:00\";\r\n                    thisComp.receptionistAppointmentManager = new ReceptionistAppointmentManager(thisComp.appointmentSchedulesList, thisComp.sessionExtensionsList);\r\n                    thisComp.slotDuration = thisComp.receptionistAppointmentManager.getSlotDurationForDate(thisComp.utilityClass.getDateComponent(new Date()));\r\n                    if (thisComp.slotDuration != undefined && thisComp.slotDuration != 0)\r\n                        formattedSlotDuration = '00:' + thisComp.utilityClass.getTwoDigitNumber(thisComp.slotDuration) + ':00';\r\n\r\n                    //Get first timeSlot\r\n                    let firstTimeSlot: TimeSlot = thisComp.receptionistAppointmentManager.getFirstTimeSlot(new Date());\r\n                    if (firstTimeSlot != undefined) {\r\n                        if (firstTimeSlot.name.indexOf(\":\") > -1)//has minutes\r\n                            scrollTime = firstTimeSlot.name + \":00\";//add seconds\r\n                        else//has only hours\r\n                            scrollTime = firstTimeSlot.name + \":00:00\";//add minutes and seconds\r\n                    }\r\n\r\n                    thisComp.initialView = true;\r\n                    thisComp.pSchedule.refreshSlotDuration(formattedSlotDuration, scrollTime);\r\n                    thisComp.initialView = false;\r\n                    //Update calendar events\r\n                    thisComp.events = response.calendarEvents;\r\n\r\n                    //Adjust calendar view according the schedules\r\n                    thisComp.fillCurrentWeekDays(new Date());\r\n                    thisComp.adjustCalendarView();\r\n                    //thisComp.FillHijriWeekDays();\r\n\r\n                    if (thisComp.gotoDateString) {\r\n                        let date = thisComp.utilityClass.getDateTimeFromString(thisComp.gotoDateString)\r\n\r\n                        if (thisComp.isDateWithinCurrentWeek(date)) {\r\n                            // open appointment popup\r\n                            thisComp.fillAppointmentinfo(thisComp.selectedAppointmentIDFromSearch);\r\n                            thisComp.gotoDateString = '';\r\n                        }\r\n                        else {\r\n                            thisComp.pSchedule.gotoDate(date);\r\n                        }\r\n                    }\r\n\r\n                },\r\n                function (error: any) {\r\n                    thisComp.toastr.error(error, '');\r\n                    thisComp.showProgress = false;\r\n                },\r\n                function () {\r\n                    thisComp.showProgress = false;\r\n                });\r\n    }\r\n\r\n    isDateWithinCurrentWeek(passedDate: Date): boolean {\r\n        for (let weekDate of this.currentWeekDays) {\r\n            let currentWeekDate = this.utilityClass.getUtcDate(weekDate);\r\n            if (currentWeekDate.getDay() == passedDate.getDay() &&\r\n                currentWeekDate.getFullYear() == passedDate.getFullYear() &&\r\n                currentWeekDate.getMonth() == passedDate.getMonth())\r\n                return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    getDoctorClinicDivision(doctorId: any) {\r\n        this.showProgress = true;\r\n        let thisComp = this;\r\n        this.receptionistService.getDoctorClinicDivision(doctorId)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    if (response != undefined)\r\n                        thisComp.selectedDivisionId = response.id;\r\n                    if (thisComp.lang == 'ar')\r\n                        thisComp.selectedDivisionName = response.name;\r\n                    else\r\n                        thisComp.selectedDivisionName = response.nameTranslation;\r\n                },\r\n                function (error: any) {\r\n                    thisComp.toastr.error(error, '');\r\n                    thisComp.showProgress = false;\r\n                },\r\n                function () {\r\n                    thisComp.showProgress = false;\r\n                });\r\n    }\r\n    setClinicDepartmentId(value: any) {\r\n        let vm = this;\r\n        //  this.clinicId = value;\r\n\r\n    }\r\n    adjustCalendarView() {\r\n\r\n        this.FillHijriWeekDays();\r\n\r\n        for (let indx = 0; indx < this.currentWeekDays.length; indx++) {\r\n            let day: Date = this.currentWeekDays[indx];\r\n            this.receptionistAppointmentManager = new ReceptionistAppointmentManager(this.appointmentSchedulesList, this.sessionExtensionsList);\r\n            let availableTimeSlots = this.receptionistAppointmentManager.getTimeSlots(day);\r\n\r\n            for (let indx = 0; indx < availableTimeSlots.length; indx++) {\r\n                let timSlot = availableTimeSlots[indx];\r\n\r\n                let startMinutes: string = timSlot.dateTime.toTimeString().split(' ')[0];\r\n\r\n                timSlot.dateTime.setMinutes(timSlot.dateTime.getMinutes() + this.receptionistAppointmentManager.getSlotDuration());\r\n                let endMintues: string = timSlot.dateTime.toTimeString().split(' ')[0];\r\n                if (endMintues == \"00:00:00\")\r\n                    endMintues = \"23:59:59\";\r\n\r\n\r\n                let bgEvent: CalendarEvent = new CalendarEvent();\r\n                let startDateTime = this.utilityClass.getISODateFormat(day) + \"T\" + startMinutes;\r\n                let endDateTime = this.utilityClass.getISODateFormat(day) + \"T\" + endMintues;\r\n\r\n                bgEvent.id = 0;\r\n                bgEvent.start = startDateTime;\r\n                bgEvent.end = endDateTime;\r\n                bgEvent.rendering = 'inverse-background';\r\n                bgEvent.className = 'inverse-backgroundEvent';\r\n\r\n                this.events.push(bgEvent);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    onDateSelect(dateValue: Date) {\r\n        this.timeSlotsList = [];\r\n        if (dateValue != undefined) {\r\n            this.receptionistAppointmentManager = new ReceptionistAppointmentManager(this.appointmentSchedulesList, this.sessionExtensionsList);\r\n            this.timeSlotsList = this.receptionistAppointmentManager.getTimeSlots(dateValue);\r\n            this.slotDuration = this.receptionistAppointmentManager.getSlotDuration();\r\n        }\r\n    }\r\n\r\n    onOpneCloseSlotDateSelect(dateValue: Date) {\r\n        this.entireDayTimeSlotsListForStartTime = [];\r\n        this.entireDayTimeSlotsListForEndTime = [];\r\n        if (dateValue != undefined) {\r\n            this.receptionistAppointmentManager = new ReceptionistAppointmentManager(this.appointmentSchedulesList, this.sessionExtensionsList);\r\n            let appSchedule = this.receptionistAppointmentManager.getAppointmentSchedule(dateValue);\r\n            if (appSchedule != undefined) {\r\n                this.entireDayTimeSlotsListForStartTime = this.receptionistAppointmentManager.getFullDayTimeSlots(appSchedule.slotDuration);\r\n                this.entireDayTimeSlotsListForEndTime = this.entireDayTimeSlotsListForStartTime.slice();\r\n                //Add last slot in the day\r\n                let todDay: Date = new Date();\r\n                let date: Date = new Date(todDay.getFullYear(), todDay.getMonth(), todDay.getDate(), 23, 59);\r\n                this.entireDayTimeSlotsListForStartTime.push(new TimeSlot(date));\r\n                this.entireDayTimeSlotsListForEndTime.push(new TimeSlot(date));\r\n            }\r\n        }\r\n    }\r\n\r\n    getPatient() {\r\n        this.showProgress = true;\r\n        let thisComp = this;\r\n        this.receptionistService.getPatientByClinicMRN(this.patientClinicMrn)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    thisComp.patientName = response.name;\r\n                    thisComp.patientId = response.id;\r\n                },\r\n                function (error: any) {\r\n                    thisComp.toastr.error(error, '');\r\n                    thisComp.showProgress = false;\r\n                },\r\n                function () {\r\n                    thisComp.showProgress = false;\r\n                });\r\n    }\r\n\r\n    selectAppointmentClass(classId: any) {\r\n        this.appointmentModel.appointmentClassId = classId;\r\n    }\r\n\r\n\r\n    notifyRelatedUserForCancel() {\r\n        var thisComp = this;\r\n        this.appointmentModel.notificationType = 'Cancel';\r\n        this.receptionistService.notifyRelatedUser(this.appointmentModel)\r\n            .subscribe(\r\n                function (response: any) {\r\n                },\r\n                function (error: any) {\r\n                    thisComp.toastr.error(error, '');\r\n                    thisComp.showProgress = false;\r\n                },\r\n                function () {\r\n                    thisComp.showProgress = false;\r\n                });\r\n    }\r\n\r\n    notifyRelatedUserForConfirm() {\r\n        var thisComp = this;\r\n        this.appointmentModel.notificationType = 'Confirm';\r\n        this.receptionistService.notifyRelatedUser(this.appointmentModel)\r\n            .subscribe(\r\n                function (response: any) {\r\n                },\r\n                function (error: any) {\r\n                    thisComp.toastr.error(error, '');\r\n                    thisComp.showProgress = false;\r\n                },\r\n                function () {\r\n                    thisComp.showProgress = false;\r\n                });\r\n    }\r\n    mergeCallingDateAndCallingTime(obj: Date, secondObj: Date): Date {\r\n\r\n        let hour: number = secondObj.getHours();\r\n        let minute: number = secondObj.getMinutes();\r\n        let dateTime = new Date(obj.getFullYear(), obj.getMonth(),\r\n            obj.getDate(), hour, minute);\r\n\r\n        return dateTime;\r\n    }\r\n    saveOrUpdateAppointment(updateArrivalTime?: boolean|undefined) {\r\n\r\n        this.appointmentModel.clinicId = this.clinicId;\r\n        this.appointmentModel.clinicDivisionId = this.selectedDivisionId;\r\n        this.appointmentModel.arrived = false;\r\n\r\n        if (this.arrivalTime && updateArrivalTime)//time only\r\n        {\r\n            this.appointmentModel.arrivalTime = this.utilityClass.getUtcDateTime(this.arrivalTime);\r\n            this.appointmentModel.arrived = true;\r\n        }\r\n\r\n        if (this.reconfirmDate && this.reconfirmTime)//date\r\n        {\r\n            let updatedDate: Date = this.mergeCallingDateAndCallingTime(this.reconfirmDate, this.reconfirmTime);\r\n            this.appointmentModel.reconfirmDate = this.utilityClass.getUtcDateTime(updatedDate);\r\n        }\r\n\r\n\r\n        if (this.cancelled) {\r\n            this.appointmentModel.cancellationDate = this.cancellationDate;\r\n            this.appointmentModel.cancelled = this.cancelled;\r\n        }\r\n\r\n        let timeSlot = this.timeSlotsList.find(ts => ts.name == this.selectedTimeSlot);\r\n        if (timeSlot != undefined) {\r\n            //Update the model\r\n            if (this.appointmentModel.cancelled)//in case of cancelled = true\r\n                this.timeSlotForCancelledApp = timeSlot;\r\n\r\n            this.appoitmentDateTimeBackup = this.appointmentModel.dateTime;\r\n            this.appointmentModel.dateTime = this.utilityClass.getUtcDateTime(timeSlot.dateTime);\r\n            this.appointmentModel.doctorId = this.doctorId;\r\n            this.appointmentModel.patientId = this.patientId;\r\n            this.appointmentModel.slotDuration = this.slotDuration;\r\n            this.appointmentModel.numberOfTimeSlots = this.numberOfTimeSlots;\r\n\r\n            this.showProgress = true;\r\n            let thisComp = this;\r\n            let isNewAppointment: boolean = (this.appointmentModel.id == 0) ? true : false;\r\n\r\n            if (updateArrivalTime) {\r\n                this.receptionistService.updatePatientArrivalTime(this.appointmentModel)\r\n                    .subscribe(\r\n                        function (response: any) {\r\n                            thisComp.updateCalendarEvents(response, isNewAppointment);\r\n                            thisComp.closeAppointmentModal();\r\n\r\n                            let msg = thisComp.translate.instant(\"SavedSuccessfully\");\r\n                            thisComp.toastr.success(msg, '');\r\n                        },\r\n                        function (error: any) {\r\n                            thisComp.appointmentModel.dateTime = thisComp.appoitmentDateTimeBackup;\r\n                            thisComp.toastr.error(error, '');\r\n                            thisComp.showProgress = false;\r\n                        },\r\n                        function () {\r\n                            thisComp.showProgress = false;\r\n                        });\r\n            }\r\n            else {\r\n                let isSlotsOpened = this.isAppointmentSlotsOpened(timeSlot.dateTime);\r\n\r\n                if (!isSlotsOpened) {\r\n                    let msg = this.translate.instant(\"NotEnoughOpenedSlots\");\r\n                    this.toastr.error(msg, '');\r\n                    this.showProgress = false;\r\n                    this.appointmentModel.dateTime = this.appoitmentDateTimeBackup;\r\n                    return;\r\n                }\r\n\r\n                this.receptionistService.saveOrUpdateAppointment(this.appointmentModel)\r\n                    .subscribe(\r\n                        function (response: any) {\r\n                            thisComp.updateCalendarEvents(response, isNewAppointment);\r\n                            thisComp.closeAppointmentModal();\r\n\r\n                            let msg = thisComp.translate.instant(\"SavedSuccessfully\");\r\n                            thisComp.toastr.success(msg, '');\r\n                        },\r\n                        function (error: any) {\r\n                            thisComp.toastr.error(error, '');\r\n                            thisComp.appointmentModel.dateTime = thisComp.appoitmentDateTimeBackup;\r\n                            thisComp.showProgress = false;\r\n                        },\r\n                        function () {\r\n                            thisComp.showProgress = false;\r\n                        });\r\n            }\r\n        }\r\n        else {\r\n            let msg = this.translate.instant(\"EnterDateTime\");\r\n            this.toastr.error(msg, '');\r\n        }\r\n    }\r\n\r\n    updateArrivalTime() {\r\n        this.saveOrUpdateAppointment(true);\r\n        this.display = false;\r\n    }\r\n    updateReconfirm() {\r\n        this.saveOrUpdateAppointment(false);\r\n        this.notifyRelatedUserForConfirm();\r\n        this.display = false;\r\n    }\r\n\r\n    cancelAppointment() {\r\n        this.cancelled = true;\r\n        this.saveOrUpdateAppointment(false);\r\n        this.getAppointmentDetailsWrapper(this.doctorId);\r\n        this.notifyRelatedUserForCancel();\r\n        this.display = false;\r\n    }\r\n\r\n    //RescheduleAppointment() {\r\n    //    this.saveRescheduleAppointment();\r\n    //}\r\n    handleIsArrivedValue(event: any) {\r\n        if (event.target.checked) {\r\n            this.isArrived = true;\r\n        } else {\r\n            this.isArrived = false;\r\n        }\r\n    }\r\n    //saveRescheduleAppointment() {\r\n    //    let vm = this;\r\n    //    vm.rescheduledAppointmentModel = vm.appointmentModel;\r\n    //    let timeSlot = this.timeSlotsList.find(ts => ts.name == this.selectedRescheduledTimeSlot);\r\n    //    if (timeSlot != undefined) {\r\n    //        //Update the model\r\n    //        this.rescheduledAppointmentModel.dateTime = this.utilityClass.getUtcDateTime(timeSlot.dateTime);\r\n\r\n    //        this.showProgress = true;\r\n    //        let thisComp = this;\r\n    //        let isNewAppointment: boolean = (this.appointmentModel.id == 0) ? true : false;\r\n    //        this.receptionistService.saveOrUpdateAppointment(this.rescheduledAppointmentModel)\r\n    //            .subscribe(\r\n    //            function (response:any) {\r\n    //                thisComp.updateCalendarEvents(response, isNewAppointment);\r\n    //                thisComp.closeAppointmentModal();\r\n\r\n    //                thisComp.toastr.success('Saved successfully', '');\r\n    //            },\r\n    //            function (error:any) { \r\n    //                thisComp.toastr.error(error, '');\r\n    //                thisComp.showProgress = false;\r\n    //            },\r\n    //            function () {\r\n    //                thisComp.showProgress = false;\r\n    //            });\r\n    //    }\r\n    //    else {\r\n    //        this.toastr.error('You should enter date and time.', '');\r\n    //    }\r\n    //}\r\n    //onRescheduledDateSelect(dateValue: Date) {\r\n    //    this.rescheduledTimeSlotsList = [];\r\n    //    if (dateValue != undefined) {\r\n    //        this.receptionistAppointmentManager = new ReceptionistAppointmentManager(this.appointmentSchedulesList, this.sessionExtensionsList);\r\n    //        this.rescheduledTimeSlotsList = this.receptionistAppointmentManager.getTimeSlots(dateValue);\r\n    //        this.slotDuration = this.receptionistAppointmentManager.getSlotDuration();\r\n    //    }\r\n    //}\r\n    saveSessionExtension() {\r\n\r\n        let thisComponent = this;\r\n        //thisComponent.showProgress = true;\r\n        this.sessionExtension.day = this.selectedDateForOpenCloseSlot;//this.utilityClass.getUtcDateTime(this.selectedDateForOpenCloseSlot);\r\n        this.sessionExtension.startTime = this.utilityClass.getISODateFormat(this.sessionExtension.day) + \"T\" + this.selectedStartTimeForOpenCloseSlot + (this.selectedStartTimeForOpenCloseSlot.length == 2 ? \":00\" : \"\");\r\n        this.sessionExtension.endTime = this.utilityClass.getISODateFormat(this.sessionExtension.day) + \"T\" + this.selectedEndTimeForOpenCloseSlot + (this.selectedEndTimeForOpenCloseSlot.length == 2 ? \":00\" : \"\");\r\n        if (this.sessionExtension.startTime >= this.sessionExtension.endTime) {\r\n            let msg = this.translate.instant(\"SessionExtensionStart\");\r\n            thisComponent.toastr.error(msg, '');\r\n            return;\r\n        }\r\n        this.receptionistService.saveNewSessionExtension(this.sessionExtension)\r\n            .subscribe(\r\n                function (response: any) {\r\n\r\n                    thisComponent.sessionExtension = response;\r\n                    thisComponent.clearSessionExtensionControls();\r\n                    thisComponent.getAppointmentDetailsWrapper(thisComponent.doctorId);\r\n                    let msg = thisComponent.translate.instant(\"SavedSuccessfully\");\r\n                    thisComponent.toastr.success(msg, '');\r\n                    thisComponent.btnCloseSessionExtensionModal.nativeElement.click();\r\n                },\r\n                function (error: any) {\r\n                    thisComponent.toastr.error(error, '');\r\n                    //thisComponent.showProgress = false;\r\n                },\r\n                function () {\r\n                    //thisComponent.showProgress = false;\r\n                });\r\n    }\r\n\r\n\r\n    updateCalendarEvents(appointment: any, isNewAppointment: boolean) {\r\n        let evnt: CalendarEvent = new CalendarEvent();\r\n        this.updateEvent(evnt, appointment);\r\n\r\n        if (isNewAppointment)//Add new\r\n        {\r\n            this.appointementsList.push(appointment);\r\n\r\n            this.events.push(evnt);\r\n        }\r\n        else//Update existing\r\n        {\r\n            if (this.cancelled) {\r\n                for (let i = 0; i < this.appointementsList.length; i++) {\r\n                    if (appointment.id == this.appointementsList[i].id) {\r\n                        //        this.sessionsList.splice(this.sessionIndex, 1);\r\n                        this.appointementsList.splice(i, 1);\r\n                        this.cancelled = false;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                for (let i = 0; i < this.events.length; i++) {\r\n                    if (appointment.id == this.events[i].id) {\r\n                        this.events.splice(i, 1);\r\n                        this.cancelled = false;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n            }\r\n            else {\r\n                for (let i = 0; i < this.appointementsList.length; i++) {\r\n                    if (appointment.id == this.appointementsList[i].id) {\r\n                        this.appointementsList[i] = appointment;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                for (let i = 0; i < this.events.length; i++) {\r\n                    if (appointment.id == this.events[i].id) {\r\n                        this.events[i] = evnt;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n    updateAppointmentModel(appointment: any) {\r\n        let thisComponent = this;\r\n\r\n        if (appointment.arrivalTime)\r\n            appointment.arrivalTime = thisComponent.utilityClass.getDateTimeFromString(appointment.arrivalTime);\r\n\r\n        if (appointment.reconfirmDate)\r\n            appointment.reconfirmDate = thisComponent.utilityClass.getDateTimeFromString(appointment.reconfirmDate);\r\n\r\n\r\n    }\r\n\r\n    getAppointmentFullTitle(appointment: any): string {\r\n        let fullTitle = '';\r\n\r\n        fullTitle += appointment.patientUnifiedMRN;\r\n        fullTitle += ' - ' + appointment.patientName;\r\n        fullTitle += ' - ' + appointment.mobile;\r\n\r\n        if (appointment.arrived)\r\n            fullTitle += ' - ' + appointment.arrivalTimeString;\r\n\r\n        if (appointment.confirmed)\r\n            fullTitle += ' - ' + this.translate.instant('Confirmed');\r\n        else\r\n            fullTitle += ' - ' + this.translate.instant('NotConfirmed');\r\n\r\n        if (appointment.description)\r\n            fullTitle += ' - ' + appointment.description;\r\n\r\n        return fullTitle;\r\n    }\r\n\r\n    updateEvent(evnt: CalendarEvent, appointment: any) {\r\n\r\n        evnt.id = appointment.id;\r\n        evnt.dateTime = appointment.dateTimeString;\r\n        evnt.title = appointment.patientName;\r\n        evnt.fullTitle = appointment.fullTitle;\r\n\r\n        //Start\r\n        evnt.start = appointment.start;\r\n        //End\r\n        evnt.end = appointment.end;\r\n        if (appointment.isWaitIn)\r\n            evnt.className = 'calendarEvent-waitin';\r\n        else if (appointment.arrived)\r\n            evnt.className = 'calendarEvent-arrived';\r\n        else if (appointment.confirmed)\r\n            evnt.className = 'calendarEvent-confirmed';\r\n        else if (appointment.flag)\r\n            evnt.className = 'calendarEvent-flaged';\r\n        else\r\n            evnt.className = 'calendarEvent';\r\n\r\n    }\r\n\r\n    clearSessionExtensionControls() {\r\n        this.sessionExtension = {};\r\n    }\r\n\r\n    showSessionExtensionPopupForOpenSlot() {\r\n        let msg = this.translate.instant(\"OpenSlot\");\r\n        //if (this.isDoctorSelected != undefined && this.isDoctorSelected == true) {\r\n        this.sessionExtension = {\r\n            type: 0,\r\n            clinicId: this.clinicId,\r\n            doctorId: this.doctorId\r\n        };\r\n        this.sessionExtensionPopupTitle = msg;\r\n        this.btnShowSessionExtensionSlotModal.nativeElement.click();\r\n        //}\r\n    }\r\n\r\n    showSessionExtensionPopupForCloseSlot() {\r\n        let msg = this.translate.instant(\"CloseSlot\");\r\n\r\n        // if (this.isDoctorSelected != undefined && this.isDoctorSelected == true) {\r\n        this.sessionExtension = {\r\n            type: 1,\r\n            clinicId: this.clinicId,\r\n            doctorId: this.doctorId\r\n        };\r\n        this.sessionExtensionPopupTitle = msg;\r\n        this.btnShowSessionExtensionSlotModal.nativeElement.click();\r\n        // }\r\n    }\r\n\r\n    showRestoreTimeSlotsPopup() {\r\n        //if (this.isDoctorSelected != undefined && this.isDoctorSelected == true)\r\n        this.btnShowRestoreTimeSlotsModal.nativeElement.click();\r\n    }\r\n\r\n    restoreTimeSlots() {\r\n\r\n        let thisComponent = this;\r\n        //thisComponent.showProgress = true;\r\n        var restoreSlotWrapper = {\r\n            clinicId: this.clinicId,\r\n            doctorId: this.doctorId,\r\n            dateToRestoreTimeSlots: this.utilityClass.getUtcDateTime(this.dateToRestoreTimeSlots)\r\n        };\r\n        this.receptionistService.restoreTimeSlots(restoreSlotWrapper)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    thisComponent.getAppointmentDetailsWrapper(thisComponent.doctorId);\r\n                    let msg = thisComponent.translate.instant(\"SavedSuccessfully\");\r\n                    thisComponent.toastr.success(msg, '');\r\n                    thisComponent.btnCloseRestoreTimeSlotsModal.nativeElement.click();\r\n                },\r\n                function (error: any) {\r\n                    thisComponent.toastr.error(error, '');\r\n                    //thisComponent.showProgress = false;\r\n                },\r\n                function () {\r\n                    //thisComponent.showProgress = false;\r\n                });\r\n    }\r\n\r\n\r\n    showRepeatAppointmentPopup() {\r\n        if (this.appointmentModel != undefined) {\r\n            //this.selectedRepeatDate = this.utilityClass.getUtcDateFromString(this.appointmentModel.dateTime);\r\n            //this.selectedRepeatTimeSlot = this.appointmentModel.time;\r\n            //this.repeatedAppointmentModel.time = this.appointmentModel.time;\r\n            this.repeatedAppointmentModel.patientId = this.appointmentModel.patientId;\r\n            this.repeatedAppointmentModel.patientClinicMRN = this.appointmentModel.patientClinicMRN;\r\n            this.repeatedAppointmentModel.patientName = this.appointmentModel.patientName;\r\n            this.repeatedAppointmentModel.visitTypeId = this.appointmentModel.visitTypeId;\r\n            this.repeatedAppointmentModel.appointmentClassId = this.appointmentModel.appointmentClassId;\r\n            this.repeatedAppointmentModel.flag = this.appointmentModel.flag;\r\n            this.repeatedAppointmentModel.description = this.appointmentModel.description;\r\n            this.displayRepeatAppointmentPopup = true;\r\n        }\r\n    }\r\n\r\n    selectRepeatedAppointmentClass(classId: any) {\r\n        this.repeatedAppointmentModel.appointmentClassId = classId;\r\n    }\r\n\r\n    saveRepeatedAppointment() {\r\n\r\n        let timeSlot = this.repeatingTimeSlotsList.find(ts => ts.name == this.selectedRepeatTimeSlot);\r\n        if (timeSlot != undefined) {\r\n            //Update the model\r\n\r\n            this.repeatedAppointmentModel.dateTime = this.utilityClass.getUtcDateTime(timeSlot.dateTime);\r\n            this.repeatedAppointmentModel.doctorId = this.doctorId;\r\n            this.repeatedAppointmentModel.patientId = this.patientId;\r\n            this.repeatedAppointmentModel.slotDuration = this.slotDuration;\r\n            this.repeatedAppointmentModel.numberOfTimeSlots = this.numberOfTimeSlots;\r\n\r\n            this.showProgress = true;\r\n            let thisComp = this;\r\n            let isNewAppointment: boolean = true;\r\n            this.receptionistService.saveOrUpdateAppointment(this.repeatedAppointmentModel)\r\n                .subscribe(\r\n                    function (response: any) {\r\n                        thisComp.updateCalendarEvents(response, isNewAppointment);\r\n\r\n                        thisComp.cancelRepeatingAppointment();\r\n\r\n                        let msg = thisComp.translate.instant(\"SavedSuccessfully\");\r\n                        thisComp.toastr.success(msg, '');\r\n                    },\r\n                    function (error: any) {\r\n                        thisComp.toastr.error(error, '');\r\n                        thisComp.showProgress = false;\r\n                    },\r\n                    function () {\r\n                        thisComp.showProgress = false;\r\n                    });\r\n        }\r\n        else {\r\n            let msg = this.translate.instant(\"EnterDateTime\");\r\n            this.toastr.error(msg, '');\r\n        }\r\n    }\r\n    onRepeatDateSelect(dateValue: Date) {\r\n        this.repeatingTimeSlotsList = [];\r\n        if (dateValue != undefined) {\r\n            this.receptionistAppointmentManager = new ReceptionistAppointmentManager(this.appointmentSchedulesList, this.sessionExtensionsList);\r\n            this.repeatingTimeSlotsList = this.receptionistAppointmentManager.getTimeSlots(dateValue);\r\n            this.slotDuration = this.receptionistAppointmentManager.getSlotDuration();\r\n        }\r\n    }\r\n    cancelRepeatingAppointment() {\r\n        this.repeatedAppointmentModel = { id: 0 };\r\n        this.repeatingTimeSlotsList = [];\r\n        this.selectedRepeatDate = '';\r\n        this.selectedRepeatTimeSlot = '';\r\n        this.displayRepeatAppointmentPopup = false;\r\n    }\r\n\r\n    handleUserInterfaceViews(user: any) {\r\n        if (user.permissions != undefined) {\r\n            for (let item of user.permissions) {\r\n                if (item.permission.key == this.key.AppointmentSchedule && (item.add == true || item.fullControl == true))\r\n                    this.enableNewAppointmentBtn = true;//that is used also with open,restore,close solts.can we use this boolean with save button also?\r\n\r\n                if (item.permission.key == this.key.PatientRegistration && (item.add == true || item.fullControl == true))\r\n                    this.enableQuickRegistrationBtn = true;\r\n\r\n                if (item.permission.key == this.key.AppointmentSchedule && (item.add == true || item.fullControl == true || item.edit == true))\r\n                    this.enableSaveAppointmentPopupBtn = true;\r\n\r\n                //\r\n                if (item.permission.key == this.key.CancelAppointment && (item.allow))\r\n                    this.enableCancelAppointmentBtn = true;//that is used also with open,restore,close solts.can we use this boolean with save button also?\r\n\r\n                if (item.permission.key == this.key.SetArrivalTime && (item.allow))\r\n                    this.enableSetArrivalTimeBtn = true;\r\n\r\n                if (item.permission.key == this.key.OpenSlot && (item.allow))\r\n                    this.enableOpenSlotBtn = true;\r\n\r\n                if (item.permission.key == this.key.CloseSlot && (item.allow))\r\n                    this.enableCloseSlot = true;\r\n\r\n                if (item.permission.key == this.key.RestoreSlots && (item.allow))\r\n                    this.enableRestoreSlot = true;\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    handleloadEvents(event: any) {\r\n        if (!this.initialView) {\r\n\r\n            let viewName = event.view.name;\r\n            this.isDayView = false;\r\n            this.dayViewSelectedDate = new Date();\r\n\r\n            if (viewName == 'basicDay') {\r\n                this.isDayView = true;\r\n                this.dayViewSelectedDate = event.view.intervalStart._d;\r\n                this.selectedDateAsString = this.utilityClass.getUtcDateAsString(this.dayViewSelectedDate);\r\n            }\r\n\r\n            let startDate: Date = event.view.start._d;\r\n            let startDay = startDate.getDate();\r\n            let endDate: Date = new Date(startDate.getTime());\r\n            endDate.setDate(startDay + 6);\r\n\r\n            let periodArgs: any = {};\r\n            periodArgs.startDate = startDate;\r\n            periodArgs.endDate = endDate;\r\n            periodArgs.doctorId = this.doctorId;\r\n\r\n            let thisComp = this;\r\n            thisComp.showLoading = true;\r\n            this.receptionistService.getAppointmentsWithinPeriod(periodArgs)\r\n                .subscribe(\r\n                    function (response: any) {\r\n                        thisComp.appointementsList = response.appointments;\r\n                        thisComp.events = response.calendarEvents;\r\n                        thisComp.adjustEventsAccordingToCalendarView();\r\n\r\n                        thisComp.currentHijriWeekDays = response.currentWeekHijriDates;\r\n\r\n                        thisComp.fillCurrentWeekDays(startDate);\r\n\r\n                        thisComp.adjustCalendarView(); /*call this method inside FillHijriWeekDays*/\r\n                        //thisComp.FillHijriWeekDays()\r\n\r\n                        if (thisComp.gotoDateString) {\r\n                            // open appointment popup\r\n                            thisComp.fillAppointmentinfo(thisComp.selectedAppointmentIDFromSearch);\r\n                        }\r\n\r\n                        //thisComp.GetSelectedDateAppointmentsToPrint();\r\n\r\n                    },\r\n                    function (error: any) {\r\n                        thisComp.toastr.error(error, '');\r\n                        thisComp.showLoading = false;\r\n                    },\r\n                    function () {\r\n                        thisComp.showLoading = false;\r\n                        thisComp.gotoDateString = '';\r\n                    });\r\n\r\n            //this.FillHijriWeekDays();\r\n        }\r\n    }\r\n\r\n    adjustEventsAccordingToCalendarView() {\r\n        //if (this.isDayView) {\r\n        //    for (let event of this.events) {\r\n        //        event.title = event.fullTitle;\r\n        //    }\r\n        //}\r\n        //else {\r\n        //    for (let event of this.events) {\r\n        //        event.title = event.shortTitle;\r\n        //    }\r\n        //}\r\n        for (let event of this.events) {\r\n            event.title = event.shortTitle;\r\n        }\r\n    }\r\n\r\n    handleDayClick(evt: any) {\r\n\r\n        let selectedDateTime: any = this.utilityClass.convertToUTCDateTime(evt.date._d);\r\n        let selectedSlot: TimeSlot = new TimeSlot(selectedDateTime);\r\n\r\n        this.receptionistAppointmentManager = new ReceptionistAppointmentManager(this.appointmentSchedulesList, this.sessionExtensionsList);\r\n        let availableTimeSlots = this.receptionistAppointmentManager.getTimeSlots(selectedDateTime);\r\n\r\n        let availableSlot = availableTimeSlots.find(ts => ts.name == selectedSlot.name);\r\n        if (availableSlot != undefined) {\r\n            this.addNewAppointment();\r\n\r\n            this.selectedDate = selectedDateTime;\r\n\r\n            this.onDateSelect(this.selectedDate);\r\n            this.selectedTimeSlot = availableSlot.name;\r\n        }\r\n    }\r\n\r\n    handleCalendarSelect(start: any, end: any) {\r\n\r\n        if (this.isDoctorSelected) {\r\n            this.calendarRangeStartDateTime = this.utilityClass.convertToUTCDateTime(start._d);\r\n            this.calendarRangeEndDateTime = this.utilityClass.convertToUTCDateTime(end._d);\r\n\r\n            let dayDate: any = this.utilityClass.getDateComponent(this.calendarRangeStartDateTime);\r\n            this.receptionistAppointmentManager = new ReceptionistAppointmentManager(this.appointmentSchedulesList, this.sessionExtensionsList);\r\n            let availableTimeSlots = this.receptionistAppointmentManager.getTimeSlots(dayDate);\r\n\r\n            this.calendarRangeFirstSlot = new TimeSlot(this.calendarRangeStartDateTime);\r\n            this.calendarRangeLastSlot = new TimeSlot(this.calendarRangeEndDateTime);\r\n\r\n            let availableSlot = availableTimeSlots.find(ts => ts.name == this.calendarRangeFirstSlot.name);\r\n\r\n            //Selection is in an Open area\r\n            if (availableSlot != undefined) {\r\n\r\n                this.showBookOrCloseModal();\r\n\r\n            }\r\n            else //Selection is in a Closed area\r\n            {\r\n                this.prepareAndShowOpenSlotsModal();\r\n            }\r\n        }\r\n        else {\r\n            let msg = this.translate.instant(\"NoDoctorSelected\");\r\n            this.toastr.error(msg);\r\n        }\r\n\r\n    }\r\n\r\n    calculateNumberOfSlots(startDateTime: any, endDateTime: any) {\r\n        let dayDate: any = this.utilityClass.getDateComponent(startDateTime);\r\n        let slotDuration = this.receptionistAppointmentManager.getSlotDurationForDate(dayDate);\r\n        let diffInMiliSeconds = Math.abs(endDateTime - startDateTime);\r\n        let diffInMinutes = (diffInMiliSeconds / 1000) / 60;\r\n\r\n        let numberOfTimeSlots: number = 1;\r\n        if (slotDuration != undefined && slotDuration != 0)\r\n            numberOfTimeSlots = diffInMinutes / slotDuration;\r\n\r\n        return numberOfTimeSlots;\r\n    }\r\n\r\n    prepareAndShowNewAppointmentModal() {\r\n        //Close the options popup\r\n        this.btnCloseBookOrCloseModal.nativeElement.click();\r\n\r\n        this.addNewAppointment();\r\n\r\n        this.selectedDate = this.calendarRangeStartDateTime;\r\n\r\n        this.onDateSelect(this.selectedDate);\r\n        this.selectedTimeSlot = this.calendarRangeFirstSlot.name;\r\n        this.numberOfTimeSlots = this.calculateNumberOfSlots(this.calendarRangeStartDateTime, this.calendarRangeEndDateTime);\r\n\r\n        this.inquireWaitInAppointment();\r\n    }\r\n\r\n    prepareAndShowCloseSlotsModal() {\r\n        //Close the options popup\r\n        this.btnCloseBookOrCloseModal.nativeElement.click();\r\n\r\n        this.selectedDateForOpenCloseSlot = this.calendarRangeStartDateTime;\r\n        this.selectedStartTimeForOpenCloseSlot = this.calendarRangeFirstSlot.name;\r\n        this.selectedEndTimeForOpenCloseSlot = this.calendarRangeLastSlot.name;\r\n\r\n        this.onOpneCloseSlotDateSelect(this.selectedDateForOpenCloseSlot);\r\n\r\n        this.showSessionExtensionPopupForCloseSlot();\r\n\r\n    }\r\n\r\n    prepareAndShowOpenSlotsModal() {\r\n\r\n        this.selectedDateForOpenCloseSlot = this.calendarRangeStartDateTime;\r\n        this.selectedStartTimeForOpenCloseSlot = this.calendarRangeFirstSlot.name;\r\n        this.selectedEndTimeForOpenCloseSlot = this.calendarRangeLastSlot.name;\r\n\r\n        this.onOpneCloseSlotDateSelect(this.selectedDateForOpenCloseSlot);\r\n\r\n        this.showSessionExtensionPopupForOpenSlot();\r\n    }\r\n\r\n    showPatientAdvancedSearchDialog() {\r\n        this.displayPatientAdvancedSearch = true;\r\n    }\r\n\r\n    managePatientSelection(selectedPatientMrn: any) {\r\n        this.patientClinicMrn = selectedPatientMrn;\r\n        this.displayPatientAdvancedSearch = false;\r\n        this.getPatient()\r\n    }\r\n\r\n    handleEventResize(e: any) {\r\n        alert('Event resized');\r\n    }\r\n\r\n    handleEventDrop(e: any) {\r\n        alert('Event dropped');\r\n    }\r\n\r\n    getSelectedAppointment(appointmentWrapper: any) {\r\n        if (appointmentWrapper) {\r\n            // select current doctor \r\n            let selectedItem = this.getSelectedDoctor(appointmentWrapper.doctorId);\r\n\r\n            if (selectedItem) {\r\n                this.selectedDoctor = selectedItem;\r\n                this.handelSelectedNode(selectedItem);\r\n\r\n                this.gotoDateString = appointmentWrapper.appointmentDate;\r\n                this.selectedAppointmentIDFromSearch = appointmentWrapper.id;\r\n                this.btnCloseReceptionistSearchPopup.nativeElement.click();\r\n            }\r\n        }\r\n    }\r\n\r\n    getSelectedDoctor(doctorID: any): any {\r\n        let selectedNode;\r\n        for (let node of this.organizationStructureTree) {\r\n            selectedNode = this.getDoctorNode(node, doctorID);\r\n            if (selectedNode)\r\n                break;\r\n        }\r\n\r\n        return selectedNode;\r\n    }\r\n\r\n    private getDoctorNode(node: any, doctorID: Number): any {\r\n\r\n        if (node.children) {\r\n\r\n            for (let childNode of node.children) {\r\n                if (childNode.type == 'SecurityUser' && childNode.data == doctorID) {\r\n                    return childNode;\r\n                }\r\n                else\r\n                    return this.getDoctorNode(childNode, doctorID);\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    openPatientProfile() {\r\n        this.router.navigate(['/patient/file', this.patientId]);\r\n        this.btnCloseAppointmentPopup.nativeElement.click();\r\n    }\r\n\r\n    inquireWaitInAppointment() {\r\n\r\n        this.waitInInquiry = '';\r\n\r\n        if ((!this.appointmentModel || this.appointmentModel.id == 0) && this.selectedDate) {\r\n\r\n            this.appointmentModel.dateTime = this.utilityClass.getUtcDateTime(this.selectedDate);\r\n            this.appointmentModel.doctorId = this.doctorId;\r\n        }\r\n\r\n        let vm = this;\r\n        this.receptionistService.inquiryWaitInAppointment(this.appointmentModel)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    vm.waitInInquiry = response;\r\n                },\r\n                function (error: any) {\r\n\r\n                },\r\n                function () {\r\n\r\n                });\r\n    }\r\n\r\n    getServiceTimeSlots(serviceTimeSlotId: string) {\r\n        var serviceTimeSlot = this.serviceTimeSlotsList.find(srv => srv.id == serviceTimeSlotId);\r\n\r\n        if (serviceTimeSlot) {\r\n            this.numberOfTimeSlots = serviceTimeSlot.noOfTimeSlots;\r\n        }\r\n    }\r\n\r\n    handelDayClickEvent(e: any) {\r\n        alert(e.calEvent.date);\r\n    }\r\n\r\n    GetSelectedDateAppointmentsToPrint() {\r\n        let selectedDayAppoitmentsOriginal: any[] = [];\r\n        let vm = this;\r\n\r\n        if (this.isDayView && this.events) {\r\n            for (let event of this.events) {\r\n                if (event.dateTime && this.utilityClass.getDateTimeFromString(event.dateTime).getDate() == this.dayViewSelectedDate.getDate()) {\r\n                    let evnt: any = {};\r\n                    evnt.dateTime = this.utilityClass.getDateTimeFromString(event.start);\r\n                    evnt.title = this.utilityClass.getAppointmentTime(event.start, event.end) + event.fullTitle;\r\n                    selectedDayAppoitmentsOriginal.push(evnt);\r\n                }\r\n            }\r\n\r\n            // order apointments by datetime\r\n            selectedDayAppoitmentsOriginal.sort(function (a, b) {\r\n                // to get a value that is either negative, positive, or zero.\r\n                return a.dateTime - b.dateTime;\r\n            });\r\n\r\n            this.SelectedDayAppoitments = [];\r\n            for (let event of selectedDayAppoitmentsOriginal) {\r\n                var items = event.title.split('**');\r\n                this.SelectedDayAppoitments.push({\r\n                    time: items[0],\r\n                    mrn: items[1],\r\n                    name: items[2],\r\n                    mobile: items[3],\r\n                    arrivalTime: items[4],\r\n                    confirmed: items[5],\r\n                    remarks: items[6]\r\n                });\r\n            }\r\n\r\n            this.btnDisplayCurrentDayAppointment.nativeElement.click();\r\n        }\r\n    }\r\n\r\n    isAppointmentSlotsOpened(timeSlot: Date): boolean {\r\n\r\n        let isSlotOpened = true;\r\n\r\n        if (this.numberOfTimeSlots > 1) {\r\n            for (let i = 0; i < this.numberOfTimeSlots; i++) {\r\n\r\n                let minutes = timeSlot.getMinutes() + (i * this.slotDuration);\r\n                let appointmentDate: Date = new Date(timeSlot.getFullYear(), timeSlot.getMonth(),\r\n                    timeSlot.getDate(), timeSlot.getHours(), timeSlot.getMinutes());\r\n\r\n                appointmentDate.setMinutes(minutes);\r\n\r\n                let slotName = this.utilityClass.getFormattedTime(appointmentDate.getHours(), appointmentDate.getMinutes());\r\n\r\n                let existedSlot = this.timeSlotsList.find(slt => slt.name == slotName);\r\n\r\n                if (existedSlot == null || existedSlot == undefined) {\r\n                    isSlotOpened = false;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return isSlotOpened;\r\n    }\r\n\r\n    handleNavDayClick(event: any) {\r\n\r\n        this.isDayView = true;\r\n        this.dayViewSelectedDate = event.date._d;\r\n        this.selectedDateAsString = this.utilityClass.getUtcDateAsString(this.dayViewSelectedDate);\r\n\r\n        this.GetSelectedDateAppointmentsToPrint();\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class CalendarEvent {\r\n    id!: number;\r\n    title!: string;\r\n    start!: string;\r\n    end!: string;\r\n    rendering!: string;\r\n    className!: string;\r\n    dateTime!: string;\r\n    fullTitle!: string;\r\n}","<div *ngIf=\"showProgress\">\r\n    <loading></loading>\r\n</div>\r\n\r\n<div *ngIf=\"showLoading\">\r\n    <loading></loading>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <shared-tabs [activeTabIndex]=\"9\"></shared-tabs>\r\n    <div class=\"row nopadding\">\r\n\r\n        <div class=\"row NBbreadcrumb\">\r\n            <a>{{ 'ReceptionistProfile' | translate}}</a> &nbsp;/\r\n            {{ 'Appointments' | translate}}\r\n        </div>\r\n\r\n        <div class=\"row well\">\r\n            <div class=\"col-md-3 nopadding\">\r\n                <div class=\"row nopadding\" style=\"padding-bottom: 17px !important;\">\r\n                    <a class=\"pointer  btn btn-primary\" (click)=\"expandAll()\" style=\"padding:9px !important;\">{{ 'ExpandAll' | translate}}</a>\r\n                    <a class=\"pointer  btn btn-primary\" (click)=\"collapseAll()\" style=\"padding:9px !important;\">{{ 'CollapseAll' | translate}}</a>\r\n                </div>\r\n                <!--<p-tree [value]=\"items\"\r\n                selectionMode=\"single\"\r\n                [(selection)]=\"selectedDoctor\"></p-tree>-->\r\n\r\n                <p-tree [value]=\"organizationStructureTree\"\r\n                        selectionMode=\"single\"\r\n                        [(selection)]=\"selectedDoctor\"\r\n                        (onNodeSelect)=\"nodeSelect($event)\">\r\n                    <ng-template let-node pTemplate=\"Medical\">\r\n                        {{lang == 'ar' ? node.label : node.labelTranslation}}\r\n                    </ng-template>\r\n                    <ng-template let-node pTemplate=\"NonMedical\">\r\n                        {{lang == 'ar' ? node.label : node.labelTranslation}}\r\n                    </ng-template>\r\n                    <ng-template let-node pTemplate=\"ClinicDepartment\">\r\n                        {{lang == 'ar' ? node.label : node.labelTranslation}}\r\n                    </ng-template>\r\n                    <ng-template let-node pTemplate=\"ClinicDivision\">\r\n                        {{lang == 'ar' ? node.label : node.labelTranslation}}\r\n                    </ng-template>\r\n                    <ng-template let-node pTemplate=\"SecurityUser\">\r\n                        <span class=\"glyphicon glyphicon-user\"></span>\r\n                        {{lang == 'ar' ? node.label : node.labelTranslation}}\r\n                    </ng-template>\r\n                </p-tree>\r\n            </div>\r\n            <div class=\"col-md-9 padding5\">\r\n\r\n                <div class=\"row btnDirection\" style=\"padding-bottom: 13px !important;\">\r\n                    <button type=\"button\" class=\"btn btn-primary\"\r\n                            (click)=\"addNewAppointment()\" [disabled]=\"!isDoctorSelected || !enableNewAppointmentBtn\">\r\n                        <span class=\"glyphicon glyphicon-time\"></span> {{ 'NewAppointment' | translate}}\r\n                    </button>\r\n                    <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#quickRegistrationModal\" [disabled]=\"!isDoctorSelected || !enableQuickRegistrationBtn\">\r\n                        <span class=\"glyphicon glyphicon-plus\"></span>{{ 'QuickRegistration' | translate}}\r\n                    </button>\r\n                    <div class=\"btn-group\">\r\n                        <button type=\"button\" class=\"btn btn-primary dropdown-toggle\" data-toggle=\"dropdown\">\r\n                            {{ 'Slot' | translate}}\r\n                            <span class=\"caret\"></span>\r\n                        </button>\r\n                        <ul class=\"dropdown-menu\" role=\"menu\">\r\n                            <li>\r\n                                <a *ngIf=\"isDoctorSelected\" class=\"pointer\" (click)=\"showSessionExtensionPopupForOpenSlot()\" [class.disabled]=\"!enableOpenSlotBtn ? true : null\">{{ 'Open' | translate}}</a>\r\n                                <a *ngIf=\"!isDoctorSelected\" class=\"disabled\">{{ 'Open' | translate}}</a>\r\n                            </li>\r\n                            <li>\r\n                                <a *ngIf=\"isDoctorSelected\" class=\"pointer\" (click)=\"showSessionExtensionPopupForCloseSlot()\" [class.disabled]=\"!enableCloseSlot ? true : null\">{{ 'Close' | translate}}</a>\r\n                                <a *ngIf=\"!isDoctorSelected\" class=\"disabled\">{{ 'Close' | translate}}</a>\r\n                            </li>\r\n                            <li>\r\n                                <a *ngIf=\"isDoctorSelected\" class=\"pointer\" (click)=\"showRestoreTimeSlotsPopup()\" [class.disabled]=\"!enableRestoreSlot ? true : null\">{{ 'Restore' | translate}}</a>\r\n                                <a *ngIf=\"!isDoctorSelected\" class=\"disabled\">{{ 'Restore' | translate}}</a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#searchForPatient\">\r\n                        <span class=\"glyphicon glyphicon-search\"></span> {{ 'Search' | translate}}\r\n                    </button>\r\n\r\n                </div>\r\n\r\n                <!--Doctor Info-->\r\n                <div class=\"row\" *ngIf=\"isDoctorSelected\">\r\n                    <div class=\"forum-header\" style=\"margin-left:0px;margin-right:0px;padding:5px;border-radius: 10px;\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-8\">\r\n                                <h2 class=\"forum-title\">\r\n                                    {{lang == 'ar' ? currentDoctor.name : currentDoctor.nameTranslation}}\r\n                                </h2>\r\n                            </div>\r\n                            <div class=\"col-md-4\">\r\n                                <div class=\"forum-meta\" style=\"margin-bottom:0px;\">\r\n                                    <div class=\"forum-meta-info\">\r\n                                        <ul>\r\n                                            <li>\r\n                                                <label>{{ 'Gender' | translate}}:</label>&nbsp; {{ currentDoctor.gender | translate}}\r\n                                            </li>\r\n                                            <li>\r\n                                                <label>{{ 'Nationality' | translate}}:</label>&nbsp; {{lang == 'ar' ? currentDoctor.nationality : currentDoctor.nationalityTranslation}}\r\n                                            </li>\r\n\r\n                                            <!--<li>\r\n                                                <label>{{ 'Mobile' | translate}}: </label>&nbsp;{{currentDoctor.Mobile}}\r\n                                            </li>-->\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div style=\"padding:2px;\"></div>\r\n                </div>\r\n\r\n                <div *ngIf=\"!isDivisionSelected\">\r\n                    <!-- <p-schedule #pSchedule\r\n                                [events]=\"events\"\r\n                                [header]=\"header\"\r\n                                [editable]=\"false\"\r\n                                defaultView=\"agendaWeek\"\r\n                                [options]=\"calendarOptions\"\r\n                                [defaultDate]=\"defaultDate\"\r\n                                [allDaySlot]=\"true\"\r\n                                [slotDuration]=\"calendarSlotDuration\"\r\n                                [slotLabelInterval]=\"calendarSlotDuration\"\r\n                                [contentHeight]=\"500\"\r\n                                [scrollTime]=\"12\"\r\n                                allDayText=\"\"\r\n                                (onEventClick)=\"handleEventClick($event)\"\r\n                                (onViewRender)=\"handleloadEvents($event)\"\r\n                                (onNavLinkDayClick)=\"handleNavDayClick($event)\"></p-schedule> -->\r\n                </div>\r\n                <div *ngIf=\"isDivisionSelected\">\r\n                    <receptionist-division-calendar [divisonId]=\"divisonId\" [divisonName]=\"divisonName\"></receptionist-division-calendar>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- Modal -->\r\n<button type=\"button\" data-toggle=\"modal\" data-target=\"#bookOrCloseModal\" style=\"display:none\" #bookOrCloseModalButton></button>\r\n<div id=\"bookOrCloseModal\" #bookOrCloseModal class=\"modal fade\" role=\"dialog\" data-backdrop=\"static\">\r\n    <div class=\"modal-dialog halfWidth\">\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">{{ 'SelectAction' | translate}}</h4>\r\n            </div>\r\n            <div class=\"modal-body text-center\">\r\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"prepareAndShowNewAppointmentModal()\">{{ 'BookNewAppointment' | translate}}</button>\r\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"prepareAndShowCloseSlotsModal()\">{{ 'CloseSlots' | translate}}</button>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\" style=\"display:none\" #btnCloseBookOrCloseModal>{{ 'Cancel' | translate}}</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<button type=\"button\" data-toggle=\"modal\" data-target=\"#appointmentModal\" style=\"display:none\" #appointmentModalButton></button>\r\n<div id=\"appointmentModal\" #appointmentModal class=\"modal fade\" role=\"dialog\" data-backdrop=\"static\">\r\n    <form *ngIf=\"active\" class=\"form-horizontal\" name=\"appointmentDetailsFrm\" #appointmentDetailsFrm=\"ngForm\">\r\n        <div class=\"modal-dialog width75percent\">\r\n            <!-- Modal content-->\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header\">\r\n                    <button type=\"button\" #btnCloseAppointmentPopup class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                    <h4 class=\"modal-title\">{{ 'AppointmentDetails' | translate}} - {{doctorName}}</h4>\r\n                </div>\r\n                <div class=\"modal-body \">\r\n                    <div *ngIf=\"showProgress\">\r\n                        <loading></loading>\r\n                    </div>\r\n                    <div class=\"row alert alert-info\" style=\"margin-bottom: 5px!important;padding:4px!important;\">\r\n                        {{waitInInquiry}}\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label class=\"control-label col-md-2\">\r\n                            {{ 'Division' | translate}}\r\n                        </label>\r\n                        <div class=\"col-md-4\">\r\n                            {{selectedDivisionName}}\r\n                        </div>\r\n                        <div class=\"col-md-6\">\r\n                            <a class=\"pointer\" *ngIf=\"appointmentModel.id!=0\" (click)=\"openPatientProfile()\">{{ 'OpenPatientFile' | translate}}</a>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label class=\"control-label col-md-2\">\r\n                            {{ 'Date' | translate}}\r\n                        </label>\r\n                        <div class=\"col-md-10\">\r\n                            <p-calendar [(ngModel)]=\"selectedDate\"\r\n                                        [monthNavigator]=\"true\"\r\n                                        [yearNavigator]=\"true\"\r\n                                        dateFormat=\"dd/mm/yy\"\r\n                                        [showIcon]=\"true\" [required]=\"true\"\r\n                                        [ngModelOptions]=\"{standalone: true}\"\r\n                                        yearRange=\"2000:2050\"\r\n                                        (onSelect)=\"onDateSelect($event)\"></p-calendar>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label class=\"control-label col-md-2\">\r\n                            {{ 'Time' | translate}}\r\n                        </label>\r\n                        <div class=\"col-md-4\">\r\n                            <select class=\"form-control\" id=\"ddlTime\" name=\"ddlTime\"\r\n                                    [(ngModel)]=\"selectedTimeSlot\" #ddlTime=\"ngModel\" required>\r\n                                <option *ngFor=\"let itm of timeSlotsList\" [value]=\"itm.name\">{{itm.name}}</option>\r\n                            </select>\r\n                        </div>\r\n                        <label class=\"control-label col-md-2\">\r\n                            {{ 'NumberOfTimeSlots' | translate}}\r\n                        </label>\r\n                        <div class=\"col-md-4\">\r\n                            <input type=\"number\" min=\"1\" id=\"txtNumberOfTimeSlots\" name=\"txtNumberOfTimeSlots\" class=\"form-control\"\r\n                                   [(ngModel)]='numberOfTimeSlots' #txtNumberOfTimeSlots=\"ngModel\" required />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label class=\"control-label col-md-2\">\r\n                            {{ 'MRN' | translate}}\r\n                        </label>\r\n                        <div class=\"col-md-4\">\r\n                            <div class=\"row nopadding\">\r\n                                <div class=\"col-md-6 nopadding\">\r\n                                    <input id=\"txtPatientClinicMrn\" name=\"txtPatientClinicMrn\" class=\"form-control\"\r\n                                           [(ngModel)]='patientClinicMrn' #txtPatientClinicMrn=\"ngModel\" required [disabled]=\"appointmentModel.id>0\" />\r\n                                </div>\r\n                                <div class=\"col-md-6\">\r\n                                    <button *ngIf=\"appointmentModel.id==0\" type=\"button\" class=\"btn btn-primary\" (click)=\"getPatient()\">{{ 'Search' | translate}}</button>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row nopadding\">\r\n                                <a class=\"pointer\" *ngIf=\"appointmentModel.id==0\" (click)=\"showPatientAdvancedSearchDialog()\">{{ 'PatientAdvancedSearch' | translate}}</a>\r\n                            </div>\r\n                        </div>\r\n                        <label class=\"control-label col-md-2\">\r\n                            {{ 'PatientName' | translate}}\r\n                        </label>\r\n                        <div class=\"col-md-4\">\r\n                            <input id=\"txtPatientName\" name=\"txtPatientName\" class=\"form-control\"\r\n                                   [(ngModel)]='patientName' #txtPatientName=\"ngModel\" readonly required />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label class=\"control-label col-md-2\">\r\n                            {{ 'Class' | translate}}\r\n\r\n                        </label>\r\n                        <div class=\"col-md-4\">\r\n                            <table>\r\n                                <tr>\r\n                                    <td *ngFor=\"let item of appointmentClassesList | translateObjects\">\r\n                                        <input type=\"radio\" name=\"appClass\"\r\n                                               (click)=\"selectAppointmentClass(item.id)\"\r\n                                               [value]=\"item.id\" [checked]=\"item.id == appointmentModel.appointmentClassId\" required /> {{item.name}}\r\n                                    </td>\r\n                                </tr>\r\n                            </table>\r\n                        </div>\r\n                        <label class=\"control-label col-md-2\">\r\n                            {{ 'Service' | translate}}\r\n                        </label>\r\n                        <div class=\"col-md-4\">\r\n                            <select class=\"form-control\" name=\"ddlServices\" required\r\n                                    [(ngModel)]=\"appointmentModel.serviceTimeSlotId\" #ddlServices=\"ngModel\" #srv (change)=\"getServiceTimeSlots(srv.value)\">\r\n                                <option class=\"emptyOption\" value=\"\" selected></option>\r\n                                <option *ngFor=\"let itm of serviceTimeSlotsList | translateObjects  : null : null : lstToTranslated\" [value]=\"itm.id\">{{lang == 'ar' ? itm.serviceName : itm.serviceNameTranslation}}</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label class=\"control-label col-md-2\">\r\n                            {{ 'Confirmed' | translate}}\r\n                        </label>\r\n                        <div class=\"col-md-2\">\r\n                            <input type=\"checkbox\" class=\"form-control\" id=\"chkConfirmed\" name=\"chkConfirmed\" [(ngModel)]=\"appointmentModel.confirmed\" #chkConfirmed=\"ngModel\" />\r\n                        </div>\r\n                        <label class=\"control-label col-md-1\">\r\n                            {{ 'Flag' | translate}}\r\n                        </label>\r\n                        <div class=\"col-md-2\">\r\n                            <input type=\"checkbox\" class=\"form-control\" id=\"chkFlag\" name=\"chkFlag\" [(ngModel)]=\"appointmentModel.flag\" #chkFlag=\"ngModel\" />\r\n                        </div>\r\n\r\n                        <!--<div class=\"col-md-2  \">\r\n                            {{ 'VisitType' | translate}}\r\n                        </div>\r\n                        <div class=\"col-md-4\">\r\n                            <select class=\"form-control\" id=\"ddlVisitType\" name=\"ddlVisitType\" required\r\n                                    [(ngModel)]=\"appointmentModel.visitTypeId\" #ddlVisitType=\"ngModel\">\r\n                                <option *ngFor=\"let itm of visitTypesList | translateObjects\" [value]=\"itm.id\">{{itm.name}}</option>\r\n                            </select>\r\n                        </div>-->\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label class=\"control-label col-md-2\">\r\n                            {{ 'Remarks' | translate}}\r\n                        </label>\r\n                        <div class=\"col-md-10\">\r\n                            <textarea id=\"txtRemarks\" name=\"txtRemarks\" class=\"form-control\" [(ngModel)]=\"appointmentModel.description\"></textarea>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                    <div class=\"row text-center\">\r\n                        <button type=\"button\" class=\"btn btn-primary\" (click)=\"saveOrUpdateAppointment()\" [disabled]=\"!appointmentDetailsFrm.form.valid || !enableSaveAppointmentPopupBtn\">{{ 'Save' | translate}}</button>\r\n                        <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\" #btnClostAppointmentModal>{{ 'Cancel' | translate}}</button>\r\n                        <button type=\"button\" (click)=\"showDialog()\" class=\"btn btn-primary\" disabled=\"{{ isUpdatedAppointment && enableSetArrivalTimeBtn ? '' :'disabled'}}\">{{'ArrivalTime' | translate}}</button>\r\n                        <button type=\"button\" (click)=\"showRepeatAppointmentPopup()\" class=\"btn btn-primary\" disabled=\"{{ isUpdatedAppointment ? '' :'disabled'}}\">{{'Repeat' | translate}}</button>\r\n                        <button type=\"button\" (click)=\"showCancelationDialog()\" class=\"btn btn-primary\" disabled=\"{{ isUpdatedAppointment && enableCancelAppointmentBtn ? '' :'disabled'}}\">{{'CancelAppointment' | translate}}</button>\r\n                        <button type=\"button\" (click)=\"showReconfirmDialog()\" class=\"btn btn-primary\" disabled=\"{{ isUpdatedAppointment ? '' :'disabled'}}\">{{'Reconfirm' | translate}}</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </form>\r\n</div>\r\n<!-- <p-dialog id=\"addArrivalTime\" header=\"{{title}}\" [(visible)]=\"display\" [width]=\"600\" [modal]=\"modal\" [responsive]=\"true\" *ngIf=\"isAddArrivalTime\">\r\n    <form *ngIf=\"active\" class=\"form-horizontal well\">\r\n        <div class=\"form-group\">\r\n            <label class=\"control-label col-md-4\">\r\n                {{ ' ArrivalTime' | translate}}\r\n            </label>\r\n            <div class=\"col-md-4\">\r\n                <p-calendar name=\"arrivalTime\" [(ngModel)]=\"arrivalTime\"\r\n                            [required]=\"true\" [timeOnly]=\"true\" [ngModelOptions]=\"{standalone: true}\"></p-calendar>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-offset-8 col-md-4\">\r\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"updateArrivalTime()\">{{ 'Add' | translate}}</button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</p-dialog> -->\r\n<!-- <p-dialog id=\"reconfirmAppointment\" header=\"{{title1}}\" [(visible)]=\"display\" [width]=\"600\" modal=\"modal\" responsive=\"true\" *ngIf=\"isReconfirmedAppointment\">\r\n    <form *ngIf=\"active\" class=\"form-horizontal well\">\r\n        <div class=\"form-group\">\r\n            <label class=\"control-label col-md-2\">\r\n                {{ 'Reconfirm' | translate}}\r\n            </label>\r\n            <div class=\"col-md-4\">\r\n                <input type=\"checkbox\" id=\"chkReconfirm\" name=\"chkReconfirm\" [(ngModel)]=\"appointmentModel.reconfirm\" #chkReconfirm=\"ngModel\" />\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label class=\"control-label col-md-2\">\r\n                {{ 'CallingDate' | translate}}\r\n\r\n\r\n            </label>\r\n            <div class=\"col-md-4\">\r\n                <p-calendar [(ngModel)]=\"reconfirmDate\"\r\n                            [monthNavigator]=\"true\"\r\n                            [yearNavigator]=\"true\"\r\n                            dateFormat=\"dd/mm/yy\"\r\n                            [showIcon]=\"true\" [required]=\"true\"\r\n                            [ngModelOptions]=\"{standalone: true}\"\r\n                            yearRange=\"2000:2050\"></p-calendar>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label class=\"control-label col-md-2\">\r\n                {{ 'CallingTime' | translate}}\r\n            </label>\r\n            <div class=\"col-md-4\">\r\n                <p-calendar name=\"reconfirmationTime\" [(ngModel)]=\"reconfirmTime\"\r\n                            [required]=\"true\" [timeOnly]=\"true\" [ngModelOptions]=\"{standalone: true}\"></p-calendar>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label class=\"control-label col-md-2\">\r\n                {{ 'ReconfirmRemarks' | translate}}\r\n            </label>\r\n            <div class=\"col-md-10\">\r\n                <textarea id=\"txtReconfirmRemarks\" name=\"txtReconfirmRemarks\" class=\"form-control\" [(ngModel)]=\"appointmentModel.reconfirmRemarks\"></textarea>\r\n            </div>\r\n        </div>\r\n        <div class=\"ui-dialog-buttonpane ui-widget-content ui-helper-clearfix\">\r\n            <div class=\"col-md-offset-8 col-md-4\">\r\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"updateReconfirm()\">{{ 'Save' | translate}}</button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</p-dialog> -->\r\n<!-- <p-dialog id=\"cancelAppointment\" header=\"{{title2}}\" [(visible)]=\"display\" [width]=\"600\" modal=\"modal\" responsive=\"true\" *ngIf=\"isCancelledAppointment\">\r\n    <form class=\"form-horizontal well\">\r\n\r\n        <div class=\"form-group\">\r\n            <label class=\"control-label col-md-2\">\r\n                {{ 'Date' | translate}}\r\n            </label>\r\n            <div class=\"col-md-4\">\r\n                <p-calendar [(ngModel)]=\"cancellationDate\"\r\n                            [monthNavigator]=\"true\"\r\n                            [yearNavigator]=\"true\"\r\n                            dateFormat=\"dd/mm/yy\"\r\n                            [disabled]=\"true\"\r\n                            [showIcon]=\"true\"\r\n                            [ngModelOptions]=\"{standalone: true}\"\r\n                            yearRange=\"2000:2050\"></p-calendar>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label class=\"control-label col-md-2\">\r\n                {{ 'Remarks' | translate}}\r\n            </label>\r\n            <div class=\"col-md-10\">\r\n                <textarea id=\"txtCancelationRemarks\" name=\"txtCancelationRemarks\" class=\"form-control\" [(ngModel)]=\"appointmentModel.cancelRemarks\"></textarea>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <div class=\"col-md-offset-2 col-md-4\">\r\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"cancelAppointment()\">{{ 'Cancel' | translate}}</button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</p-dialog> -->\r\n<!--<p-dialog id=\"rescheduleAppointment\" header=\"Reschedule Appointment\" [(visible)]=\"display\" [width]=\"600\" modal=\"modal\" responsive=\"true\" *ngIf=\"isRescheduledAppointment\">\r\n    <form *ngIf=\"active\" class=\"form-horizontal well\">\r\n        <div class=\"form-group\">\r\n            <div class=\"col-md-2 \">\r\n                Date\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <p-calendar [(ngModel)]=\"selectedRescheduledDate\"\r\n                            [monthNavigator]=\"true\"\r\n                            [yearNavigator]=\"true\"\r\n                            dateFormat=\"dd/mm/yy\"\r\n                            [showIcon]=\"true\" [required]=\"true\"\r\n                            [ngModelOptions]=\"{standalone: true}\"\r\n                            yearRange=\"2000:2050\"\r\n                            (onSelect)=\"onDateSelect($event)\"></p-calendar>\r\n            </div>\r\n            <div class=\"col-md-2 \">\r\n                Time\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <select class=\"form-control\" id=\"ddlTime\" name=\"ddlTime\"\r\n                        [(ngModel)]=\"selectedRescheduledTimeSlot\" #ddlTime=\"ngModel\" required>\r\n                    <option *ngFor=\"let itm of rescheduledTimeSlotsList\" [value]=\"itm.name\">{{itm.name}}</option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n        <div class=\"ui-dialog-buttonpane ui-widget-content ui-helper-clearfix\">\r\n            <div class=\"col-md-offset-8 col-md-4\">\r\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"RescheduleAppointment()\">Save</button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</p-dialog>-->\r\n<!-- Session Extension Popup-->\r\n<button type=\"button\" data-toggle=\"modal\" data-target=\"#sessionExtensionSlotModal\" style=\"display:none\" #btnShowSessionExtensionSlotModal></button>\r\n<div id=\"sessionExtensionSlotModal\" #sessionExtensionSlotModal class=\"modal fade\" role=\"dialog\" data-backdrop=\"static\">\r\n    <form *ngIf=\"active\" class=\"form-horizontal\" name=\"sessionExtensionFrm\" #sessionExtensionFrm=\"ngForm\">\r\n        <div class=\"modal-dialog halfWidth\">\r\n            <!-- Modal content-->\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header\">\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                    <h4 class=\"modal-title\">{{sessionExtensionPopupTitle}} - {{doctorName}}</h4>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                    <div *ngIf=\"showProgress\">\r\n                        <loading></loading>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label class=\"control-label col-md-2\">\r\n                            {{ 'Date' | translate}}\r\n                        </label>\r\n                        <div class=\"col-md-6\">\r\n                            <p-calendar [(ngModel)]=\"selectedDateForOpenCloseSlot\"\r\n                                        [monthNavigator]=\"true\"\r\n                                        [yearNavigator]=\"true\"\r\n                                        dateFormat=\"dd/mm/yy\"\r\n                                        [showIcon]=\"true\" [required]=\"true\"\r\n                                        [ngModelOptions]=\"{standalone: true}\"\r\n                                        yearRange=\"2000:2050\"\r\n                                        (onSelect)=\"onOpneCloseSlotDateSelect($event)\"></p-calendar>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label class=\"control-label col-md-2\">\r\n                            {{ 'StartTime' | translate}}\r\n                        </label>\r\n                        <div class=\"col-md-6\">\r\n                            <select class=\"form-control\" id=\"ddlSessionExtensionStartTime\" name=\"ddlSessionExtensionStartTime\"\r\n                                    [(ngModel)]=\"selectedStartTimeForOpenCloseSlot\" #ddlSessionExtensionStartTime=\"ngModel\" required>\r\n                                <option *ngFor=\"let item of entireDayTimeSlotsListForStartTime\" [value]=\"item.name\">{{item.name}}</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label class=\"control-label col-md-2\">\r\n                            {{ 'EndTime' | translate}}\r\n                        </label>\r\n                        <div class=\"col-md-6\">\r\n                            <select class=\"form-control\" id=\"ddlSessionExtensionEndTime\" name=\"ddlSessionExtensionEndTime\"\r\n                                    [(ngModel)]=\"selectedEndTimeForOpenCloseSlot\" #ddlSessionExtensionEndTime=\"ngModel\" required>\r\n                                <option *ngFor=\"let item of entireDayTimeSlotsListForEndTime\" [value]=\"item.name\">{{item.name}}</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label class=\"control-label col-md-2\">\r\n                            {{ 'Remarks' | translate}}\r\n                        </label>\r\n                        <div class=\"col-md-10\">\r\n                            <textarea id=\"txtRemarks\" name=\"txtRemarks\" class=\"form-control\" [(ngModel)]=\"sessionExtension.description\"></textarea>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-offset-4 col-md-4\">\r\n                            <button type=\"button\" class=\"btn btn-primary\" (click)=\"saveSessionExtension()\" [disabled]=\"!sessionExtensionFrm.form.valid\">{{ 'Save' | translate}}</button>\r\n                            <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\" #btnCloseSessionExtensionModal>{{ 'Cancel' | translate}}</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</div>\r\n\r\n<!-- Restore Time Slots Popup-->\r\n<button type=\"button\" data-toggle=\"modal\" data-target=\"#restoreTimeSlotsModal\" style=\"display:none\" #btnShowRestoreTimeSlotsModal></button>\r\n<div id=\"restoreTimeSlotsModal\" #restoreTimeSlotsModal class=\"modal fade\" role=\"dialog\" data-backdrop=\"static\">\r\n    <form *ngIf=\"active\" class=\"form-horizontal\" name=\"restoreTimeSlotsFrm\" #restoreTimeSlotsFrm=\"ngForm\">\r\n        <div class=\"modal-dialog halfWidth\">\r\n            <!-- Modal content-->\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header\">\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                    <h4 class=\"modal-title\">{{ 'RestoreTimeSlot' | translate}} {{doctorName}}</h4>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                    <div *ngIf=\"showProgress\">\r\n                        <loading></loading>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label class=\"control-label col-md-2\">\r\n                            {{ 'Date' | translate}}\r\n                        </label>\r\n                        <div class=\"col-md-6\">\r\n                            <p-calendar [(ngModel)]=\"dateToRestoreTimeSlots\"\r\n                                        [monthNavigator]=\"true\"\r\n                                        [yearNavigator]=\"true\"\r\n                                        dateFormat=\"dd/mm/yy\"\r\n                                        [showIcon]=\"true\" [required]=\"true\"\r\n                                        [ngModelOptions]=\"{standalone: true}\"\r\n                                        yearRange=\"2000:2050\"></p-calendar>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-offset-4 col-md-4\">\r\n                            <button type=\"button\" class=\"btn btn-primary\" (click)=\"restoreTimeSlots()\" [disabled]=\"!restoreTimeSlotsFrm.form.valid\">{{ 'Save' | translate}}</button>\r\n                            <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\" #btnCloseRestoreTimeSlotsModal>{{ 'Cancel' | translate}}</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</div>\r\n\r\n<div id=\"quickRegistrationModal\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog width75percent\">\r\n        <!-- Modal content-->\r\n\r\n\r\n        <div class=\"modal-content\">\r\n\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">{{ 'PatientQuickRegistration' | translate}}</h4>\r\n            </div>\r\n            <form class=\"form-horizontal\" name=\"patientAccountForm\" #patientAccountForm=\"ngForm\">\r\n\r\n                <div class=\"modal-body\">\r\n\r\n                    <div class=\"form-group\">\r\n                        <label class=\"control-label col-md-2\">\r\n                            {{ 'Date' | translate}}\r\n                        </label>\r\n                        <div class=\"col-md-4\">\r\n                            <p-calendar [(ngModel)]=\"selectedDate\"\r\n                                        [monthNavigator]=\"true\"\r\n                                        [yearNavigator]=\"true\"\r\n                                        dateFormat=\"dd/mm/yy\"\r\n                                        [showIcon]=\"true\" [required]=\"true\"\r\n                                        [ngModelOptions]=\"{standalone: true}\"\r\n                                        yearRange=\"2000:2050\"\r\n                                        (onSelect)=\"onDateSelect($event)\"></p-calendar>\r\n                        </div>\r\n                        <label class=\"control-label col-md-2\">\r\n                            {{ 'Time ' | translate}}\r\n                        </label>\r\n                        <div class=\"col-md-4\">\r\n                            <select class=\"form-control\" id=\"ddlTimes\" name=\"ddlTimes\"\r\n                                    [(ngModel)]=\"selectedTimeSlot\" #ddlTimes=\"ngModel\" required>\r\n                                <option *ngFor=\"let itm of timeSlotsList | translateObjects\" [value]=\"itm.name\">{{itm.name}}</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label class=\"control-label col-md-2\">\r\n                            {{ 'FirstName' | translate}}\r\n                        </label>\r\n                        <div class=\"col-md-4\">\r\n                            <input type=\"text\" class=\"form-control\" id=\"firstName\" name=\"firstName\" [(ngModel)]='patientQucikAccount.firstName' #firstName=\"ngModel\" required />\r\n                        </div>\r\n                        <label class=\"control-label col-md-2\">\r\n                            {{ 'MiddleName' | translate}}\r\n                        </label>\r\n                        <div class=\"col-md-4\">\r\n                            <input type=\"text\" class=\"form-control\" id=\"middleName\" name=\"middleName\" [(ngModel)]='patientQucikAccount.middleName' #middleName=\"ngModel\" required />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label class=\"control-label col-md-2\">\r\n                            {{ 'LastName' | translate}}\r\n                        </label>\r\n                        <div class=\"col-md-4\">\r\n                            <input type=\"text\" class=\"form-control\" id=\"lastName\" name=\"lastName\" [(ngModel)]='patientQucikAccount.lastName' #lastName=\"ngModel\" required />\r\n                        </div>\r\n                        <label class=\"control-label col-md-2\">\r\n                            {{ 'Mobile' | translate}}\r\n                        </label>\r\n                        <div class=\"col-md-4\">\r\n                            <input type=\"text\" class=\"form-control\" id=\"mobile\" name=\"mobile\" pattern=\"^(\\+?[0-9]{1,5})?([1-9][0-9]{9})$\" [(ngModel)]='patientQucikAccount.mobileNumber' #mobile=\"ngModel\" required />\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label class=\"control-label col-md-2\">\r\n                            {{ 'BirthDate' | translate}}\r\n                        </label>\r\n                        <div class=\"col-md-4\">\r\n                            <p-calendar [(ngModel)]=\"patientQucikAccount.birthDate\" [monthNavigator]=\"true\" [yearNavigator]=\"true\" dateFormat=\"dd/mm/yy\"\r\n                                        [showIcon]=\"true\" [required]=\"true\" [ngModelOptions]=\"{standalone: true}\" yearRange=\"1900:2050\"></p-calendar>\r\n                        </div>\r\n                        <label class=\"control-label col-md-2\">\r\n                            {{ 'Gender' | translate}}\r\n                        </label>\r\n                        <div class=\"col-md-4\">\r\n                            <table>\r\n                                <tr>\r\n                                    <td>\r\n                                        <input type=\"radio\" id=\"rbGender\" name=\"rbGender\" [(ngModel)]='patientQucikAccount.gender' value=\"1\" />{{ 'Male' | translate}}\r\n                                    </td>\r\n                                    <td>\r\n                                        <input type=\"radio\" id=\"rbGender\" value=\"2\" [(ngModel)]='patientQucikAccount.gender' name=\"rbGender\" />{{ 'Female' | translate}}\r\n                                    </td>\r\n                                </tr>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label class=\"control-label col-md-2\">\r\n                            {{ 'Service' | translate}}\r\n                        </label>\r\n                        <div class=\"col-md-4\">\r\n                            <select class=\"form-control\" id=\"ddlQuickRegisterationServices\" name=\"ddlQuickRegisterationServices\" required\r\n                                    [(ngModel)]=\"patientQucikAccount.serviceTimeSlotId\" #ddlQuickRegisterationServices=\"ngModel\" #srv (change)=\"getServiceTimeSlots(srv.value)\">\r\n                                <option *ngFor=\"let itm of serviceTimeSlotsList\" [value]=\"itm.id\">{{lang == 'ar' ? itm.serviceName : itm.serviceNameTranslation}}</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-offset-4 col-md-8\">\r\n                            <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" [disabled]=\"!patientAccountForm.valid || !enableQuickRegistrationBtn\" (click)=\"createQuickPateintAccount()\">{{ 'Register' | translate}} </button>\r\n                            <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">{{ 'Cancel' | translate}} </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n\r\n\r\n    </div>\r\n</div>\r\n<div id=\"searchForPatient\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog fullWidth\">\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">{{ 'Search' | translate}} </h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <receptionist-search (onAppointmentSelected)=\"getSelectedAppointment($event)\"></receptionist-search>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <div class=\"row\">\r\n                    <div class=\"text-center\">\r\n                        <button type=\"button\" class=\"btn btn-danger\" #btnCloseReceptionistSearchPopup data-dismiss=\"modal\">{{ 'Close' | translate}} </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<!-- <p-dialog id=\"repeatAppointment\" header=\"Repeat Appointment\" [(visible)]=\"displayRepeatAppointmentPopup\" [width]=\"750\" modal=\"modal\" responsive=\"true\" *ngIf=\"displayRepeatAppointmentPopup\">\r\n    <form *ngIf=\"active\" class=\"form-horizontal well\" name=\"repeatAppointmentFrm\" #repeatAppointmentFrm=\"ngForm\">\r\n        <div class=\"modal-body\">\r\n            <div *ngIf=\"showProgress\">\r\n                <loading></loading>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label class=\"control-label col-md-1\">\r\n                    {{ 'Date' | translate}}\r\n                </label>\r\n                <div class=\"col-md-5\">\r\n                    <p-calendar [(ngModel)]=\"selectedRepeatDate\"\r\n                                [monthNavigator]=\"true\"\r\n                                [yearNavigator]=\"true\"\r\n                                dateFormat=\"dd/mm/yy\"\r\n                                [showIcon]=\"true\" [required]=\"true\"\r\n                                [ngModelOptions]=\"{standalone: true}\"\r\n                                yearRange=\"2000:2050\"\r\n                                (onSelect)=\"onRepeatDateSelect($event)\"></p-calendar>\r\n                </div>\r\n                <label class=\"control-label col-md-2\">\r\n                    {{ 'Time' | translate}}\r\n                </label>\r\n                <div class=\"col-md-4\">\r\n                    <select class=\"form-control\" id=\"ddlTime\" name=\"ddlTime\"\r\n                            [(ngModel)]=\"selectedRepeatTimeSlot\" #ddlTime=\"ngModel\" required>\r\n                        <option *ngFor=\"let itm of repeatingTimeSlotsList\" [value]=\"itm.name\">{{itm.name}}</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label class=\"control-label col-md-1\">\r\n                    {{ 'Class' | translate}}\r\n                </label>\r\n                <div class=\"col-md-5\">\r\n                    <table>\r\n                        <tr>\r\n                            <td *ngFor=\"let item of appointmentClassesList\">\r\n                                <input type=\"radio\" name=\"appClass\"\r\n                                       (click)=\"selectRepeatedAppointmentClass(item.id)\"\r\n                                       [value]=\"item.id\" [checked]=\"item.id == repeatedAppointmentModel.appointmentClassId\" /> {{item.name}}\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                </div>\r\n\r\n                <label class=\"control-label col-md-2\">\r\n                    {{ 'Service' | translate}}\r\n                </label>\r\n                <div class=\"col-md-4\">\r\n                    <select class=\"form-control\" id=\"ddlServicesForReapeated\" name=\"ddlServicesForReapeated\" required\r\n                            [(ngModel)]=\"repeatedAppointmentModel.serviceTimeSlotId\" #ddlServicesForReapeated=\"ngModel\" #srv (change)=\"getServiceTimeSlots(srv.value)\">\r\n                        <option *ngFor=\"let itm of serviceTimeSlotsList | translateObjects  : null : null : lstToTranslated\" [value]=\"itm.id\">{{lang == 'ar' ? itm.serviceName : itm.serviceNameTranslation}}</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label class=\"control-label col-md-1\">\r\n                    {{ 'FLag' | translate}}\r\n                </label>\r\n                <div class=\"col-md-5\">\r\n                    <input type=\"checkbox\" class=\"form-control\" id=\"chkFlag\" name=\"chkFlag\" [(ngModel)]=\"repeatedAppointmentModel.flag\" #chkFlag=\"ngModel\" />\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label class=\"control-label col-md-2\">\r\n                    {{ 'Remarks' | translate}}\r\n                </label>\r\n                <div class=\"col-md-10\">\r\n                    <textarea id=\"txtRemarks\" name=\"txtRemarks\" class=\"form-control\" [(ngModel)]=\"repeatedAppointmentModel.description\"></textarea>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-offset-4 col-md-8\">\r\n                    <button type=\"button\" class=\"btn btn-primary\" (click)=\"saveRepeatedAppointment()\" [disabled]=\"!repeatAppointmentFrm.form.valid\">{{ 'Save' | translate}}</button>\r\n                    <button type=\"button\" class=\"btn btn-danger\" (click)=\"cancelRepeatingAppointment()\">{{ 'Cancel' | translate}}</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</p-dialog> -->\r\n\r\n<!-- <p-dialog contentHeight=\"500\" [header]=\"'SearchForPatient' | translate\" [(visible)]=\"displayPatientAdvancedSearch\" [resizable]=\"true\" [width]=\"800\" [responsive]=\"true\" [height]=\"auto\">\r\n    <patient-search [showEdit]=\"showEditPatient\" [showSelect]=\"showSelectPatient\" (patientSelected)=\"managePatientSelection($event)\"></patient-search>\r\n</p-dialog> -->\r\n\r\n\r\n\r\n<button type=\"button\" #btnDisplayCurrentDayAppointment class=\"hidden\" data-toggle=\"modal\" data-target=\"#selectedDayAppoitments\"></button>\r\n<div id=\"selectedDayAppoitments\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog width75percent\">\r\n        <!-- Modal content-->\r\n\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">{{ 'Appointments' | translate}}:  {{selectedDateAsString}}</h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n\r\n                <print-page [section]='toPrintDiv'></print-page>\r\n\r\n                <div id=\"todayAppoinmentsDivasd\">\r\n                    <div class=\"hidden\">\r\n                        <div class=\"row text-center\">\r\n                            <span class=\"user-thumb\">\r\n                                <img src=\"{{accountService.profileImagePath}}\" alt=\"image\">\r\n                            </span>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <strong>\r\n                                {{'DoctorName' | translate}}:&nbsp;&nbsp;\r\n                            </strong>\r\n                            {{doctorName}}\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <strong>\r\n                                {{'Date' | translate}}:&nbsp;&nbsp;\r\n                            </strong>\r\n                            {{dayViewSelectedDate | date:'dd/MM/yyyy'}}\r\n                        </div>\r\n                        <div class=\"padding5\">&nbsp;</div>\r\n\r\n                    </div>\r\n                    <table class=\"table table-responsive table-hover table-bordered\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th class=\"text-center\">{{'Time' | translate}}</th>\r\n                                <th class=\"text-center\">{{'MRN' | translate}}</th>\r\n                                <th class=\"text-center\">{{'Name' | translate}}</th>\r\n                                <th class=\"text-center\">{{'Mobile' | translate}}</th>\r\n                                <th class=\"text-center\">{{'ArrivalTime' | translate}}</th>\r\n                                <th class=\"text-center\">{{'Confirmed' | translate}}</th>\r\n                                <th class=\"text-center\">{{'Remarks' | translate}}</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor=\"let evnt of SelectedDayAppoitments\">\r\n                                <!--<td class=\"col-md-1\" *ngIf=\"evnt.fullTitle\" >{{ ( utilityClass.getUtcDateFromString(evnt.dateTime).getDate() == dayViewSelectedDate.getDate()) ? (utilityClass.getAppointmentTime(evnt.start , evnt.end) + ' - ' + evnt.fullTitle ) : ''}} </td>-->\r\n                                <td>{{ evnt.time }} </td>\r\n                                <td>{{ evnt.mrn }} </td>\r\n                                <td>{{ evnt.name }} </td>\r\n                                <td>{{ evnt.mobile }} </td>\r\n                                <td>{{ evnt.arrivalTime }} </td>\r\n                                <td class=\"text-center\">\r\n                                    <img *ngIf=\"evnt.confirmed == 'True'\" src=\"assets/images/ok-24.jpg\" title=\"Confirmed\" alt=\"Confirmed\" />\r\n                                </td>\r\n                                <td>{{ evnt.remarks }} </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n                <div id=\"todayAppoinmentsDiv\" class=\"hidden\">\r\n                    <div>\r\n                        <div class=\"row text-center\">\r\n                            <span class=\"user-thumb\">\r\n                                <img src=\"{{accountService.profileImagePath}}\" alt=\"image\">\r\n                            </span>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <strong>\r\n                                {{'DoctorName' | translate}}:&nbsp;&nbsp;\r\n                            </strong>\r\n                            {{doctorName}}\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <strong>\r\n                                {{'Date' | translate}}:&nbsp;&nbsp;\r\n                            </strong>\r\n                            {{dayViewSelectedDate | date:'dd/MM/yyyy'}}\r\n                        </div>\r\n                        <div class=\"padding5\">&nbsp;</div>\r\n\r\n                    </div>\r\n                    <table class=\"table table-responsive table-hover table-bordered\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th class=\"text-center\">{{'Time' | translate}}</th>\r\n                                <th class=\"text-center\">{{'MRN' | translate}}</th>\r\n                                <th class=\"text-center\">{{'Name' | translate}}</th>\r\n                                <th class=\"text-center\">{{'Mobile' | translate}}</th>\r\n                                <th class=\"text-center\">{{'ArrivalTime' | translate}}</th>\r\n                                <th class=\"text-center\">{{'Confirmed' | translate}}</th>\r\n                                <th class=\"text-center\">{{'Remarks' | translate}}</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor=\"let evnt of SelectedDayAppoitments\">\r\n                                <td>{{ evnt.time }} </td>\r\n                                <td>{{ evnt.mrn }} </td>\r\n                                <td>{{ evnt.name }} </td>\r\n                                <td>{{ evnt.mobile }} </td>\r\n                                <td>{{ evnt.arrivalTime }} </td>\r\n                                <td class=\"text-center\">\r\n                                    <img *ngIf=\"evnt.confirmed == 'True'\" src=\"assets/images/ok-24.jpg\" title=\"Confirmed\" alt=\"Confirmed\" />\r\n                                </td>\r\n                                <td>{{ evnt.remarks }} </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { ReceptionistService } from '../shared/receptionist.service'\r\nimport { SharedService } from '../../shared/shared/shared.service';\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\n\r\n@Component({\r\n\r\n    selector: 'receptionist-basic',\r\n    templateUrl: 'receptionist-basic.component.html',\r\n})\r\n\r\nexport class ReceptionistBasicComponent implements OnInit {\r\n    selectBasicTab: boolean = true;\r\n\r\n    active = true;\r\n    model: any = {};\r\n\r\n    classifications: any = [];\r\n    showProgress = false;\r\n    @ViewChild(\"fileInput\") fileInput!: any;\r\n\r\n    constructor(private organizationService: ReceptionistService\r\n        , private sharedService: SharedService\r\n        , public toastr: ToastrService\r\n        , private _route: ActivatedRoute\r\n        , public storage: LocalStorageService\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        /*let vm = this;\r\n       \r\n        let id = this._route.snapshot.params['id'];\r\n        this.model.id = `${id}`;\r\n        vm.showProgress = true;\r\n\r\n        //get all calssifications from DB\r\n        this.organizationService.getOrganizationBasicWrapper()\r\n            .subscribe(\r\n            function (response:any) {\r\n                vm.classifications = response.classifications;\r\n            },\r\n            function (error:any) { \r\n                vm.toastr.error('Failed to Load Data - ' + error, '');\r\n            },\r\n            function () {\r\n                vm.showProgress = false;\r\n            });\r\n\r\n        // get organization in case of update\r\n        if (this.model.id.toString().toLowerCase() != 'new') {\r\n            vm.showProgress = true;\r\n            this.organizationService.getOrganizationsById(this.model.id)\r\n                .subscribe(\r\n                function (response:any) {\r\n                    vm.model = response;\r\n                },\r\n                function (error:any) { \r\n                    vm.toastr.error('Failed to get organization with ID:' + this.model.id + \" - \" + error, '');\r\n                    vm.showProgress = false;\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n        }\r\n        */\r\n    }\r\n\r\n    onSubmit(): void {\r\n        /*let vm = this;\r\n        vm.showProgress = true;\r\n\r\n        if (!this.model.hasOwnProperty('id') || this.model.id.toString().toLowerCase() == 'new') {\r\n            // Add new\r\n            this.organizationService.saveOrganization(this.model)\r\n                //.subscribe(\r\n                //organization => this.model = organization,\r\n                //error => this.errorMessage = <any>error);\r\n                .subscribe(\r\n                function (response:any) {\r\n                    vm.toastr.success('Saved Successfully', '');\r\n                    vm.model = response;\r\n\r\n                    // store selected organization ID\r\n                    vm.storage.store(\"OrganizationID\", vm.model.id);\r\n                    if (response.imageData != null) {\r\n                        vm.model.imageData = response.imageData;\r\n                        vm.model.imageId = response.imageId;\r\n                    }\r\n                },\r\n                function (error:any) { \r\n                    //console.log(\"Error happened\" + error)\r\n                    vm.toastr.error('حدث خطأ أثناء الحفظ - ' + error, '');\r\n                    vm.showProgress = false;\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                }\r\n                );\r\n        }\r\n        else {\r\n            // update \r\n            this.organizationService.updateOrganization(this.model)\r\n                .subscribe(\r\n                function (response:any) {\r\n                    vm.toastr.success('Saved Successfully', '');\r\n                    vm.model = response;\r\n\r\n                    if (response.imageData != null) {\r\n                        vm.model.imageData = response.imageData;\r\n                        vm.model.imageId = response.imageId;\r\n                    }\r\n                },\r\n                function (error:any) { \r\n                    //console.log(\"Error happened\" + error)\r\n                    vm.toastr.error('حدث خطأ أثناء الحفظ - ' + error, '');\r\n                    vm.showProgress = false;\r\n                },\r\n                function () {\r\n                    vm.showProgress = false;\r\n                });\r\n        }*/\r\n    }\r\n\r\n    clear(): void {\r\n        this.model = {};\r\n        this.active = false;\r\n        // store selected Organization ID\r\n        this.storage.store(\"OrganizationID\", 'new');\r\n        setTimeout(() => this.active = true, 0);\r\n    }\r\n\r\n    deleteOrganization(id: any): void {\r\n        /*let vm = this;\r\n        if (id == undefined || isNaN(id)) {\r\n            vm.toastr.warning('لايوجد جمعية مختارة لمسحها', '');\r\n            return;\r\n        }\r\n\r\n        vm.showProgress = true;\r\n        this.organizationService.deleteOrganization(id)\r\n            .subscribe(\r\n            function (response:any) {\r\n                vm.toastr.success('Deleted successfully', '');\r\n                vm.clear();\r\n\r\n                // store selected organization ID\r\n                vm.storage.store(\"OrganizationID\", 'new');\r\n            },\r\n            function (error:any) { \r\n                //console.log(\"Error happened\" + error)\r\n                vm.toastr.error('Failed to Delete - ' + error, '');\r\n            },\r\n            function () {\r\n                vm.showProgress = false;\r\n            });*/\r\n    }\r\n\r\n    imageChanged(response: any) {\r\n        let attchmentInfo: any = {};\r\n\r\n        if (response != null) {\r\n\r\n            if (response.originalName == undefined) {\r\n                this.model.attachmentInfo = null;\r\n                return;\r\n            }\r\n\r\n            this.model.attachmentInfo = attchmentInfo;\r\n            this.model.attachmentInfo.originalName = response.originalName;\r\n            this.model.attachmentInfo.keyName = response.keyName;\r\n            this.model.attachmentInfo.fullPath = response.fullPath;\r\n            this.model.attachmentInfo.fileType = response.fileType;\r\n        }\r\n        else {\r\n            this.model.attachmentInfo = null;\r\n        }\r\n\r\n    }\r\n\r\n}","<div *ngIf=\"showProgress\">\r\n    <loading></loading>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <shared-tabs [activeTabIndex]=\"7\"></shared-tabs>\r\n    <div class=\"row nopadding\">\r\n        <div class=\"page-breadcrumb\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-7\">\r\n                    <div class=\"page-breadcrumb-wrap\">\r\n                        <div class=\"page-breadcrumb-info\">\r\n                            <ul class=\"list-page-breadcrumb\">\r\n                                <li>\r\n                                    <a >{{ 'ReceptionistProfile' | translate}}</a>\r\n                                </li>\r\n                                <li class=\"active-page\"> {{ 'PersonalData' | translate}}</li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-5\">\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <form novalidate *ngIf=\"active\" class=\"form-horizontal\" name=\"organizationForm\" (ngSubmit)=\"onSubmit()\" #organizationForm=\"ngForm\">\r\n            <div class=\"form-group\">\r\n                <div class=\"col-md-4 col-md-offset-2\">\r\n                    <button class=\"btn btn-primary\" [disabled]=\"!organizationForm.form.valid\">{{ 'Save' | translate}} </button>\r\n                    <button type=\"button\" class=\"btn btn-primary\" (click)=\"clear()\">{{ 'Cancel' | translate}} </button>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"txtName\" class=\"control-label col-md-2\">{{ 'IdNumber' | translate}} </label>\r\n                <div class=\"col-md-4\">\r\n                    <input id=\"txtName\" name=\"txtName\" class=\"form-control\" [(ngModel)]='model.name' #txtName=\"ngModel\" required />\r\n                    <div [hidden]=\"txtName.valid || txtName.pristine\" class=\"alert alert-danger\">\r\n                        {{ 'RequiredField' | translate}}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"txtName\" class=\"control-label col-md-2\">{{ 'PassportNumber' | translate}}</label>\r\n                <div class=\"col-md-4\">\r\n                    <input id=\"txtName\" name=\"txtName\" class=\"form-control\" [(ngModel)]='model.name' #txtName=\"ngModel\" required />\r\n                    <div [hidden]=\"txtName.valid || txtName.pristine\" class=\"alert alert-danger\">\r\n                        Required\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"txtName\" class=\"control-label col-md-2\">{{ 'BirthDate' | translate}}</label>\r\n                <div class=\"col-md-2\">\r\n                    <input type=\"date\" min=\"1900\" id=\"txtEstablishmentYear\" name=\"txtEstablishmentYear\" #txtEstablishmentYear=\"ngModel\" class=\"form-control\" [(ngModel)]=\"model.establishmentYear\" />\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"rbGender\" class=\"control-label col-md-2\">{{ 'Gender' | translate}}</label>\r\n                <div class=\"col-md-4\">\r\n                    <table>\r\n                        <tr>\r\n                            <td>\r\n                                <input type=\"radio\" name=\"gender\" />{{ 'Male' | translate}}\r\n                            </td>\r\n                            <td>\r\n                                <input type=\"radio\" name=\"gender\" />{{ 'Female' | translate}}\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label class=\"control-label col-md-2\" for=\"ddlClassification\"> {{ 'Speciality' | translate}}</label>\r\n                <div class=\"col-md-4\">\r\n                    <select class=\"form-control\" id=\"ddlClassification\" name=\"ddlClassification\" [(ngModel)]=\"model.classificationId\" #ddlClassification=\"ngModel\" disabled>\r\n                        <option *ngFor=\"let ele of classifications\" [value]=\"ele.id\">{{ele.name}}</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label class=\"control-label col-md-2\" for=\"ddlClassification\">{{ 'Qualification' | translate}}</label>\r\n                <div class=\"col-md-4\">\r\n                    <select class=\"form-control\" id=\"ddlClassification\" name=\"ddlClassification\" [(ngModel)]=\"model.classificationId\" #ddlClassification=\"ngModel\" disabled>\r\n                        <option *ngFor=\"let ele of classifications\" [value]=\"ele.id\">{{ele.name}}</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"fileImage\" class=\"control-label col-md-2\">{{ 'Photo' | translate}} </label>\r\n                <div class=\"col-md-4\">\r\n                    <image-uploader [imageId]=\"model.imageId\" [imageData]=\"model.imageData\" (change)=\"imageChanged($event);\"></image-uploader>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <div class=\"col-md-4 col-md-offset-2\">\r\n                    <button class=\"btn btn-primary\" [disabled]=\"!organizationForm.form.valid\">{{ 'Save' | translate}} </button>\r\n                    <button type=\"button\" class=\"btn btn-primary\" (click)=\"clear()\">{{ 'Cancel' | translate}} </button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n\r\n","import { Component, OnInit, OnChanges, Input } from '@angular/core';\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\nimport { ReceptionistService } from '../shared/receptionist.service'\r\nimport { ReceptionistAppointmentManager } from '../shared/receptionist-appointment.manager'\r\n\r\nimport { UtilityClass } from '../../shared/shared/utility.class'\r\nimport { calendarSlotDuration } from '../../app.config';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\n\r\n\r\n@Component({\r\n\r\n    selector: 'receptionist-division-calendar',\r\n    templateUrl: 'receptionist-division-calendar.component.html',\r\n})\r\n\r\nexport class ReceptionistDivisionCalendarComponent implements OnInit, OnChanges {\r\n\r\n    @Input() divisonId: any;\r\n    @Input() divisonName!: string;\r\n\r\n    utilityClass: UtilityClass = new UtilityClass();\r\n    receptionistAppointmentManager: ReceptionistAppointmentManager = new ReceptionistAppointmentManager([], []);\r\n\r\n    dayTimeSlotsList: any[] = [];\r\n    showProgress: boolean = false;\r\n    doctorsList: any[] = [];\r\n\r\n    today!: string;\r\n    lang: string = '';\r\n\r\n    constructor(\r\n        private receptionistService: ReceptionistService,\r\n        private toastr: ToastrService,\r\n        private localStorage: LocalStorageService) { }\r\n\r\n    ngOnInit() {\r\n        this.lang = this.localStorage.retrieve('SelectedLanguage');\r\n    }\r\n\r\n    ngOnChanges() {\r\n        this.loadDoctorsWithAppointments();\r\n\r\n        this.dayTimeSlotsList = this.receptionistAppointmentManager.getFullDayTimeSlots(null);\r\n\r\n        this.today = this.utilityClass.getISODateFormat(new Date());\r\n\r\n    }\r\n\r\n    loadDoctorsWithAppointments() {\r\n\r\n        this.showProgress = true;\r\n        let thisComp = this;\r\n        this.receptionistService.getDivisionDoctorsWithAppointments(this.divisonId)\r\n            .subscribe(\r\n                function (response: any) {\r\n\r\n                    thisComp.doctorsList = response;\r\n\r\n                },\r\n                function (error: any) {\r\n                    thisComp.toastr.error(error, '');\r\n                    thisComp.showProgress = false;\r\n                },\r\n                function () {\r\n                    thisComp.showProgress = false;\r\n                });\r\n    }\r\n\r\n    getAppointmentTitle(doctor: any, slotName: any): string {\r\n        let appointmentTitle = '';\r\n        if (doctor.appointments != undefined && doctor.appointments != null && doctor.appointments.length > 0) {\r\n            let appointment = doctor.appointments.find((app: any) => app.time == slotName && app.cancelled != true);\r\n            if (appointment != undefined)\r\n                appointmentTitle = appointment.patientName;\r\n        }\r\n\r\n        return appointmentTitle;\r\n    }\r\n\r\n    getClassName(doctor: any, slotName: any): string {\r\n\r\n        if (doctor.appointments != undefined) {\r\n            let appointment = doctor.appointments.find((app: any) => app.time == slotName);\r\n            if (appointment != undefined)\r\n                return 'dividion-calendar-event';//Return the event style if there is an appointment\r\n        }\r\n\r\n        return '';\r\n    }\r\n\r\n\r\n}\r\n","<div *ngIf=\"showProgress\">\r\n    <loading></loading>\r\n</div>\r\n\r\n<div class=\"padding5\">\r\n    <h3 class=\"text-center\">\r\n        {{divisonName}} - {{ 'Appointments' | translate}} - {{ 'Today' | translate}}: {{today}}\r\n    </h3>\r\n    <div class=\"div-dividion-calendar\">\r\n        <table class=\"table table-responsive table-hover table-bordered\">\r\n            <thead>\r\n                <tr>\r\n                    <th class=\"col-md-1\"></th>\r\n                    <th *ngFor=\"let doctr of doctorsList\">\r\n                    {{lang == 'ar' ? doctr.name : doctr.nameTranslation}}\r\n                    </th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let slot of dayTimeSlotsList\">\r\n                    <td class=\"col-md-1\">{{slot.amPmName}}</td>\r\n                    <td *ngFor=\"let doctr of doctorsList\" class=\"{{getClassName(doctr, slot.name)}}\">\r\n                        {{getAppointmentTitle(doctr, slot.name)}}\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport { AccountService } from '../../security/shared/account.service';\r\nimport {UserPermissions} from '../../classes/user-permissions.class';\r\nimport {PermissionKeyEnum} from '../../shared/shared/permission-key.enum';\r\n@Component({\r\n   \r\n    selector: 'receptionist-patients',\r\n    templateUrl: 'receptionist-patients.component.html'\r\n})\r\n\r\nexport class ReceptionistPatientsComponent implements OnInit {\r\n    showActive: boolean = true;\r\n    showEdit: boolean = true;\r\n    showSelect: boolean = false;\r\n    showClose: boolean = false;\r\n    userPermisions: UserPermissions = new UserPermissions();\r\n    key: PermissionKeyEnum = new PermissionKeyEnum();\r\n    enableNewPatientBtn: boolean = false;\r\n    enableEditPatientBtn: boolean = false;\r\n    enableActivatePatientBtn: boolean = false;\r\n    constructor(\r\n        public accountService: AccountService) { }\r\n\r\n    ngOnInit() {\r\n        if (this.accountService.userPermision._isScalar != undefined)\r\n            this.accountService.userPermision.subscribe((item :any)=> this.handleUserInterfaceViews(item));\r\n        else\r\n            this.handleUserInterfaceViews(this.accountService.userPermision);\r\n    }\r\n\r\n    handleUserInterfaceViews(user: any) {\r\n        if (user.permissions != undefined) {\r\n            for (let item of user.permissions) {\r\n                if (item.permission.key == this.key.PatientRegistration && (item.add == true || item.fullControl == true))\r\n                    this.enableNewPatientBtn = true;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n}","\r\n<div class=\"row\">\r\n        <shared-tabs [activeTabIndex]=\"10\"></shared-tabs>\r\n    <div class=\"row nopadding\">\r\n        <div class=\"page-breadcrumb\">\r\n                <div class=\"row \" style=\"padding:13px;\">\r\n                    <div class=\"NBbreadcrumb\">\r\n                        <a>{{ 'ReceptionistProfile' | translate}}</a> &nbsp;/\r\n                        {{ 'Patients' | translate}}\r\n                    </div>\r\n\r\n                </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <h3 class=\"h3Deco\">\r\n                   {{ 'PatientSearch' | translate}}\r\n                </h3>\r\n            </div>\r\n            <div class=\"col-md-8 align-reverse padding5\">\r\n                <button type=\"button\" class=\"btn btn-primary\" routerLink=\"/patient/file/new\" disabled=\"{{ enableNewPatientBtn ? '' :'disabled'}}\">{{ 'CreatePatientFile' | translate}}</button>\r\n            </div>\r\n        </div>\r\n        <div class=\"padding5\">\r\n            <patient-search [showActive] =\"showActive\" [showEdit] =\"showEdit\" [showSelect] =\"showSelect\" [showClose] =\"showClose\"></patient-search>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { ReceptionistService } from '../shared/receptionist.service'\r\nimport { SharedService } from '../../shared/shared/shared.service';\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport {LocalStorageService} from 'ng2-webstorage';\r\n\r\n@Component({\r\n   \r\n    selector: 'receptionist-reports',\r\n    templateUrl: 'receptionist-reports.component.html',\r\n})\r\n\r\nexport class ReceptionistReportsComponent implements OnInit {\r\n\r\n    //selectBasicTab: boolean = true;\r\n    //filterString!:string;\r\n\r\n    //active = true;\r\n    //model: any = {};\r\n  \r\n    //classifications = [];\r\n    //showProgress = false;\r\n    //companyId = '';\r\n    selectTab: boolean = true;\r\n    clinicId = '';\r\n\r\n    constructor(private _route: ActivatedRoute\r\n        , public storage: LocalStorageService)\r\n    { }\r\n\r\n\r\n\r\n\r\n\r\n    ngOnInit(): void {\r\n        //let id = this._route.snapshot.params['id'];\r\n        //this.companyId = `${id}`;\r\n\r\n        this.clinicId = this.storage.retrieve(\"ClinicID\");\r\n\r\n    }\r\n\r\n    openReport(reportName: string) {\r\n\r\n        let lang = this.storage.retrieve(\"SelectedLanguage\");\r\n\r\n        if (lang == null || lang == undefined)\r\n            lang = 'ar';\r\n\r\n        let url = 'reports/' + reportName + \"/\" + \"ReportViewer.aspx?lang=\" + lang + \"&id=\" + this.clinicId;\r\n\r\n        window.open(url);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","\r\n<div class=\"row\">\r\n        <shared-tabs [activeTabIndex]=\"12\"></shared-tabs>\r\n    <div class=\"row nopadding\">\r\n        <div class=\"page-breadcrumb\">\r\n            <div class=\"row \">\r\n                <div class=\"NBbreadcrumb\">\r\n                    <a>{{ 'ReceptionistProfile' | translate}}</a> &nbsp;/\r\n                    {{ 'Reports' | translate}}\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n\r\n        <div class=\"col-md-6\">\r\n            <br />\r\n            <h4 class=\"applyReportStyle h4Deco \">\r\n                <a (click)=\"openReport('PatientsVisitsInPeriodReport')\" class=\"pointer\">\r\n                    {{ 'PatientsVisitsInPeriodReport' | translate}}\r\n                </a>\r\n            </h4>\r\n        </div>\r\n\r\n\r\n        <div class=\"col-md-6\">\r\n            <br />\r\n            <h4 class=\"applyReportStyle h4Deco \">\r\n                <a (click)=\"openReport('UpcomingAppointmentsReport')\" class=\"pointer\">\r\n                    {{ 'UpcomingAppointmentsReport' | translate}}\r\n                </a>\r\n            </h4>\r\n        </div>\r\n\r\n\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild, Output, EventEmitter } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\nimport { ReceptionistService } from '../shared/receptionist.service';\r\nimport { SharedService } from '../../shared/shared/shared.service';\r\n\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\nimport { AccountService } from '../../security/shared/account.service';\r\nimport { UserPermissions } from '../../classes/user-permissions.class';\r\nimport { PermissionKeyEnum } from '../../shared/shared/permission-key.enum';\r\nimport { Table } from 'primeng/table';\r\n\r\n@Component({\r\n\r\n    selector: 'receptionist-requests',\r\n    templateUrl: 'receptionist-requests.component.html',\r\n})\r\n\r\nexport class ReceptionistRequestsComponent implements OnInit {\r\n\r\n    selectBasicTab: boolean = true;\r\n    filterString!: string;\r\n\r\n    active = true;\r\n    model: any = {};\r\n    isConfirmed = false;\r\n    isCanceled = false;\r\n    isPending = true;\r\n    @Output() onBookAppointment = new EventEmitter();\r\n\r\n    patientRequestList!: any[];\r\n    clinicId = \"0\";\r\n    selectedRequestToBeCanceled!: any;\r\n    lstToTranslated: string[] = [];\r\n    showProgress = false;\r\n    @ViewChild(\"fileInput\") fileInput!: any;\r\n    userPermisions: UserPermissions = new UserPermissions();\r\n    key: PermissionKeyEnum = new PermissionKeyEnum();\r\n    enableCancelLink: boolean = false;\r\n    enableConfirmLink: boolean = false;\r\n    @ViewChild('dt') table!: Table;\r\n    constructor(private receptionistService: ReceptionistService\r\n        , public sharedService: SharedService\r\n        , public toastr: ToastrService\r\n        , private _route: ActivatedRoute\r\n        , public storage: LocalStorageService\r\n        , public accountService: AccountService\r\n        , public translate: TranslateService\r\n\r\n    ) {\r\n\r\n        //this.lstToTranslated = ['visitTypeName', 'visitNameTranslation', 'appointmentClassName', 'classNameTranslation', 'patientName', 'patientNameTranslation', 'doctorName', 'doctorNameTranslation'];\r\n    }\r\n\r\n    ngOnInit(): void {\r\n\r\n        let vm = this;\r\n        //this.lstToTranslated = ['doctorName', 'doctorNameTranslation'];\r\n        this.clinicId = this.storage.retrieve(\"ClinicID\");\r\n        vm.showProgress = true;\r\n        vm.loadPatientRequests();\r\n\r\n        if (this.accountService.userPermision._isScalar != undefined)\r\n            this.accountService.userPermision.subscribe((item: any) => this.handleUserInterfaceViews(item));\r\n        else\r\n            this.handleUserInterfaceViews(this.accountService.userPermision);\r\n    }\r\n    loadPatientRequests() {\r\n        let vm = this;\r\n        this.receptionistService.getAllPatientRequests(vm.clinicId).subscribe(\r\n            function (response: any) {\r\n                vm.patientRequestList = response;\r\n            },\r\n            function (error: any) {\r\n                vm.toastr.error(error, '');\r\n            },\r\n            function () { // finally\r\n                vm.showProgress = false;\r\n            });\r\n\r\n    }\r\n    confirmPatientRequest(requestId: string) {\r\n        let vm = this;\r\n        this.receptionistService.confirmPatientRequest(requestId).subscribe(\r\n            function (response: any) {\r\n                let msg = vm.translate.instant(\"SavedSuccessfully\");\r\n                vm.toastr.success(msg, '');\r\n                if (response != undefined)\r\n                    vm.updatePatientRequest(response);\r\n            },\r\n            function (error: any) {\r\n                vm.toastr.error(error, '');\r\n            },\r\n            function () { // finally\r\n                vm.showProgress = false;\r\n            });\r\n\r\n\r\n    }\r\n\r\n    cancelServiceGroup() {\r\n\r\n    }\r\n\r\n    updatePatientRequest(res: any) {\r\n        var request = this.patientRequestList.find(r => r.id == res.id);\r\n        request.status = res.status;\r\n        if (request.status == \"Confimed\") {\r\n            this.isConfirmed = true;\r\n            this.isCanceled = false;\r\n            this.isPending = false;\r\n        } else if (request.status == \"Cancelled\") {\r\n            this.isConfirmed = false;\r\n            this.isCanceled = true;\r\n            this.isPending = false;\r\n        }\r\n    }\r\n    selectRequestToBeCanceled(requestId: string) {\r\n        this.selectedRequestToBeCanceled = requestId;\r\n    }\r\n    cancelPatientRequest() {\r\n        let vm = this;\r\n        //vm.model.id = vm.selectedRequestToBeCanceled;\r\n        var requestToCanceled = vm.patientRequestList.find(r => r.id == vm.selectedRequestToBeCanceled);\r\n        if (requestToCanceled != undefined) {\r\n            requestToCanceled.cancelationReason = vm.model.cancelationReason;\r\n        }\r\n        this.receptionistService.cancelPatientRequest(requestToCanceled).subscribe(\r\n            function (response: any) {\r\n                if (response != undefined)\r\n                    vm.updatePatientRequest(response);\r\n            },\r\n            function (error: any) {\r\n                vm.toastr.error(error, '');\r\n            },\r\n            function () { // finally\r\n                vm.showProgress = false;\r\n            });\r\n    }\r\n    //deleteOrganization(id): void {\r\n    //    /*let vm = this;\r\n    //    if (id == undefined || isNaN(id)) {\r\n    //        vm.toastr.warning('لايوجد جمعية مختارة لمسحها', '');\r\n    //        return;\r\n    //    }\r\n\r\n    //    vm.showProgress = true;\r\n    //    this.organizationService.deleteOrganization(id)\r\n    //        .subscribe(\r\n    //        function (response:any) {\r\n    //            vm.toastr.success('Deleted successfully', '');\r\n    //            vm.clear();\r\n\r\n    //            // store selected organization ID\r\n    //            vm.storage.store(\"OrganizationID\", 'new');\r\n    //        },\r\n    //        function (error:any) { \r\n    //            //console.log(\"Error happened\" + error)\r\n    //            vm.toastr.error('Failed to Delete - ' + error, '');\r\n    //        },\r\n    //        function () {\r\n    //            vm.showProgress = false;\r\n    //        });*/\r\n    //}\r\n\r\n    bookAppoint() {\r\n        this.onBookAppointment.emit();\r\n    }\r\n\r\n    handleUserInterfaceViews(user: any) {\r\n        if (user.permissions != undefined) {\r\n            for (let item of user.permissions) {\r\n                //i want ask cancel request under PatientRegistration or AppointmentSchedule\r\n                if (item.permission.key == this.key.PatientRegistration && (item.edit == true || item.fullControl == true))//PatientRegistration\r\n                    this.enableCancelLink = true;\r\n                else if (item.permission.key == this.key.AppointmentSchedule && (item.add == true || item.fullControl == true))//AppointmentSchedule\r\n                    this.enableConfirmLink = true;\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    close() {\r\n\r\n    }\r\n\r\n}","<div class=\"row\">\r\n    <shared-tabs [activeTabIndex]=\"11\"></shared-tabs>\r\n    <div class=\"row nopadding\">\r\n        <div class=\"page-breadcrumb\">\r\n            <div class=\"row \">\r\n                <div class=\"NBbreadcrumb\">\r\n                    <a>{{ 'ReceptionistProfile' | translate}}</a> &nbsp;/\r\n                    {{ 'GuestPatientRequests' | translate}}\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <div class=\"row well\" style=\"background-color: #f6f7f9 !important;\">\r\n            <div class=\"inner-addon left-addon\">\r\n                <i class=\"glyphicon glyphicon-search\"></i>\r\n                <input pInputText type=\"text\" (input)=\"dt.filterGlobal($event.target.value, 'contains')\"\r\n                    [placeholder]=\"'Search' | translate\" />\r\n            </div>\r\n            <!---New Table-->\r\n            <p-table #dt [value]=\"patientRequestList\" dataKey=\"id\" [rowHover]=\"true\" [rows]=\"10\"\r\n                [showCurrentPageReport]=\"true\" [rowsPerPageOptions]=\"[10,20,30,40,50,100]\" [paginator]=\"true\"\r\n                currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" [filterDelay]=\"0\"\r\n                [globalFilterFields]=\"['name','birthDateString','mobileNumber','gender','dateTimeString','doctorName','time','visitTypeName','appointmentClassName','status']\">\r\n\r\n                <ng-template pTemplate=\"header\">\r\n                    <tr>\r\n                        <th pSortableColumn=\"name\">{{'PatientName' | translate}} <p-sortIcon field=\"name\"></p-sortIcon>\r\n                        </th>\r\n                        <th pSortableColumn=\"birthDateString\">{{'BirthDate' | translate}} <p-sortIcon\r\n                                field=\"birthDateString\"></p-sortIcon>\r\n                        </th>\r\n                        <th pSortableColumn=\"mobileNumber\">{{'Mobile' | translate}} <p-sortIcon\r\n                                field=\"mobileNumber\"></p-sortIcon>\r\n                        </th>\r\n                        <th pSortableColumn=\"gender\">{{'Gender' | translate}} <p-sortIcon field=\"gender\">\r\n                            </p-sortIcon>\r\n                           \r\n                        </th>\r\n                        <th pSortableColumn=\"dateTimeString\">{{'AppointmentDate' | translate}} <p-sortIcon\r\n                                field=\"dateTimeString\"></p-sortIcon>\r\n                        </th>\r\n                        <th pSortableColumn=\"doctorName\">{{'DoctorName' | translate}} <p-sortIcon field=\"doctorName\">\r\n                            </p-sortIcon>\r\n                        </th>\r\n                        <th pSortableColumn=\"time\">{{'AppointmentTime' | translate}} <p-sortIcon field=\"time\"></p-sortIcon>\r\n                        </th>\r\n                        <th pSortableColumn=\"visitTypeName\">{{'Type' | translate}} <p-sortIcon\r\n                                field=\"visitTypeName\"></p-sortIcon>\r\n                        </th>\r\n                        <th pSortableColumn=\"appointmentClassName\">{{'Class' | translate}} <p-sortIcon\r\n                                field=\"appointmentClassName\"></p-sortIcon>\r\n                        </th>\r\n                        <th pSortableColumn=\"status\">{{'Status' | translate}} <p-sortIcon field=\"status\">\r\n                            </p-sortIcon>\r\n                        </th>\r\n                        <th>{{'Confirm' | translate}}\r\n                        </th>\r\n                        <th>{{'Cancel' | translate}}\r\n                        </th>\r\n                    </tr>\r\n\r\n                </ng-template>\r\n                <ng-template pTemplate=\"body\" let-item>\r\n                    <tr class=\"p-selectable-row\">\r\n                        <td>\r\n                            {{item.name}}\r\n                        </td>\r\n                        <td>\r\n                            <span>{{item.birthDateString}}</span>\r\n                        </td>\r\n                        <td>\r\n                            <span>{{item.mobileNumber}}</span>\r\n                        </td>\r\n                        <td>\r\n                            <span>{{item.gender}}</span>\r\n                        </td>\r\n                        <td>\r\n                            <span>{{item.dateTimeString}}</span>\r\n                        </td>\r\n                        <td>\r\n                            <span>{{item.doctorName}}</span>\r\n                        </td>\r\n                        <td>\r\n                            <span>{{item.time}}</span>\r\n                        </td>\r\n                        <td>\r\n                            <span>{{item.visitTypeName}}</span>\r\n                        </td>\r\n                        <td>\r\n                            <span>{{item.appointmentClassName}}</span>\r\n                        </td>\r\n                        <td>\r\n                            <span>{{item.status}}</span>\r\n                        </td>\r\n                        <td>\r\n                            <a class=\"pointer\" (click)=\"confirmPatientRequest(item.id)\"\r\n                                [class.disabled]=\"!enableConfirmLink ? true : null\">\r\n                                <img src=\"assets/images/ok-24.jpg\" />\r\n                            </a>\r\n                        </td>\r\n                        <td style=\"text-align: center\">\r\n                            <a class=\"pointer\" #AddServiceGroup data-toggle=\"modal\" data-target=\"#ServicesGroupPopup\"\r\n                                (click)=\"selectRequestToBeCanceled(item.id)\"\r\n                                [class.disabled]=\"!enableCancelLink ? true : null\">\r\n                                <img src=\"assets/images/cancel-24.png\" />\r\n                            </a>\r\n                        </td>\r\n                    </tr>\r\n                </ng-template>\r\n                <ng-template pTemplate=\"emptymessage\">\r\n                    <tr>\r\n                        <td colspan=\"8\">No data found.</td>\r\n                    </tr>\r\n                </ng-template>\r\n            </p-table>\r\n            <!--End Table-->\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n<div id=\"ServicesGroupPopup\" #ServicesGroupPopup class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n            <!-- Services group Modal -->\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" (click)=\"close()\">&times;</button>\r\n                <h4 class=\"modal-title\"> {{ 'CancelPatientRequest' | translate}}</h4>\r\n            </div>\r\n\r\n            <form *ngIf=\"active\" class=\"form-horizontal\" name=\"servicegroupForm\" #servicegroupForm=\"ngForm\">\r\n                <div class=\"modal-body\">\r\n\r\n                    <div class=\"form-group\">\r\n                        <label for=\"txtGroupRemark\" class=\"control-label col-md-3\">{{ 'CancelationReason' |\r\n                            translate}}</label>\r\n                        <div class=\"col-md-6\">\r\n                            <textarea id=\"txtGroupRemark\" name=\"txtGroupRemark\" class=\"form-control\"\r\n                                [(ngModel)]='model.cancelationReason' #txtGroupRemark=\"ngModel\" required></textarea>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                    <div class=\"text-center\">\r\n                        <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\"\r\n                            (click)=\"cancelPatientRequest()\" [disabled]=\"!servicegroupForm.valid\">{{ 'Save' |\r\n                            translate}}</button>\r\n                        <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\"\r\n                            (click)=\"cancelServiceGroup()\">{{ 'Cancel' | translate}}</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChild, Output, EventEmitter } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { ReceptionistService } from '../shared/receptionist.service'\r\nimport { SharedService } from '../../shared/shared/shared.service';\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\nimport { UtilityClass } from '../../shared/shared/utility.class'\r\nimport { Table } from 'primeng/table';\r\n\r\n@Component({\r\n\r\n    selector: 'receptionist-search',\r\n    templateUrl: 'receptionist-search.component.html',\r\n})\r\n\r\nexport class ReceptionistSearchComponent implements OnInit {\r\n\r\n    utilityClass: UtilityClass = new UtilityClass();\r\n    periodStartDate: Date = new Date();\r\n    periodEndDate: Date = new Date();\r\n    selectBasicTab: boolean = true;\r\n    filterString!: string;\r\n    searchCriteria: any = {};\r\n    appointmentDetails: any = {};\r\n    appointmentCriteria: any = {};\r\n    patientId = '';\r\n    //clinicMrn = '';\r\n    lstToTranslated: string[] = [];\r\n    showActive: boolean = false;\r\n    showEdit: boolean = false;\r\n    showSelect: boolean = true;\r\n    showClose: boolean = true;\r\n\r\n    appointmentId: any;\r\n    matchedPatients: any = [];\r\n    matchedAppontments: any = [];\r\n    active = true;\r\n    model: any = {};\r\n\r\n    @Output() onBookAppointment = new EventEmitter();\r\n    @Output() onAppointmentSelected = new EventEmitter<any>();\r\n\r\n    classifications = [];\r\n    showProgress = false;\r\n    @ViewChild(\"fileInput\") fileInput!: any;\r\n\r\n    toPrintDiv: string = \"matchedAppoitmentsToPrintDiv\";\r\n    doctorsList: any[] = [];\r\n    lang: string = 'en';\r\n    @ViewChild('dt') table!: Table;\r\n    constructor(private receptionistService: ReceptionistService\r\n        , private sharedService: SharedService\r\n        , public toastr: ToastrService\r\n        , private _route: ActivatedRoute\r\n        , public storage: LocalStorageService\r\n        , public translate: TranslateService\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        this.lstToTranslated = ['visitTypeName', 'visitNameTranslation', 'appointmentClassName', 'classNameTranslation', 'patientName', 'patientNameTranslation', 'doctorName', 'doctorNameTranslation'];\r\n        this.lang = this.storage.retrieve('SelectedLanguage');\r\n\r\n        this.getAllDoctorsInClinic();\r\n    }\r\n\r\n    onSubmit(): void {\r\n\r\n    }\r\n\r\n    display: boolean = false;\r\n    todayStatus: boolean = false;\r\n    weekStatus: boolean = false;\r\n    monthStatus: boolean = false;\r\n    yearStatus: boolean = false;\r\n    periodOfTime: boolean = false;\r\n    displayPatientTable: boolean = false;\r\n    pastOrFuture: boolean = false;\r\n\r\n    selectDate(oppintmentDate: string) {\r\n        if (oppintmentDate == \"Days\") {\r\n            this.todayStatus = true;\r\n            this.monthStatus = false;\r\n            this.weekStatus = false;\r\n            this.yearStatus = false;\r\n            this.periodOfTime = false;\r\n            this.pastOrFuture = true;\r\n        }\r\n        else if (oppintmentDate == \"Week\") {\r\n            this.weekStatus = true;\r\n            this.monthStatus = false;\r\n            this.periodOfTime = false;\r\n            this.yearStatus = false;\r\n            this.todayStatus = false;\r\n            this.pastOrFuture = true;\r\n\r\n        }\r\n        else if (oppintmentDate == \"Month\") {\r\n            this.monthStatus = true;\r\n            this.periodOfTime = false;\r\n            this.yearStatus = false;\r\n            this.todayStatus = false;\r\n            this.weekStatus = false;\r\n            this.pastOrFuture = true;\r\n\r\n        }\r\n\r\n        else if (oppintmentDate == \"Year\") {\r\n            this.yearStatus = true;\r\n            this.todayStatus = false;\r\n            this.weekStatus = false;\r\n            this.monthStatus = false;\r\n            this.periodOfTime = false;\r\n            this.pastOrFuture = true;\r\n\r\n        }\r\n        else if (oppintmentDate == \"PeriodOfTime\") {\r\n            this.periodOfTime = true;\r\n            this.yearStatus = false;\r\n            this.todayStatus = false;\r\n            this.weekStatus = false;\r\n            this.monthStatus = false;\r\n            this.pastOrFuture = false;\r\n\r\n\r\n        }\r\n        else {\r\n            this.todayStatus = false;\r\n            this.monthStatus = false;\r\n            this.weekStatus = false;\r\n            this.yearStatus = false;\r\n            this.periodOfTime = false;\r\n            this.pastOrFuture = false;\r\n            //this.appointmentCriteria.receptionistMethodsSearch = \"\";\r\n        }\r\n    }\r\n\r\n    getAllDoctorsInClinic() {\r\n        let thisComponent = this;\r\n        let clinicId = this.storage.retrieve('ClinicId');\r\n        thisComponent.showProgress = true;\r\n        this.receptionistService.getAllDoctorsInClinic(clinicId)\r\n            .subscribe(\r\n                function (response: any) {\r\n                    thisComponent.doctorsList = response;\r\n                },\r\n                function (error: any) {\r\n                    thisComponent.toastr.error(error);\r\n                    thisComponent.showProgress = false;\r\n                },\r\n                function () {\r\n                    thisComponent.showProgress = false;\r\n                });\r\n    }\r\n\r\n    getAllPatients() {\r\n        let thisComponent = this;\r\n        thisComponent.receptionistService.SearchForPatient(thisComponent.searchCriteria)\r\n            .subscribe(\r\n                function (response: any) {\r\n\r\n                    thisComponent.matchedPatients = response;\r\n                    //thisComponent.display = false;\r\n                    //thisComponent.displayPatientTable = true;\r\n\r\n                },\r\n                function (error: any) {\r\n                    thisComponent.toastr.error(error, '');\r\n                    thisComponent.showProgress = false;\r\n                },\r\n                function () { // finally\r\n                    thisComponent.showProgress = false;\r\n                });\r\n\r\n\r\n\r\n\r\n    }\r\n    GetId(appointmentModel: any) {\r\n        this.appointmentId = appointmentModel.id;\r\n        this.onAppointmentSelected.emit(appointmentModel);\r\n        //this.getAppointmentById();\r\n    }\r\n\r\n\r\n    GetAllAppointments() {\r\n        let thisComponent = this;\r\n\r\n        //Update the dates\r\n        if (this.periodOfTime) {\r\n            this.appointmentCriteria.searchStartDate = this.utilityClass.getUtcDate(this.periodStartDate);\r\n            this.appointmentCriteria.searchEndDate = this.utilityClass.getUtcDate(this.periodEndDate);\r\n\r\n            if (!(this.appointmentCriteria.searchEndDate >= this.appointmentCriteria.searchStartDate)) {\r\n                let msg = thisComponent.translate.instant('ScheduleStartDateValidation');\r\n                thisComponent.toastr.error(msg, '');\r\n                return;\r\n            }\r\n        }\r\n\r\n        thisComponent.showProgress = true;\r\n\r\n        thisComponent.receptionistService.searchForAppointments(thisComponent.appointmentCriteria)\r\n            .subscribe(\r\n                function (response: any) {\r\n\r\n                    thisComponent.matchedAppontments = response;\r\n\r\n                },\r\n                function (error: any) {\r\n                    thisComponent.toastr.error(error, '');\r\n                    thisComponent.showProgress = false;\r\n                },\r\n                function () { // finally\r\n                    thisComponent.showProgress = false;\r\n                });\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    showDialog() {\r\n        this.display = true;\r\n    }\r\n\r\n    getAppointmentById() {\r\n        let thisComponent = this;\r\n\r\n        this.receptionistService.getAppointmentById(this.appointmentId)\r\n            .subscribe(\r\n                function (response: any) {\r\n\r\n                    thisComponent.appointmentDetails = response;\r\n\r\n\r\n                },\r\n                function (error: any) {\r\n                    thisComponent.toastr.error(error, '');\r\n                },\r\n                function () {\r\n                    thisComponent.showProgress = false;\r\n                });\r\n    }\r\n\r\n\r\n\r\n    clear(): void {\r\n        this.model = {};\r\n        this.active = false;\r\n        // store selected Organization ID\r\n        this.storage.store(\"OrganizationID\", 'new');\r\n        setTimeout(() => this.active = true, 0);\r\n    }\r\n\r\n\r\n    imageChanged(response: any) {\r\n        let attchmentInfo: any = {};\r\n\r\n        if (response != null) {\r\n\r\n            if (response.originalName == undefined) {\r\n                this.model.attachmentInfo = null;\r\n                return;\r\n            }\r\n\r\n            this.model.attachmentInfo = attchmentInfo;\r\n            this.model.attachmentInfo.originalName = response.originalName;\r\n            this.model.attachmentInfo.keyName = response.keyName;\r\n            this.model.attachmentInfo.fullPath = response.fullPath;\r\n            this.model.attachmentInfo.fileType = response.fileType;\r\n        }\r\n        else {\r\n            this.model.attachmentInfo = null;\r\n        }\r\n\r\n    }\r\n    managePatientSelection(selectedPatientMrn: any) {\r\n        this.appointmentCriteria.patientClinicMRN = selectedPatientMrn;\r\n        this.display = false;\r\n        this.GetAllAppointments();\r\n    }\r\n\r\n    bookAppoint() {\r\n        this.onBookAppointment.emit();\r\n    }\r\n\r\n\r\n\r\n}","<div *ngIf=\"showProgress\">\r\n    <loading></loading>\r\n</div>\r\n\r\n<div class=\"padding5\">\r\n    <div class=\"row form-horizontal well\">\r\n        <br />\r\n        <div class=\"form-group\">\r\n            <label for=\"txtMRNRes\" class=\"col-md-2 control-label\">{{ 'MRN' | translate}}</label>\r\n            <div class=\"col-md-2\">\r\n                <input type=\"text\" class=\"form-control\" [(ngModel)]='appointmentCriteria.patientClinicMRN'\r\n                    id=\"txtMRNRes\" name=\"txtMRNRes\" />\r\n\r\n            </div>\r\n            <button type=\"button\" (click)=\"showDialog()\" class=\"btn btn-primary col-md-2\">{{'FindPatient' |\r\n                translate}}</button>\r\n\r\n            <!-- <p-dialog contentHeight=\"500\" [header]=\"'SearchForPatient' | translate\" [(visible)]=\"display\" [resizable]=\"true\" width=\"800\" [responsive]=\"true\" height=\"auto\">\r\n                <patient-search [showActive]=\"showActive\" [showEdit]=\"showEdit\" [showSelect]=\"showSelect\" [showClose]=\"showClose\" (patientSelected)=\"managePatientSelection($event)\"></patient-search>\r\n            </p-dialog> -->\r\n\r\n\r\n\r\n            <label for=\"txtName\" class=\"col-md-2 control-label\">{{ 'DoctorName' | translate}}</label>\r\n            <div class=\"col-md-3\">\r\n                <!--<input type=\"text\" class=\"form-control\" [(ngModel)]='appointmentCriteria.doctorName' />-->\r\n                <select name=\"ddlsDoctorsList\" [(ngModel)]='appointmentCriteria.doctorId' class=\"form-control\"\r\n                    #ddlsDoctorsList>\r\n                    <option value=\"0\" selected>{{ 'Select' | translate}}</option>\r\n                    <option *ngFor=\"let item of doctorsList | translateObjects\" [value]=\"item.id\">{{item.name}}</option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"txtName\" class=\"col-md-2 control-label\">{{ 'Date' | translate}}</label>\r\n            <div class=\"col-md-2\">\r\n                <select id=\"oppintmentDate\" name=\"oppintmentDate\"\r\n                    [(ngModel)]='appointmentCriteria.receptionistMethodsSearch'\r\n                    (change)=\"selectDate(oppintmentDate.value)\" class=\"form-control\" #oppintmentDate>\r\n                    <option>{{ 'Select' | translate}} --</option>\r\n                    <option value=\"Today\">{{ 'Today' | translate}}</option>\r\n                    <option value=\"Days\">{{ 'Days' | translate}}</option>\r\n                    <option value=\"Week\">{{ 'Week' | translate}}</option>\r\n                    <option value=\"Month\">{{ 'Month' | translate}}</option>\r\n                    <option value=\"Year\">{{ 'Year' | translate}}</option>\r\n                    <option value=\"PeriodOfTime\">{{ 'PeriodOfTime' | translate}}</option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"form-group\" *ngIf=\"todayStatus\">\r\n            <label for=\"txtName\" class=\"col-md-2 control-label\">{{ 'NoOfDays' | translate}}</label>\r\n            <div class=\"col-md-3\">\r\n                <input type=\"number\" min=\"1\" title=\"1\" class=\"form-control\"\r\n                    [(ngModel)]='appointmentCriteria.timeDuration' />\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\" *ngIf=\"weekStatus\">\r\n            <label for=\"txtName\" class=\"col-md-2 control-label\">{{ 'HowManyWeeks' | translate}}</label>\r\n            <div class=\"col-md-3\">\r\n                <input type=\"number\" min=\"1\" title=\"1\" class=\"form-control\"\r\n                    [(ngModel)]='appointmentCriteria.timeDuration' />\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\" *ngIf=\"monthStatus\">\r\n            <label for=\"txtName\" class=\"col-md-2 control-label\">{{ 'HowManyMonths' | translate}}</label>\r\n            <div class=\"col-md-3\">\r\n                <input type=\"number\" min=\"1\" title=\"1\" class=\"form-control\"\r\n                    [(ngModel)]='appointmentCriteria.timeDuration' />\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\" *ngIf=\"yearStatus\">\r\n            <label for=\"txtName\" class=\"col-md-2 control-label\">{{ 'HowManyYears' | translate}}</label>\r\n            <div class=\"col-md-3\">\r\n                <input type=\"number\" min=\"1\" title=\"1\" class=\"form-control\"\r\n                    [(ngModel)]='appointmentCriteria.timeDuration' />\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"form-group\" *ngIf=\"periodOfTime\">\r\n            <label for=\"txtName\" class=\"col-md-2 control-label\">{{ 'From' | translate}}</label>\r\n            <div class=\"col-md-3\">\r\n                <p-calendar [(ngModel)]=\"periodStartDate\" [monthNavigator]=\"true\" [yearNavigator]=\"true\"\r\n                    dateFormat=\"dd/mm/yy\" [showIcon]=\"true\" [ngModelOptions]=\"{standalone: true}\" yearRange=\"2000:2050\">\r\n                </p-calendar>\r\n            </div>\r\n            <label for=\"txtName\" class=\"col-md-3 control-label\">{{ 'To' | translate}}</label>\r\n            <div class=\"col-md-3\">\r\n                <p-calendar [(ngModel)]=\"periodEndDate\" [monthNavigator]=\"true\" [yearNavigator]=\"true\"\r\n                    dateFormat=\"dd/mm/yy\" [showIcon]=\"true\" [ngModelOptions]=\"{standalone: true}\" yearRange=\"2000:2050\">\r\n                </p-calendar>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\" *ngIf=\"pastOrFuture\">\r\n            <label for=\"ddlUnitType\" class=\"col-md-2 control-label\">{{ 'PastOrFuture' | translate}}</label>\r\n            <div class=\"col-md-3\">\r\n                <select class=\"form-control\" required [(ngModel)]='appointmentCriteria.timeStatus'>\r\n                    <option value=\"Past\">{{ 'Past' | translate}}</option>\r\n                    <option value=\"Future\">{{ 'Future' | translate}}</option>\r\n                </select>\r\n\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n            <div class=\"col-md-4 col-md-offset-2\">\r\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"GetAllAppointments()\">{{ 'Search' |\r\n                    translate}}</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <h4>{{ 'SearchResults' | translate}}</h4>\r\n        <hr />\r\n        <print-page [section]='toPrintDiv'></print-page>\r\n        <div class=\"ui-widget-header searchWidget\">\r\n            <i class=\"fa fa-search searchIcon\"></i>\r\n            <input pInputText type=\"text\" (input)=\"dt.filterGlobal($event.target.value, 'contains')\"\r\n                [placeholder]=\"'Search' | translate\" />\r\n        </div>\r\n        <!---New Table-->\r\n        <p-table #dt [value]=\"matchedAppontments\" dataKey=\"id\" [rowHover]=\"true\" [rows]=\"10\"\r\n            [showCurrentPageReport]=\"true\" [rowsPerPageOptions]=\"[10,20,30,40,50,100]\" [paginator]=\"true\"\r\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" [filterDelay]=\"0\"\r\n            [globalFilterFields]=\"['dateTime','appointmentClassName','arrivalTime','patientClinicMRN','doctorName','patientName','mobile','policyName','policyEndDate','lastModifier','lastModificationDateString']\">\r\n\r\n            <ng-template pTemplate=\"header\">\r\n                <tr>\r\n                    <th pSortableColumn=\"dateTime\">{{'ArabicName' | translate}} <p-sortIcon field=\"dateTime\">\r\n                        </p-sortIcon>\r\n                    </th>\r\n                    <th pSortableColumn=\"appointmentClassName\">{{'EnglishName' | translate}} <p-sortIcon\r\n                            field=\"appointmentClassName\"></p-sortIcon>\r\n                    </th>\r\n                    <th pSortableColumn=\"arrivalTime\">{{'EnglishName' | translate}} <p-sortIcon field=\"arrivalTime\">\r\n                        </p-sortIcon>\r\n                    </th>\r\n                    <th pSortableColumn=\"patientClinicMRN\">{{'EnglishName' | translate}} <p-sortIcon\r\n                            field=\"patientClinicMRN\"></p-sortIcon>\r\n                    </th>\r\n                    <th pSortableColumn=\"doctorName\">{{'EnglishName' | translate}} <p-sortIcon field=\"doctorName\">\r\n                        </p-sortIcon>\r\n                    </th>\r\n                    <th pSortableColumn=\"patientName\">{{'EnglishName' | translate}} <p-sortIcon field=\"patientName\">\r\n                        </p-sortIcon>\r\n                    </th>\r\n                    <th pSortableColumn=\"mobile\">{{'EnglishName' | translate}} <p-sortIcon field=\"mobile\"></p-sortIcon>\r\n                    </th>\r\n                    <th pSortableColumn=\"policyName\">{{'EnglishName' | translate}} <p-sortIcon field=\"policyName\">\r\n                        </p-sortIcon>\r\n                    </th>\r\n                    <th pSortableColumn=\"policyEndDate\">{{'EnglishName' | translate}} <p-sortIcon field=\"policyEndDate\">\r\n                        </p-sortIcon>\r\n                    </th>\r\n                    <th pSortableColumn=\"lastModifier\">{{'EnglishName' | translate}} <p-sortIcon field=\"lastModifier\">\r\n                        </p-sortIcon>\r\n                    </th>\r\n                    <th pSortableColumn=\"lastModificationDateString\">{{'EnglishName' | translate}} <p-sortIcon\r\n                            field=\"lastModificationDateString\"></p-sortIcon>\r\n                    </th>\r\n                    <th><span styleClass=\"text-center width70\">{{'Edit' | translate}} </span>\r\n                    </th>\r\n                </tr>\r\n\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-item>\r\n                <tr class=\"p-selectable-row\">\r\n                    <td>\r\n                        {{item.dateTime}}\r\n                    </td>\r\n                    <td>\r\n                        <span>{{item.appointmentClassName}}</span>\r\n                    </td>\r\n                    <td>\r\n                        <span>{{item.arrivalTime}}</span>\r\n                    </td>\r\n                    <td>\r\n                        <span>{{item.patientClinicMRN}}</span>\r\n                    </td>\r\n                    <td>\r\n                        <span>{{item.doctorName}}</span>\r\n                    </td>\r\n                    <td>\r\n                        <span>{{item.patientName}}</span>\r\n                    </td>\r\n                    <td>\r\n                        <span>{{item.mobile}}</span>\r\n                    </td>\r\n                    <td>\r\n                        <span>{{item.policyName}}</span>\r\n                    </td>\r\n                    <td>\r\n                        <span>{{item.policyEndDate}}</span>\r\n                    </td>\r\n                    <td>\r\n                        <span>{{item.lastModifier}}</span>\r\n                    </td>\r\n                    <td>\r\n                        <span>{{item.lastModificationDateString}}</span>\r\n                    </td>\r\n                    <td>\r\n                        <a class=\"pointer\" #val (click)=\"GetId(item)\">\r\n                            <img src=\"assets/images/details-24.jpg\" />\r\n                        </a>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"emptymessage\">\r\n                <tr>\r\n                    <td colspan=\"8\">No data found.</td>\r\n                </tr>\r\n            </ng-template>\r\n        </p-table>\r\n        <!--End Table-->\r\n\r\n    </div>\r\n</div>\r\n<div id=\"appointmentDetailsModal\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog width75percent\">\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">{{ 'AppointmentDetails' | translate}}</h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <receptionist-appointment-details [appointmentDetails]=\"appointmentDetails\"\r\n                    [AppontmentId]=\"appointmentId\"></receptionist-appointment-details>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <div class=\"row\">\r\n                    <!--<button type=\"button\" class=\"btn btn-primary\">{{ 'Apply' | translate}}</button>\r\n                    <button type=\"button\" class=\"btn btn-primary\">{{ 'Cancel' | translate}}</button>\r\n                    <button type=\"button\" class=\"btn btn-primary\">{{ 'Repeat' | translate}}</button>\r\n                    <button type=\"button\" class=\"btn btn-primary\">{{ 'Reschedule' | translate}}</button>\r\n                    <button type=\"button\" class=\"btn btn-primary\">{{ 'PatientFile' | translate}}</button>-->\r\n                    <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">{{ 'Close' | translate}}</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n<div id=\"matchedAppoitmentsToPrintDiv\" class=\"hidden\">\r\n    <table class=\"table table-responsive table-hover\">\r\n        <thead class=\"alert alert-info\">\r\n            <tr>\r\n                <th>{{ 'AppointmentDate' | translate}}</th>\r\n                <th>{{ 'Class' | translate}}</th>\r\n                <th>{{ 'ArrivalTime' | translate}}</th>\r\n                <th>{{ 'PatientMRN' | translate}}</th>\r\n                <th>{{ 'DoctorName' | translate}}</th>\r\n                <th>{{ 'PatientName' | translate}}</th>\r\n                <th>{{ 'Mobile' | translate}}</th>\r\n                <th>{{ 'PolicyName' | translate}}</th>\r\n                <th>{{ 'PolicyEndDate' | translate}}</th>\r\n                <th>{{ 'LastModifierUser' | translate}}</th>\r\n                <th>{{ 'LastModificationDate' | translate}}</th>\r\n\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let item of matchedAppontments\">\r\n                <td>{{item.dateTime}}</td>\r\n                <td>{{item.appointmentClassName}}</td>\r\n                <td>{{item.arrivalTime}}</td>\r\n                <td>{{item.patientClinicMRN}}</td>\r\n                <td>{{ lang == 'ar' ? item.doctorName : item.doctorNameTranslation }}</td>\r\n                <td>{{item.patientName}}</td>\r\n                <td>{{item.mobile}}</td>\r\n\r\n                <td>{{item.policyName}}</td>\r\n                <td>{{item.policyEndDate}}</td>\r\n                <td>{{item.lastModifier}}</td>\r\n                <td>{{item.lastModificationDateString}}</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>","import {Component, Input, OnInit, OnChanges, SimpleChanges} from '@angular/core';\r\nimport {LocalStorageService} from 'ng2-webstorage';\r\n\r\n@Component({\r\n   \r\n    selector: 'receptionist-tabs',\r\n    templateUrl: 'receptionist-tabs.component.html',\r\n   \r\n})\r\n\r\nexport class ReceptionistTabsComponent implements OnChanges {\r\n    @Input() activeTabIndex: number = 0;\r\n    @Input() receptionistId = '1';\r\n    hasID: boolean = false;\r\n\r\n    constructor(private localStorage: LocalStorageService) { }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n\r\n        //this.volunteerId = this.localStorage.retrieve(\"VolunteerId\");\r\n\r\n        //if (this.volunteerId == 'new' || this.volunteerId == null)\r\n        //    this.hasID = false;\r\n        //else\r\n        //    this.hasID = true;\r\n    }\r\n}","\r\n<div class=\"left-aside desktop-view\">\r\n    <div class=\"aside-branding\">\r\n        <a>\r\n            <!--<img src=\"assets/images/logo.png\" height=\"60\" width=\"60\" />-->\r\n            <img src=\"assets/images/App-Logo.png\" title=\"Logo\" class=\"appLogo\" />\r\n        </a>\r\n        <!--<a routerLink=\"/home\" class=\"large-logo\">\r\n            <span style=\"color:white;\">&nbsp;&nbsp;CIS</span>\r\n        </a>-->\r\n        <span class=\"aside-pin waves-effect\"><i class=\"fa fa-thumb-tack\"></i></span>\r\n        <span class=\"aside-close waves-effect\" onclick=\"closeLeftBar();\"><i class=\"fa fa-times\"></i></span>\r\n    </div>\r\n    <div class=\"left-navigation\">\r\n        <ul class=\"list-accordion padding5\">\r\n            <li >\r\n                <a class=\"{{ (activeTabIndex == 0) ? 'selectednavbaritem active' : '' }}\" routerLink=\"/receptionist/account/{{receptionistId}}\"> {{ 'MyAccount' | translate}}</a>\r\n            </li>\r\n            <li >\r\n                <a class=\"{{ (activeTabIndex == 1) ? 'selectednavbaritem active' : '' }}\" routerLink=\"/receptionist/basic/{{receptionistId}}\">{{ 'MyPersonalData' | translate}}</a>\r\n            </li>\r\n            <li >\r\n                <a class=\"{{ (activeTabIndex == 2) ? 'selectednavbaritem active' : '' }}\" routerLink=\"/receptionist/address/{{receptionistId}}\">{{ 'AddressContact' | translate}}</a>\r\n            </li>\r\n            <li >\r\n                <a class=\"{{ (activeTabIndex == 3) ? 'selectednavbaritem active' : '' }}\" routerLink=\"/receptionist/appointments\">{{ 'Appointments' | translate}}</a>\r\n            </li>\r\n            <li >\r\n                <a class=\"{{ (activeTabIndex == 4) ? 'selectednavbaritem active' : '' }}\" routerLink=\"/receptionist/patients/{{receptionistId}}\">{{ 'Patients' | translate}}</a>\r\n            </li>\r\n            <li>\r\n                <a class=\"{{ (activeTabIndex == 5) ? 'selectednavbaritem active' : '' }}\" routerLink=\"/receptionist/requests/{{receptionistId}}\">{{ 'GuestRequests' | translate}}</a>\r\n            </li>\r\n            <li>\r\n                <a class=\"{{ (activeTabIndex == 6) ? 'selectednavbaritem active' : '' }}\" routerLink=\"/receptionist/reports/{{receptionistId}}\">{{ 'Reports' | translate}}</a>\r\n            </li>\r\n\r\n        </ul>\r\n    </div>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\nimport { ReceptionistService } from './shared/receptionist.service';\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from 'ng2-webstorage';\r\n\r\n@Component({\r\n\r\n    selector: 'receptionists',\r\n    templateUrl: 'receptionists.component.html'\r\n\r\n})\r\n\r\nexport class ReceptionistsComponent implements OnInit {\r\n\r\n    filterString!: string;\r\n    organizationsList!: any[];\r\n    showProgress = false;\r\n    volunteersList:any;\r\n    constructor(private organizationService: ReceptionistService\r\n        , public toastr: ToastrService\r\n        , private storage: LocalStorageService\r\n        , private router: Router\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        /*let vm = this;\r\n        vm.showProgress = true;\r\n\r\n        this.organizationService.getAllOrganizations()\r\n         .subscribe(\r\n            function (response:any) {\r\n                vm.organizationsList = response;\r\n            },\r\n            function (error:any) { \r\n                vm.toastr.error('Failed to Load Data - ' + error, '');\r\n                vm.showProgress = false;\r\n            },\r\n            function () {\r\n                vm.showProgress = false;\r\n            });\r\n        */\r\n    }\r\n\r\n    editOrganization(id: string): void {\r\n\r\n        // store selected company ID\r\n        this.storage.store(\"OrganizationID\", id);\r\n\r\n        //navigate to current URL\r\n        this.router.navigate(['/organizationBasic', id]);\r\n    }\r\n\r\n    editVolunteer(id: any) {\r\n\r\n    }\r\n}","<div *ngIf=\"showProgress\">\r\n    <loading></loading>\r\n</div>\r\n\r\n<div class=\"page-breadcrumb\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-7\">\r\n            <div class=\"page-breadcrumb-wrap\">\r\n                <div class=\"page-breadcrumb-info\">\r\n                    <ul class=\"list-page-breadcrumb\">\r\n                        <li>\r\n                            <a >Receptionist Profile</a>\r\n                        </li>\r\n                        <li class=\"active-page\"> Doctors</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-5\">\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"padding5\">\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-md-4 nopadding\">\r\n            <input type=\"text\" placeholder=\"بحث...\" class=\"form-control\" [(ngModel)]='filterString' />\r\n        </div>\r\n        <div class=\"col-md-8 text-left nopadding\">\r\n            <button type=\"button\" class=\"btn btn-primary\" routerLink=\"/doctorAccount/1\">جديد</button>\r\n        </div>\r\n    </div>\r\n    <div class=\"padding2\"></div>\r\n\r\n    <table class=\"table table-responsive table-hover\">\r\n        <thead class=\"alert alert-info\">\r\n            <tr>\r\n                <th>الاسم</th>\r\n                <th>رقم الهوية</th>\r\n                <th>رقم جواز السفر</th>\r\n                <th>تاريخ الميلاد</th>\r\n                <th>الجنس</th>\r\n                <th>التخصص</th>\r\n                <th>الدرجة العلمية</th>\r\n                <th>تعديل</th>\r\n                <th>عرض</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let vol of volunteersList | filterByName:filterString\">\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n                <td>\r\n                    <a (click)=\"editVolunteer(vol.id)\" class=\"pointer\">تعديل</a>\r\n                </td>\r\n                <td>\r\n                    <a routerLink=\"/volunteerProfile/{{vol.id}}\">عرض</a>\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>","\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReceptionistRoutingModule } from './receptionists.routing';\r\nimport { ReceptionistsComponent } from './receptionists.component';\r\nimport { ReceptionistTabsComponent } from './receptionist-tabs/receptionist-tabs.component';\r\nimport { ReceptionistBasicComponent } from './receptionist-basic/receptionist-basic.component';\r\nimport { ReceptionistAddressComponent } from './receptionist-address/receptionist-address.component';\r\nimport { ReceptionistAccountComponent } from './receptionist-account/receptionist-account.component';\r\nimport { ReceptionistAppointmentsComponent } from './receptionist-appointments/receptionist-appointments.component';\r\nimport { ReceptionistReportsComponent } from './receptionist-reports/receptionist-reports.component';\r\nimport { ReceptionistPatientsComponent } from './receptionist-patients/receptionist-patients.component';\r\nimport { ReceptionistSearchComponent } from './receptionist-search/receptionist-search.component';\r\nimport { ReceptionistAppointmentDetailsComponent } from './receptionist-appointment-details/receptionist-appointment-details.component';\r\nimport { ReceptionistRequestsComponent } from './receptionist-requests/receptionist-requests.component';\r\nimport { ReceptionistDivisionCalendarComponent } from './receptionist-division-calendar/receptionist-division-calendar.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { PatientsModule } from '../patients/patients.module';\r\n\r\n\r\n@NgModule({\r\n    imports: [\r\n        FormsModule,\r\n        CommonModule,\r\n        ReceptionistRoutingModule,\r\n        SharedModule,\r\n        //routing,\r\n        // ScheduleModule,\r\n      \r\n        PatientsModule\r\n\r\n\r\n    ],\r\n    declarations: [\r\n        ReceptionistsComponent,\r\n        ReceptionistTabsComponent,\r\n        ReceptionistBasicComponent,\r\n        ReceptionistAddressComponent,\r\n        ReceptionistAccountComponent,\r\n        ReceptionistAppointmentsComponent,\r\n        ReceptionistReportsComponent,\r\n        ReceptionistPatientsComponent,\r\n        ReceptionistSearchComponent,\r\n        ReceptionistAppointmentDetailsComponent,\r\n        ReceptionistRequestsComponent,\r\n        ReceptionistDivisionCalendarComponent\r\n\r\n    ],\r\n    providers: [],\r\n    exports: [\r\n        ReceptionistsComponent,\r\n        ReceptionistTabsComponent,\r\n        ReceptionistBasicComponent,\r\n        ReceptionistAddressComponent,\r\n        ReceptionistAccountComponent,\r\n        ReceptionistAppointmentsComponent,\r\n        ReceptionistReportsComponent,\r\n        ReceptionistPatientsComponent,\r\n        ReceptionistSearchComponent,\r\n        ReceptionistAppointmentDetailsComponent,\r\n        ReceptionistRequestsComponent,\r\n        ReceptionistDivisionCalendarComponent\r\n    ]\r\n})\r\nexport class ReceptionistsModule { }\r\n","import { NgModule }  from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ReceptionistAccountComponent } from './receptionist-account/receptionist-account.component';\r\nimport { ReceptionistBasicComponent }   from './receptionist-basic/receptionist-basic.component';\r\nimport { ReceptionistAddressComponent }   from './receptionist-address/receptionist-address.component';\r\nimport { ReceptionistAppointmentsComponent } from './receptionist-appointments/receptionist-appointments.component';\r\nimport { ReceptionistReportsComponent } from './receptionist-reports/receptionist-reports.component';\r\nimport { ReceptionistPatientsComponent } from './receptionist-patients/receptionist-patients.component';\r\nimport { ReceptionistRequestsComponent } from './receptionist-requests/receptionist-requests.component';\r\n\r\nconst receptionistRoutes: Routes = [\r\n\r\n    //Receptionists\r\n    { path: 'account/:id', component: ReceptionistAccountComponent },\r\n    { path: 'basic/:id', component: ReceptionistBasicComponent },\r\n    { path: 'address/:id', component: ReceptionistAddressComponent },\r\n    { path: 'appointments', component: ReceptionistAppointmentsComponent },\r\n    { path: 'reports/:id', component: ReceptionistReportsComponent },\r\n    { path: 'patients/:id', component: ReceptionistPatientsComponent },\r\n    { path: 'requests/:id', component: ReceptionistRequestsComponent }\r\n\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(receptionistRoutes)\r\n    ],\r\n    exports: [\r\n        RouterModule\r\n    ]\r\n})\r\nexport class ReceptionistRoutingModule { }"],"names":[],"sourceRoot":"webpack:///"}